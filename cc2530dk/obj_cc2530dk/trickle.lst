                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.5 #9380 (Linux)
                                      4 ; This file was generated Tue Nov 17 16:52:51 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module trickle
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _random_rand
                                     13 	.globl _queuebuf_free
                                     14 	.globl _queuebuf_to_packetbuf
                                     15 	.globl _queuebuf_new_from_packetbuf
                                     16 	.globl _broadcast_send
                                     17 	.globl _broadcast_close
                                     18 	.globl _broadcast_open
                                     19 	.globl _channel_set_attributes
                                     20 	.globl _packetbuf_attr
                                     21 	.globl _packetbuf_set_attr
                                     22 	.globl _ctimer_stop
                                     23 	.globl _ctimer_set
                                     24 	.globl _ACTIVE
                                     25 	.globl _TX_BYTE
                                     26 	.globl _RX_BYTE
                                     27 	.globl _ERR
                                     28 	.globl _FE
                                     29 	.globl _SLAVE
                                     30 	.globl _RE
                                     31 	.globl _MODE
                                     32 	.globl _T3OVFIF
                                     33 	.globl _T3CH0IF
                                     34 	.globl _T3CH1IF
                                     35 	.globl _T4OVFIF
                                     36 	.globl _T4CH0IF
                                     37 	.globl _T4CH1IF
                                     38 	.globl _OVFIM
                                     39 	.globl _B_0
                                     40 	.globl _B_1
                                     41 	.globl _B_2
                                     42 	.globl _B_3
                                     43 	.globl _B_4
                                     44 	.globl _B_5
                                     45 	.globl _B_6
                                     46 	.globl _B_7
                                     47 	.globl _P2IF
                                     48 	.globl _UTX0IF
                                     49 	.globl _UTX1IF
                                     50 	.globl _P1IF
                                     51 	.globl _WDTIF
                                     52 	.globl _ACC_0
                                     53 	.globl _ACC_1
                                     54 	.globl _ACC_2
                                     55 	.globl _ACC_3
                                     56 	.globl _ACC_4
                                     57 	.globl _ACC_5
                                     58 	.globl _ACC_6
                                     59 	.globl _ACC_7
                                     60 	.globl _P
                                     61 	.globl _F1
                                     62 	.globl _OV
                                     63 	.globl _RS0
                                     64 	.globl _RS1
                                     65 	.globl _F0
                                     66 	.globl _AC
                                     67 	.globl _CY
                                     68 	.globl _DMAIF
                                     69 	.globl _T1IF
                                     70 	.globl _T2IF
                                     71 	.globl _T3IF
                                     72 	.globl _T4IF
                                     73 	.globl _P0IF
                                     74 	.globl _STIF
                                     75 	.globl _DMAIE
                                     76 	.globl _T1IE
                                     77 	.globl _T2IE
                                     78 	.globl _T3IE
                                     79 	.globl _T4IE
                                     80 	.globl _P0IE
                                     81 	.globl _RFERRIE
                                     82 	.globl _ADCIE
                                     83 	.globl _URX0IE
                                     84 	.globl _URX1IE
                                     85 	.globl _ENCIE
                                     86 	.globl _STIE
                                     87 	.globl _EA
                                     88 	.globl _P2_0
                                     89 	.globl _P2_1
                                     90 	.globl _P2_2
                                     91 	.globl _P2_3
                                     92 	.globl _P2_4
                                     93 	.globl _P2_5
                                     94 	.globl _P2_6
                                     95 	.globl _P2_7
                                     96 	.globl _ENCIF_0
                                     97 	.globl _ENCIF_1
                                     98 	.globl _P1_0
                                     99 	.globl _P1_1
                                    100 	.globl _P1_2
                                    101 	.globl _P1_3
                                    102 	.globl _P1_4
                                    103 	.globl _P1_5
                                    104 	.globl _P1_6
                                    105 	.globl _P1_7
                                    106 	.globl _IT0
                                    107 	.globl _RFERRIF
                                    108 	.globl _IT1
                                    109 	.globl _URX0IF
                                    110 	.globl _ADCIF
                                    111 	.globl _URX1IF
                                    112 	.globl _P0_0
                                    113 	.globl _P0_1
                                    114 	.globl _P0_2
                                    115 	.globl _P0_3
                                    116 	.globl _P0_4
                                    117 	.globl _P0_5
                                    118 	.globl _P0_6
                                    119 	.globl _P0_7
                                    120 	.globl _WDCTL
                                    121 	.globl _U1GCR
                                    122 	.globl _U1UCR
                                    123 	.globl _U1BAUD
                                    124 	.globl _U1DBUF
                                    125 	.globl _U1CSR
                                    126 	.globl _U0GCR
                                    127 	.globl _U0UCR
                                    128 	.globl _U0BAUD
                                    129 	.globl _U0DBUF
                                    130 	.globl _U0CSR
                                    131 	.globl _TIMIF
                                    132 	.globl _T4CC1
                                    133 	.globl _T4CCTL1
                                    134 	.globl _T4CC0
                                    135 	.globl _T4CCTL0
                                    136 	.globl _T4CTL
                                    137 	.globl _T4CNT
                                    138 	.globl _T3CC1
                                    139 	.globl _T3CCTL1
                                    140 	.globl _T3CC0
                                    141 	.globl _T3CCTL0
                                    142 	.globl _T3CTL
                                    143 	.globl _T3CNT
                                    144 	.globl _T2MSEL
                                    145 	.globl _T2IRQM
                                    146 	.globl _T2MOVF2
                                    147 	.globl _T2MOVF1
                                    148 	.globl _T2MOVF0
                                    149 	.globl _T2M1
                                    150 	.globl _T2M0
                                    151 	.globl _T2IRQF
                                    152 	.globl _T2EVTCFG
                                    153 	.globl _T2CTRL
                                    154 	.globl _T1STAT
                                    155 	.globl _T1CCTL2
                                    156 	.globl _T1CCTL1
                                    157 	.globl _T1CCTL0
                                    158 	.globl _T1CTL
                                    159 	.globl _T1CNTH
                                    160 	.globl _T1CNTL
                                    161 	.globl _T1CC2H
                                    162 	.globl _T1CC2L
                                    163 	.globl _T1CC1H
                                    164 	.globl _T1CC1L
                                    165 	.globl _T1CC0H
                                    166 	.globl _T1CC0L
                                    167 	.globl _CLKCONSTA
                                    168 	.globl _CLKCONCMD
                                    169 	.globl _SLEEPSTA
                                    170 	.globl _SLEEPCMD
                                    171 	.globl _STLOAD
                                    172 	.globl _ST2
                                    173 	.globl _ST1
                                    174 	.globl _ST0
                                    175 	.globl _RFERRF
                                    176 	.globl _RFIRQF0
                                    177 	.globl _RFST
                                    178 	.globl _RFD
                                    179 	.globl _RFIRQF1
                                    180 	.globl _PSBANK
                                    181 	.globl _FMAP
                                    182 	.globl _MEMCTR
                                    183 	.globl __XPAGE
                                    184 	.globl _MPAGE
                                    185 	.globl _PMUX
                                    186 	.globl _P2DIR
                                    187 	.globl _P1DIR
                                    188 	.globl _P0DIR
                                    189 	.globl _P2INP
                                    190 	.globl _P1INP
                                    191 	.globl _P2SEL
                                    192 	.globl _P1SEL
                                    193 	.globl _P0SEL
                                    194 	.globl _APCFG
                                    195 	.globl _PERCFG
                                    196 	.globl _P0INP
                                    197 	.globl _P2IEN
                                    198 	.globl _P1IEN
                                    199 	.globl _P0IEN
                                    200 	.globl _PICTL
                                    201 	.globl _P2IFG
                                    202 	.globl _P1IFG
                                    203 	.globl _P0IFG
                                    204 	.globl _DMAREQ
                                    205 	.globl _DMAARM
                                    206 	.globl _DMA0CFGH
                                    207 	.globl _DMA0CFGL
                                    208 	.globl _DMA1CFGH
                                    209 	.globl _DMA1CFGL
                                    210 	.globl _DMAIRQ
                                    211 	.globl _ENCCS
                                    212 	.globl _ENCDO
                                    213 	.globl _ENCDI
                                    214 	.globl _RNDH
                                    215 	.globl _RNDL
                                    216 	.globl _ADCH
                                    217 	.globl _ADCL
                                    218 	.globl _ADCCON3
                                    219 	.globl _ADCCON2
                                    220 	.globl _ADCCON1
                                    221 	.globl _B
                                    222 	.globl _IRCON2
                                    223 	.globl _ACC
                                    224 	.globl _PSW
                                    225 	.globl _IRCON
                                    226 	.globl _IP1
                                    227 	.globl _IEN1
                                    228 	.globl _IP0
                                    229 	.globl _IEN0
                                    230 	.globl _P2
                                    231 	.globl _S1CON
                                    232 	.globl _IEN2
                                    233 	.globl _S0CON
                                    234 	.globl _DPS
                                    235 	.globl _P1
                                    236 	.globl _TCON
                                    237 	.globl _PCON
                                    238 	.globl _DPH1
                                    239 	.globl _DPL1
                                    240 	.globl _DPH0
                                    241 	.globl _DPL0
                                    242 	.globl _SP
                                    243 	.globl _P0
                                    244 	.globl _X_IEEE_ADDR
                                    245 	.globl _X_INFOPAGE
                                    246 	.globl _X_P2DIR
                                    247 	.globl _X_P1DIR
                                    248 	.globl _X_P0DIR
                                    249 	.globl _X_U1GCR
                                    250 	.globl _X_U1UCR
                                    251 	.globl _X_U1BAUD
                                    252 	.globl _X_U1DBUF
                                    253 	.globl _X_U1CSR
                                    254 	.globl _X_P2INP
                                    255 	.globl _X_P1INP
                                    256 	.globl _X_P2SEL
                                    257 	.globl _X_P1SEL
                                    258 	.globl _X_P0SEL
                                    259 	.globl _X_APCFG
                                    260 	.globl _X_PERCFG
                                    261 	.globl _X_T4CC1
                                    262 	.globl _X_T4CCTL1
                                    263 	.globl _X_T4CC0
                                    264 	.globl _X_T4CCTL0
                                    265 	.globl _X_T4CTL
                                    266 	.globl _X_T4CNT
                                    267 	.globl _X_RFIRQF0
                                    268 	.globl _X_T1CCTL2
                                    269 	.globl _X_T1CCTL1
                                    270 	.globl _X_T1CCTL0
                                    271 	.globl _X_T1CTL
                                    272 	.globl _X_T1CNTH
                                    273 	.globl _X_T1CNTL
                                    274 	.globl _X_RFST
                                    275 	.globl _X_T1CC2H
                                    276 	.globl _X_T1CC2L
                                    277 	.globl _X_T1CC1H
                                    278 	.globl _X_T1CC1L
                                    279 	.globl _X_T1CC0H
                                    280 	.globl _X_T1CC0L
                                    281 	.globl _X_RFD
                                    282 	.globl _X_TIMIF
                                    283 	.globl _X_DMAREQ
                                    284 	.globl _X_DMAARM
                                    285 	.globl _X_DMA0CFGH
                                    286 	.globl _X_DMA0CFGL
                                    287 	.globl _X_DMA1CFGH
                                    288 	.globl _X_DMA1CFGL
                                    289 	.globl _X_DMAIRQ
                                    290 	.globl _X_T3CC1
                                    291 	.globl _X_T3CCTL1
                                    292 	.globl _X_T3CC0
                                    293 	.globl _X_T3CCTL0
                                    294 	.globl _X_T3CTL
                                    295 	.globl _X_T3CNT
                                    296 	.globl _X_WDCTL
                                    297 	.globl _X_MEMCTR
                                    298 	.globl _X_CLKCONCMD
                                    299 	.globl _X_U0GCR
                                    300 	.globl _X_U0UCR
                                    301 	.globl _X_T2MSEL
                                    302 	.globl _X_U0BAUD
                                    303 	.globl _X_U0DBUF
                                    304 	.globl _X_RFERRF
                                    305 	.globl _X_SLEEPCMD
                                    306 	.globl _X_RNDH
                                    307 	.globl _X_RNDL
                                    308 	.globl _X_ADCH
                                    309 	.globl _X_ADCL
                                    310 	.globl _X_ADCCON3
                                    311 	.globl _X_ADCCON2
                                    312 	.globl _X_ADCCON1
                                    313 	.globl _X_ENCCS
                                    314 	.globl _X_ENCDO
                                    315 	.globl _X_ENCDI
                                    316 	.globl _X_T1STAT
                                    317 	.globl _X_PMUX
                                    318 	.globl _X_STLOAD
                                    319 	.globl _X_P2IEN
                                    320 	.globl _X_P0IEN
                                    321 	.globl _X_T2IRQM
                                    322 	.globl _X_T2MOVF2
                                    323 	.globl _X_T2MOVF1
                                    324 	.globl _X_T2MOVF0
                                    325 	.globl _X_T2M1
                                    326 	.globl _X_T2M0
                                    327 	.globl _X_T2IRQF
                                    328 	.globl _X_P2
                                    329 	.globl _X_PSBANK
                                    330 	.globl _X_FMAP
                                    331 	.globl _X_CLKCONSTA
                                    332 	.globl _X_SLEEPSTA
                                    333 	.globl _X_T2EVTCFG
                                    334 	.globl _X_ST2
                                    335 	.globl _X_ST1
                                    336 	.globl _X_ST0
                                    337 	.globl _X_T2CTRL
                                    338 	.globl _X__XPAGE
                                    339 	.globl _X_MPAGE
                                    340 	.globl _X_RFIRQF1
                                    341 	.globl _X_P1
                                    342 	.globl _X_P0INP
                                    343 	.globl _X_P1IEN
                                    344 	.globl _X_PICTL
                                    345 	.globl _X_P2IFG
                                    346 	.globl _X_P1IFG
                                    347 	.globl _X_P0IFG
                                    348 	.globl _X_U0CSR
                                    349 	.globl _X_P0
                                    350 	.globl _USBF5
                                    351 	.globl _USBF4
                                    352 	.globl _USBF3
                                    353 	.globl _USBF2
                                    354 	.globl _USBF1
                                    355 	.globl _USBF0
                                    356 	.globl _USBCNTH
                                    357 	.globl _USBCNTL
                                    358 	.globl _USBCNT0
                                    359 	.globl _USBCSOH
                                    360 	.globl _USBCSOL
                                    361 	.globl _USBMAXO
                                    362 	.globl _USBCSIH
                                    363 	.globl _USBCSIL
                                    364 	.globl _USBCS0
                                    365 	.globl _USBMAXI
                                    366 	.globl _USBCTRL
                                    367 	.globl _USBINDEX
                                    368 	.globl _USBFRMH
                                    369 	.globl _USBFRML
                                    370 	.globl _USBCIE
                                    371 	.globl _USBOIE
                                    372 	.globl _USBIIE
                                    373 	.globl _USBCIF
                                    374 	.globl _USBOIF
                                    375 	.globl _USBIIF
                                    376 	.globl _USBPOW
                                    377 	.globl _USBADDR
                                    378 	.globl _CSPT
                                    379 	.globl _CSPZ
                                    380 	.globl _CSPY
                                    381 	.globl _CSPX
                                    382 	.globl _CSPSTAT
                                    383 	.globl _CSPCTRL
                                    384 	.globl _CSPPROG23
                                    385 	.globl _CSPPROG22
                                    386 	.globl _CSPPROG21
                                    387 	.globl _CSPPROG20
                                    388 	.globl _CSPPROG19
                                    389 	.globl _CSPPROG18
                                    390 	.globl _CSPPROG17
                                    391 	.globl _CSPPROG16
                                    392 	.globl _CSPPROG15
                                    393 	.globl _CSPPROG14
                                    394 	.globl _CSPPROG13
                                    395 	.globl _CSPPROG12
                                    396 	.globl _CSPPROG11
                                    397 	.globl _CSPPROG10
                                    398 	.globl _CSPPROG9
                                    399 	.globl _CSPPROG8
                                    400 	.globl _CSPPROG7
                                    401 	.globl _CSPPROG6
                                    402 	.globl _CSPPROG5
                                    403 	.globl _CSPPROG4
                                    404 	.globl _CSPPROG3
                                    405 	.globl _CSPPROG2
                                    406 	.globl _CSPPROG1
                                    407 	.globl _CSPPROG0
                                    408 	.globl _RFC_OBS_CTRL2
                                    409 	.globl _RFC_OBS_CTRL1
                                    410 	.globl _RFC_OBS_CTRL0
                                    411 	.globl _TXFILTCFG
                                    412 	.globl _PTEST1
                                    413 	.globl _PTEST0
                                    414 	.globl _ATEST
                                    415 	.globl _DACTEST2
                                    416 	.globl _DACTEST1
                                    417 	.globl _DACTEST0
                                    418 	.globl _MDMTEST1
                                    419 	.globl _MDMTEST0
                                    420 	.globl _ADCTEST2
                                    421 	.globl _ADCTEST1
                                    422 	.globl _ADCTEST0
                                    423 	.globl _AGCCTRL3
                                    424 	.globl _AGCCTRL2
                                    425 	.globl _AGCCTRL1
                                    426 	.globl _AGCCTRL0
                                    427 	.globl _FSCAL3
                                    428 	.globl _FSCAL2
                                    429 	.globl _FSCAL1
                                    430 	.globl _FSCAL0
                                    431 	.globl _FSCTRL
                                    432 	.globl _RXCTRL
                                    433 	.globl _FREQEST
                                    434 	.globl _MDMCTRL1
                                    435 	.globl _MDMCTRL0
                                    436 	.globl _RFRND
                                    437 	.globl _RFERRM
                                    438 	.globl _RFIRQM1
                                    439 	.globl _RFIRQM0
                                    440 	.globl _TXLAST_PTR
                                    441 	.globl _TXFIRST_PTR
                                    442 	.globl _RXP1_PTR
                                    443 	.globl _RXLAST_PTR
                                    444 	.globl _RXFIRST_PTR
                                    445 	.globl _TXFIFOCNT
                                    446 	.globl _RXFIFOCNT
                                    447 	.globl _RXFIRST
                                    448 	.globl _RSSISTAT
                                    449 	.globl _RSSI
                                    450 	.globl _CCACTRL1
                                    451 	.globl _CCACTRL0
                                    452 	.globl _FSMCTRL
                                    453 	.globl _FIFOPCTRL
                                    454 	.globl _FSMSTAT1
                                    455 	.globl _FSMSTAT0
                                    456 	.globl _TXCTRL
                                    457 	.globl _TXPOWER
                                    458 	.globl _FREQCTRL
                                    459 	.globl _FREQTUNE
                                    460 	.globl _RXMASKCLR
                                    461 	.globl _RXMASKSET
                                    462 	.globl _RXENABLE
                                    463 	.globl _FRMCTRL1
                                    464 	.globl _FRMCTRL0
                                    465 	.globl _SRCEXTEN2
                                    466 	.globl _SRCEXTEN1
                                    467 	.globl _SRCEXTEN0
                                    468 	.globl _SRCSHORTEN2
                                    469 	.globl _SRCSHORTEN1
                                    470 	.globl _SRCSHORTEN0
                                    471 	.globl _SRCMATCH
                                    472 	.globl _FRMFILT1
                                    473 	.globl _FRMFILT0
                                    474 	.globl _SHORT_ADDR1
                                    475 	.globl _SHORT_ADDR0
                                    476 	.globl _PAN_ID1
                                    477 	.globl _PAN_ID0
                                    478 	.globl _EXT_ADDR7
                                    479 	.globl _EXT_ADDR6
                                    480 	.globl _EXT_ADDR5
                                    481 	.globl _EXT_ADDR4
                                    482 	.globl _EXT_ADDR3
                                    483 	.globl _EXT_ADDR2
                                    484 	.globl _EXT_ADDR1
                                    485 	.globl _EXT_ADDR0
                                    486 	.globl _SRCSHORTPENDEN2
                                    487 	.globl _SRCSHORTPENDEN1
                                    488 	.globl _SRCSHORTPENDEN0
                                    489 	.globl _SRCEXTPENDEN2
                                    490 	.globl _SRCEXTPENDEN1
                                    491 	.globl _SRCEXTPENDEN0
                                    492 	.globl _SRCRESINDEX
                                    493 	.globl _SRCRESMASK2
                                    494 	.globl _SRCRESMASK1
                                    495 	.globl _SRCRESMASK0
                                    496 	.globl _SRC_ADDR_TABLE
                                    497 	.globl _TXFIFO
                                    498 	.globl _RXFIFO
                                    499 	.globl _RFCORE_RAM
                                    500 	.globl _CMPCTL
                                    501 	.globl _OPAMPS
                                    502 	.globl _OPAMPC
                                    503 	.globl _STCV2
                                    504 	.globl _STCV1
                                    505 	.globl _STCV0
                                    506 	.globl _STCS
                                    507 	.globl _STCC
                                    508 	.globl _T1CC4H
                                    509 	.globl _T1CC4L
                                    510 	.globl _T1CC3H
                                    511 	.globl _T1CC3L
                                    512 	.globl _XX_T1CC2H
                                    513 	.globl _XX_T1CC2L
                                    514 	.globl _XX_T1CC1H
                                    515 	.globl _XX_T1CC1L
                                    516 	.globl _XX_T1CC0H
                                    517 	.globl _XX_T1CC0L
                                    518 	.globl _T1CCTL4
                                    519 	.globl _T1CCTL3
                                    520 	.globl _XX_T1CCTL2
                                    521 	.globl _XX_T1CCTL1
                                    522 	.globl _XX_T1CCTL0
                                    523 	.globl _CLD
                                    524 	.globl _IRCTL
                                    525 	.globl _CHIPINFO1
                                    526 	.globl _CHIPINFO0
                                    527 	.globl _FWDATA
                                    528 	.globl _FADDRH
                                    529 	.globl _FADDRL
                                    530 	.globl _FCTL
                                    531 	.globl _IVCTRL
                                    532 	.globl _BATTMON
                                    533 	.globl _SRCRC
                                    534 	.globl _DBGDATA
                                    535 	.globl _TESTREG0
                                    536 	.globl _CHIPID
                                    537 	.globl _CHVER
                                    538 	.globl _OBSSEL5
                                    539 	.globl _OBSSEL4
                                    540 	.globl _OBSSEL3
                                    541 	.globl _OBSSEL2
                                    542 	.globl _OBSSEL1
                                    543 	.globl _OBSSEL0
                                    544 	.globl _I2CIO
                                    545 	.globl _I2CWC
                                    546 	.globl _I2CADDR
                                    547 	.globl _I2CDATA
                                    548 	.globl _I2CSTAT
                                    549 	.globl _I2CCFG
                                    550 	.globl _OPAMPMC
                                    551 	.globl _MONMUX
                                    552 	.globl _trickle_open
                                    553 	.globl _trickle_close
                                    554 	.globl _trickle_send
                                    555 ;--------------------------------------------------------
                                    556 ; special function registers
                                    557 ;--------------------------------------------------------
                                    558 	.area RSEG    (ABS,DATA)
      000000                        559 	.org 0x0000
                           000080   560 _P0	=	0x0080
                           000081   561 _SP	=	0x0081
                           000082   562 _DPL0	=	0x0082
                           000083   563 _DPH0	=	0x0083
                           000084   564 _DPL1	=	0x0084
                           000085   565 _DPH1	=	0x0085
                           000087   566 _PCON	=	0x0087
                           000088   567 _TCON	=	0x0088
                           000090   568 _P1	=	0x0090
                           000092   569 _DPS	=	0x0092
                           000098   570 _S0CON	=	0x0098
                           00009A   571 _IEN2	=	0x009a
                           00009B   572 _S1CON	=	0x009b
                           0000A0   573 _P2	=	0x00a0
                           0000A8   574 _IEN0	=	0x00a8
                           0000A9   575 _IP0	=	0x00a9
                           0000B8   576 _IEN1	=	0x00b8
                           0000B9   577 _IP1	=	0x00b9
                           0000C0   578 _IRCON	=	0x00c0
                           0000D0   579 _PSW	=	0x00d0
                           0000E0   580 _ACC	=	0x00e0
                           0000E8   581 _IRCON2	=	0x00e8
                           0000F0   582 _B	=	0x00f0
                           0000B4   583 _ADCCON1	=	0x00b4
                           0000B5   584 _ADCCON2	=	0x00b5
                           0000B6   585 _ADCCON3	=	0x00b6
                           0000BA   586 _ADCL	=	0x00ba
                           0000BB   587 _ADCH	=	0x00bb
                           0000BC   588 _RNDL	=	0x00bc
                           0000BD   589 _RNDH	=	0x00bd
                           0000B1   590 _ENCDI	=	0x00b1
                           0000B2   591 _ENCDO	=	0x00b2
                           0000B3   592 _ENCCS	=	0x00b3
                           0000D1   593 _DMAIRQ	=	0x00d1
                           0000D2   594 _DMA1CFGL	=	0x00d2
                           0000D3   595 _DMA1CFGH	=	0x00d3
                           0000D4   596 _DMA0CFGL	=	0x00d4
                           0000D5   597 _DMA0CFGH	=	0x00d5
                           0000D6   598 _DMAARM	=	0x00d6
                           0000D7   599 _DMAREQ	=	0x00d7
                           000089   600 _P0IFG	=	0x0089
                           00008A   601 _P1IFG	=	0x008a
                           00008B   602 _P2IFG	=	0x008b
                           00008C   603 _PICTL	=	0x008c
                           0000AB   604 _P0IEN	=	0x00ab
                           00008D   605 _P1IEN	=	0x008d
                           0000AC   606 _P2IEN	=	0x00ac
                           00008F   607 _P0INP	=	0x008f
                           0000F1   608 _PERCFG	=	0x00f1
                           0000F2   609 _APCFG	=	0x00f2
                           0000F3   610 _P0SEL	=	0x00f3
                           0000F4   611 _P1SEL	=	0x00f4
                           0000F5   612 _P2SEL	=	0x00f5
                           0000F6   613 _P1INP	=	0x00f6
                           0000F7   614 _P2INP	=	0x00f7
                           0000FD   615 _P0DIR	=	0x00fd
                           0000FE   616 _P1DIR	=	0x00fe
                           0000FF   617 _P2DIR	=	0x00ff
                           0000AE   618 _PMUX	=	0x00ae
                           000093   619 _MPAGE	=	0x0093
                           000093   620 __XPAGE	=	0x0093
                           0000C7   621 _MEMCTR	=	0x00c7
                           00009F   622 _FMAP	=	0x009f
                           00009F   623 _PSBANK	=	0x009f
                           000091   624 _RFIRQF1	=	0x0091
                           0000D9   625 _RFD	=	0x00d9
                           0000E1   626 _RFST	=	0x00e1
                           0000E9   627 _RFIRQF0	=	0x00e9
                           0000BF   628 _RFERRF	=	0x00bf
                           000095   629 _ST0	=	0x0095
                           000096   630 _ST1	=	0x0096
                           000097   631 _ST2	=	0x0097
                           0000AD   632 _STLOAD	=	0x00ad
                           0000BE   633 _SLEEPCMD	=	0x00be
                           00009D   634 _SLEEPSTA	=	0x009d
                           0000C6   635 _CLKCONCMD	=	0x00c6
                           00009E   636 _CLKCONSTA	=	0x009e
                           0000DA   637 _T1CC0L	=	0x00da
                           0000DB   638 _T1CC0H	=	0x00db
                           0000DC   639 _T1CC1L	=	0x00dc
                           0000DD   640 _T1CC1H	=	0x00dd
                           0000DE   641 _T1CC2L	=	0x00de
                           0000DF   642 _T1CC2H	=	0x00df
                           0000E2   643 _T1CNTL	=	0x00e2
                           0000E3   644 _T1CNTH	=	0x00e3
                           0000E4   645 _T1CTL	=	0x00e4
                           0000E5   646 _T1CCTL0	=	0x00e5
                           0000E6   647 _T1CCTL1	=	0x00e6
                           0000E7   648 _T1CCTL2	=	0x00e7
                           0000AF   649 _T1STAT	=	0x00af
                           000094   650 _T2CTRL	=	0x0094
                           00009C   651 _T2EVTCFG	=	0x009c
                           0000A1   652 _T2IRQF	=	0x00a1
                           0000A2   653 _T2M0	=	0x00a2
                           0000A3   654 _T2M1	=	0x00a3
                           0000A4   655 _T2MOVF0	=	0x00a4
                           0000A5   656 _T2MOVF1	=	0x00a5
                           0000A6   657 _T2MOVF2	=	0x00a6
                           0000A7   658 _T2IRQM	=	0x00a7
                           0000C3   659 _T2MSEL	=	0x00c3
                           0000CA   660 _T3CNT	=	0x00ca
                           0000CB   661 _T3CTL	=	0x00cb
                           0000CC   662 _T3CCTL0	=	0x00cc
                           0000CD   663 _T3CC0	=	0x00cd
                           0000CE   664 _T3CCTL1	=	0x00ce
                           0000CF   665 _T3CC1	=	0x00cf
                           0000EA   666 _T4CNT	=	0x00ea
                           0000EB   667 _T4CTL	=	0x00eb
                           0000EC   668 _T4CCTL0	=	0x00ec
                           0000ED   669 _T4CC0	=	0x00ed
                           0000EE   670 _T4CCTL1	=	0x00ee
                           0000EF   671 _T4CC1	=	0x00ef
                           0000D8   672 _TIMIF	=	0x00d8
                           000086   673 _U0CSR	=	0x0086
                           0000C1   674 _U0DBUF	=	0x00c1
                           0000C2   675 _U0BAUD	=	0x00c2
                           0000C4   676 _U0UCR	=	0x00c4
                           0000C5   677 _U0GCR	=	0x00c5
                           0000F8   678 _U1CSR	=	0x00f8
                           0000F9   679 _U1DBUF	=	0x00f9
                           0000FA   680 _U1BAUD	=	0x00fa
                           0000FB   681 _U1UCR	=	0x00fb
                           0000FC   682 _U1GCR	=	0x00fc
                           0000C9   683 _WDCTL	=	0x00c9
                                    684 ;--------------------------------------------------------
                                    685 ; special function bits
                                    686 ;--------------------------------------------------------
                                    687 	.area RSEG    (ABS,DATA)
      000000                        688 	.org 0x0000
                           000087   689 _P0_7	=	0x0087
                           000086   690 _P0_6	=	0x0086
                           000085   691 _P0_5	=	0x0085
                           000084   692 _P0_4	=	0x0084
                           000083   693 _P0_3	=	0x0083
                           000082   694 _P0_2	=	0x0082
                           000081   695 _P0_1	=	0x0081
                           000080   696 _P0_0	=	0x0080
                           00008F   697 _URX1IF	=	0x008f
                           00008D   698 _ADCIF	=	0x008d
                           00008B   699 _URX0IF	=	0x008b
                           00008A   700 _IT1	=	0x008a
                           000089   701 _RFERRIF	=	0x0089
                           000088   702 _IT0	=	0x0088
                           000097   703 _P1_7	=	0x0097
                           000096   704 _P1_6	=	0x0096
                           000095   705 _P1_5	=	0x0095
                           000094   706 _P1_4	=	0x0094
                           000093   707 _P1_3	=	0x0093
                           000092   708 _P1_2	=	0x0092
                           000091   709 _P1_1	=	0x0091
                           000090   710 _P1_0	=	0x0090
                           000099   711 _ENCIF_1	=	0x0099
                           000098   712 _ENCIF_0	=	0x0098
                           0000A7   713 _P2_7	=	0x00a7
                           0000A6   714 _P2_6	=	0x00a6
                           0000A5   715 _P2_5	=	0x00a5
                           0000A4   716 _P2_4	=	0x00a4
                           0000A3   717 _P2_3	=	0x00a3
                           0000A2   718 _P2_2	=	0x00a2
                           0000A1   719 _P2_1	=	0x00a1
                           0000A0   720 _P2_0	=	0x00a0
                           0000AF   721 _EA	=	0x00af
                           0000AD   722 _STIE	=	0x00ad
                           0000AC   723 _ENCIE	=	0x00ac
                           0000AB   724 _URX1IE	=	0x00ab
                           0000AA   725 _URX0IE	=	0x00aa
                           0000A9   726 _ADCIE	=	0x00a9
                           0000A8   727 _RFERRIE	=	0x00a8
                           0000BD   728 _P0IE	=	0x00bd
                           0000BC   729 _T4IE	=	0x00bc
                           0000BB   730 _T3IE	=	0x00bb
                           0000BA   731 _T2IE	=	0x00ba
                           0000B9   732 _T1IE	=	0x00b9
                           0000B8   733 _DMAIE	=	0x00b8
                           0000C7   734 _STIF	=	0x00c7
                           0000C5   735 _P0IF	=	0x00c5
                           0000C4   736 _T4IF	=	0x00c4
                           0000C3   737 _T3IF	=	0x00c3
                           0000C2   738 _T2IF	=	0x00c2
                           0000C1   739 _T1IF	=	0x00c1
                           0000C0   740 _DMAIF	=	0x00c0
                           0000D7   741 _CY	=	0x00d7
                           0000D6   742 _AC	=	0x00d6
                           0000D5   743 _F0	=	0x00d5
                           0000D4   744 _RS1	=	0x00d4
                           0000D3   745 _RS0	=	0x00d3
                           0000D2   746 _OV	=	0x00d2
                           0000D1   747 _F1	=	0x00d1
                           0000D0   748 _P	=	0x00d0
                           0000E7   749 _ACC_7	=	0x00e7
                           0000E6   750 _ACC_6	=	0x00e6
                           0000E5   751 _ACC_5	=	0x00e5
                           0000E4   752 _ACC_4	=	0x00e4
                           0000E3   753 _ACC_3	=	0x00e3
                           0000E2   754 _ACC_2	=	0x00e2
                           0000E1   755 _ACC_1	=	0x00e1
                           0000E0   756 _ACC_0	=	0x00e0
                           0000EC   757 _WDTIF	=	0x00ec
                           0000EB   758 _P1IF	=	0x00eb
                           0000EA   759 _UTX1IF	=	0x00ea
                           0000E9   760 _UTX0IF	=	0x00e9
                           0000E8   761 _P2IF	=	0x00e8
                           0000F7   762 _B_7	=	0x00f7
                           0000F6   763 _B_6	=	0x00f6
                           0000F5   764 _B_5	=	0x00f5
                           0000F4   765 _B_4	=	0x00f4
                           0000F3   766 _B_3	=	0x00f3
                           0000F2   767 _B_2	=	0x00f2
                           0000F1   768 _B_1	=	0x00f1
                           0000F0   769 _B_0	=	0x00f0
                           0000DE   770 _OVFIM	=	0x00de
                           0000DD   771 _T4CH1IF	=	0x00dd
                           0000DC   772 _T4CH0IF	=	0x00dc
                           0000DB   773 _T4OVFIF	=	0x00db
                           0000DA   774 _T3CH1IF	=	0x00da
                           0000D9   775 _T3CH0IF	=	0x00d9
                           0000D8   776 _T3OVFIF	=	0x00d8
                           0000FF   777 _MODE	=	0x00ff
                           0000FE   778 _RE	=	0x00fe
                           0000FD   779 _SLAVE	=	0x00fd
                           0000FC   780 _FE	=	0x00fc
                           0000FB   781 _ERR	=	0x00fb
                           0000FA   782 _RX_BYTE	=	0x00fa
                           0000F9   783 _TX_BYTE	=	0x00f9
                           0000F8   784 _ACTIVE	=	0x00f8
                                    785 ;--------------------------------------------------------
                                    786 ; overlayable register banks
                                    787 ;--------------------------------------------------------
                                    788 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        789 	.ds 8
                                    790 ;--------------------------------------------------------
                                    791 ; internal ram data
                                    792 ;--------------------------------------------------------
                                    793 	.area DSEG    (DATA)
                                    794 ;--------------------------------------------------------
                                    795 ; overlayable items in internal ram 
                                    796 ;--------------------------------------------------------
                                    797 ;--------------------------------------------------------
                                    798 ; indirectly addressable internal ram data
                                    799 ;--------------------------------------------------------
                                    800 	.area ISEG    (DATA)
                                    801 ;--------------------------------------------------------
                                    802 ; absolute internal ram data
                                    803 ;--------------------------------------------------------
                                    804 	.area IABS    (ABS,DATA)
                                    805 	.area IABS    (ABS,DATA)
                                    806 ;--------------------------------------------------------
                                    807 ; bit data
                                    808 ;--------------------------------------------------------
                                    809 	.area BSEG    (BIT)
                                    810 ;--------------------------------------------------------
                                    811 ; paged external ram data
                                    812 ;--------------------------------------------------------
                                    813 	.area PSEG    (PAG,XDATA)
                                    814 ;--------------------------------------------------------
                                    815 ; external ram data
                                    816 ;--------------------------------------------------------
                                    817 	.area XSEG    (XDATA)
                           0061A6   818 _MONMUX	=	0x61a6
                           0061A6   819 _OPAMPMC	=	0x61a6
                           006230   820 _I2CCFG	=	0x6230
                           006231   821 _I2CSTAT	=	0x6231
                           006232   822 _I2CDATA	=	0x6232
                           006233   823 _I2CADDR	=	0x6233
                           006234   824 _I2CWC	=	0x6234
                           006235   825 _I2CIO	=	0x6235
                           006243   826 _OBSSEL0	=	0x6243
                           006244   827 _OBSSEL1	=	0x6244
                           006245   828 _OBSSEL2	=	0x6245
                           006246   829 _OBSSEL3	=	0x6246
                           006247   830 _OBSSEL4	=	0x6247
                           006248   831 _OBSSEL5	=	0x6248
                           006249   832 _CHVER	=	0x6249
                           00624A   833 _CHIPID	=	0x624a
                           00624B   834 _TESTREG0	=	0x624b
                           006260   835 _DBGDATA	=	0x6260
                           006262   836 _SRCRC	=	0x6262
                           006264   837 _BATTMON	=	0x6264
                           006265   838 _IVCTRL	=	0x6265
                           006270   839 _FCTL	=	0x6270
                           006271   840 _FADDRL	=	0x6271
                           006272   841 _FADDRH	=	0x6272
                           006273   842 _FWDATA	=	0x6273
                           006276   843 _CHIPINFO0	=	0x6276
                           006277   844 _CHIPINFO1	=	0x6277
                           006281   845 _IRCTL	=	0x6281
                           006290   846 _CLD	=	0x6290
                           0062A0   847 _XX_T1CCTL0	=	0x62a0
                           0062A1   848 _XX_T1CCTL1	=	0x62a1
                           0062A2   849 _XX_T1CCTL2	=	0x62a2
                           0062A3   850 _T1CCTL3	=	0x62a3
                           0062A4   851 _T1CCTL4	=	0x62a4
                           0062A6   852 _XX_T1CC0L	=	0x62a6
                           0062A7   853 _XX_T1CC0H	=	0x62a7
                           0062A8   854 _XX_T1CC1L	=	0x62a8
                           0062A9   855 _XX_T1CC1H	=	0x62a9
                           0062AA   856 _XX_T1CC2L	=	0x62aa
                           0062AB   857 _XX_T1CC2H	=	0x62ab
                           0062AC   858 _T1CC3L	=	0x62ac
                           0062AD   859 _T1CC3H	=	0x62ad
                           0062AE   860 _T1CC4L	=	0x62ae
                           0062AF   861 _T1CC4H	=	0x62af
                           0062B0   862 _STCC	=	0x62b0
                           0062B1   863 _STCS	=	0x62b1
                           0062B2   864 _STCV0	=	0x62b2
                           0062B3   865 _STCV1	=	0x62b3
                           0062B4   866 _STCV2	=	0x62b4
                           0062C0   867 _OPAMPC	=	0x62c0
                           0062C1   868 _OPAMPS	=	0x62c1
                           0062D0   869 _CMPCTL	=	0x62d0
                           006000   870 _RFCORE_RAM	=	0x6000
                           006000   871 _RXFIFO	=	0x6000
                           006080   872 _TXFIFO	=	0x6080
                           006100   873 _SRC_ADDR_TABLE	=	0x6100
                           006160   874 _SRCRESMASK0	=	0x6160
                           006161   875 _SRCRESMASK1	=	0x6161
                           006162   876 _SRCRESMASK2	=	0x6162
                           006163   877 _SRCRESINDEX	=	0x6163
                           006164   878 _SRCEXTPENDEN0	=	0x6164
                           006165   879 _SRCEXTPENDEN1	=	0x6165
                           006166   880 _SRCEXTPENDEN2	=	0x6166
                           006167   881 _SRCSHORTPENDEN0	=	0x6167
                           006168   882 _SRCSHORTPENDEN1	=	0x6168
                           006169   883 _SRCSHORTPENDEN2	=	0x6169
                           00616A   884 _EXT_ADDR0	=	0x616a
                           00616B   885 _EXT_ADDR1	=	0x616b
                           00616C   886 _EXT_ADDR2	=	0x616c
                           00616D   887 _EXT_ADDR3	=	0x616d
                           00616E   888 _EXT_ADDR4	=	0x616e
                           00616F   889 _EXT_ADDR5	=	0x616f
                           006170   890 _EXT_ADDR6	=	0x6170
                           006171   891 _EXT_ADDR7	=	0x6171
                           006172   892 _PAN_ID0	=	0x6172
                           006173   893 _PAN_ID1	=	0x6173
                           006174   894 _SHORT_ADDR0	=	0x6174
                           006175   895 _SHORT_ADDR1	=	0x6175
                           006180   896 _FRMFILT0	=	0x6180
                           006181   897 _FRMFILT1	=	0x6181
                           006182   898 _SRCMATCH	=	0x6182
                           006183   899 _SRCSHORTEN0	=	0x6183
                           006184   900 _SRCSHORTEN1	=	0x6184
                           006185   901 _SRCSHORTEN2	=	0x6185
                           006186   902 _SRCEXTEN0	=	0x6186
                           006187   903 _SRCEXTEN1	=	0x6187
                           006188   904 _SRCEXTEN2	=	0x6188
                           006189   905 _FRMCTRL0	=	0x6189
                           00618A   906 _FRMCTRL1	=	0x618a
                           00618B   907 _RXENABLE	=	0x618b
                           00618C   908 _RXMASKSET	=	0x618c
                           00618D   909 _RXMASKCLR	=	0x618d
                           00618E   910 _FREQTUNE	=	0x618e
                           00618F   911 _FREQCTRL	=	0x618f
                           006190   912 _TXPOWER	=	0x6190
                           006191   913 _TXCTRL	=	0x6191
                           006192   914 _FSMSTAT0	=	0x6192
                           006193   915 _FSMSTAT1	=	0x6193
                           006194   916 _FIFOPCTRL	=	0x6194
                           006195   917 _FSMCTRL	=	0x6195
                           006196   918 _CCACTRL0	=	0x6196
                           006197   919 _CCACTRL1	=	0x6197
                           006198   920 _RSSI	=	0x6198
                           006199   921 _RSSISTAT	=	0x6199
                           00619A   922 _RXFIRST	=	0x619a
                           00619B   923 _RXFIFOCNT	=	0x619b
                           00619C   924 _TXFIFOCNT	=	0x619c
                           00619D   925 _RXFIRST_PTR	=	0x619d
                           00619E   926 _RXLAST_PTR	=	0x619e
                           00619F   927 _RXP1_PTR	=	0x619f
                           0061A1   928 _TXFIRST_PTR	=	0x61a1
                           0061A2   929 _TXLAST_PTR	=	0x61a2
                           0061A3   930 _RFIRQM0	=	0x61a3
                           0061A4   931 _RFIRQM1	=	0x61a4
                           0061A5   932 _RFERRM	=	0x61a5
                           0061A7   933 _RFRND	=	0x61a7
                           0061A8   934 _MDMCTRL0	=	0x61a8
                           0061A9   935 _MDMCTRL1	=	0x61a9
                           0061AA   936 _FREQEST	=	0x61aa
                           0061AB   937 _RXCTRL	=	0x61ab
                           0061AC   938 _FSCTRL	=	0x61ac
                           0061AD   939 _FSCAL0	=	0x61ad
                           0061AE   940 _FSCAL1	=	0x61ae
                           0061AF   941 _FSCAL2	=	0x61af
                           0061B0   942 _FSCAL3	=	0x61b0
                           0061B1   943 _AGCCTRL0	=	0x61b1
                           0061B2   944 _AGCCTRL1	=	0x61b2
                           0061B3   945 _AGCCTRL2	=	0x61b3
                           0061B4   946 _AGCCTRL3	=	0x61b4
                           0061B5   947 _ADCTEST0	=	0x61b5
                           0061B6   948 _ADCTEST1	=	0x61b6
                           0061B7   949 _ADCTEST2	=	0x61b7
                           0061B8   950 _MDMTEST0	=	0x61b8
                           0061B9   951 _MDMTEST1	=	0x61b9
                           0061BA   952 _DACTEST0	=	0x61ba
                           0061BB   953 _DACTEST1	=	0x61bb
                           0061BC   954 _DACTEST2	=	0x61bc
                           0061BD   955 _ATEST	=	0x61bd
                           0061BE   956 _PTEST0	=	0x61be
                           0061BF   957 _PTEST1	=	0x61bf
                           0061FA   958 _TXFILTCFG	=	0x61fa
                           0061EB   959 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   960 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   961 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   962 _CSPPROG0	=	0x61c0
                           0061C1   963 _CSPPROG1	=	0x61c1
                           0061C2   964 _CSPPROG2	=	0x61c2
                           0061C3   965 _CSPPROG3	=	0x61c3
                           0061C4   966 _CSPPROG4	=	0x61c4
                           0061C5   967 _CSPPROG5	=	0x61c5
                           0061C6   968 _CSPPROG6	=	0x61c6
                           0061C7   969 _CSPPROG7	=	0x61c7
                           0061C8   970 _CSPPROG8	=	0x61c8
                           0061C9   971 _CSPPROG9	=	0x61c9
                           0061CA   972 _CSPPROG10	=	0x61ca
                           0061CB   973 _CSPPROG11	=	0x61cb
                           0061CC   974 _CSPPROG12	=	0x61cc
                           0061CD   975 _CSPPROG13	=	0x61cd
                           0061CE   976 _CSPPROG14	=	0x61ce
                           0061CF   977 _CSPPROG15	=	0x61cf
                           0061D0   978 _CSPPROG16	=	0x61d0
                           0061D1   979 _CSPPROG17	=	0x61d1
                           0061D2   980 _CSPPROG18	=	0x61d2
                           0061D3   981 _CSPPROG19	=	0x61d3
                           0061D4   982 _CSPPROG20	=	0x61d4
                           0061D5   983 _CSPPROG21	=	0x61d5
                           0061D6   984 _CSPPROG22	=	0x61d6
                           0061D7   985 _CSPPROG23	=	0x61d7
                           0061E0   986 _CSPCTRL	=	0x61e0
                           0061E1   987 _CSPSTAT	=	0x61e1
                           0061E2   988 _CSPX	=	0x61e2
                           0061E3   989 _CSPY	=	0x61e3
                           0061E4   990 _CSPZ	=	0x61e4
                           0061E5   991 _CSPT	=	0x61e5
                           006200   992 _USBADDR	=	0x6200
                           006201   993 _USBPOW	=	0x6201
                           006202   994 _USBIIF	=	0x6202
                           006204   995 _USBOIF	=	0x6204
                           006206   996 _USBCIF	=	0x6206
                           006207   997 _USBIIE	=	0x6207
                           006209   998 _USBOIE	=	0x6209
                           00620B   999 _USBCIE	=	0x620b
                           00620C  1000 _USBFRML	=	0x620c
                           00620D  1001 _USBFRMH	=	0x620d
                           00620E  1002 _USBINDEX	=	0x620e
                           00620F  1003 _USBCTRL	=	0x620f
                           006210  1004 _USBMAXI	=	0x6210
                           006211  1005 _USBCS0	=	0x6211
                           006211  1006 _USBCSIL	=	0x6211
                           006212  1007 _USBCSIH	=	0x6212
                           006213  1008 _USBMAXO	=	0x6213
                           006214  1009 _USBCSOL	=	0x6214
                           006215  1010 _USBCSOH	=	0x6215
                           006216  1011 _USBCNT0	=	0x6216
                           006216  1012 _USBCNTL	=	0x6216
                           006217  1013 _USBCNTH	=	0x6217
                           006220  1014 _USBF0	=	0x6220
                           006222  1015 _USBF1	=	0x6222
                           006224  1016 _USBF2	=	0x6224
                           006226  1017 _USBF3	=	0x6226
                           006228  1018 _USBF4	=	0x6228
                           00622A  1019 _USBF5	=	0x622a
                           007080  1020 _X_P0	=	0x7080
                           007086  1021 _X_U0CSR	=	0x7086
                           007089  1022 _X_P0IFG	=	0x7089
                           00708A  1023 _X_P1IFG	=	0x708a
                           00708B  1024 _X_P2IFG	=	0x708b
                           00708C  1025 _X_PICTL	=	0x708c
                           00708D  1026 _X_P1IEN	=	0x708d
                           00708F  1027 _X_P0INP	=	0x708f
                           007090  1028 _X_P1	=	0x7090
                           007091  1029 _X_RFIRQF1	=	0x7091
                           007093  1030 _X_MPAGE	=	0x7093
                           007093  1031 _X__XPAGE	=	0x7093
                           007094  1032 _X_T2CTRL	=	0x7094
                           007095  1033 _X_ST0	=	0x7095
                           007096  1034 _X_ST1	=	0x7096
                           007097  1035 _X_ST2	=	0x7097
                           00709C  1036 _X_T2EVTCFG	=	0x709c
                           00709D  1037 _X_SLEEPSTA	=	0x709d
                           00709E  1038 _X_CLKCONSTA	=	0x709e
                           00709F  1039 _X_FMAP	=	0x709f
                           00709F  1040 _X_PSBANK	=	0x709f
                           0070A0  1041 _X_P2	=	0x70a0
                           0070A1  1042 _X_T2IRQF	=	0x70a1
                           0070A2  1043 _X_T2M0	=	0x70a2
                           0070A3  1044 _X_T2M1	=	0x70a3
                           0070A4  1045 _X_T2MOVF0	=	0x70a4
                           0070A5  1046 _X_T2MOVF1	=	0x70a5
                           0070A6  1047 _X_T2MOVF2	=	0x70a6
                           0070A7  1048 _X_T2IRQM	=	0x70a7
                           0070AB  1049 _X_P0IEN	=	0x70ab
                           0070AC  1050 _X_P2IEN	=	0x70ac
                           0070AD  1051 _X_STLOAD	=	0x70ad
                           0070AE  1052 _X_PMUX	=	0x70ae
                           0070AF  1053 _X_T1STAT	=	0x70af
                           0070B1  1054 _X_ENCDI	=	0x70b1
                           0070B2  1055 _X_ENCDO	=	0x70b2
                           0070B3  1056 _X_ENCCS	=	0x70b3
                           0070B4  1057 _X_ADCCON1	=	0x70b4
                           0070B5  1058 _X_ADCCON2	=	0x70b5
                           0070B6  1059 _X_ADCCON3	=	0x70b6
                           0070BA  1060 _X_ADCL	=	0x70ba
                           0070BB  1061 _X_ADCH	=	0x70bb
                           0070BC  1062 _X_RNDL	=	0x70bc
                           0070BD  1063 _X_RNDH	=	0x70bd
                           0070BE  1064 _X_SLEEPCMD	=	0x70be
                           0070BF  1065 _X_RFERRF	=	0x70bf
                           0070C1  1066 _X_U0DBUF	=	0x70c1
                           0070C2  1067 _X_U0BAUD	=	0x70c2
                           0070C3  1068 _X_T2MSEL	=	0x70c3
                           0070C4  1069 _X_U0UCR	=	0x70c4
                           0070C5  1070 _X_U0GCR	=	0x70c5
                           0070C6  1071 _X_CLKCONCMD	=	0x70c6
                           0070C7  1072 _X_MEMCTR	=	0x70c7
                           0070C9  1073 _X_WDCTL	=	0x70c9
                           0070CA  1074 _X_T3CNT	=	0x70ca
                           0070CB  1075 _X_T3CTL	=	0x70cb
                           0070CC  1076 _X_T3CCTL0	=	0x70cc
                           0070CD  1077 _X_T3CC0	=	0x70cd
                           0070CE  1078 _X_T3CCTL1	=	0x70ce
                           0070CF  1079 _X_T3CC1	=	0x70cf
                           0070D1  1080 _X_DMAIRQ	=	0x70d1
                           0070D2  1081 _X_DMA1CFGL	=	0x70d2
                           0070D3  1082 _X_DMA1CFGH	=	0x70d3
                           0070D4  1083 _X_DMA0CFGL	=	0x70d4
                           0070D5  1084 _X_DMA0CFGH	=	0x70d5
                           0070D6  1085 _X_DMAARM	=	0x70d6
                           0070D7  1086 _X_DMAREQ	=	0x70d7
                           0070D8  1087 _X_TIMIF	=	0x70d8
                           0070D9  1088 _X_RFD	=	0x70d9
                           0070DA  1089 _X_T1CC0L	=	0x70da
                           0070DB  1090 _X_T1CC0H	=	0x70db
                           0070DC  1091 _X_T1CC1L	=	0x70dc
                           0070DD  1092 _X_T1CC1H	=	0x70dd
                           0070DE  1093 _X_T1CC2L	=	0x70de
                           0070DF  1094 _X_T1CC2H	=	0x70df
                           0070E1  1095 _X_RFST	=	0x70e1
                           0070E2  1096 _X_T1CNTL	=	0x70e2
                           0070E3  1097 _X_T1CNTH	=	0x70e3
                           0070E4  1098 _X_T1CTL	=	0x70e4
                           0070E5  1099 _X_T1CCTL0	=	0x70e5
                           0070E6  1100 _X_T1CCTL1	=	0x70e6
                           0070E7  1101 _X_T1CCTL2	=	0x70e7
                           0070E9  1102 _X_RFIRQF0	=	0x70e9
                           0070EA  1103 _X_T4CNT	=	0x70ea
                           0070EB  1104 _X_T4CTL	=	0x70eb
                           0070EC  1105 _X_T4CCTL0	=	0x70ec
                           0070ED  1106 _X_T4CC0	=	0x70ed
                           0070EE  1107 _X_T4CCTL1	=	0x70ee
                           0070EF  1108 _X_T4CC1	=	0x70ef
                           0070F1  1109 _X_PERCFG	=	0x70f1
                           0070F2  1110 _X_APCFG	=	0x70f2
                           0070F3  1111 _X_P0SEL	=	0x70f3
                           0070F4  1112 _X_P1SEL	=	0x70f4
                           0070F5  1113 _X_P2SEL	=	0x70f5
                           0070F6  1114 _X_P1INP	=	0x70f6
                           0070F7  1115 _X_P2INP	=	0x70f7
                           0070F8  1116 _X_U1CSR	=	0x70f8
                           0070F9  1117 _X_U1DBUF	=	0x70f9
                           0070FA  1118 _X_U1BAUD	=	0x70fa
                           0070FB  1119 _X_U1UCR	=	0x70fb
                           0070FC  1120 _X_U1GCR	=	0x70fc
                           0070FD  1121 _X_P0DIR	=	0x70fd
                           0070FE  1122 _X_P1DIR	=	0x70fe
                           0070FF  1123 _X_P2DIR	=	0x70ff
                           007800  1124 _X_INFOPAGE	=	0x7800
                           00780C  1125 _X_IEEE_ADDR	=	0x780c
                                   1126 ;--------------------------------------------------------
                                   1127 ; absolute external ram data
                                   1128 ;--------------------------------------------------------
                                   1129 	.area XABS    (ABS,XDATA)
                                   1130 ;--------------------------------------------------------
                                   1131 ; external initialized ram data
                                   1132 ;--------------------------------------------------------
                                   1133 	.area XISEG   (XDATA)
                                   1134 	.area HOME    (CODE)
                                   1135 	.area GSINIT0 (CODE)
                                   1136 	.area GSINIT1 (CODE)
                                   1137 	.area GSINIT2 (CODE)
                                   1138 	.area GSINIT3 (CODE)
                                   1139 	.area GSINIT4 (CODE)
                                   1140 	.area GSINIT5 (CODE)
                                   1141 	.area GSINIT  (CODE)
                                   1142 	.area GSFINAL (CODE)
                                   1143 	.area CSEG    (CODE)
                                   1144 ;--------------------------------------------------------
                                   1145 ; global & static initialisations
                                   1146 ;--------------------------------------------------------
                                   1147 	.area HOME    (CODE)
                                   1148 	.area GSINIT  (CODE)
                                   1149 	.area GSFINAL (CODE)
                                   1150 	.area GSINIT  (CODE)
                                   1151 ;--------------------------------------------------------
                                   1152 ; Home
                                   1153 ;--------------------------------------------------------
                                   1154 	.area HOME    (CODE)
                                   1155 	.area HOME    (CODE)
                                   1156 ;--------------------------------------------------------
                                   1157 ; code
                                   1158 ;--------------------------------------------------------
                                   1159 	.area CSEG    (CODE)
                                   1160 ;------------------------------------------------------------
                                   1161 ;Allocation info for local variables in function 'send'
                                   1162 ;------------------------------------------------------------
                                   1163 ;ptr                       Allocated to registers r5 r6 r7 
                                   1164 ;c                         Allocated to registers r5 r6 r7 
                                   1165 ;------------------------------------------------------------
                                   1166 ;	/opt/contiki/core/net/rime/trickle.c:76: send(void *ptr)
                                   1167 ;	-----------------------------------------
                                   1168 ;	 function send
                                   1169 ;	-----------------------------------------
      000000                       1170 _send:
                           000007  1171 	ar7 = 0x07
                           000006  1172 	ar6 = 0x06
                           000005  1173 	ar5 = 0x05
                           000004  1174 	ar4 = 0x04
                           000003  1175 	ar3 = 0x03
                           000002  1176 	ar2 = 0x02
                           000001  1177 	ar1 = 0x01
                           000000  1178 	ar0 = 0x00
      000000 AD 82            [24] 1179 	mov	r5,dpl
      000002 AE 83            [24] 1180 	mov	r6,dph
      000004 AF F0            [24] 1181 	mov	r7,b
                                   1182 ;	/opt/contiki/core/net/rime/trickle.c:78: struct trickle_conn *c = ptr;
                                   1183 ;	/opt/contiki/core/net/rime/trickle.c:80: if(c->q != NULL) {
      000006 74 53            [12] 1184 	mov	a,#0x53
      000008 2D               [12] 1185 	add	a,r5
      000009 FA               [12] 1186 	mov	r2,a
      00000A E4               [12] 1187 	clr	a
      00000B 3E               [12] 1188 	addc	a,r6
      00000C FB               [12] 1189 	mov	r3,a
      00000D 8F 04            [24] 1190 	mov	ar4,r7
      00000F 8A 82            [24] 1191 	mov	dpl,r2
      000011 8B 83            [24] 1192 	mov	dph,r3
      000013 8C F0            [24] 1193 	mov	b,r4
      000015 12r00r00         [24] 1194 	lcall	__gptrget
      000018 FA               [12] 1195 	mov	r2,a
      000019 A3               [24] 1196 	inc	dptr
      00001A 12r00r00         [24] 1197 	lcall	__gptrget
      00001D FB               [12] 1198 	mov	r3,a
      00001E A3               [24] 1199 	inc	dptr
      00001F 12r00r00         [24] 1200 	lcall	__gptrget
      000022 FC               [12] 1201 	mov	r4,a
      000023 EA               [12] 1202 	mov	a,r2
      000024 4B               [12] 1203 	orl	a,r3
      000025 60 1E            [24] 1204 	jz	00103$
                                   1205 ;	/opt/contiki/core/net/rime/trickle.c:81: queuebuf_to_packetbuf(c->q);
      000027 8A 82            [24] 1206 	mov	dpl,r2
      000029 8B 83            [24] 1207 	mov	dph,r3
      00002B 8C F0            [24] 1208 	mov	b,r4
      00002D C0 07            [24] 1209 	push	ar7
      00002F C0 06            [24] 1210 	push	ar6
      000031 C0 05            [24] 1211 	push	ar5
      000033 12r00r00         [24] 1212 	lcall	_queuebuf_to_packetbuf
      000036 D0 05            [24] 1213 	pop	ar5
      000038 D0 06            [24] 1214 	pop	ar6
      00003A D0 07            [24] 1215 	pop	ar7
                                   1216 ;	/opt/contiki/core/net/rime/trickle.c:82: broadcast_send(&c->c);
      00003C 8D 82            [24] 1217 	mov	dpl,r5
      00003E 8E 83            [24] 1218 	mov	dph,r6
      000040 8F F0            [24] 1219 	mov	b,r7
      000042 02r00r00         [24] 1220 	ljmp	_broadcast_send
      000045                       1221 00103$:
      000045 22               [24] 1222 	ret
                                   1223 ;------------------------------------------------------------
                                   1224 ;Allocation info for local variables in function 'timer_callback'
                                   1225 ;------------------------------------------------------------
                                   1226 ;ptr                       Allocated to registers r5 r6 r7 
                                   1227 ;c                         Allocated to registers r5 r6 r7 
                                   1228 ;------------------------------------------------------------
                                   1229 ;	/opt/contiki/core/net/rime/trickle.c:90: timer_callback(void *ptr)
                                   1230 ;	-----------------------------------------
                                   1231 ;	 function timer_callback
                                   1232 ;	-----------------------------------------
      000046                       1233 _timer_callback:
                                   1234 ;	/opt/contiki/core/net/rime/trickle.c:92: struct trickle_conn *c = ptr;
                                   1235 ;	/opt/contiki/core/net/rime/trickle.c:93: run_trickle(c);
      000046 02r00rA6         [24] 1236 	ljmp	_run_trickle
                                   1237 ;------------------------------------------------------------
                                   1238 ;Allocation info for local variables in function 'reset_interval'
                                   1239 ;------------------------------------------------------------
                                   1240 ;c                         Allocated to registers r5 r6 r7 
                                   1241 ;------------------------------------------------------------
                                   1242 ;	/opt/contiki/core/net/rime/trickle.c:97: reset_interval(struct trickle_conn *c)
                                   1243 ;	-----------------------------------------
                                   1244 ;	 function reset_interval
                                   1245 ;	-----------------------------------------
      000049                       1246 _reset_interval:
      000049 AD 82            [24] 1247 	mov	r5,dpl
      00004B AE 83            [24] 1248 	mov	r6,dph
      00004D AF F0            [24] 1249 	mov	r7,b
                                   1250 ;	/opt/contiki/core/net/rime/trickle.c:99: PT_INIT(&c->pt);
      00004F 74 51            [12] 1251 	mov	a,#0x51
      000051 2D               [12] 1252 	add	a,r5
      000052 FA               [12] 1253 	mov	r2,a
      000053 E4               [12] 1254 	clr	a
      000054 3E               [12] 1255 	addc	a,r6
      000055 FB               [12] 1256 	mov	r3,a
      000056 8F 04            [24] 1257 	mov	ar4,r7
      000058 8A 82            [24] 1258 	mov	dpl,r2
      00005A 8B 83            [24] 1259 	mov	dph,r3
      00005C 8C F0            [24] 1260 	mov	b,r4
      00005E E4               [12] 1261 	clr	a
      00005F 12r00r00         [24] 1262 	lcall	__gptrput
      000062 A3               [24] 1263 	inc	dptr
      000063 12r00r00         [24] 1264 	lcall	__gptrput
                                   1265 ;	/opt/contiki/core/net/rime/trickle.c:100: run_trickle(c);
      000066 8D 82            [24] 1266 	mov	dpl,r5
      000068 8E 83            [24] 1267 	mov	dph,r6
      00006A 8F F0            [24] 1268 	mov	b,r7
      00006C 02r00rA6         [24] 1269 	ljmp	_run_trickle
                                   1270 ;------------------------------------------------------------
                                   1271 ;Allocation info for local variables in function 'set_timer'
                                   1272 ;------------------------------------------------------------
                                   1273 ;t                         Allocated to stack - sp -4
                                   1274 ;i                         Allocated to stack - sp -6
                                   1275 ;c                         Allocated to registers r5 r6 r7 
                                   1276 ;------------------------------------------------------------
                                   1277 ;	/opt/contiki/core/net/rime/trickle.c:104: set_timer(struct trickle_conn *c, struct ctimer *t, clock_time_t i)
                                   1278 ;	-----------------------------------------
                                   1279 ;	 function set_timer
                                   1280 ;	-----------------------------------------
      00006F                       1281 _set_timer:
      00006F AD 82            [24] 1282 	mov	r5,dpl
      000071 AE 83            [24] 1283 	mov	r6,dph
      000073 AF F0            [24] 1284 	mov	r7,b
                                   1285 ;	/opt/contiki/core/net/rime/trickle.c:106: ctimer_set(t, i, timer_callback, c);
      000075 C0 05            [24] 1286 	push	ar5
      000077 C0 06            [24] 1287 	push	ar6
      000079 C0 07            [24] 1288 	push	ar7
      00007B 74r46            [12] 1289 	mov	a,#_timer_callback
      00007D C0 E0            [24] 1290 	push	acc
      00007F 74s00            [12] 1291 	mov	a,#(_timer_callback >> 8)
      000081 C0 E0            [24] 1292 	push	acc
      000083 E5 81            [12] 1293 	mov	a,sp
      000085 24 F5            [12] 1294 	add	a,#0xf5
      000087 F8               [12] 1295 	mov	r0,a
      000088 E6               [12] 1296 	mov	a,@r0
      000089 C0 E0            [24] 1297 	push	acc
      00008B 08               [12] 1298 	inc	r0
      00008C E6               [12] 1299 	mov	a,@r0
      00008D C0 E0            [24] 1300 	push	acc
      00008F E5 81            [12] 1301 	mov	a,sp
      000091 24 F5            [12] 1302 	add	a,#0xf5
      000093 F8               [12] 1303 	mov	r0,a
      000094 86 82            [24] 1304 	mov	dpl,@r0
      000096 08               [12] 1305 	inc	r0
      000097 86 83            [24] 1306 	mov	dph,@r0
      000099 08               [12] 1307 	inc	r0
      00009A 86 F0            [24] 1308 	mov	b,@r0
      00009C 12r00r00         [24] 1309 	lcall	_ctimer_set
      00009F E5 81            [12] 1310 	mov	a,sp
      0000A1 24 F9            [12] 1311 	add	a,#0xf9
      0000A3 F5 81            [12] 1312 	mov	sp,a
      0000A5 22               [24] 1313 	ret
                                   1314 ;------------------------------------------------------------
                                   1315 ;Allocation info for local variables in function 'run_trickle'
                                   1316 ;------------------------------------------------------------
                                   1317 ;c                         Allocated to stack - sp -3
                                   1318 ;interval                  Allocated to registers r4 r3 
                                   1319 ;PT_YIELD_FLAG             Allocated to stack - sp +0
                                   1320 ;sloc0                     Allocated to stack - sp +3
                                   1321 ;sloc1                     Allocated to stack - sp +5
                                   1322 ;------------------------------------------------------------
                                   1323 ;	/opt/contiki/core/net/rime/trickle.c:110: run_trickle(struct trickle_conn *c)
                                   1324 ;	-----------------------------------------
                                   1325 ;	 function run_trickle
                                   1326 ;	-----------------------------------------
      0000A6                       1327 _run_trickle:
      0000A6 C0 82            [24] 1328 	push	dpl
      0000A8 C0 83            [24] 1329 	push	dph
      0000AA C0 F0            [24] 1330 	push	b
      0000AC 05 81            [12] 1331 	inc	sp
                                   1332 ;	/opt/contiki/core/net/rime/trickle.c:113: PT_BEGIN(&c->pt);
      0000AE A8 81            [24] 1333 	mov	r0,sp
      0000B0 76 01            [12] 1334 	mov	@r0,#0x01
      0000B2 E5 81            [12] 1335 	mov	a,sp
      0000B4 24 FD            [12] 1336 	add	a,#0xfd
      0000B6 F8               [12] 1337 	mov	r0,a
      0000B7 74 51            [12] 1338 	mov	a,#0x51
      0000B9 26               [12] 1339 	add	a,@r0
      0000BA FA               [12] 1340 	mov	r2,a
      0000BB E4               [12] 1341 	clr	a
      0000BC 08               [12] 1342 	inc	r0
      0000BD 36               [12] 1343 	addc	a,@r0
      0000BE FB               [12] 1344 	mov	r3,a
      0000BF 08               [12] 1345 	inc	r0
      0000C0 86 04            [24] 1346 	mov	ar4,@r0
      0000C2 8A 82            [24] 1347 	mov	dpl,r2
      0000C4 8B 83            [24] 1348 	mov	dph,r3
      0000C6 8C F0            [24] 1349 	mov	b,r4
      0000C8 12r00r00         [24] 1350 	lcall	__gptrget
      0000CB FF               [12] 1351 	mov	r7,a
      0000CC A3               [24] 1352 	inc	dptr
      0000CD 12r00r00         [24] 1353 	lcall	__gptrget
      0000D0 FE               [12] 1354 	mov	r6,a
      0000D1 BF 00 05         [24] 1355 	cjne	r7,#0x00,00148$
      0000D4 BE 00 02         [24] 1356 	cjne	r6,#0x00,00148$
      0000D7 80 15            [24] 1357 	sjmp	00119$
      0000D9                       1358 00148$:
      0000D9 BF 79 06         [24] 1359 	cjne	r7,#0x79,00149$
      0000DC BE 00 03         [24] 1360 	cjne	r6,#0x00,00149$
      0000DF 02r02r19         [24] 1361 	ljmp	00102$
      0000E2                       1362 00149$:
      0000E2 BF 7D 06         [24] 1363 	cjne	r7,#0x7D,00150$
      0000E5 BE 00 03         [24] 1364 	cjne	r6,#0x00,00150$
      0000E8 02r02r7D         [24] 1365 	ljmp	00110$
      0000EB                       1366 00150$:
      0000EB 02r02rB7         [24] 1367 	ljmp	00121$
                                   1368 ;	/opt/contiki/core/net/rime/trickle.c:115: while(1) {
      0000EE                       1369 00119$:
                                   1370 ;	/opt/contiki/core/net/rime/trickle.c:116: interval = c->interval << c->interval_scaling;
      0000EE E5 81            [12] 1371 	mov	a,sp
      0000F0 24 FD            [12] 1372 	add	a,#0xfd
      0000F2 F8               [12] 1373 	mov	r0,a
      0000F3 74 56            [12] 1374 	mov	a,#0x56
      0000F5 26               [12] 1375 	add	a,@r0
      0000F6 FD               [12] 1376 	mov	r5,a
      0000F7 E4               [12] 1377 	clr	a
      0000F8 08               [12] 1378 	inc	r0
      0000F9 36               [12] 1379 	addc	a,@r0
      0000FA FE               [12] 1380 	mov	r6,a
      0000FB 08               [12] 1381 	inc	r0
      0000FC 86 07            [24] 1382 	mov	ar7,@r0
      0000FE 8D 82            [24] 1383 	mov	dpl,r5
      000100 8E 83            [24] 1384 	mov	dph,r6
      000102 8F F0            [24] 1385 	mov	b,r7
      000104 12r00r00         [24] 1386 	lcall	__gptrget
      000107 FC               [12] 1387 	mov	r4,a
      000108 A3               [24] 1388 	inc	dptr
      000109 12r00r00         [24] 1389 	lcall	__gptrget
      00010C FB               [12] 1390 	mov	r3,a
      00010D E5 81            [12] 1391 	mov	a,sp
      00010F 24 FD            [12] 1392 	add	a,#0xfd
      000111 F8               [12] 1393 	mov	r0,a
      000112 74 59            [12] 1394 	mov	a,#0x59
      000114 26               [12] 1395 	add	a,@r0
      000115 FD               [12] 1396 	mov	r5,a
      000116 E4               [12] 1397 	clr	a
      000117 08               [12] 1398 	inc	r0
      000118 36               [12] 1399 	addc	a,@r0
      000119 FE               [12] 1400 	mov	r6,a
      00011A 08               [12] 1401 	inc	r0
      00011B 86 07            [24] 1402 	mov	ar7,@r0
      00011D 8D 82            [24] 1403 	mov	dpl,r5
      00011F 8E 83            [24] 1404 	mov	dph,r6
      000121 8F F0            [24] 1405 	mov	b,r7
      000123 12r00r00         [24] 1406 	lcall	__gptrget
      000126 FD               [12] 1407 	mov	r5,a
      000127 8D F0            [24] 1408 	mov	b,r5
      000129 05 F0            [12] 1409 	inc	b
      00012B AD 04            [24] 1410 	mov	r5,ar4
      00012D AF 03            [24] 1411 	mov	r7,ar3
      00012F 80 06            [24] 1412 	sjmp	00152$
      000131                       1413 00151$:
      000131 ED               [12] 1414 	mov	a,r5
      000132 2D               [12] 1415 	add	a,r5
      000133 FD               [12] 1416 	mov	r5,a
      000134 EF               [12] 1417 	mov	a,r7
      000135 33               [12] 1418 	rlc	a
      000136 FF               [12] 1419 	mov	r7,a
      000137                       1420 00152$:
      000137 D5 F0 F7         [24] 1421 	djnz	b,00151$
      00013A 8D 04            [24] 1422 	mov	ar4,r5
      00013C 8F 03            [24] 1423 	mov	ar3,r7
                                   1424 ;	/opt/contiki/core/net/rime/trickle.c:117: set_timer(c, &c->interval_timer, interval);
      00013E E5 81            [12] 1425 	mov	a,sp
      000140 24 FD            [12] 1426 	add	a,#0xfd
      000142 F8               [12] 1427 	mov	r0,a
      000143 74 27            [12] 1428 	mov	a,#0x27
      000145 26               [12] 1429 	add	a,@r0
      000146 FD               [12] 1430 	mov	r5,a
      000147 E4               [12] 1431 	clr	a
      000148 08               [12] 1432 	inc	r0
      000149 36               [12] 1433 	addc	a,@r0
      00014A FE               [12] 1434 	mov	r6,a
      00014B 08               [12] 1435 	inc	r0
      00014C 86 07            [24] 1436 	mov	ar7,@r0
      00014E C0 04            [24] 1437 	push	ar4
      000150 C0 03            [24] 1438 	push	ar3
      000152 C0 04            [24] 1439 	push	ar4
      000154 C0 03            [24] 1440 	push	ar3
      000156 C0 05            [24] 1441 	push	ar5
      000158 C0 06            [24] 1442 	push	ar6
      00015A C0 07            [24] 1443 	push	ar7
      00015C E5 81            [12] 1444 	mov	a,sp
      00015E 24 F6            [12] 1445 	add	a,#0xf6
      000160 F8               [12] 1446 	mov	r0,a
      000161 86 82            [24] 1447 	mov	dpl,@r0
      000163 08               [12] 1448 	inc	r0
      000164 86 83            [24] 1449 	mov	dph,@r0
      000166 08               [12] 1450 	inc	r0
      000167 86 F0            [24] 1451 	mov	b,@r0
      000169 12r00r6F         [24] 1452 	lcall	_set_timer
      00016C E5 81            [12] 1453 	mov	a,sp
      00016E 24 FB            [12] 1454 	add	a,#0xfb
      000170 F5 81            [12] 1455 	mov	sp,a
      000172 D0 03            [24] 1456 	pop	ar3
      000174 D0 04            [24] 1457 	pop	ar4
                                   1458 ;	/opt/contiki/core/net/rime/trickle.c:118: set_timer(c, &c->t, interval / 2 + (random_rand() % (interval / 2)));
      000176 EB               [12] 1459 	mov	a,r3
      000177 C3               [12] 1460 	clr	c
      000178 13               [12] 1461 	rrc	a
      000179 CC               [12] 1462 	xch	a,r4
      00017A 13               [12] 1463 	rrc	a
      00017B CC               [12] 1464 	xch	a,r4
      00017C FB               [12] 1465 	mov	r3,a
      00017D C0 04            [24] 1466 	push	ar4
      00017F C0 03            [24] 1467 	push	ar3
      000181 12r00r00         [24] 1468 	lcall	_random_rand
      000184 AD 82            [24] 1469 	mov	r5,dpl
      000186 AF 83            [24] 1470 	mov	r7,dph
      000188 D0 03            [24] 1471 	pop	ar3
      00018A D0 04            [24] 1472 	pop	ar4
      00018C C0 04            [24] 1473 	push	ar4
      00018E C0 03            [24] 1474 	push	ar3
      000190 C0 04            [24] 1475 	push	ar4
      000192 C0 03            [24] 1476 	push	ar3
      000194 8D 82            [24] 1477 	mov	dpl,r5
      000196 8F 83            [24] 1478 	mov	dph,r7
      000198 12r00r00         [24] 1479 	lcall	__moduint
      00019B AE 82            [24] 1480 	mov	r6,dpl
      00019D AF 83            [24] 1481 	mov	r7,dph
      00019F 15 81            [12] 1482 	dec	sp
      0001A1 15 81            [12] 1483 	dec	sp
      0001A3 D0 03            [24] 1484 	pop	ar3
      0001A5 D0 04            [24] 1485 	pop	ar4
      0001A7 EE               [12] 1486 	mov	a,r6
      0001A8 2C               [12] 1487 	add	a,r4
      0001A9 FC               [12] 1488 	mov	r4,a
      0001AA EF               [12] 1489 	mov	a,r7
      0001AB 3B               [12] 1490 	addc	a,r3
      0001AC FB               [12] 1491 	mov	r3,a
      0001AD E5 81            [12] 1492 	mov	a,sp
      0001AF 24 FD            [12] 1493 	add	a,#0xfd
      0001B1 F8               [12] 1494 	mov	r0,a
      0001B2 74 12            [12] 1495 	mov	a,#0x12
      0001B4 26               [12] 1496 	add	a,@r0
      0001B5 FD               [12] 1497 	mov	r5,a
      0001B6 E4               [12] 1498 	clr	a
      0001B7 08               [12] 1499 	inc	r0
      0001B8 36               [12] 1500 	addc	a,@r0
      0001B9 FE               [12] 1501 	mov	r6,a
      0001BA 08               [12] 1502 	inc	r0
      0001BB 86 07            [24] 1503 	mov	ar7,@r0
      0001BD C0 04            [24] 1504 	push	ar4
      0001BF C0 03            [24] 1505 	push	ar3
      0001C1 C0 05            [24] 1506 	push	ar5
      0001C3 C0 06            [24] 1507 	push	ar6
      0001C5 C0 07            [24] 1508 	push	ar7
      0001C7 E5 81            [12] 1509 	mov	a,sp
      0001C9 24 F8            [12] 1510 	add	a,#0xf8
      0001CB F8               [12] 1511 	mov	r0,a
      0001CC 86 82            [24] 1512 	mov	dpl,@r0
      0001CE 08               [12] 1513 	inc	r0
      0001CF 86 83            [24] 1514 	mov	dph,@r0
      0001D1 08               [12] 1515 	inc	r0
      0001D2 86 F0            [24] 1516 	mov	b,@r0
      0001D4 12r00r6F         [24] 1517 	lcall	_set_timer
      0001D7 E5 81            [12] 1518 	mov	a,sp
      0001D9 24 FB            [12] 1519 	add	a,#0xfb
                                   1520 ;	/opt/contiki/core/net/rime/trickle.c:120: c->duplicates = 0;
      0001DB F5 81            [12] 1521 	mov	sp,a
      0001DD 24 FD            [12] 1522 	add	a,#0xfd
      0001DF F8               [12] 1523 	mov	r0,a
      0001E0 74 5A            [12] 1524 	mov	a,#0x5A
      0001E2 26               [12] 1525 	add	a,@r0
      0001E3 FD               [12] 1526 	mov	r5,a
      0001E4 E4               [12] 1527 	clr	a
      0001E5 08               [12] 1528 	inc	r0
      0001E6 36               [12] 1529 	addc	a,@r0
      0001E7 FE               [12] 1530 	mov	r6,a
      0001E8 08               [12] 1531 	inc	r0
      0001E9 86 07            [24] 1532 	mov	ar7,@r0
      0001EB 8D 82            [24] 1533 	mov	dpl,r5
      0001ED 8E 83            [24] 1534 	mov	dph,r6
      0001EF 8F F0            [24] 1535 	mov	b,r7
      0001F1 E4               [12] 1536 	clr	a
      0001F2 12r00r00         [24] 1537 	lcall	__gptrput
                                   1538 ;	/opt/contiki/core/net/rime/trickle.c:121: PT_YIELD(&c->pt); /* Wait until listen timeout */
      0001F5 A8 81            [24] 1539 	mov	r0,sp
      0001F7 76 00            [12] 1540 	mov	@r0,#0x00
      0001F9 E5 81            [12] 1541 	mov	a,sp
      0001FB 24 FD            [12] 1542 	add	a,#0xfd
      0001FD F8               [12] 1543 	mov	r0,a
      0001FE 74 51            [12] 1544 	mov	a,#0x51
      000200 26               [12] 1545 	add	a,@r0
      000201 FD               [12] 1546 	mov	r5,a
      000202 E4               [12] 1547 	clr	a
      000203 08               [12] 1548 	inc	r0
      000204 36               [12] 1549 	addc	a,@r0
      000205 FE               [12] 1550 	mov	r6,a
      000206 08               [12] 1551 	inc	r0
      000207 86 07            [24] 1552 	mov	ar7,@r0
      000209 8D 82            [24] 1553 	mov	dpl,r5
      00020B 8E 83            [24] 1554 	mov	dph,r6
      00020D 8F F0            [24] 1555 	mov	b,r7
      00020F 74 79            [12] 1556 	mov	a,#0x79
      000211 12r00r00         [24] 1557 	lcall	__gptrput
      000214 A3               [24] 1558 	inc	dptr
      000215 E4               [12] 1559 	clr	a
      000216 12r00r00         [24] 1560 	lcall	__gptrput
      000219                       1561 00102$:
      000219 A8 81            [24] 1562 	mov	r0,sp
      00021B E6               [12] 1563 	mov	a,@r0
      00021C 70 06            [24] 1564 	jnz	00106$
      00021E 90 00 01         [24] 1565 	mov	dptr,#0x0001
      000221 02r02rC8         [24] 1566 	ljmp	00122$
      000224                       1567 00106$:
                                   1568 ;	/opt/contiki/core/net/rime/trickle.c:122: if(c->duplicates < DUPLICATE_THRESHOLD) {
      000224 E5 81            [12] 1569 	mov	a,sp
      000226 24 FD            [12] 1570 	add	a,#0xfd
      000228 F8               [12] 1571 	mov	r0,a
      000229 74 5A            [12] 1572 	mov	a,#0x5A
      00022B 26               [12] 1573 	add	a,@r0
      00022C FD               [12] 1574 	mov	r5,a
      00022D E4               [12] 1575 	clr	a
      00022E 08               [12] 1576 	inc	r0
      00022F 36               [12] 1577 	addc	a,@r0
      000230 FE               [12] 1578 	mov	r6,a
      000231 08               [12] 1579 	inc	r0
      000232 86 07            [24] 1580 	mov	ar7,@r0
      000234 8D 82            [24] 1581 	mov	dpl,r5
      000236 8E 83            [24] 1582 	mov	dph,r6
      000238 8F F0            [24] 1583 	mov	b,r7
      00023A 12r00r00         [24] 1584 	lcall	__gptrget
      00023D FD               [12] 1585 	mov	r5,a
      00023E BD 01 00         [24] 1586 	cjne	r5,#0x01,00154$
      000241                       1587 00154$:
      000241 50 16            [24] 1588 	jnc	00113$
                                   1589 ;	/opt/contiki/core/net/rime/trickle.c:123: send(c);
      000243 E5 81            [12] 1590 	mov	a,sp
      000245 24 FD            [12] 1591 	add	a,#0xfd
      000247 F8               [12] 1592 	mov	r0,a
      000248 86 05            [24] 1593 	mov	ar5,@r0
      00024A 08               [12] 1594 	inc	r0
      00024B 86 06            [24] 1595 	mov	ar6,@r0
      00024D 08               [12] 1596 	inc	r0
      00024E 86 07            [24] 1597 	mov	ar7,@r0
      000250 8D 82            [24] 1598 	mov	dpl,r5
      000252 8E 83            [24] 1599 	mov	dph,r6
      000254 8F F0            [24] 1600 	mov	b,r7
      000256 12r00r00         [24] 1601 	lcall	_send
                                   1602 ;	/opt/contiki/core/net/rime/trickle.c:125: PT_YIELD(&c->pt); /* Wait until interval timer expired. */
      000259                       1603 00113$:
      000259 A8 81            [24] 1604 	mov	r0,sp
      00025B 76 00            [12] 1605 	mov	@r0,#0x00
      00025D E5 81            [12] 1606 	mov	a,sp
      00025F 24 FD            [12] 1607 	add	a,#0xfd
      000261 F8               [12] 1608 	mov	r0,a
      000262 74 51            [12] 1609 	mov	a,#0x51
      000264 26               [12] 1610 	add	a,@r0
      000265 FD               [12] 1611 	mov	r5,a
      000266 E4               [12] 1612 	clr	a
      000267 08               [12] 1613 	inc	r0
      000268 36               [12] 1614 	addc	a,@r0
      000269 FE               [12] 1615 	mov	r6,a
      00026A 08               [12] 1616 	inc	r0
      00026B 86 07            [24] 1617 	mov	ar7,@r0
      00026D 8D 82            [24] 1618 	mov	dpl,r5
      00026F 8E 83            [24] 1619 	mov	dph,r6
      000271 8F F0            [24] 1620 	mov	b,r7
      000273 74 7D            [12] 1621 	mov	a,#0x7D
      000275 12r00r00         [24] 1622 	lcall	__gptrput
      000278 A3               [24] 1623 	inc	dptr
      000279 E4               [12] 1624 	clr	a
      00027A 12r00r00         [24] 1625 	lcall	__gptrput
      00027D                       1626 00110$:
      00027D A8 81            [24] 1627 	mov	r0,sp
      00027F E6               [12] 1628 	mov	a,@r0
      000280 70 05            [24] 1629 	jnz	00114$
      000282 90 00 01         [24] 1630 	mov	dptr,#0x0001
      000285 80 41            [24] 1631 	sjmp	00122$
      000287                       1632 00114$:
                                   1633 ;	/opt/contiki/core/net/rime/trickle.c:126: if(c->interval_scaling < INTERVAL_MAX) {
      000287 E5 81            [12] 1634 	mov	a,sp
      000289 24 FD            [12] 1635 	add	a,#0xfd
      00028B F8               [12] 1636 	mov	r0,a
      00028C 74 59            [12] 1637 	mov	a,#0x59
      00028E 26               [12] 1638 	add	a,@r0
      00028F FE               [12] 1639 	mov	r6,a
      000290 E4               [12] 1640 	clr	a
      000291 08               [12] 1641 	inc	r0
      000292 36               [12] 1642 	addc	a,@r0
      000293 FD               [12] 1643 	mov	r5,a
      000294 08               [12] 1644 	inc	r0
      000295 86 04            [24] 1645 	mov	ar4,@r0
      000297 8E 82            [24] 1646 	mov	dpl,r6
      000299 8D 83            [24] 1647 	mov	dph,r5
      00029B 8C F0            [24] 1648 	mov	b,r4
      00029D 12r00r00         [24] 1649 	lcall	__gptrget
      0002A0 FF               [12] 1650 	mov	r7,a
      0002A1 BF 04 00         [24] 1651 	cjne	r7,#0x04,00157$
      0002A4                       1652 00157$:
      0002A4 40 03            [24] 1653 	jc	00158$
      0002A6 02r00rEE         [24] 1654 	ljmp	00119$
      0002A9                       1655 00158$:
                                   1656 ;	/opt/contiki/core/net/rime/trickle.c:127: c->interval_scaling++;
      0002A9 0F               [12] 1657 	inc	r7
      0002AA 8E 82            [24] 1658 	mov	dpl,r6
      0002AC 8D 83            [24] 1659 	mov	dph,r5
      0002AE 8C F0            [24] 1660 	mov	b,r4
      0002B0 EF               [12] 1661 	mov	a,r7
      0002B1 12r00r00         [24] 1662 	lcall	__gptrput
      0002B4 02r00rEE         [24] 1663 	ljmp	00119$
                                   1664 ;	/opt/contiki/core/net/rime/trickle.c:131: PT_END(&c->pt);
      0002B7                       1665 00121$:
      0002B7 8A 82            [24] 1666 	mov	dpl,r2
      0002B9 8B 83            [24] 1667 	mov	dph,r3
      0002BB 8C F0            [24] 1668 	mov	b,r4
      0002BD E4               [12] 1669 	clr	a
      0002BE 12r00r00         [24] 1670 	lcall	__gptrput
      0002C1 A3               [24] 1671 	inc	dptr
      0002C2 12r00r00         [24] 1672 	lcall	__gptrput
      0002C5 90 00 03         [24] 1673 	mov	dptr,#0x0003
      0002C8                       1674 00122$:
      0002C8 E5 81            [12] 1675 	mov	a,sp
      0002CA 24 FC            [12] 1676 	add	a,#0xFC
      0002CC F5 81            [12] 1677 	mov	sp,a
      0002CE 22               [24] 1678 	ret
                                   1679 ;------------------------------------------------------------
                                   1680 ;Allocation info for local variables in function 'recv'
                                   1681 ;------------------------------------------------------------
                                   1682 ;from                      Allocated to stack - sp -12
                                   1683 ;bc                        Allocated to registers r5 r6 r7 
                                   1684 ;c                         Allocated to stack - sp -4
                                   1685 ;seqno                     Allocated to stack - sp -1
                                   1686 ;sloc0                     Allocated to stack - sp +1
                                   1687 ;sloc1                     Allocated to stack - sp -7
                                   1688 ;------------------------------------------------------------
                                   1689 ;	/opt/contiki/core/net/rime/trickle.c:135: recv(struct broadcast_conn *bc, const linkaddr_t *from)
                                   1690 ;	-----------------------------------------
                                   1691 ;	 function recv
                                   1692 ;	-----------------------------------------
      0002CF                       1693 _recv:
      0002CF E5 81            [12] 1694 	mov	a,sp
      0002D1 24 08            [12] 1695 	add	a,#0x08
      0002D3 F5 81            [12] 1696 	mov	sp,a
      0002D5 AD 82            [24] 1697 	mov	r5,dpl
      0002D7 AE 83            [24] 1698 	mov	r6,dph
      0002D9 AF F0            [24] 1699 	mov	r7,b
                                   1700 ;	/opt/contiki/core/net/rime/trickle.c:137: struct trickle_conn *c = (struct trickle_conn *)bc;
      0002DB E5 81            [12] 1701 	mov	a,sp
      0002DD 24 FC            [12] 1702 	add	a,#0xfc
      0002DF F8               [12] 1703 	mov	r0,a
      0002E0 A6 05            [24] 1704 	mov	@r0,ar5
      0002E2 08               [12] 1705 	inc	r0
      0002E3 A6 06            [24] 1706 	mov	@r0,ar6
      0002E5 08               [12] 1707 	inc	r0
      0002E6 A6 07            [24] 1708 	mov	@r0,ar7
                                   1709 ;	/opt/contiki/core/net/rime/trickle.c:138: uint16_t seqno = packetbuf_attr(PACKETBUF_ATTR_EPACKET_ID);
      0002E8 75 82 17         [24] 1710 	mov	dpl,#0x17
      0002EB 12r00r00         [24] 1711 	lcall	_packetbuf_attr
      0002EE AB 82            [24] 1712 	mov	r3,dpl
      0002F0 AC 83            [24] 1713 	mov	r4,dph
      0002F2 A8 81            [24] 1714 	mov	r0,sp
      0002F4 18               [12] 1715 	dec	r0
      0002F5 A6 03            [24] 1716 	mov	@r0,ar3
      0002F7 08               [12] 1717 	inc	r0
      0002F8 A6 04            [24] 1718 	mov	@r0,ar4
                                   1719 ;	/opt/contiki/core/net/rime/trickle.c:148: if(seqno == c->seqno) {
      0002FA E5 81            [12] 1720 	mov	a,sp
      0002FC 24 FC            [12] 1721 	add	a,#0xfc
      0002FE F8               [12] 1722 	mov	r0,a
      0002FF 74 58            [12] 1723 	mov	a,#0x58
      000301 26               [12] 1724 	add	a,@r0
      000302 FA               [12] 1725 	mov	r2,a
      000303 E4               [12] 1726 	clr	a
      000304 08               [12] 1727 	inc	r0
      000305 36               [12] 1728 	addc	a,@r0
      000306 FB               [12] 1729 	mov	r3,a
      000307 08               [12] 1730 	inc	r0
      000308 86 04            [24] 1731 	mov	ar4,@r0
      00030A 8A 82            [24] 1732 	mov	dpl,r2
      00030C 8B 83            [24] 1733 	mov	dph,r3
      00030E 8C F0            [24] 1734 	mov	b,r4
      000310 12r00r00         [24] 1735 	lcall	__gptrget
      000313 FD               [12] 1736 	mov	r5,a
      000314 FE               [12] 1737 	mov	r6,a
      000315 7F 00            [12] 1738 	mov	r7,#0x00
      000317 A8 81            [24] 1739 	mov	r0,sp
      000319 18               [12] 1740 	dec	r0
      00031A E6               [12] 1741 	mov	a,@r0
      00031B B5 06 07         [24] 1742 	cjne	a,ar6,00120$
      00031E 08               [12] 1743 	inc	r0
      00031F E6               [12] 1744 	mov	a,@r0
      000320 B5 07 02         [24] 1745 	cjne	a,ar7,00120$
      000323 80 02            [24] 1746 	sjmp	00121$
      000325                       1747 00120$:
      000325 80 28            [24] 1748 	sjmp	00107$
      000327                       1749 00121$:
                                   1750 ;	/opt/contiki/core/net/rime/trickle.c:150: ++c->duplicates;
      000327 E5 81            [12] 1751 	mov	a,sp
      000329 24 FC            [12] 1752 	add	a,#0xfc
      00032B F8               [12] 1753 	mov	r0,a
      00032C 74 5A            [12] 1754 	mov	a,#0x5A
      00032E 26               [12] 1755 	add	a,@r0
      00032F FE               [12] 1756 	mov	r6,a
      000330 E4               [12] 1757 	clr	a
      000331 08               [12] 1758 	inc	r0
      000332 36               [12] 1759 	addc	a,@r0
      000333 FD               [12] 1760 	mov	r5,a
      000334 08               [12] 1761 	inc	r0
      000335 86 04            [24] 1762 	mov	ar4,@r0
      000337 8E 82            [24] 1763 	mov	dpl,r6
      000339 8D 83            [24] 1764 	mov	dph,r5
      00033B 8C F0            [24] 1765 	mov	b,r4
      00033D 12r00r00         [24] 1766 	lcall	__gptrget
      000340 FF               [12] 1767 	mov	r7,a
      000341 0F               [12] 1768 	inc	r7
      000342 8E 82            [24] 1769 	mov	dpl,r6
      000344 8D 83            [24] 1770 	mov	dph,r5
      000346 8C F0            [24] 1771 	mov	b,r4
      000348 EF               [12] 1772 	mov	a,r7
      000349 12r00r00         [24] 1773 	lcall	__gptrput
      00034C 02r05r22         [24] 1774 	ljmp	00109$
      00034F                       1775 00107$:
                                   1776 ;	/opt/contiki/core/net/rime/trickle.c:151: } else if(SEQNO_LT(seqno, c->seqno)) {
      00034F A8 81            [24] 1777 	mov	r0,sp
      000351 18               [12] 1778 	dec	r0
      000352 E6               [12] 1779 	mov	a,@r0
      000353 FF               [12] 1780 	mov	r7,a
      000354 C3               [12] 1781 	clr	c
      000355 9D               [12] 1782 	subb	a,r5
      000356 FE               [12] 1783 	mov	r6,a
      000357 30 E7 33         [24] 1784 	jnb	acc.7,00104$
                                   1785 ;	/opt/contiki/core/net/rime/trickle.c:152: c->interval_scaling = 0;
      00035A E5 81            [12] 1786 	mov	a,sp
      00035C 24 FC            [12] 1787 	add	a,#0xfc
      00035E F8               [12] 1788 	mov	r0,a
      00035F 74 59            [12] 1789 	mov	a,#0x59
      000361 26               [12] 1790 	add	a,@r0
      000362 FF               [12] 1791 	mov	r7,a
      000363 E4               [12] 1792 	clr	a
      000364 08               [12] 1793 	inc	r0
      000365 36               [12] 1794 	addc	a,@r0
      000366 FE               [12] 1795 	mov	r6,a
      000367 08               [12] 1796 	inc	r0
      000368 86 05            [24] 1797 	mov	ar5,@r0
      00036A 8F 82            [24] 1798 	mov	dpl,r7
      00036C 8E 83            [24] 1799 	mov	dph,r6
      00036E 8D F0            [24] 1800 	mov	b,r5
      000370 E4               [12] 1801 	clr	a
      000371 12r00r00         [24] 1802 	lcall	__gptrput
                                   1803 ;	/opt/contiki/core/net/rime/trickle.c:153: send(c);
      000374 E5 81            [12] 1804 	mov	a,sp
      000376 24 FC            [12] 1805 	add	a,#0xfc
      000378 F8               [12] 1806 	mov	r0,a
      000379 86 05            [24] 1807 	mov	ar5,@r0
      00037B 08               [12] 1808 	inc	r0
      00037C 86 06            [24] 1809 	mov	ar6,@r0
      00037E 08               [12] 1810 	inc	r0
      00037F 86 07            [24] 1811 	mov	ar7,@r0
      000381 8D 82            [24] 1812 	mov	dpl,r5
      000383 8E 83            [24] 1813 	mov	dph,r6
      000385 8F F0            [24] 1814 	mov	b,r7
      000387 12r00r00         [24] 1815 	lcall	_send
      00038A 02r05r22         [24] 1816 	ljmp	00109$
      00038D                       1817 00104$:
                                   1818 ;	/opt/contiki/core/net/rime/trickle.c:158: c->seqno = seqno;
      00038D 8A 82            [24] 1819 	mov	dpl,r2
      00038F 8B 83            [24] 1820 	mov	dph,r3
      000391 8C F0            [24] 1821 	mov	b,r4
      000393 EF               [12] 1822 	mov	a,r7
      000394 12r00r00         [24] 1823 	lcall	__gptrput
                                   1824 ;	/opt/contiki/core/net/rime/trickle.c:160: if(c->q != NULL) {
      000397 E5 81            [12] 1825 	mov	a,sp
      000399 24 FC            [12] 1826 	add	a,#0xfc
      00039B F8               [12] 1827 	mov	r0,a
      00039C 74 53            [12] 1828 	mov	a,#0x53
      00039E 26               [12] 1829 	add	a,@r0
      00039F FD               [12] 1830 	mov	r5,a
      0003A0 E4               [12] 1831 	clr	a
      0003A1 08               [12] 1832 	inc	r0
      0003A2 36               [12] 1833 	addc	a,@r0
      0003A3 FE               [12] 1834 	mov	r6,a
      0003A4 08               [12] 1835 	inc	r0
      0003A5 86 07            [24] 1836 	mov	ar7,@r0
      0003A7 8D 82            [24] 1837 	mov	dpl,r5
      0003A9 8E 83            [24] 1838 	mov	dph,r6
      0003AB 8F F0            [24] 1839 	mov	b,r7
      0003AD 12r00r00         [24] 1840 	lcall	__gptrget
      0003B0 FA               [12] 1841 	mov	r2,a
      0003B1 A3               [24] 1842 	inc	dptr
      0003B2 12r00r00         [24] 1843 	lcall	__gptrget
      0003B5 FB               [12] 1844 	mov	r3,a
      0003B6 A3               [24] 1845 	inc	dptr
      0003B7 12r00r00         [24] 1846 	lcall	__gptrget
      0003BA FC               [12] 1847 	mov	r4,a
      0003BB EA               [12] 1848 	mov	a,r2
      0003BC 4B               [12] 1849 	orl	a,r3
      0003BD 60 15            [24] 1850 	jz	00102$
                                   1851 ;	/opt/contiki/core/net/rime/trickle.c:161: queuebuf_free(c->q);
      0003BF 8A 82            [24] 1852 	mov	dpl,r2
      0003C1 8B 83            [24] 1853 	mov	dph,r3
      0003C3 8C F0            [24] 1854 	mov	b,r4
      0003C5 C0 07            [24] 1855 	push	ar7
      0003C7 C0 06            [24] 1856 	push	ar6
      0003C9 C0 05            [24] 1857 	push	ar5
      0003CB 12r00r00         [24] 1858 	lcall	_queuebuf_free
      0003CE D0 05            [24] 1859 	pop	ar5
      0003D0 D0 06            [24] 1860 	pop	ar6
      0003D2 D0 07            [24] 1861 	pop	ar7
      0003D4                       1862 00102$:
                                   1863 ;	/opt/contiki/core/net/rime/trickle.c:163: c->q = queuebuf_new_from_packetbuf();
      0003D4 C0 07            [24] 1864 	push	ar7
      0003D6 C0 06            [24] 1865 	push	ar6
      0003D8 C0 05            [24] 1866 	push	ar5
      0003DA 12r00r00         [24] 1867 	lcall	_queuebuf_new_from_packetbuf
      0003DD AA 82            [24] 1868 	mov	r2,dpl
      0003DF AB 83            [24] 1869 	mov	r3,dph
      0003E1 AC F0            [24] 1870 	mov	r4,b
      0003E3 D0 05            [24] 1871 	pop	ar5
      0003E5 D0 06            [24] 1872 	pop	ar6
      0003E7 D0 07            [24] 1873 	pop	ar7
      0003E9 8D 82            [24] 1874 	mov	dpl,r5
      0003EB 8E 83            [24] 1875 	mov	dph,r6
      0003ED 8F F0            [24] 1876 	mov	b,r7
      0003EF EA               [12] 1877 	mov	a,r2
      0003F0 12r00r00         [24] 1878 	lcall	__gptrput
      0003F3 A3               [24] 1879 	inc	dptr
      0003F4 EB               [12] 1880 	mov	a,r3
      0003F5 12r00r00         [24] 1881 	lcall	__gptrput
      0003F8 A3               [24] 1882 	inc	dptr
      0003F9 EC               [12] 1883 	mov	a,r4
      0003FA 12r00r00         [24] 1884 	lcall	__gptrput
                                   1885 ;	/opt/contiki/core/net/rime/trickle.c:164: c->interval_scaling = 0;
      0003FD E5 81            [12] 1886 	mov	a,sp
      0003FF 24 FC            [12] 1887 	add	a,#0xfc
      000401 F8               [12] 1888 	mov	r0,a
      000402 74 59            [12] 1889 	mov	a,#0x59
      000404 26               [12] 1890 	add	a,@r0
      000405 FD               [12] 1891 	mov	r5,a
      000406 E4               [12] 1892 	clr	a
      000407 08               [12] 1893 	inc	r0
      000408 36               [12] 1894 	addc	a,@r0
      000409 FE               [12] 1895 	mov	r6,a
      00040A 08               [12] 1896 	inc	r0
      00040B 86 07            [24] 1897 	mov	ar7,@r0
      00040D 8D 82            [24] 1898 	mov	dpl,r5
      00040F 8E 83            [24] 1899 	mov	dph,r6
      000411 8F F0            [24] 1900 	mov	b,r7
      000413 E4               [12] 1901 	clr	a
      000414 12r00r00         [24] 1902 	lcall	__gptrput
                                   1903 ;	/opt/contiki/core/net/rime/trickle.c:165: reset_interval(c);
      000417 E5 81            [12] 1904 	mov	a,sp
      000419 24 FC            [12] 1905 	add	a,#0xfc
      00041B F8               [12] 1906 	mov	r0,a
      00041C 86 82            [24] 1907 	mov	dpl,@r0
      00041E 08               [12] 1908 	inc	r0
      00041F 86 83            [24] 1909 	mov	dph,@r0
      000421 08               [12] 1910 	inc	r0
      000422 86 F0            [24] 1911 	mov	b,@r0
      000424 12r00r49         [24] 1912 	lcall	_reset_interval
                                   1913 ;	/opt/contiki/core/net/rime/trickle.c:167: send, c);
      000427 E5 81            [12] 1914 	mov	a,sp
      000429 24 FC            [12] 1915 	add	a,#0xfc
      00042B F8               [12] 1916 	mov	r0,a
      00042C 86 05            [24] 1917 	mov	ar5,@r0
      00042E 08               [12] 1918 	inc	r0
      00042F 86 06            [24] 1919 	mov	ar6,@r0
      000431 08               [12] 1920 	inc	r0
      000432 86 07            [24] 1921 	mov	ar7,@r0
                                   1922 ;	/opt/contiki/core/net/rime/trickle.c:166: ctimer_set(&c->first_transmission_timer, random_rand() % c->interval,
      000434 C0 07            [24] 1923 	push	ar7
      000436 C0 06            [24] 1924 	push	ar6
      000438 C0 05            [24] 1925 	push	ar5
      00043A 12r00r00         [24] 1926 	lcall	_random_rand
      00043D C8               [12] 1927 	xch	a,r0
      00043E E5 81            [12] 1928 	mov	a,sp
      000440 24 F6            [12] 1929 	add	a,#0xf6
      000442 C8               [12] 1930 	xch	a,r0
      000443 A6 82            [24] 1931 	mov	@r0,dpl
      000445 08               [12] 1932 	inc	r0
      000446 A6 83            [24] 1933 	mov	@r0,dph
      000448 D0 05            [24] 1934 	pop	ar5
      00044A D0 06            [24] 1935 	pop	ar6
      00044C D0 07            [24] 1936 	pop	ar7
      00044E E5 81            [12] 1937 	mov	a,sp
      000450 24 FC            [12] 1938 	add	a,#0xfc
      000452 F8               [12] 1939 	mov	r0,a
      000453 74 56            [12] 1940 	mov	a,#0x56
      000455 26               [12] 1941 	add	a,@r0
      000456 FA               [12] 1942 	mov	r2,a
      000457 E4               [12] 1943 	clr	a
      000458 08               [12] 1944 	inc	r0
      000459 36               [12] 1945 	addc	a,@r0
      00045A FB               [12] 1946 	mov	r3,a
      00045B 08               [12] 1947 	inc	r0
      00045C 86 04            [24] 1948 	mov	ar4,@r0
      00045E 8A 82            [24] 1949 	mov	dpl,r2
      000460 8B 83            [24] 1950 	mov	dph,r3
      000462 8C F0            [24] 1951 	mov	b,r4
      000464 12r00r00         [24] 1952 	lcall	__gptrget
      000467 FA               [12] 1953 	mov	r2,a
      000468 A3               [24] 1954 	inc	dptr
      000469 12r00r00         [24] 1955 	lcall	__gptrget
      00046C FB               [12] 1956 	mov	r3,a
      00046D C0 07            [24] 1957 	push	ar7
      00046F C0 06            [24] 1958 	push	ar6
      000471 C0 05            [24] 1959 	push	ar5
      000473 C0 02            [24] 1960 	push	ar2
      000475 C0 03            [24] 1961 	push	ar3
      000477 E5 81            [12] 1962 	mov	a,sp
      000479 24 F4            [12] 1963 	add	a,#0xf4
      00047B F8               [12] 1964 	mov	r0,a
      00047C 86 82            [24] 1965 	mov	dpl,@r0
      00047E 08               [12] 1966 	inc	r0
      00047F 86 83            [24] 1967 	mov	dph,@r0
      000481 12r00r00         [24] 1968 	lcall	__moduint
      000484 C8               [12] 1969 	xch	a,r0
      000485 E5 81            [12] 1970 	mov	a,sp
      000487 24 F4            [12] 1971 	add	a,#0xf4
      000489 C8               [12] 1972 	xch	a,r0
      00048A A6 82            [24] 1973 	mov	@r0,dpl
      00048C 08               [12] 1974 	inc	r0
      00048D A6 83            [24] 1975 	mov	@r0,dph
      00048F 15 81            [12] 1976 	dec	sp
      000491 15 81            [12] 1977 	dec	sp
      000493 D0 05            [24] 1978 	pop	ar5
      000495 D0 06            [24] 1979 	pop	ar6
      000497 D0 07            [24] 1980 	pop	ar7
      000499 E5 81            [12] 1981 	mov	a,sp
      00049B 24 FC            [12] 1982 	add	a,#0xfc
      00049D F8               [12] 1983 	mov	r0,a
      00049E 74 3C            [12] 1984 	mov	a,#0x3C
      0004A0 26               [12] 1985 	add	a,@r0
      0004A1 FA               [12] 1986 	mov	r2,a
      0004A2 E4               [12] 1987 	clr	a
      0004A3 08               [12] 1988 	inc	r0
      0004A4 36               [12] 1989 	addc	a,@r0
      0004A5 FB               [12] 1990 	mov	r3,a
      0004A6 08               [12] 1991 	inc	r0
      0004A7 86 04            [24] 1992 	mov	ar4,@r0
      0004A9 C0 05            [24] 1993 	push	ar5
      0004AB C0 06            [24] 1994 	push	ar6
      0004AD C0 07            [24] 1995 	push	ar7
      0004AF 74r00            [12] 1996 	mov	a,#_send
      0004B1 C0 E0            [24] 1997 	push	acc
      0004B3 74s00            [12] 1998 	mov	a,#(_send >> 8)
      0004B5 C0 E0            [24] 1999 	push	acc
      0004B7 E5 81            [12] 2000 	mov	a,sp
      0004B9 24 F4            [12] 2001 	add	a,#0xf4
      0004BB F8               [12] 2002 	mov	r0,a
      0004BC E6               [12] 2003 	mov	a,@r0
      0004BD C0 E0            [24] 2004 	push	acc
      0004BF 08               [12] 2005 	inc	r0
      0004C0 E6               [12] 2006 	mov	a,@r0
      0004C1 C0 E0            [24] 2007 	push	acc
      0004C3 8A 82            [24] 2008 	mov	dpl,r2
      0004C5 8B 83            [24] 2009 	mov	dph,r3
      0004C7 8C F0            [24] 2010 	mov	b,r4
      0004C9 12r00r00         [24] 2011 	lcall	_ctimer_set
      0004CC E5 81            [12] 2012 	mov	a,sp
      0004CE 24 F9            [12] 2013 	add	a,#0xf9
                                   2014 ;	/opt/contiki/core/net/rime/trickle.c:168: c->cb->recv(c);
      0004D0 F5 81            [12] 2015 	mov	sp,a
      0004D2 24 FC            [12] 2016 	add	a,#0xfc
      0004D4 F8               [12] 2017 	mov	r0,a
      0004D5 74 0F            [12] 2018 	mov	a,#0x0F
      0004D7 26               [12] 2019 	add	a,@r0
      0004D8 FD               [12] 2020 	mov	r5,a
      0004D9 E4               [12] 2021 	clr	a
      0004DA 08               [12] 2022 	inc	r0
      0004DB 36               [12] 2023 	addc	a,@r0
      0004DC FE               [12] 2024 	mov	r6,a
      0004DD 08               [12] 2025 	inc	r0
      0004DE 86 07            [24] 2026 	mov	ar7,@r0
      0004E0 8D 82            [24] 2027 	mov	dpl,r5
      0004E2 8E 83            [24] 2028 	mov	dph,r6
      0004E4 8F F0            [24] 2029 	mov	b,r7
      0004E6 12r00r00         [24] 2030 	lcall	__gptrget
      0004E9 FD               [12] 2031 	mov	r5,a
      0004EA A3               [24] 2032 	inc	dptr
      0004EB 12r00r00         [24] 2033 	lcall	__gptrget
      0004EE FE               [12] 2034 	mov	r6,a
      0004EF A3               [24] 2035 	inc	dptr
      0004F0 12r00r00         [24] 2036 	lcall	__gptrget
      0004F3 FF               [12] 2037 	mov	r7,a
      0004F4 8D 82            [24] 2038 	mov	dpl,r5
      0004F6 8E 83            [24] 2039 	mov	dph,r6
      0004F8 8F F0            [24] 2040 	mov	b,r7
      0004FA 12r00r00         [24] 2041 	lcall	__gptrget
      0004FD FD               [12] 2042 	mov	r5,a
      0004FE A3               [24] 2043 	inc	dptr
      0004FF 12r00r00         [24] 2044 	lcall	__gptrget
      000502 FE               [12] 2045 	mov	r6,a
      000503 C0 06            [24] 2046 	push	ar6
      000505 C0 05            [24] 2047 	push	ar5
      000507 12r05r0C         [24] 2048 	lcall	00124$
      00050A 80 12            [24] 2049 	sjmp	00125$
      00050C                       2050 00124$:
      00050C C0 05            [24] 2051 	push	ar5
      00050E C0 06            [24] 2052 	push	ar6
      000510 E5 81            [12] 2053 	mov	a,sp
      000512 24 F6            [12] 2054 	add	a,#0xf6
      000514 F8               [12] 2055 	mov	r0,a
      000515 86 82            [24] 2056 	mov	dpl,@r0
      000517 08               [12] 2057 	inc	r0
      000518 86 83            [24] 2058 	mov	dph,@r0
      00051A 08               [12] 2059 	inc	r0
      00051B 86 F0            [24] 2060 	mov	b,@r0
      00051D 22               [24] 2061 	ret
      00051E                       2062 00125$:
      00051E D0 05            [24] 2063 	pop	ar5
      000520 D0 06            [24] 2064 	pop	ar6
      000522                       2065 00109$:
      000522 E5 81            [12] 2066 	mov	a,sp
      000524 24 F8            [12] 2067 	add	a,#0xF8
      000526 F5 81            [12] 2068 	mov	sp,a
      000528 22               [24] 2069 	ret
                                   2070 ;------------------------------------------------------------
                                   2071 ;Allocation info for local variables in function 'trickle_open'
                                   2072 ;------------------------------------------------------------
                                   2073 ;interval                  Allocated to stack - sp -3
                                   2074 ;channel                   Allocated to stack - sp -5
                                   2075 ;cb                        Allocated to stack - sp -8
                                   2076 ;c                         Allocated to registers r5 r6 r7 
                                   2077 ;------------------------------------------------------------
                                   2078 ;	/opt/contiki/core/net/rime/trickle.c:175: trickle_open(struct trickle_conn *c, clock_time_t interval,
                                   2079 ;	-----------------------------------------
                                   2080 ;	 function trickle_open
                                   2081 ;	-----------------------------------------
      000529                       2082 _trickle_open:
      000529 AD 82            [24] 2083 	mov	r5,dpl
      00052B AE 83            [24] 2084 	mov	r6,dph
      00052D AF F0            [24] 2085 	mov	r7,b
                                   2086 ;	/opt/contiki/core/net/rime/trickle.c:178: broadcast_open(&c->c, channel, &bc);
      00052F C0 07            [24] 2087 	push	ar7
      000531 C0 06            [24] 2088 	push	ar6
      000533 C0 05            [24] 2089 	push	ar5
      000535 74r06            [12] 2090 	mov	a,#_bc
      000537 C0 E0            [24] 2091 	push	acc
      000539 74s00            [12] 2092 	mov	a,#(_bc >> 8)
      00053B C0 E0            [24] 2093 	push	acc
      00053D 74 80            [12] 2094 	mov	a,#0x80
      00053F C0 E0            [24] 2095 	push	acc
      000541 E5 81            [12] 2096 	mov	a,sp
      000543 24 F5            [12] 2097 	add	a,#0xf5
      000545 F8               [12] 2098 	mov	r0,a
      000546 E6               [12] 2099 	mov	a,@r0
      000547 C0 E0            [24] 2100 	push	acc
      000549 08               [12] 2101 	inc	r0
      00054A E6               [12] 2102 	mov	a,@r0
      00054B C0 E0            [24] 2103 	push	acc
      00054D 8D 82            [24] 2104 	mov	dpl,r5
      00054F 8E 83            [24] 2105 	mov	dph,r6
      000551 8F F0            [24] 2106 	mov	b,r7
      000553 12r00r00         [24] 2107 	lcall	_broadcast_open
      000556 E5 81            [12] 2108 	mov	a,sp
      000558 24 FB            [12] 2109 	add	a,#0xfb
      00055A F5 81            [12] 2110 	mov	sp,a
      00055C D0 05            [24] 2111 	pop	ar5
      00055E D0 06            [24] 2112 	pop	ar6
      000560 D0 07            [24] 2113 	pop	ar7
                                   2114 ;	/opt/contiki/core/net/rime/trickle.c:179: c->cb = cb;
      000562 74 0F            [12] 2115 	mov	a,#0x0F
      000564 2D               [12] 2116 	add	a,r5
      000565 FA               [12] 2117 	mov	r2,a
      000566 E4               [12] 2118 	clr	a
      000567 3E               [12] 2119 	addc	a,r6
      000568 FB               [12] 2120 	mov	r3,a
      000569 8F 04            [24] 2121 	mov	ar4,r7
      00056B 8A 82            [24] 2122 	mov	dpl,r2
      00056D 8B 83            [24] 2123 	mov	dph,r3
      00056F 8C F0            [24] 2124 	mov	b,r4
      000571 E5 81            [12] 2125 	mov	a,sp
      000573 24 F8            [12] 2126 	add	a,#0xf8
      000575 F8               [12] 2127 	mov	r0,a
      000576 E6               [12] 2128 	mov	a,@r0
      000577 12r00r00         [24] 2129 	lcall	__gptrput
      00057A A3               [24] 2130 	inc	dptr
      00057B 08               [12] 2131 	inc	r0
      00057C E6               [12] 2132 	mov	a,@r0
      00057D 12r00r00         [24] 2133 	lcall	__gptrput
      000580 A3               [24] 2134 	inc	dptr
      000581 08               [12] 2135 	inc	r0
      000582 E6               [12] 2136 	mov	a,@r0
      000583 12r00r00         [24] 2137 	lcall	__gptrput
                                   2138 ;	/opt/contiki/core/net/rime/trickle.c:180: c->q = NULL;
      000586 74 53            [12] 2139 	mov	a,#0x53
      000588 2D               [12] 2140 	add	a,r5
      000589 FA               [12] 2141 	mov	r2,a
      00058A E4               [12] 2142 	clr	a
      00058B 3E               [12] 2143 	addc	a,r6
      00058C FB               [12] 2144 	mov	r3,a
      00058D 8F 04            [24] 2145 	mov	ar4,r7
      00058F 8A 82            [24] 2146 	mov	dpl,r2
      000591 8B 83            [24] 2147 	mov	dph,r3
      000593 8C F0            [24] 2148 	mov	b,r4
      000595 E4               [12] 2149 	clr	a
      000596 12r00r00         [24] 2150 	lcall	__gptrput
      000599 A3               [24] 2151 	inc	dptr
      00059A 12r00r00         [24] 2152 	lcall	__gptrput
      00059D A3               [24] 2153 	inc	dptr
      00059E 12r00r00         [24] 2154 	lcall	__gptrput
                                   2155 ;	/opt/contiki/core/net/rime/trickle.c:181: c->interval = interval;
      0005A1 74 56            [12] 2156 	mov	a,#0x56
      0005A3 2D               [12] 2157 	add	a,r5
      0005A4 FA               [12] 2158 	mov	r2,a
      0005A5 E4               [12] 2159 	clr	a
      0005A6 3E               [12] 2160 	addc	a,r6
      0005A7 FB               [12] 2161 	mov	r3,a
      0005A8 8F 04            [24] 2162 	mov	ar4,r7
      0005AA 8A 82            [24] 2163 	mov	dpl,r2
      0005AC 8B 83            [24] 2164 	mov	dph,r3
      0005AE 8C F0            [24] 2165 	mov	b,r4
      0005B0 E5 81            [12] 2166 	mov	a,sp
      0005B2 24 FD            [12] 2167 	add	a,#0xfd
      0005B4 F8               [12] 2168 	mov	r0,a
      0005B5 E6               [12] 2169 	mov	a,@r0
      0005B6 12r00r00         [24] 2170 	lcall	__gptrput
      0005B9 A3               [24] 2171 	inc	dptr
      0005BA 08               [12] 2172 	inc	r0
      0005BB E6               [12] 2173 	mov	a,@r0
      0005BC 12r00r00         [24] 2174 	lcall	__gptrput
                                   2175 ;	/opt/contiki/core/net/rime/trickle.c:182: c->interval_scaling = 0;
      0005BF 74 59            [12] 2176 	mov	a,#0x59
      0005C1 2D               [12] 2177 	add	a,r5
      0005C2 FD               [12] 2178 	mov	r5,a
      0005C3 E4               [12] 2179 	clr	a
      0005C4 3E               [12] 2180 	addc	a,r6
      0005C5 FE               [12] 2181 	mov	r6,a
      0005C6 8D 82            [24] 2182 	mov	dpl,r5
      0005C8 8E 83            [24] 2183 	mov	dph,r6
      0005CA 8F F0            [24] 2184 	mov	b,r7
      0005CC E4               [12] 2185 	clr	a
      0005CD 12r00r00         [24] 2186 	lcall	__gptrput
                                   2187 ;	/opt/contiki/core/net/rime/trickle.c:183: channel_set_attributes(channel, attributes);
      0005D0 74r00            [12] 2188 	mov	a,#_attributes
      0005D2 C0 E0            [24] 2189 	push	acc
      0005D4 74s00            [12] 2190 	mov	a,#(_attributes >> 8)
      0005D6 C0 E0            [24] 2191 	push	acc
      0005D8 74 80            [12] 2192 	mov	a,#0x80
      0005DA C0 E0            [24] 2193 	push	acc
      0005DC E5 81            [12] 2194 	mov	a,sp
      0005DE 24 F8            [12] 2195 	add	a,#0xf8
      0005E0 F8               [12] 2196 	mov	r0,a
      0005E1 86 82            [24] 2197 	mov	dpl,@r0
      0005E3 08               [12] 2198 	inc	r0
      0005E4 86 83            [24] 2199 	mov	dph,@r0
      0005E6 12r00r00         [24] 2200 	lcall	_channel_set_attributes
      0005E9 15 81            [12] 2201 	dec	sp
      0005EB 15 81            [12] 2202 	dec	sp
      0005ED 15 81            [12] 2203 	dec	sp
      0005EF 22               [24] 2204 	ret
                                   2205 ;------------------------------------------------------------
                                   2206 ;Allocation info for local variables in function 'trickle_close'
                                   2207 ;------------------------------------------------------------
                                   2208 ;c                         Allocated to registers r5 r6 r7 
                                   2209 ;------------------------------------------------------------
                                   2210 ;	/opt/contiki/core/net/rime/trickle.c:187: trickle_close(struct trickle_conn *c)
                                   2211 ;	-----------------------------------------
                                   2212 ;	 function trickle_close
                                   2213 ;	-----------------------------------------
      0005F0                       2214 _trickle_close:
                                   2215 ;	/opt/contiki/core/net/rime/trickle.c:189: broadcast_close(&c->c);
      0005F0 AD 82            [24] 2216 	mov	r5,dpl
      0005F2 AE 83            [24] 2217 	mov	r6,dph
      0005F4 AF F0            [24] 2218 	mov	r7,b
      0005F6 C0 07            [24] 2219 	push	ar7
      0005F8 C0 06            [24] 2220 	push	ar6
      0005FA C0 05            [24] 2221 	push	ar5
      0005FC 12r00r00         [24] 2222 	lcall	_broadcast_close
      0005FF D0 05            [24] 2223 	pop	ar5
      000601 D0 06            [24] 2224 	pop	ar6
      000603 D0 07            [24] 2225 	pop	ar7
                                   2226 ;	/opt/contiki/core/net/rime/trickle.c:190: ctimer_stop(&c->t);
      000605 74 12            [12] 2227 	mov	a,#0x12
      000607 2D               [12] 2228 	add	a,r5
      000608 FA               [12] 2229 	mov	r2,a
      000609 E4               [12] 2230 	clr	a
      00060A 3E               [12] 2231 	addc	a,r6
      00060B FB               [12] 2232 	mov	r3,a
      00060C 8F 04            [24] 2233 	mov	ar4,r7
      00060E 8A 82            [24] 2234 	mov	dpl,r2
      000610 8B 83            [24] 2235 	mov	dph,r3
      000612 8C F0            [24] 2236 	mov	b,r4
      000614 C0 07            [24] 2237 	push	ar7
      000616 C0 06            [24] 2238 	push	ar6
      000618 C0 05            [24] 2239 	push	ar5
      00061A 12r00r00         [24] 2240 	lcall	_ctimer_stop
      00061D D0 05            [24] 2241 	pop	ar5
      00061F D0 06            [24] 2242 	pop	ar6
      000621 D0 07            [24] 2243 	pop	ar7
                                   2244 ;	/opt/contiki/core/net/rime/trickle.c:191: ctimer_stop(&c->interval_timer);
      000623 74 27            [12] 2245 	mov	a,#0x27
      000625 2D               [12] 2246 	add	a,r5
      000626 FD               [12] 2247 	mov	r5,a
      000627 E4               [12] 2248 	clr	a
      000628 3E               [12] 2249 	addc	a,r6
      000629 FE               [12] 2250 	mov	r6,a
      00062A 8D 82            [24] 2251 	mov	dpl,r5
      00062C 8E 83            [24] 2252 	mov	dph,r6
      00062E 8F F0            [24] 2253 	mov	b,r7
      000630 02r00r00         [24] 2254 	ljmp	_ctimer_stop
                                   2255 ;------------------------------------------------------------
                                   2256 ;Allocation info for local variables in function 'trickle_send'
                                   2257 ;------------------------------------------------------------
                                   2258 ;c                         Allocated to stack - sp -5
                                   2259 ;sloc0                     Allocated to stack - sp -2
                                   2260 ;------------------------------------------------------------
                                   2261 ;	/opt/contiki/core/net/rime/trickle.c:195: trickle_send(struct trickle_conn *c)
                                   2262 ;	-----------------------------------------
                                   2263 ;	 function trickle_send
                                   2264 ;	-----------------------------------------
      000633                       2265 _trickle_send:
      000633 C0 82            [24] 2266 	push	dpl
      000635 C0 83            [24] 2267 	push	dph
      000637 C0 F0            [24] 2268 	push	b
      000639 05 81            [12] 2269 	inc	sp
      00063B 05 81            [12] 2270 	inc	sp
      00063D 05 81            [12] 2271 	inc	sp
                                   2272 ;	/opt/contiki/core/net/rime/trickle.c:197: if(c->q != NULL) {
      00063F E5 81            [12] 2273 	mov	a,sp
      000641 24 FB            [12] 2274 	add	a,#0xfb
      000643 F8               [12] 2275 	mov	r0,a
      000644 74 53            [12] 2276 	mov	a,#0x53
      000646 26               [12] 2277 	add	a,@r0
      000647 FA               [12] 2278 	mov	r2,a
      000648 E4               [12] 2279 	clr	a
      000649 08               [12] 2280 	inc	r0
      00064A 36               [12] 2281 	addc	a,@r0
      00064B FB               [12] 2282 	mov	r3,a
      00064C 08               [12] 2283 	inc	r0
      00064D 86 04            [24] 2284 	mov	ar4,@r0
      00064F 8A 82            [24] 2285 	mov	dpl,r2
      000651 8B 83            [24] 2286 	mov	dph,r3
      000653 8C F0            [24] 2287 	mov	b,r4
      000655 12r00r00         [24] 2288 	lcall	__gptrget
      000658 FF               [12] 2289 	mov	r7,a
      000659 A3               [24] 2290 	inc	dptr
      00065A 12r00r00         [24] 2291 	lcall	__gptrget
      00065D FE               [12] 2292 	mov	r6,a
      00065E A3               [24] 2293 	inc	dptr
      00065F 12r00r00         [24] 2294 	lcall	__gptrget
      000662 FD               [12] 2295 	mov	r5,a
      000663 EF               [12] 2296 	mov	a,r7
      000664 4E               [12] 2297 	orl	a,r6
      000665 60 15            [24] 2298 	jz	00102$
                                   2299 ;	/opt/contiki/core/net/rime/trickle.c:198: queuebuf_free(c->q);
      000667 8F 82            [24] 2300 	mov	dpl,r7
      000669 8E 83            [24] 2301 	mov	dph,r6
      00066B 8D F0            [24] 2302 	mov	b,r5
      00066D C0 04            [24] 2303 	push	ar4
      00066F C0 03            [24] 2304 	push	ar3
      000671 C0 02            [24] 2305 	push	ar2
      000673 12r00r00         [24] 2306 	lcall	_queuebuf_free
      000676 D0 02            [24] 2307 	pop	ar2
      000678 D0 03            [24] 2308 	pop	ar3
      00067A D0 04            [24] 2309 	pop	ar4
      00067C                       2310 00102$:
                                   2311 ;	/opt/contiki/core/net/rime/trickle.c:200: c->seqno++;
      00067C E5 81            [12] 2312 	mov	a,sp
      00067E 24 FB            [12] 2313 	add	a,#0xfb
      000680 F8               [12] 2314 	mov	r0,a
      000681 A9 81            [24] 2315 	mov	r1,sp
      000683 19               [12] 2316 	dec	r1
      000684 19               [12] 2317 	dec	r1
      000685 74 58            [12] 2318 	mov	a,#0x58
      000687 26               [12] 2319 	add	a,@r0
      000688 F7               [12] 2320 	mov	@r1,a
      000689 E4               [12] 2321 	clr	a
      00068A 08               [12] 2322 	inc	r0
      00068B 36               [12] 2323 	addc	a,@r0
      00068C 09               [12] 2324 	inc	r1
      00068D F7               [12] 2325 	mov	@r1,a
      00068E 08               [12] 2326 	inc	r0
      00068F 09               [12] 2327 	inc	r1
      000690 E6               [12] 2328 	mov	a,@r0
      000691 F7               [12] 2329 	mov	@r1,a
      000692 A8 81            [24] 2330 	mov	r0,sp
      000694 18               [12] 2331 	dec	r0
      000695 18               [12] 2332 	dec	r0
      000696 86 82            [24] 2333 	mov	dpl,@r0
      000698 08               [12] 2334 	inc	r0
      000699 86 83            [24] 2335 	mov	dph,@r0
      00069B 08               [12] 2336 	inc	r0
      00069C 86 F0            [24] 2337 	mov	b,@r0
      00069E 12r00r00         [24] 2338 	lcall	__gptrget
      0006A1 FF               [12] 2339 	mov	r7,a
      0006A2 0F               [12] 2340 	inc	r7
      0006A3 A8 81            [24] 2341 	mov	r0,sp
      0006A5 18               [12] 2342 	dec	r0
      0006A6 18               [12] 2343 	dec	r0
      0006A7 86 82            [24] 2344 	mov	dpl,@r0
      0006A9 08               [12] 2345 	inc	r0
      0006AA 86 83            [24] 2346 	mov	dph,@r0
      0006AC 08               [12] 2347 	inc	r0
      0006AD 86 F0            [24] 2348 	mov	b,@r0
      0006AF EF               [12] 2349 	mov	a,r7
      0006B0 12r00r00         [24] 2350 	lcall	__gptrput
                                   2351 ;	/opt/contiki/core/net/rime/trickle.c:201: packetbuf_set_attr(PACKETBUF_ATTR_EPACKET_ID, c->seqno);
      0006B3 7E 00            [12] 2352 	mov	r6,#0x00
      0006B5 C0 04            [24] 2353 	push	ar4
      0006B7 C0 03            [24] 2354 	push	ar3
      0006B9 C0 02            [24] 2355 	push	ar2
      0006BB C0 07            [24] 2356 	push	ar7
      0006BD C0 06            [24] 2357 	push	ar6
      0006BF 75 82 17         [24] 2358 	mov	dpl,#0x17
      0006C2 12r00r00         [24] 2359 	lcall	_packetbuf_set_attr
      0006C5 15 81            [12] 2360 	dec	sp
      0006C7 15 81            [12] 2361 	dec	sp
                                   2362 ;	/opt/contiki/core/net/rime/trickle.c:202: c->q = queuebuf_new_from_packetbuf();
      0006C9 12r00r00         [24] 2363 	lcall	_queuebuf_new_from_packetbuf
      0006CC AD 82            [24] 2364 	mov	r5,dpl
      0006CE AE 83            [24] 2365 	mov	r6,dph
      0006D0 AF F0            [24] 2366 	mov	r7,b
      0006D2 D0 02            [24] 2367 	pop	ar2
      0006D4 D0 03            [24] 2368 	pop	ar3
      0006D6 D0 04            [24] 2369 	pop	ar4
      0006D8 8A 82            [24] 2370 	mov	dpl,r2
      0006DA 8B 83            [24] 2371 	mov	dph,r3
      0006DC 8C F0            [24] 2372 	mov	b,r4
      0006DE ED               [12] 2373 	mov	a,r5
      0006DF 12r00r00         [24] 2374 	lcall	__gptrput
      0006E2 A3               [24] 2375 	inc	dptr
      0006E3 EE               [12] 2376 	mov	a,r6
      0006E4 12r00r00         [24] 2377 	lcall	__gptrput
      0006E7 A3               [24] 2378 	inc	dptr
      0006E8 EF               [12] 2379 	mov	a,r7
      0006E9 12r00r00         [24] 2380 	lcall	__gptrput
                                   2381 ;	/opt/contiki/core/net/rime/trickle.c:206: reset_interval(c);
      0006EC E5 81            [12] 2382 	mov	a,sp
      0006EE 24 FB            [12] 2383 	add	a,#0xfb
      0006F0 F8               [12] 2384 	mov	r0,a
      0006F1 86 82            [24] 2385 	mov	dpl,@r0
      0006F3 08               [12] 2386 	inc	r0
      0006F4 86 83            [24] 2387 	mov	dph,@r0
      0006F6 08               [12] 2388 	inc	r0
      0006F7 86 F0            [24] 2389 	mov	b,@r0
      0006F9 12r00r49         [24] 2390 	lcall	_reset_interval
                                   2391 ;	/opt/contiki/core/net/rime/trickle.c:207: send(c);
      0006FC E5 81            [12] 2392 	mov	a,sp
      0006FE 24 FB            [12] 2393 	add	a,#0xfb
      000700 F8               [12] 2394 	mov	r0,a
      000701 86 05            [24] 2395 	mov	ar5,@r0
      000703 08               [12] 2396 	inc	r0
      000704 86 06            [24] 2397 	mov	ar6,@r0
      000706 08               [12] 2398 	inc	r0
      000707 86 07            [24] 2399 	mov	ar7,@r0
      000709 8D 82            [24] 2400 	mov	dpl,r5
      00070B 8E 83            [24] 2401 	mov	dph,r6
      00070D 8F F0            [24] 2402 	mov	b,r7
      00070F 12r00r00         [24] 2403 	lcall	_send
      000712 E5 81            [12] 2404 	mov	a,sp
      000714 24 FA            [12] 2405 	add	a,#0xFA
      000716 F5 81            [12] 2406 	mov	sp,a
      000718 22               [24] 2407 	ret
                                   2408 	.area CSEG    (CODE)
                                   2409 	.area CONST   (CODE)
      000000                       2410 _attributes:
      000000 17                    2411 	.db #0x17	; 23
      000001 08                    2412 	.db #0x08	; 8
      000002 1A                    2413 	.db #0x1A	; 26
      000003 10                    2414 	.db #0x10	; 16
      000004 00                    2415 	.db #0x00	; 0
      000005 00                    2416 	.db #0x00	; 0
      000006                       2417 _bc:
      000006rCFs02                 2418 	.byte _recv, (_recv >> 8)
      000008 00 00                 2419 	.byte #0x00,#0x00
                                   2420 	.area XINIT   (CODE)
                                   2421 	.area CABS    (ABS,CODE)
