                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.5 #9380 (Linux)
                                      4 ; This file was generated Tue Nov 17 16:52:49 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module cc2530_rf
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _cc2530_rf_driver
                                     13 	.globl _packetbuf_set_attr
                                     14 	.globl _clock_delay_usec
                                     15 	.globl _ACTIVE
                                     16 	.globl _TX_BYTE
                                     17 	.globl _RX_BYTE
                                     18 	.globl _ERR
                                     19 	.globl _FE
                                     20 	.globl _SLAVE
                                     21 	.globl _RE
                                     22 	.globl _MODE
                                     23 	.globl _T3OVFIF
                                     24 	.globl _T3CH0IF
                                     25 	.globl _T3CH1IF
                                     26 	.globl _T4OVFIF
                                     27 	.globl _T4CH0IF
                                     28 	.globl _T4CH1IF
                                     29 	.globl _OVFIM
                                     30 	.globl _B_0
                                     31 	.globl _B_1
                                     32 	.globl _B_2
                                     33 	.globl _B_3
                                     34 	.globl _B_4
                                     35 	.globl _B_5
                                     36 	.globl _B_6
                                     37 	.globl _B_7
                                     38 	.globl _P2IF
                                     39 	.globl _UTX0IF
                                     40 	.globl _UTX1IF
                                     41 	.globl _P1IF
                                     42 	.globl _WDTIF
                                     43 	.globl _ACC_0
                                     44 	.globl _ACC_1
                                     45 	.globl _ACC_2
                                     46 	.globl _ACC_3
                                     47 	.globl _ACC_4
                                     48 	.globl _ACC_5
                                     49 	.globl _ACC_6
                                     50 	.globl _ACC_7
                                     51 	.globl _P
                                     52 	.globl _F1
                                     53 	.globl _OV
                                     54 	.globl _RS0
                                     55 	.globl _RS1
                                     56 	.globl _F0
                                     57 	.globl _AC
                                     58 	.globl _CY
                                     59 	.globl _DMAIF
                                     60 	.globl _T1IF
                                     61 	.globl _T2IF
                                     62 	.globl _T3IF
                                     63 	.globl _T4IF
                                     64 	.globl _P0IF
                                     65 	.globl _STIF
                                     66 	.globl _DMAIE
                                     67 	.globl _T1IE
                                     68 	.globl _T2IE
                                     69 	.globl _T3IE
                                     70 	.globl _T4IE
                                     71 	.globl _P0IE
                                     72 	.globl _RFERRIE
                                     73 	.globl _ADCIE
                                     74 	.globl _URX0IE
                                     75 	.globl _URX1IE
                                     76 	.globl _ENCIE
                                     77 	.globl _STIE
                                     78 	.globl _EA
                                     79 	.globl _P2_0
                                     80 	.globl _P2_1
                                     81 	.globl _P2_2
                                     82 	.globl _P2_3
                                     83 	.globl _P2_4
                                     84 	.globl _P2_5
                                     85 	.globl _P2_6
                                     86 	.globl _P2_7
                                     87 	.globl _ENCIF_0
                                     88 	.globl _ENCIF_1
                                     89 	.globl _P1_0
                                     90 	.globl _P1_1
                                     91 	.globl _P1_2
                                     92 	.globl _P1_3
                                     93 	.globl _P1_4
                                     94 	.globl _P1_5
                                     95 	.globl _P1_6
                                     96 	.globl _P1_7
                                     97 	.globl _IT0
                                     98 	.globl _RFERRIF
                                     99 	.globl _IT1
                                    100 	.globl _URX0IF
                                    101 	.globl _ADCIF
                                    102 	.globl _URX1IF
                                    103 	.globl _P0_0
                                    104 	.globl _P0_1
                                    105 	.globl _P0_2
                                    106 	.globl _P0_3
                                    107 	.globl _P0_4
                                    108 	.globl _P0_5
                                    109 	.globl _P0_6
                                    110 	.globl _P0_7
                                    111 	.globl _WDCTL
                                    112 	.globl _U1GCR
                                    113 	.globl _U1UCR
                                    114 	.globl _U1BAUD
                                    115 	.globl _U1DBUF
                                    116 	.globl _U1CSR
                                    117 	.globl _U0GCR
                                    118 	.globl _U0UCR
                                    119 	.globl _U0BAUD
                                    120 	.globl _U0DBUF
                                    121 	.globl _U0CSR
                                    122 	.globl _TIMIF
                                    123 	.globl _T4CC1
                                    124 	.globl _T4CCTL1
                                    125 	.globl _T4CC0
                                    126 	.globl _T4CCTL0
                                    127 	.globl _T4CTL
                                    128 	.globl _T4CNT
                                    129 	.globl _T3CC1
                                    130 	.globl _T3CCTL1
                                    131 	.globl _T3CC0
                                    132 	.globl _T3CCTL0
                                    133 	.globl _T3CTL
                                    134 	.globl _T3CNT
                                    135 	.globl _T2MSEL
                                    136 	.globl _T2IRQM
                                    137 	.globl _T2MOVF2
                                    138 	.globl _T2MOVF1
                                    139 	.globl _T2MOVF0
                                    140 	.globl _T2M1
                                    141 	.globl _T2M0
                                    142 	.globl _T2IRQF
                                    143 	.globl _T2EVTCFG
                                    144 	.globl _T2CTRL
                                    145 	.globl _T1STAT
                                    146 	.globl _T1CCTL2
                                    147 	.globl _T1CCTL1
                                    148 	.globl _T1CCTL0
                                    149 	.globl _T1CTL
                                    150 	.globl _T1CNTH
                                    151 	.globl _T1CNTL
                                    152 	.globl _T1CC2H
                                    153 	.globl _T1CC2L
                                    154 	.globl _T1CC1H
                                    155 	.globl _T1CC1L
                                    156 	.globl _T1CC0H
                                    157 	.globl _T1CC0L
                                    158 	.globl _CLKCONSTA
                                    159 	.globl _CLKCONCMD
                                    160 	.globl _SLEEPSTA
                                    161 	.globl _SLEEPCMD
                                    162 	.globl _STLOAD
                                    163 	.globl _ST2
                                    164 	.globl _ST1
                                    165 	.globl _ST0
                                    166 	.globl _RFERRF
                                    167 	.globl _RFIRQF0
                                    168 	.globl _RFST
                                    169 	.globl _RFD
                                    170 	.globl _RFIRQF1
                                    171 	.globl _PSBANK
                                    172 	.globl _FMAP
                                    173 	.globl _MEMCTR
                                    174 	.globl __XPAGE
                                    175 	.globl _MPAGE
                                    176 	.globl _PMUX
                                    177 	.globl _P2DIR
                                    178 	.globl _P1DIR
                                    179 	.globl _P0DIR
                                    180 	.globl _P2INP
                                    181 	.globl _P1INP
                                    182 	.globl _P2SEL
                                    183 	.globl _P1SEL
                                    184 	.globl _P0SEL
                                    185 	.globl _APCFG
                                    186 	.globl _PERCFG
                                    187 	.globl _P0INP
                                    188 	.globl _P2IEN
                                    189 	.globl _P1IEN
                                    190 	.globl _P0IEN
                                    191 	.globl _PICTL
                                    192 	.globl _P2IFG
                                    193 	.globl _P1IFG
                                    194 	.globl _P0IFG
                                    195 	.globl _DMAREQ
                                    196 	.globl _DMAARM
                                    197 	.globl _DMA0CFGH
                                    198 	.globl _DMA0CFGL
                                    199 	.globl _DMA1CFGH
                                    200 	.globl _DMA1CFGL
                                    201 	.globl _DMAIRQ
                                    202 	.globl _ENCCS
                                    203 	.globl _ENCDO
                                    204 	.globl _ENCDI
                                    205 	.globl _RNDH
                                    206 	.globl _RNDL
                                    207 	.globl _ADCH
                                    208 	.globl _ADCL
                                    209 	.globl _ADCCON3
                                    210 	.globl _ADCCON2
                                    211 	.globl _ADCCON1
                                    212 	.globl _B
                                    213 	.globl _IRCON2
                                    214 	.globl _ACC
                                    215 	.globl _PSW
                                    216 	.globl _IRCON
                                    217 	.globl _IP1
                                    218 	.globl _IEN1
                                    219 	.globl _IP0
                                    220 	.globl _IEN0
                                    221 	.globl _P2
                                    222 	.globl _S1CON
                                    223 	.globl _IEN2
                                    224 	.globl _S0CON
                                    225 	.globl _DPS
                                    226 	.globl _P1
                                    227 	.globl _TCON
                                    228 	.globl _PCON
                                    229 	.globl _DPH1
                                    230 	.globl _DPL1
                                    231 	.globl _DPH0
                                    232 	.globl _DPL0
                                    233 	.globl _SP
                                    234 	.globl _P0
                                    235 	.globl _X_IEEE_ADDR
                                    236 	.globl _X_INFOPAGE
                                    237 	.globl _X_P2DIR
                                    238 	.globl _X_P1DIR
                                    239 	.globl _X_P0DIR
                                    240 	.globl _X_U1GCR
                                    241 	.globl _X_U1UCR
                                    242 	.globl _X_U1BAUD
                                    243 	.globl _X_U1DBUF
                                    244 	.globl _X_U1CSR
                                    245 	.globl _X_P2INP
                                    246 	.globl _X_P1INP
                                    247 	.globl _X_P2SEL
                                    248 	.globl _X_P1SEL
                                    249 	.globl _X_P0SEL
                                    250 	.globl _X_APCFG
                                    251 	.globl _X_PERCFG
                                    252 	.globl _X_T4CC1
                                    253 	.globl _X_T4CCTL1
                                    254 	.globl _X_T4CC0
                                    255 	.globl _X_T4CCTL0
                                    256 	.globl _X_T4CTL
                                    257 	.globl _X_T4CNT
                                    258 	.globl _X_RFIRQF0
                                    259 	.globl _X_T1CCTL2
                                    260 	.globl _X_T1CCTL1
                                    261 	.globl _X_T1CCTL0
                                    262 	.globl _X_T1CTL
                                    263 	.globl _X_T1CNTH
                                    264 	.globl _X_T1CNTL
                                    265 	.globl _X_RFST
                                    266 	.globl _X_T1CC2H
                                    267 	.globl _X_T1CC2L
                                    268 	.globl _X_T1CC1H
                                    269 	.globl _X_T1CC1L
                                    270 	.globl _X_T1CC0H
                                    271 	.globl _X_T1CC0L
                                    272 	.globl _X_RFD
                                    273 	.globl _X_TIMIF
                                    274 	.globl _X_DMAREQ
                                    275 	.globl _X_DMAARM
                                    276 	.globl _X_DMA0CFGH
                                    277 	.globl _X_DMA0CFGL
                                    278 	.globl _X_DMA1CFGH
                                    279 	.globl _X_DMA1CFGL
                                    280 	.globl _X_DMAIRQ
                                    281 	.globl _X_T3CC1
                                    282 	.globl _X_T3CCTL1
                                    283 	.globl _X_T3CC0
                                    284 	.globl _X_T3CCTL0
                                    285 	.globl _X_T3CTL
                                    286 	.globl _X_T3CNT
                                    287 	.globl _X_WDCTL
                                    288 	.globl _X_MEMCTR
                                    289 	.globl _X_CLKCONCMD
                                    290 	.globl _X_U0GCR
                                    291 	.globl _X_U0UCR
                                    292 	.globl _X_T2MSEL
                                    293 	.globl _X_U0BAUD
                                    294 	.globl _X_U0DBUF
                                    295 	.globl _X_RFERRF
                                    296 	.globl _X_SLEEPCMD
                                    297 	.globl _X_RNDH
                                    298 	.globl _X_RNDL
                                    299 	.globl _X_ADCH
                                    300 	.globl _X_ADCL
                                    301 	.globl _X_ADCCON3
                                    302 	.globl _X_ADCCON2
                                    303 	.globl _X_ADCCON1
                                    304 	.globl _X_ENCCS
                                    305 	.globl _X_ENCDO
                                    306 	.globl _X_ENCDI
                                    307 	.globl _X_T1STAT
                                    308 	.globl _X_PMUX
                                    309 	.globl _X_STLOAD
                                    310 	.globl _X_P2IEN
                                    311 	.globl _X_P0IEN
                                    312 	.globl _X_T2IRQM
                                    313 	.globl _X_T2MOVF2
                                    314 	.globl _X_T2MOVF1
                                    315 	.globl _X_T2MOVF0
                                    316 	.globl _X_T2M1
                                    317 	.globl _X_T2M0
                                    318 	.globl _X_T2IRQF
                                    319 	.globl _X_P2
                                    320 	.globl _X_PSBANK
                                    321 	.globl _X_FMAP
                                    322 	.globl _X_CLKCONSTA
                                    323 	.globl _X_SLEEPSTA
                                    324 	.globl _X_T2EVTCFG
                                    325 	.globl _X_ST2
                                    326 	.globl _X_ST1
                                    327 	.globl _X_ST0
                                    328 	.globl _X_T2CTRL
                                    329 	.globl _X__XPAGE
                                    330 	.globl _X_MPAGE
                                    331 	.globl _X_RFIRQF1
                                    332 	.globl _X_P1
                                    333 	.globl _X_P0INP
                                    334 	.globl _X_P1IEN
                                    335 	.globl _X_PICTL
                                    336 	.globl _X_P2IFG
                                    337 	.globl _X_P1IFG
                                    338 	.globl _X_P0IFG
                                    339 	.globl _X_U0CSR
                                    340 	.globl _X_P0
                                    341 	.globl _USBF5
                                    342 	.globl _USBF4
                                    343 	.globl _USBF3
                                    344 	.globl _USBF2
                                    345 	.globl _USBF1
                                    346 	.globl _USBF0
                                    347 	.globl _USBCNTH
                                    348 	.globl _USBCNTL
                                    349 	.globl _USBCNT0
                                    350 	.globl _USBCSOH
                                    351 	.globl _USBCSOL
                                    352 	.globl _USBMAXO
                                    353 	.globl _USBCSIH
                                    354 	.globl _USBCSIL
                                    355 	.globl _USBCS0
                                    356 	.globl _USBMAXI
                                    357 	.globl _USBCTRL
                                    358 	.globl _USBINDEX
                                    359 	.globl _USBFRMH
                                    360 	.globl _USBFRML
                                    361 	.globl _USBCIE
                                    362 	.globl _USBOIE
                                    363 	.globl _USBIIE
                                    364 	.globl _USBCIF
                                    365 	.globl _USBOIF
                                    366 	.globl _USBIIF
                                    367 	.globl _USBPOW
                                    368 	.globl _USBADDR
                                    369 	.globl _CSPT
                                    370 	.globl _CSPZ
                                    371 	.globl _CSPY
                                    372 	.globl _CSPX
                                    373 	.globl _CSPSTAT
                                    374 	.globl _CSPCTRL
                                    375 	.globl _CSPPROG23
                                    376 	.globl _CSPPROG22
                                    377 	.globl _CSPPROG21
                                    378 	.globl _CSPPROG20
                                    379 	.globl _CSPPROG19
                                    380 	.globl _CSPPROG18
                                    381 	.globl _CSPPROG17
                                    382 	.globl _CSPPROG16
                                    383 	.globl _CSPPROG15
                                    384 	.globl _CSPPROG14
                                    385 	.globl _CSPPROG13
                                    386 	.globl _CSPPROG12
                                    387 	.globl _CSPPROG11
                                    388 	.globl _CSPPROG10
                                    389 	.globl _CSPPROG9
                                    390 	.globl _CSPPROG8
                                    391 	.globl _CSPPROG7
                                    392 	.globl _CSPPROG6
                                    393 	.globl _CSPPROG5
                                    394 	.globl _CSPPROG4
                                    395 	.globl _CSPPROG3
                                    396 	.globl _CSPPROG2
                                    397 	.globl _CSPPROG1
                                    398 	.globl _CSPPROG0
                                    399 	.globl _RFC_OBS_CTRL2
                                    400 	.globl _RFC_OBS_CTRL1
                                    401 	.globl _RFC_OBS_CTRL0
                                    402 	.globl _TXFILTCFG
                                    403 	.globl _PTEST1
                                    404 	.globl _PTEST0
                                    405 	.globl _ATEST
                                    406 	.globl _DACTEST2
                                    407 	.globl _DACTEST1
                                    408 	.globl _DACTEST0
                                    409 	.globl _MDMTEST1
                                    410 	.globl _MDMTEST0
                                    411 	.globl _ADCTEST2
                                    412 	.globl _ADCTEST1
                                    413 	.globl _ADCTEST0
                                    414 	.globl _AGCCTRL3
                                    415 	.globl _AGCCTRL2
                                    416 	.globl _AGCCTRL1
                                    417 	.globl _AGCCTRL0
                                    418 	.globl _FSCAL3
                                    419 	.globl _FSCAL2
                                    420 	.globl _FSCAL1
                                    421 	.globl _FSCAL0
                                    422 	.globl _FSCTRL
                                    423 	.globl _RXCTRL
                                    424 	.globl _FREQEST
                                    425 	.globl _MDMCTRL1
                                    426 	.globl _MDMCTRL0
                                    427 	.globl _RFRND
                                    428 	.globl _RFERRM
                                    429 	.globl _RFIRQM1
                                    430 	.globl _RFIRQM0
                                    431 	.globl _TXLAST_PTR
                                    432 	.globl _TXFIRST_PTR
                                    433 	.globl _RXP1_PTR
                                    434 	.globl _RXLAST_PTR
                                    435 	.globl _RXFIRST_PTR
                                    436 	.globl _TXFIFOCNT
                                    437 	.globl _RXFIFOCNT
                                    438 	.globl _RXFIRST
                                    439 	.globl _RSSISTAT
                                    440 	.globl _RSSI
                                    441 	.globl _CCACTRL1
                                    442 	.globl _CCACTRL0
                                    443 	.globl _FSMCTRL
                                    444 	.globl _FIFOPCTRL
                                    445 	.globl _FSMSTAT1
                                    446 	.globl _FSMSTAT0
                                    447 	.globl _TXCTRL
                                    448 	.globl _TXPOWER
                                    449 	.globl _FREQCTRL
                                    450 	.globl _FREQTUNE
                                    451 	.globl _RXMASKCLR
                                    452 	.globl _RXMASKSET
                                    453 	.globl _RXENABLE
                                    454 	.globl _FRMCTRL1
                                    455 	.globl _FRMCTRL0
                                    456 	.globl _SRCEXTEN2
                                    457 	.globl _SRCEXTEN1
                                    458 	.globl _SRCEXTEN0
                                    459 	.globl _SRCSHORTEN2
                                    460 	.globl _SRCSHORTEN1
                                    461 	.globl _SRCSHORTEN0
                                    462 	.globl _SRCMATCH
                                    463 	.globl _FRMFILT1
                                    464 	.globl _FRMFILT0
                                    465 	.globl _SHORT_ADDR1
                                    466 	.globl _SHORT_ADDR0
                                    467 	.globl _PAN_ID1
                                    468 	.globl _PAN_ID0
                                    469 	.globl _EXT_ADDR7
                                    470 	.globl _EXT_ADDR6
                                    471 	.globl _EXT_ADDR5
                                    472 	.globl _EXT_ADDR4
                                    473 	.globl _EXT_ADDR3
                                    474 	.globl _EXT_ADDR2
                                    475 	.globl _EXT_ADDR1
                                    476 	.globl _EXT_ADDR0
                                    477 	.globl _SRCSHORTPENDEN2
                                    478 	.globl _SRCSHORTPENDEN1
                                    479 	.globl _SRCSHORTPENDEN0
                                    480 	.globl _SRCEXTPENDEN2
                                    481 	.globl _SRCEXTPENDEN1
                                    482 	.globl _SRCEXTPENDEN0
                                    483 	.globl _SRCRESINDEX
                                    484 	.globl _SRCRESMASK2
                                    485 	.globl _SRCRESMASK1
                                    486 	.globl _SRCRESMASK0
                                    487 	.globl _SRC_ADDR_TABLE
                                    488 	.globl _TXFIFO
                                    489 	.globl _RXFIFO
                                    490 	.globl _RFCORE_RAM
                                    491 	.globl _CMPCTL
                                    492 	.globl _OPAMPS
                                    493 	.globl _OPAMPC
                                    494 	.globl _STCV2
                                    495 	.globl _STCV1
                                    496 	.globl _STCV0
                                    497 	.globl _STCS
                                    498 	.globl _STCC
                                    499 	.globl _T1CC4H
                                    500 	.globl _T1CC4L
                                    501 	.globl _T1CC3H
                                    502 	.globl _T1CC3L
                                    503 	.globl _XX_T1CC2H
                                    504 	.globl _XX_T1CC2L
                                    505 	.globl _XX_T1CC1H
                                    506 	.globl _XX_T1CC1L
                                    507 	.globl _XX_T1CC0H
                                    508 	.globl _XX_T1CC0L
                                    509 	.globl _T1CCTL4
                                    510 	.globl _T1CCTL3
                                    511 	.globl _XX_T1CCTL2
                                    512 	.globl _XX_T1CCTL1
                                    513 	.globl _XX_T1CCTL0
                                    514 	.globl _CLD
                                    515 	.globl _IRCTL
                                    516 	.globl _CHIPINFO1
                                    517 	.globl _CHIPINFO0
                                    518 	.globl _FWDATA
                                    519 	.globl _FADDRH
                                    520 	.globl _FADDRL
                                    521 	.globl _FCTL
                                    522 	.globl _IVCTRL
                                    523 	.globl _BATTMON
                                    524 	.globl _SRCRC
                                    525 	.globl _DBGDATA
                                    526 	.globl _TESTREG0
                                    527 	.globl _CHIPID
                                    528 	.globl _CHVER
                                    529 	.globl _OBSSEL5
                                    530 	.globl _OBSSEL4
                                    531 	.globl _OBSSEL3
                                    532 	.globl _OBSSEL2
                                    533 	.globl _OBSSEL1
                                    534 	.globl _OBSSEL0
                                    535 	.globl _I2CIO
                                    536 	.globl _I2CWC
                                    537 	.globl _I2CADDR
                                    538 	.globl _I2CDATA
                                    539 	.globl _I2CSTAT
                                    540 	.globl _I2CCFG
                                    541 	.globl _OPAMPMC
                                    542 	.globl _MONMUX
                                    543 ;--------------------------------------------------------
                                    544 ; special function registers
                                    545 ;--------------------------------------------------------
                                    546 	.area RSEG    (ABS,DATA)
      000000                        547 	.org 0x0000
                           000080   548 _P0	=	0x0080
                           000081   549 _SP	=	0x0081
                           000082   550 _DPL0	=	0x0082
                           000083   551 _DPH0	=	0x0083
                           000084   552 _DPL1	=	0x0084
                           000085   553 _DPH1	=	0x0085
                           000087   554 _PCON	=	0x0087
                           000088   555 _TCON	=	0x0088
                           000090   556 _P1	=	0x0090
                           000092   557 _DPS	=	0x0092
                           000098   558 _S0CON	=	0x0098
                           00009A   559 _IEN2	=	0x009a
                           00009B   560 _S1CON	=	0x009b
                           0000A0   561 _P2	=	0x00a0
                           0000A8   562 _IEN0	=	0x00a8
                           0000A9   563 _IP0	=	0x00a9
                           0000B8   564 _IEN1	=	0x00b8
                           0000B9   565 _IP1	=	0x00b9
                           0000C0   566 _IRCON	=	0x00c0
                           0000D0   567 _PSW	=	0x00d0
                           0000E0   568 _ACC	=	0x00e0
                           0000E8   569 _IRCON2	=	0x00e8
                           0000F0   570 _B	=	0x00f0
                           0000B4   571 _ADCCON1	=	0x00b4
                           0000B5   572 _ADCCON2	=	0x00b5
                           0000B6   573 _ADCCON3	=	0x00b6
                           0000BA   574 _ADCL	=	0x00ba
                           0000BB   575 _ADCH	=	0x00bb
                           0000BC   576 _RNDL	=	0x00bc
                           0000BD   577 _RNDH	=	0x00bd
                           0000B1   578 _ENCDI	=	0x00b1
                           0000B2   579 _ENCDO	=	0x00b2
                           0000B3   580 _ENCCS	=	0x00b3
                           0000D1   581 _DMAIRQ	=	0x00d1
                           0000D2   582 _DMA1CFGL	=	0x00d2
                           0000D3   583 _DMA1CFGH	=	0x00d3
                           0000D4   584 _DMA0CFGL	=	0x00d4
                           0000D5   585 _DMA0CFGH	=	0x00d5
                           0000D6   586 _DMAARM	=	0x00d6
                           0000D7   587 _DMAREQ	=	0x00d7
                           000089   588 _P0IFG	=	0x0089
                           00008A   589 _P1IFG	=	0x008a
                           00008B   590 _P2IFG	=	0x008b
                           00008C   591 _PICTL	=	0x008c
                           0000AB   592 _P0IEN	=	0x00ab
                           00008D   593 _P1IEN	=	0x008d
                           0000AC   594 _P2IEN	=	0x00ac
                           00008F   595 _P0INP	=	0x008f
                           0000F1   596 _PERCFG	=	0x00f1
                           0000F2   597 _APCFG	=	0x00f2
                           0000F3   598 _P0SEL	=	0x00f3
                           0000F4   599 _P1SEL	=	0x00f4
                           0000F5   600 _P2SEL	=	0x00f5
                           0000F6   601 _P1INP	=	0x00f6
                           0000F7   602 _P2INP	=	0x00f7
                           0000FD   603 _P0DIR	=	0x00fd
                           0000FE   604 _P1DIR	=	0x00fe
                           0000FF   605 _P2DIR	=	0x00ff
                           0000AE   606 _PMUX	=	0x00ae
                           000093   607 _MPAGE	=	0x0093
                           000093   608 __XPAGE	=	0x0093
                           0000C7   609 _MEMCTR	=	0x00c7
                           00009F   610 _FMAP	=	0x009f
                           00009F   611 _PSBANK	=	0x009f
                           000091   612 _RFIRQF1	=	0x0091
                           0000D9   613 _RFD	=	0x00d9
                           0000E1   614 _RFST	=	0x00e1
                           0000E9   615 _RFIRQF0	=	0x00e9
                           0000BF   616 _RFERRF	=	0x00bf
                           000095   617 _ST0	=	0x0095
                           000096   618 _ST1	=	0x0096
                           000097   619 _ST2	=	0x0097
                           0000AD   620 _STLOAD	=	0x00ad
                           0000BE   621 _SLEEPCMD	=	0x00be
                           00009D   622 _SLEEPSTA	=	0x009d
                           0000C6   623 _CLKCONCMD	=	0x00c6
                           00009E   624 _CLKCONSTA	=	0x009e
                           0000DA   625 _T1CC0L	=	0x00da
                           0000DB   626 _T1CC0H	=	0x00db
                           0000DC   627 _T1CC1L	=	0x00dc
                           0000DD   628 _T1CC1H	=	0x00dd
                           0000DE   629 _T1CC2L	=	0x00de
                           0000DF   630 _T1CC2H	=	0x00df
                           0000E2   631 _T1CNTL	=	0x00e2
                           0000E3   632 _T1CNTH	=	0x00e3
                           0000E4   633 _T1CTL	=	0x00e4
                           0000E5   634 _T1CCTL0	=	0x00e5
                           0000E6   635 _T1CCTL1	=	0x00e6
                           0000E7   636 _T1CCTL2	=	0x00e7
                           0000AF   637 _T1STAT	=	0x00af
                           000094   638 _T2CTRL	=	0x0094
                           00009C   639 _T2EVTCFG	=	0x009c
                           0000A1   640 _T2IRQF	=	0x00a1
                           0000A2   641 _T2M0	=	0x00a2
                           0000A3   642 _T2M1	=	0x00a3
                           0000A4   643 _T2MOVF0	=	0x00a4
                           0000A5   644 _T2MOVF1	=	0x00a5
                           0000A6   645 _T2MOVF2	=	0x00a6
                           0000A7   646 _T2IRQM	=	0x00a7
                           0000C3   647 _T2MSEL	=	0x00c3
                           0000CA   648 _T3CNT	=	0x00ca
                           0000CB   649 _T3CTL	=	0x00cb
                           0000CC   650 _T3CCTL0	=	0x00cc
                           0000CD   651 _T3CC0	=	0x00cd
                           0000CE   652 _T3CCTL1	=	0x00ce
                           0000CF   653 _T3CC1	=	0x00cf
                           0000EA   654 _T4CNT	=	0x00ea
                           0000EB   655 _T4CTL	=	0x00eb
                           0000EC   656 _T4CCTL0	=	0x00ec
                           0000ED   657 _T4CC0	=	0x00ed
                           0000EE   658 _T4CCTL1	=	0x00ee
                           0000EF   659 _T4CC1	=	0x00ef
                           0000D8   660 _TIMIF	=	0x00d8
                           000086   661 _U0CSR	=	0x0086
                           0000C1   662 _U0DBUF	=	0x00c1
                           0000C2   663 _U0BAUD	=	0x00c2
                           0000C4   664 _U0UCR	=	0x00c4
                           0000C5   665 _U0GCR	=	0x00c5
                           0000F8   666 _U1CSR	=	0x00f8
                           0000F9   667 _U1DBUF	=	0x00f9
                           0000FA   668 _U1BAUD	=	0x00fa
                           0000FB   669 _U1UCR	=	0x00fb
                           0000FC   670 _U1GCR	=	0x00fc
                           0000C9   671 _WDCTL	=	0x00c9
                                    672 ;--------------------------------------------------------
                                    673 ; special function bits
                                    674 ;--------------------------------------------------------
                                    675 	.area RSEG    (ABS,DATA)
      000000                        676 	.org 0x0000
                           000087   677 _P0_7	=	0x0087
                           000086   678 _P0_6	=	0x0086
                           000085   679 _P0_5	=	0x0085
                           000084   680 _P0_4	=	0x0084
                           000083   681 _P0_3	=	0x0083
                           000082   682 _P0_2	=	0x0082
                           000081   683 _P0_1	=	0x0081
                           000080   684 _P0_0	=	0x0080
                           00008F   685 _URX1IF	=	0x008f
                           00008D   686 _ADCIF	=	0x008d
                           00008B   687 _URX0IF	=	0x008b
                           00008A   688 _IT1	=	0x008a
                           000089   689 _RFERRIF	=	0x0089
                           000088   690 _IT0	=	0x0088
                           000097   691 _P1_7	=	0x0097
                           000096   692 _P1_6	=	0x0096
                           000095   693 _P1_5	=	0x0095
                           000094   694 _P1_4	=	0x0094
                           000093   695 _P1_3	=	0x0093
                           000092   696 _P1_2	=	0x0092
                           000091   697 _P1_1	=	0x0091
                           000090   698 _P1_0	=	0x0090
                           000099   699 _ENCIF_1	=	0x0099
                           000098   700 _ENCIF_0	=	0x0098
                           0000A7   701 _P2_7	=	0x00a7
                           0000A6   702 _P2_6	=	0x00a6
                           0000A5   703 _P2_5	=	0x00a5
                           0000A4   704 _P2_4	=	0x00a4
                           0000A3   705 _P2_3	=	0x00a3
                           0000A2   706 _P2_2	=	0x00a2
                           0000A1   707 _P2_1	=	0x00a1
                           0000A0   708 _P2_0	=	0x00a0
                           0000AF   709 _EA	=	0x00af
                           0000AD   710 _STIE	=	0x00ad
                           0000AC   711 _ENCIE	=	0x00ac
                           0000AB   712 _URX1IE	=	0x00ab
                           0000AA   713 _URX0IE	=	0x00aa
                           0000A9   714 _ADCIE	=	0x00a9
                           0000A8   715 _RFERRIE	=	0x00a8
                           0000BD   716 _P0IE	=	0x00bd
                           0000BC   717 _T4IE	=	0x00bc
                           0000BB   718 _T3IE	=	0x00bb
                           0000BA   719 _T2IE	=	0x00ba
                           0000B9   720 _T1IE	=	0x00b9
                           0000B8   721 _DMAIE	=	0x00b8
                           0000C7   722 _STIF	=	0x00c7
                           0000C5   723 _P0IF	=	0x00c5
                           0000C4   724 _T4IF	=	0x00c4
                           0000C3   725 _T3IF	=	0x00c3
                           0000C2   726 _T2IF	=	0x00c2
                           0000C1   727 _T1IF	=	0x00c1
                           0000C0   728 _DMAIF	=	0x00c0
                           0000D7   729 _CY	=	0x00d7
                           0000D6   730 _AC	=	0x00d6
                           0000D5   731 _F0	=	0x00d5
                           0000D4   732 _RS1	=	0x00d4
                           0000D3   733 _RS0	=	0x00d3
                           0000D2   734 _OV	=	0x00d2
                           0000D1   735 _F1	=	0x00d1
                           0000D0   736 _P	=	0x00d0
                           0000E7   737 _ACC_7	=	0x00e7
                           0000E6   738 _ACC_6	=	0x00e6
                           0000E5   739 _ACC_5	=	0x00e5
                           0000E4   740 _ACC_4	=	0x00e4
                           0000E3   741 _ACC_3	=	0x00e3
                           0000E2   742 _ACC_2	=	0x00e2
                           0000E1   743 _ACC_1	=	0x00e1
                           0000E0   744 _ACC_0	=	0x00e0
                           0000EC   745 _WDTIF	=	0x00ec
                           0000EB   746 _P1IF	=	0x00eb
                           0000EA   747 _UTX1IF	=	0x00ea
                           0000E9   748 _UTX0IF	=	0x00e9
                           0000E8   749 _P2IF	=	0x00e8
                           0000F7   750 _B_7	=	0x00f7
                           0000F6   751 _B_6	=	0x00f6
                           0000F5   752 _B_5	=	0x00f5
                           0000F4   753 _B_4	=	0x00f4
                           0000F3   754 _B_3	=	0x00f3
                           0000F2   755 _B_2	=	0x00f2
                           0000F1   756 _B_1	=	0x00f1
                           0000F0   757 _B_0	=	0x00f0
                           0000DE   758 _OVFIM	=	0x00de
                           0000DD   759 _T4CH1IF	=	0x00dd
                           0000DC   760 _T4CH0IF	=	0x00dc
                           0000DB   761 _T4OVFIF	=	0x00db
                           0000DA   762 _T3CH1IF	=	0x00da
                           0000D9   763 _T3CH0IF	=	0x00d9
                           0000D8   764 _T3OVFIF	=	0x00d8
                           0000FF   765 _MODE	=	0x00ff
                           0000FE   766 _RE	=	0x00fe
                           0000FD   767 _SLAVE	=	0x00fd
                           0000FC   768 _FE	=	0x00fc
                           0000FB   769 _ERR	=	0x00fb
                           0000FA   770 _RX_BYTE	=	0x00fa
                           0000F9   771 _TX_BYTE	=	0x00f9
                           0000F8   772 _ACTIVE	=	0x00f8
                                    773 ;--------------------------------------------------------
                                    774 ; overlayable register banks
                                    775 ;--------------------------------------------------------
                                    776 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        777 	.ds 8
                                    778 ;--------------------------------------------------------
                                    779 ; internal ram data
                                    780 ;--------------------------------------------------------
                                    781 	.area DSEG    (DATA)
      000000                        782 _rf_flags:
      000000                        783 	.ds 1
                                    784 ;--------------------------------------------------------
                                    785 ; overlayable items in internal ram 
                                    786 ;--------------------------------------------------------
                                    787 ;--------------------------------------------------------
                                    788 ; indirectly addressable internal ram data
                                    789 ;--------------------------------------------------------
                                    790 	.area ISEG    (DATA)
                                    791 ;--------------------------------------------------------
                                    792 ; absolute internal ram data
                                    793 ;--------------------------------------------------------
                                    794 	.area IABS    (ABS,DATA)
                                    795 	.area IABS    (ABS,DATA)
                                    796 ;--------------------------------------------------------
                                    797 ; bit data
                                    798 ;--------------------------------------------------------
                                    799 	.area BSEG    (BIT)
                                    800 ;--------------------------------------------------------
                                    801 ; paged external ram data
                                    802 ;--------------------------------------------------------
                                    803 	.area PSEG    (PAG,XDATA)
                                    804 ;--------------------------------------------------------
                                    805 ; external ram data
                                    806 ;--------------------------------------------------------
                                    807 	.area XSEG    (XDATA)
                           0061A6   808 _MONMUX	=	0x61a6
                           0061A6   809 _OPAMPMC	=	0x61a6
                           006230   810 _I2CCFG	=	0x6230
                           006231   811 _I2CSTAT	=	0x6231
                           006232   812 _I2CDATA	=	0x6232
                           006233   813 _I2CADDR	=	0x6233
                           006234   814 _I2CWC	=	0x6234
                           006235   815 _I2CIO	=	0x6235
                           006243   816 _OBSSEL0	=	0x6243
                           006244   817 _OBSSEL1	=	0x6244
                           006245   818 _OBSSEL2	=	0x6245
                           006246   819 _OBSSEL3	=	0x6246
                           006247   820 _OBSSEL4	=	0x6247
                           006248   821 _OBSSEL5	=	0x6248
                           006249   822 _CHVER	=	0x6249
                           00624A   823 _CHIPID	=	0x624a
                           00624B   824 _TESTREG0	=	0x624b
                           006260   825 _DBGDATA	=	0x6260
                           006262   826 _SRCRC	=	0x6262
                           006264   827 _BATTMON	=	0x6264
                           006265   828 _IVCTRL	=	0x6265
                           006270   829 _FCTL	=	0x6270
                           006271   830 _FADDRL	=	0x6271
                           006272   831 _FADDRH	=	0x6272
                           006273   832 _FWDATA	=	0x6273
                           006276   833 _CHIPINFO0	=	0x6276
                           006277   834 _CHIPINFO1	=	0x6277
                           006281   835 _IRCTL	=	0x6281
                           006290   836 _CLD	=	0x6290
                           0062A0   837 _XX_T1CCTL0	=	0x62a0
                           0062A1   838 _XX_T1CCTL1	=	0x62a1
                           0062A2   839 _XX_T1CCTL2	=	0x62a2
                           0062A3   840 _T1CCTL3	=	0x62a3
                           0062A4   841 _T1CCTL4	=	0x62a4
                           0062A6   842 _XX_T1CC0L	=	0x62a6
                           0062A7   843 _XX_T1CC0H	=	0x62a7
                           0062A8   844 _XX_T1CC1L	=	0x62a8
                           0062A9   845 _XX_T1CC1H	=	0x62a9
                           0062AA   846 _XX_T1CC2L	=	0x62aa
                           0062AB   847 _XX_T1CC2H	=	0x62ab
                           0062AC   848 _T1CC3L	=	0x62ac
                           0062AD   849 _T1CC3H	=	0x62ad
                           0062AE   850 _T1CC4L	=	0x62ae
                           0062AF   851 _T1CC4H	=	0x62af
                           0062B0   852 _STCC	=	0x62b0
                           0062B1   853 _STCS	=	0x62b1
                           0062B2   854 _STCV0	=	0x62b2
                           0062B3   855 _STCV1	=	0x62b3
                           0062B4   856 _STCV2	=	0x62b4
                           0062C0   857 _OPAMPC	=	0x62c0
                           0062C1   858 _OPAMPS	=	0x62c1
                           0062D0   859 _CMPCTL	=	0x62d0
                           006000   860 _RFCORE_RAM	=	0x6000
                           006000   861 _RXFIFO	=	0x6000
                           006080   862 _TXFIFO	=	0x6080
                           006100   863 _SRC_ADDR_TABLE	=	0x6100
                           006160   864 _SRCRESMASK0	=	0x6160
                           006161   865 _SRCRESMASK1	=	0x6161
                           006162   866 _SRCRESMASK2	=	0x6162
                           006163   867 _SRCRESINDEX	=	0x6163
                           006164   868 _SRCEXTPENDEN0	=	0x6164
                           006165   869 _SRCEXTPENDEN1	=	0x6165
                           006166   870 _SRCEXTPENDEN2	=	0x6166
                           006167   871 _SRCSHORTPENDEN0	=	0x6167
                           006168   872 _SRCSHORTPENDEN1	=	0x6168
                           006169   873 _SRCSHORTPENDEN2	=	0x6169
                           00616A   874 _EXT_ADDR0	=	0x616a
                           00616B   875 _EXT_ADDR1	=	0x616b
                           00616C   876 _EXT_ADDR2	=	0x616c
                           00616D   877 _EXT_ADDR3	=	0x616d
                           00616E   878 _EXT_ADDR4	=	0x616e
                           00616F   879 _EXT_ADDR5	=	0x616f
                           006170   880 _EXT_ADDR6	=	0x6170
                           006171   881 _EXT_ADDR7	=	0x6171
                           006172   882 _PAN_ID0	=	0x6172
                           006173   883 _PAN_ID1	=	0x6173
                           006174   884 _SHORT_ADDR0	=	0x6174
                           006175   885 _SHORT_ADDR1	=	0x6175
                           006180   886 _FRMFILT0	=	0x6180
                           006181   887 _FRMFILT1	=	0x6181
                           006182   888 _SRCMATCH	=	0x6182
                           006183   889 _SRCSHORTEN0	=	0x6183
                           006184   890 _SRCSHORTEN1	=	0x6184
                           006185   891 _SRCSHORTEN2	=	0x6185
                           006186   892 _SRCEXTEN0	=	0x6186
                           006187   893 _SRCEXTEN1	=	0x6187
                           006188   894 _SRCEXTEN2	=	0x6188
                           006189   895 _FRMCTRL0	=	0x6189
                           00618A   896 _FRMCTRL1	=	0x618a
                           00618B   897 _RXENABLE	=	0x618b
                           00618C   898 _RXMASKSET	=	0x618c
                           00618D   899 _RXMASKCLR	=	0x618d
                           00618E   900 _FREQTUNE	=	0x618e
                           00618F   901 _FREQCTRL	=	0x618f
                           006190   902 _TXPOWER	=	0x6190
                           006191   903 _TXCTRL	=	0x6191
                           006192   904 _FSMSTAT0	=	0x6192
                           006193   905 _FSMSTAT1	=	0x6193
                           006194   906 _FIFOPCTRL	=	0x6194
                           006195   907 _FSMCTRL	=	0x6195
                           006196   908 _CCACTRL0	=	0x6196
                           006197   909 _CCACTRL1	=	0x6197
                           006198   910 _RSSI	=	0x6198
                           006199   911 _RSSISTAT	=	0x6199
                           00619A   912 _RXFIRST	=	0x619a
                           00619B   913 _RXFIFOCNT	=	0x619b
                           00619C   914 _TXFIFOCNT	=	0x619c
                           00619D   915 _RXFIRST_PTR	=	0x619d
                           00619E   916 _RXLAST_PTR	=	0x619e
                           00619F   917 _RXP1_PTR	=	0x619f
                           0061A1   918 _TXFIRST_PTR	=	0x61a1
                           0061A2   919 _TXLAST_PTR	=	0x61a2
                           0061A3   920 _RFIRQM0	=	0x61a3
                           0061A4   921 _RFIRQM1	=	0x61a4
                           0061A5   922 _RFERRM	=	0x61a5
                           0061A7   923 _RFRND	=	0x61a7
                           0061A8   924 _MDMCTRL0	=	0x61a8
                           0061A9   925 _MDMCTRL1	=	0x61a9
                           0061AA   926 _FREQEST	=	0x61aa
                           0061AB   927 _RXCTRL	=	0x61ab
                           0061AC   928 _FSCTRL	=	0x61ac
                           0061AD   929 _FSCAL0	=	0x61ad
                           0061AE   930 _FSCAL1	=	0x61ae
                           0061AF   931 _FSCAL2	=	0x61af
                           0061B0   932 _FSCAL3	=	0x61b0
                           0061B1   933 _AGCCTRL0	=	0x61b1
                           0061B2   934 _AGCCTRL1	=	0x61b2
                           0061B3   935 _AGCCTRL2	=	0x61b3
                           0061B4   936 _AGCCTRL3	=	0x61b4
                           0061B5   937 _ADCTEST0	=	0x61b5
                           0061B6   938 _ADCTEST1	=	0x61b6
                           0061B7   939 _ADCTEST2	=	0x61b7
                           0061B8   940 _MDMTEST0	=	0x61b8
                           0061B9   941 _MDMTEST1	=	0x61b9
                           0061BA   942 _DACTEST0	=	0x61ba
                           0061BB   943 _DACTEST1	=	0x61bb
                           0061BC   944 _DACTEST2	=	0x61bc
                           0061BD   945 _ATEST	=	0x61bd
                           0061BE   946 _PTEST0	=	0x61be
                           0061BF   947 _PTEST1	=	0x61bf
                           0061FA   948 _TXFILTCFG	=	0x61fa
                           0061EB   949 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   950 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   951 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   952 _CSPPROG0	=	0x61c0
                           0061C1   953 _CSPPROG1	=	0x61c1
                           0061C2   954 _CSPPROG2	=	0x61c2
                           0061C3   955 _CSPPROG3	=	0x61c3
                           0061C4   956 _CSPPROG4	=	0x61c4
                           0061C5   957 _CSPPROG5	=	0x61c5
                           0061C6   958 _CSPPROG6	=	0x61c6
                           0061C7   959 _CSPPROG7	=	0x61c7
                           0061C8   960 _CSPPROG8	=	0x61c8
                           0061C9   961 _CSPPROG9	=	0x61c9
                           0061CA   962 _CSPPROG10	=	0x61ca
                           0061CB   963 _CSPPROG11	=	0x61cb
                           0061CC   964 _CSPPROG12	=	0x61cc
                           0061CD   965 _CSPPROG13	=	0x61cd
                           0061CE   966 _CSPPROG14	=	0x61ce
                           0061CF   967 _CSPPROG15	=	0x61cf
                           0061D0   968 _CSPPROG16	=	0x61d0
                           0061D1   969 _CSPPROG17	=	0x61d1
                           0061D2   970 _CSPPROG18	=	0x61d2
                           0061D3   971 _CSPPROG19	=	0x61d3
                           0061D4   972 _CSPPROG20	=	0x61d4
                           0061D5   973 _CSPPROG21	=	0x61d5
                           0061D6   974 _CSPPROG22	=	0x61d6
                           0061D7   975 _CSPPROG23	=	0x61d7
                           0061E0   976 _CSPCTRL	=	0x61e0
                           0061E1   977 _CSPSTAT	=	0x61e1
                           0061E2   978 _CSPX	=	0x61e2
                           0061E3   979 _CSPY	=	0x61e3
                           0061E4   980 _CSPZ	=	0x61e4
                           0061E5   981 _CSPT	=	0x61e5
                           006200   982 _USBADDR	=	0x6200
                           006201   983 _USBPOW	=	0x6201
                           006202   984 _USBIIF	=	0x6202
                           006204   985 _USBOIF	=	0x6204
                           006206   986 _USBCIF	=	0x6206
                           006207   987 _USBIIE	=	0x6207
                           006209   988 _USBOIE	=	0x6209
                           00620B   989 _USBCIE	=	0x620b
                           00620C   990 _USBFRML	=	0x620c
                           00620D   991 _USBFRMH	=	0x620d
                           00620E   992 _USBINDEX	=	0x620e
                           00620F   993 _USBCTRL	=	0x620f
                           006210   994 _USBMAXI	=	0x6210
                           006211   995 _USBCS0	=	0x6211
                           006211   996 _USBCSIL	=	0x6211
                           006212   997 _USBCSIH	=	0x6212
                           006213   998 _USBMAXO	=	0x6213
                           006214   999 _USBCSOL	=	0x6214
                           006215  1000 _USBCSOH	=	0x6215
                           006216  1001 _USBCNT0	=	0x6216
                           006216  1002 _USBCNTL	=	0x6216
                           006217  1003 _USBCNTH	=	0x6217
                           006220  1004 _USBF0	=	0x6220
                           006222  1005 _USBF1	=	0x6222
                           006224  1006 _USBF2	=	0x6224
                           006226  1007 _USBF3	=	0x6226
                           006228  1008 _USBF4	=	0x6228
                           00622A  1009 _USBF5	=	0x622a
                           007080  1010 _X_P0	=	0x7080
                           007086  1011 _X_U0CSR	=	0x7086
                           007089  1012 _X_P0IFG	=	0x7089
                           00708A  1013 _X_P1IFG	=	0x708a
                           00708B  1014 _X_P2IFG	=	0x708b
                           00708C  1015 _X_PICTL	=	0x708c
                           00708D  1016 _X_P1IEN	=	0x708d
                           00708F  1017 _X_P0INP	=	0x708f
                           007090  1018 _X_P1	=	0x7090
                           007091  1019 _X_RFIRQF1	=	0x7091
                           007093  1020 _X_MPAGE	=	0x7093
                           007093  1021 _X__XPAGE	=	0x7093
                           007094  1022 _X_T2CTRL	=	0x7094
                           007095  1023 _X_ST0	=	0x7095
                           007096  1024 _X_ST1	=	0x7096
                           007097  1025 _X_ST2	=	0x7097
                           00709C  1026 _X_T2EVTCFG	=	0x709c
                           00709D  1027 _X_SLEEPSTA	=	0x709d
                           00709E  1028 _X_CLKCONSTA	=	0x709e
                           00709F  1029 _X_FMAP	=	0x709f
                           00709F  1030 _X_PSBANK	=	0x709f
                           0070A0  1031 _X_P2	=	0x70a0
                           0070A1  1032 _X_T2IRQF	=	0x70a1
                           0070A2  1033 _X_T2M0	=	0x70a2
                           0070A3  1034 _X_T2M1	=	0x70a3
                           0070A4  1035 _X_T2MOVF0	=	0x70a4
                           0070A5  1036 _X_T2MOVF1	=	0x70a5
                           0070A6  1037 _X_T2MOVF2	=	0x70a6
                           0070A7  1038 _X_T2IRQM	=	0x70a7
                           0070AB  1039 _X_P0IEN	=	0x70ab
                           0070AC  1040 _X_P2IEN	=	0x70ac
                           0070AD  1041 _X_STLOAD	=	0x70ad
                           0070AE  1042 _X_PMUX	=	0x70ae
                           0070AF  1043 _X_T1STAT	=	0x70af
                           0070B1  1044 _X_ENCDI	=	0x70b1
                           0070B2  1045 _X_ENCDO	=	0x70b2
                           0070B3  1046 _X_ENCCS	=	0x70b3
                           0070B4  1047 _X_ADCCON1	=	0x70b4
                           0070B5  1048 _X_ADCCON2	=	0x70b5
                           0070B6  1049 _X_ADCCON3	=	0x70b6
                           0070BA  1050 _X_ADCL	=	0x70ba
                           0070BB  1051 _X_ADCH	=	0x70bb
                           0070BC  1052 _X_RNDL	=	0x70bc
                           0070BD  1053 _X_RNDH	=	0x70bd
                           0070BE  1054 _X_SLEEPCMD	=	0x70be
                           0070BF  1055 _X_RFERRF	=	0x70bf
                           0070C1  1056 _X_U0DBUF	=	0x70c1
                           0070C2  1057 _X_U0BAUD	=	0x70c2
                           0070C3  1058 _X_T2MSEL	=	0x70c3
                           0070C4  1059 _X_U0UCR	=	0x70c4
                           0070C5  1060 _X_U0GCR	=	0x70c5
                           0070C6  1061 _X_CLKCONCMD	=	0x70c6
                           0070C7  1062 _X_MEMCTR	=	0x70c7
                           0070C9  1063 _X_WDCTL	=	0x70c9
                           0070CA  1064 _X_T3CNT	=	0x70ca
                           0070CB  1065 _X_T3CTL	=	0x70cb
                           0070CC  1066 _X_T3CCTL0	=	0x70cc
                           0070CD  1067 _X_T3CC0	=	0x70cd
                           0070CE  1068 _X_T3CCTL1	=	0x70ce
                           0070CF  1069 _X_T3CC1	=	0x70cf
                           0070D1  1070 _X_DMAIRQ	=	0x70d1
                           0070D2  1071 _X_DMA1CFGL	=	0x70d2
                           0070D3  1072 _X_DMA1CFGH	=	0x70d3
                           0070D4  1073 _X_DMA0CFGL	=	0x70d4
                           0070D5  1074 _X_DMA0CFGH	=	0x70d5
                           0070D6  1075 _X_DMAARM	=	0x70d6
                           0070D7  1076 _X_DMAREQ	=	0x70d7
                           0070D8  1077 _X_TIMIF	=	0x70d8
                           0070D9  1078 _X_RFD	=	0x70d9
                           0070DA  1079 _X_T1CC0L	=	0x70da
                           0070DB  1080 _X_T1CC0H	=	0x70db
                           0070DC  1081 _X_T1CC1L	=	0x70dc
                           0070DD  1082 _X_T1CC1H	=	0x70dd
                           0070DE  1083 _X_T1CC2L	=	0x70de
                           0070DF  1084 _X_T1CC2H	=	0x70df
                           0070E1  1085 _X_RFST	=	0x70e1
                           0070E2  1086 _X_T1CNTL	=	0x70e2
                           0070E3  1087 _X_T1CNTH	=	0x70e3
                           0070E4  1088 _X_T1CTL	=	0x70e4
                           0070E5  1089 _X_T1CCTL0	=	0x70e5
                           0070E6  1090 _X_T1CCTL1	=	0x70e6
                           0070E7  1091 _X_T1CCTL2	=	0x70e7
                           0070E9  1092 _X_RFIRQF0	=	0x70e9
                           0070EA  1093 _X_T4CNT	=	0x70ea
                           0070EB  1094 _X_T4CTL	=	0x70eb
                           0070EC  1095 _X_T4CCTL0	=	0x70ec
                           0070ED  1096 _X_T4CC0	=	0x70ed
                           0070EE  1097 _X_T4CCTL1	=	0x70ee
                           0070EF  1098 _X_T4CC1	=	0x70ef
                           0070F1  1099 _X_PERCFG	=	0x70f1
                           0070F2  1100 _X_APCFG	=	0x70f2
                           0070F3  1101 _X_P0SEL	=	0x70f3
                           0070F4  1102 _X_P1SEL	=	0x70f4
                           0070F5  1103 _X_P2SEL	=	0x70f5
                           0070F6  1104 _X_P1INP	=	0x70f6
                           0070F7  1105 _X_P2INP	=	0x70f7
                           0070F8  1106 _X_U1CSR	=	0x70f8
                           0070F9  1107 _X_U1DBUF	=	0x70f9
                           0070FA  1108 _X_U1BAUD	=	0x70fa
                           0070FB  1109 _X_U1UCR	=	0x70fb
                           0070FC  1110 _X_U1GCR	=	0x70fc
                           0070FD  1111 _X_P0DIR	=	0x70fd
                           0070FE  1112 _X_P1DIR	=	0x70fe
                           0070FF  1113 _X_P2DIR	=	0x70ff
                           007800  1114 _X_INFOPAGE	=	0x7800
                           00780C  1115 _X_IEEE_ADDR	=	0x780c
                                   1116 ;--------------------------------------------------------
                                   1117 ; absolute external ram data
                                   1118 ;--------------------------------------------------------
                                   1119 	.area XABS    (ABS,XDATA)
                                   1120 ;--------------------------------------------------------
                                   1121 ; external initialized ram data
                                   1122 ;--------------------------------------------------------
                                   1123 	.area XISEG   (XDATA)
                                   1124 	.area HOME    (CODE)
                                   1125 	.area GSINIT0 (CODE)
                                   1126 	.area GSINIT1 (CODE)
                                   1127 	.area GSINIT2 (CODE)
                                   1128 	.area GSINIT3 (CODE)
                                   1129 	.area GSINIT4 (CODE)
                                   1130 	.area GSINIT5 (CODE)
                                   1131 	.area GSINIT  (CODE)
                                   1132 	.area GSFINAL (CODE)
                                   1133 	.area CSEG    (CODE)
                                   1134 ;--------------------------------------------------------
                                   1135 ; global & static initialisations
                                   1136 ;--------------------------------------------------------
                                   1137 	.area HOME    (CODE)
                                   1138 	.area GSINIT  (CODE)
                                   1139 	.area GSFINAL (CODE)
                                   1140 	.area GSINIT  (CODE)
                                   1141 ;--------------------------------------------------------
                                   1142 ; Home
                                   1143 ;--------------------------------------------------------
                                   1144 	.area HOME    (CODE)
                                   1145 	.area HOME    (CODE)
                                   1146 ;--------------------------------------------------------
                                   1147 ; code
                                   1148 ;--------------------------------------------------------
                                   1149 	.area CSEG    (CODE)
                                   1150 ;------------------------------------------------------------
                                   1151 ;Allocation info for local variables in function 'get_channel'
                                   1152 ;------------------------------------------------------------
                                   1153 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:158: get_channel()
                                   1154 ;	-----------------------------------------
                                   1155 ;	 function get_channel
                                   1156 ;	-----------------------------------------
      000000                       1157 _get_channel:
                           000007  1158 	ar7 = 0x07
                           000006  1159 	ar6 = 0x06
                           000005  1160 	ar5 = 0x05
                           000004  1161 	ar4 = 0x04
                           000003  1162 	ar3 = 0x03
                           000002  1163 	ar2 = 0x02
                           000001  1164 	ar1 = 0x01
                           000000  1165 	ar0 = 0x00
                                   1166 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:160: return (uint8_t)((FREQCTRL + 44) / 5);
      000000 90 61 8F         [24] 1167 	mov	dptr,#_FREQCTRL
      000003 E0               [24] 1168 	movx	a,@dptr
      000004 FF               [12] 1169 	mov	r7,a
      000005 7E 00            [12] 1170 	mov	r6,#0x00
      000007 74 2C            [12] 1171 	mov	a,#0x2C
      000009 2F               [12] 1172 	add	a,r7
      00000A FF               [12] 1173 	mov	r7,a
      00000B E4               [12] 1174 	clr	a
      00000C 3E               [12] 1175 	addc	a,r6
      00000D FE               [12] 1176 	mov	r6,a
      00000E 74 05            [12] 1177 	mov	a,#0x05
      000010 C0 E0            [24] 1178 	push	acc
      000012 E4               [12] 1179 	clr	a
      000013 C0 E0            [24] 1180 	push	acc
      000015 8F 82            [24] 1181 	mov	dpl,r7
      000017 8E 83            [24] 1182 	mov	dph,r6
      000019 12r00r00         [24] 1183 	lcall	__divsint
      00001C AE 82            [24] 1184 	mov	r6,dpl
      00001E 15 81            [12] 1185 	dec	sp
      000020 15 81            [12] 1186 	dec	sp
      000022 8E 82            [24] 1187 	mov	dpl,r6
      000024 22               [24] 1188 	ret
                                   1189 ;------------------------------------------------------------
                                   1190 ;Allocation info for local variables in function 'set_channel'
                                   1191 ;------------------------------------------------------------
                                   1192 ;channel                   Allocated to registers r7 
                                   1193 ;------------------------------------------------------------
                                   1194 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:170: set_channel(uint8_t channel)
                                   1195 ;	-----------------------------------------
                                   1196 ;	 function set_channel
                                   1197 ;	-----------------------------------------
      000025                       1198 _set_channel:
      000025 AF 82            [24] 1199 	mov	r7,dpl
                                   1200 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:174: if((channel < CC2530_RF_CHANNEL_MIN) || (channel > CC2530_RF_CHANNEL_MAX)) {
      000027 BF 0B 00         [24] 1201 	cjne	r7,#0x0B,00109$
      00002A                       1202 00109$:
      00002A 40 05            [24] 1203 	jc	00101$
      00002C EF               [12] 1204 	mov	a,r7
      00002D 24 E5            [12] 1205 	add	a,#0xff - 0x1A
      00002F 50 04            [24] 1206 	jnc	00102$
      000031                       1207 00101$:
                                   1208 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:175: return CC2530_RF_CHANNEL_SET_ERROR;
      000031 75 82 FF         [24] 1209 	mov	dpl,#0xFF
      000034 22               [24] 1210 	ret
      000035                       1211 00102$:
                                   1212 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:180: off();
      000035 C0 07            [24] 1213 	push	ar7
      000037 12r04rFF         [24] 1214 	lcall	_off
      00003A D0 07            [24] 1215 	pop	ar7
                                   1216 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:182: + (channel - CC2530_RF_CHANNEL_MIN) * CC2530_RF_CHANNEL_SPACING);
      00003C EF               [12] 1217 	mov	a,r7
      00003D 24 F5            [12] 1218 	add	a,#0xF5
      00003F 75 F0 05         [24] 1219 	mov	b,#0x05
      000042 A4               [48] 1220 	mul	ab
      000043 90 61 8F         [24] 1221 	mov	dptr,#_FREQCTRL
      000046 24 0B            [12] 1222 	add	a,#0x0B
      000048 F0               [24] 1223 	movx	@dptr,a
                                   1224 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:183: on();
      000049 C0 07            [24] 1225 	push	ar7
      00004B 12r04rEA         [24] 1226 	lcall	_on
      00004E D0 07            [24] 1227 	pop	ar7
                                   1228 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:185: return (int8_t)channel;
      000050 8F 82            [24] 1229 	mov	dpl,r7
      000052 22               [24] 1230 	ret
                                   1231 ;------------------------------------------------------------
                                   1232 ;Allocation info for local variables in function 'get_pan_id'
                                   1233 ;------------------------------------------------------------
                                   1234 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:189: get_pan_id(void)
                                   1235 ;	-----------------------------------------
                                   1236 ;	 function get_pan_id
                                   1237 ;	-----------------------------------------
      000053                       1238 _get_pan_id:
                                   1239 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:191: return (radio_value_t)(PAN_ID1 << 8 | PAN_ID0);
      000053 90 61 73         [24] 1240 	mov	dptr,#_PAN_ID1
      000056 E0               [24] 1241 	movx	a,@dptr
      000057 FE               [12] 1242 	mov	r6,a
      000058 7F 00            [12] 1243 	mov	r7,#0x00
      00005A 90 61 72         [24] 1244 	mov	dptr,#_PAN_ID0
      00005D E0               [24] 1245 	movx	a,@dptr
      00005E 7C 00            [12] 1246 	mov	r4,#0x00
      000060 42 07            [12] 1247 	orl	ar7,a
      000062 EC               [12] 1248 	mov	a,r4
      000063 42 06            [12] 1249 	orl	ar6,a
      000065 8F 82            [24] 1250 	mov	dpl,r7
      000067 8E 83            [24] 1251 	mov	dph,r6
      000069 22               [24] 1252 	ret
                                   1253 ;------------------------------------------------------------
                                   1254 ;Allocation info for local variables in function 'set_pan_id'
                                   1255 ;------------------------------------------------------------
                                   1256 ;pan                       Allocated to registers r6 r7 
                                   1257 ;------------------------------------------------------------
                                   1258 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:195: set_pan_id(uint16_t pan)
                                   1259 ;	-----------------------------------------
                                   1260 ;	 function set_pan_id
                                   1261 ;	-----------------------------------------
      00006A                       1262 _set_pan_id:
      00006A AE 82            [24] 1263 	mov	r6,dpl
      00006C AF 83            [24] 1264 	mov	r7,dph
                                   1265 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:197: PAN_ID0 = pan & 0xFF;
      00006E 8E 04            [24] 1266 	mov	ar4,r6
      000070 90 61 72         [24] 1267 	mov	dptr,#_PAN_ID0
      000073 EC               [12] 1268 	mov	a,r4
      000074 F0               [24] 1269 	movx	@dptr,a
                                   1270 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:198: PAN_ID1 = pan >> 8;
      000075 90 61 73         [24] 1271 	mov	dptr,#_PAN_ID1
      000078 EF               [12] 1272 	mov	a,r7
      000079 F0               [24] 1273 	movx	@dptr,a
      00007A 22               [24] 1274 	ret
                                   1275 ;------------------------------------------------------------
                                   1276 ;Allocation info for local variables in function 'get_short_addr'
                                   1277 ;------------------------------------------------------------
                                   1278 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:202: get_short_addr(void)
                                   1279 ;	-----------------------------------------
                                   1280 ;	 function get_short_addr
                                   1281 ;	-----------------------------------------
      00007B                       1282 _get_short_addr:
                                   1283 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:204: return (radio_value_t)(SHORT_ADDR1 << 8 | SHORT_ADDR0);
      00007B 90 61 75         [24] 1284 	mov	dptr,#_SHORT_ADDR1
      00007E E0               [24] 1285 	movx	a,@dptr
      00007F FE               [12] 1286 	mov	r6,a
      000080 7F 00            [12] 1287 	mov	r7,#0x00
      000082 90 61 74         [24] 1288 	mov	dptr,#_SHORT_ADDR0
      000085 E0               [24] 1289 	movx	a,@dptr
      000086 7C 00            [12] 1290 	mov	r4,#0x00
      000088 42 07            [12] 1291 	orl	ar7,a
      00008A EC               [12] 1292 	mov	a,r4
      00008B 42 06            [12] 1293 	orl	ar6,a
      00008D 8F 82            [24] 1294 	mov	dpl,r7
      00008F 8E 83            [24] 1295 	mov	dph,r6
      000091 22               [24] 1296 	ret
                                   1297 ;------------------------------------------------------------
                                   1298 ;Allocation info for local variables in function 'set_short_addr'
                                   1299 ;------------------------------------------------------------
                                   1300 ;addr                      Allocated to registers r6 r7 
                                   1301 ;------------------------------------------------------------
                                   1302 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:208: set_short_addr(uint16_t addr)
                                   1303 ;	-----------------------------------------
                                   1304 ;	 function set_short_addr
                                   1305 ;	-----------------------------------------
      000092                       1306 _set_short_addr:
      000092 AE 82            [24] 1307 	mov	r6,dpl
      000094 AF 83            [24] 1308 	mov	r7,dph
                                   1309 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:210: SHORT_ADDR0 = addr & 0xFF;
      000096 8E 04            [24] 1310 	mov	ar4,r6
      000098 90 61 74         [24] 1311 	mov	dptr,#_SHORT_ADDR0
      00009B EC               [12] 1312 	mov	a,r4
      00009C F0               [24] 1313 	movx	@dptr,a
                                   1314 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:211: SHORT_ADDR1 = addr >> 8;
      00009D 90 61 75         [24] 1315 	mov	dptr,#_SHORT_ADDR1
      0000A0 EF               [12] 1316 	mov	a,r7
      0000A1 F0               [24] 1317 	movx	@dptr,a
      0000A2 22               [24] 1318 	ret
                                   1319 ;------------------------------------------------------------
                                   1320 ;Allocation info for local variables in function 'get_rssi'
                                   1321 ;------------------------------------------------------------
                                   1322 ;rssi                      Allocated to registers r7 
                                   1323 ;------------------------------------------------------------
                                   1324 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:222: get_rssi(void)
                                   1325 ;	-----------------------------------------
                                   1326 ;	 function get_rssi
                                   1327 ;	-----------------------------------------
      0000A3                       1328 _get_rssi:
                                   1329 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:227: if(RXENABLE == 0) {
      0000A3 90 61 8B         [24] 1330 	mov	dptr,#_RXENABLE
      0000A6 E0               [24] 1331 	movx	a,@dptr
      0000A7 E0               [24] 1332 	movx	a,@dptr
      0000A8 70 06            [24] 1333 	jnz	00103$
                                   1334 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:228: rf_flags |= WAS_OFF;
      0000AA 43*00 10         [24] 1335 	orl	_rf_flags,#0x10
                                   1336 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:229: on();
      0000AD 12r04rEA         [24] 1337 	lcall	_on
                                   1338 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:233: while((RSSISTAT & RSSISTAT_RSSI_VALID) == 0);
      0000B0                       1339 00103$:
      0000B0 90 61 99         [24] 1340 	mov	dptr,#_RSSISTAT
      0000B3 E0               [24] 1341 	movx	a,@dptr
      0000B4 FF               [12] 1342 	mov	r7,a
      0000B5 30 E0 F8         [24] 1343 	jnb	acc.0,00103$
                                   1344 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:235: rssi = (radio_value_t)RSSI - RSSI_OFFSET;
      0000B8 90 61 98         [24] 1345 	mov	dptr,#_RSSI
      0000BB E0               [24] 1346 	movx	a,@dptr
      0000BC 24 B7            [12] 1347 	add	a,#0xB7
      0000BE FF               [12] 1348 	mov	r7,a
                                   1349 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:238: if((rf_flags & WAS_OFF) == WAS_OFF) {
      0000BF 74 10            [12] 1350 	mov	a,#0x10
      0000C1 55*00            [12] 1351 	anl	a,_rf_flags
      0000C3 FE               [12] 1352 	mov	r6,a
      0000C4 BE 10 0E         [24] 1353 	cjne	r6,#0x10,00107$
                                   1354 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:239: rf_flags &= ~WAS_OFF;
      0000C7 AE*00            [24] 1355 	mov	r6,_rf_flags
      0000C9 74 EF            [12] 1356 	mov	a,#0xEF
      0000CB 5E               [12] 1357 	anl	a,r6
      0000CC F5*00            [12] 1358 	mov	_rf_flags,a
                                   1359 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:240: off();
      0000CE C0 07            [24] 1360 	push	ar7
      0000D0 12r04rFF         [24] 1361 	lcall	_off
      0000D3 D0 07            [24] 1362 	pop	ar7
      0000D5                       1363 00107$:
                                   1364 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:243: return rssi;
      0000D5 EF               [12] 1365 	mov	a,r7
      0000D6 33               [12] 1366 	rlc	a
      0000D7 95 E0            [12] 1367 	subb	a,acc
      0000D9 8F 82            [24] 1368 	mov	dpl,r7
      0000DB F5 83            [12] 1369 	mov	dph,a
      0000DD 22               [24] 1370 	ret
                                   1371 ;------------------------------------------------------------
                                   1372 ;Allocation info for local variables in function 'get_cca_threshold'
                                   1373 ;------------------------------------------------------------
                                   1374 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:248: get_cca_threshold(void)
                                   1375 ;	-----------------------------------------
                                   1376 ;	 function get_cca_threshold
                                   1377 ;	-----------------------------------------
      0000DE                       1378 _get_cca_threshold:
                                   1379 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:250: return (int8_t)CCACTRL0 - RSSI_OFFSET;
      0000DE 90 61 96         [24] 1380 	mov	dptr,#_CCACTRL0
      0000E1 E0               [24] 1381 	movx	a,@dptr
      0000E2 FF               [12] 1382 	mov	r7,a
      0000E3 33               [12] 1383 	rlc	a
      0000E4 95 E0            [12] 1384 	subb	a,acc
      0000E6 FE               [12] 1385 	mov	r6,a
      0000E7 EF               [12] 1386 	mov	a,r7
      0000E8 24 B7            [12] 1387 	add	a,#0xB7
      0000EA FF               [12] 1388 	mov	r7,a
      0000EB EE               [12] 1389 	mov	a,r6
      0000EC 34 FF            [12] 1390 	addc	a,#0xFF
      0000EE 8F 82            [24] 1391 	mov	dpl,r7
      0000F0 F5 83            [12] 1392 	mov	dph,a
      0000F2 22               [24] 1393 	ret
                                   1394 ;------------------------------------------------------------
                                   1395 ;Allocation info for local variables in function 'set_cca_threshold'
                                   1396 ;------------------------------------------------------------
                                   1397 ;value                     Allocated to registers r6 r7 
                                   1398 ;------------------------------------------------------------
                                   1399 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:255: set_cca_threshold(radio_value_t value)
                                   1400 ;	-----------------------------------------
                                   1401 ;	 function set_cca_threshold
                                   1402 ;	-----------------------------------------
      0000F3                       1403 _set_cca_threshold:
      0000F3 AE 82            [24] 1404 	mov	r6,dpl
                                   1405 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:257: CCACTRL0 = (value + RSSI_OFFSET) & 0xFF;
      0000F5 90 61 96         [24] 1406 	mov	dptr,#_CCACTRL0
      0000F8 74 49            [12] 1407 	mov	a,#0x49
      0000FA 2E               [12] 1408 	add	a,r6
      0000FB F0               [24] 1409 	movx	@dptr,a
      0000FC 22               [24] 1410 	ret
                                   1411 ;------------------------------------------------------------
                                   1412 ;Allocation info for local variables in function 'get_tx_power'
                                   1413 ;------------------------------------------------------------
                                   1414 ;i                         Allocated to registers r5 r6 
                                   1415 ;reg_val                   Allocated to registers r7 
                                   1416 ;sloc0                     Allocated to stack - sp -1
                                   1417 ;------------------------------------------------------------
                                   1418 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:262: get_tx_power(void)
                                   1419 ;	-----------------------------------------
                                   1420 ;	 function get_tx_power
                                   1421 ;	-----------------------------------------
      0000FD                       1422 _get_tx_power:
      0000FD 05 81            [12] 1423 	inc	sp
      0000FF 05 81            [12] 1424 	inc	sp
                                   1425 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:265: uint8_t reg_val = TXPOWER;
      000101 90 61 90         [24] 1426 	mov	dptr,#_TXPOWER
      000104 E0               [24] 1427 	movx	a,@dptr
      000105 FF               [12] 1428 	mov	r7,a
                                   1429 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:267: if(TXCTRL == CC2530_RF_TX_POWER_TXCTRL_MIN_VAL) {
      000106 90 61 91         [24] 1430 	mov	dptr,#_TXCTRL
      000109 E0               [24] 1431 	movx	a,@dptr
      00010A FE               [12] 1432 	mov	r6,a
      00010B BE 09 10         [24] 1433 	cjne	r6,#0x09,00112$
                                   1434 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:268: return OUTPUT_POWER_MIN;
      00010E 90r00r30         [24] 1435 	mov	dptr,#(_output_power + 0x0030)
      000111 E4               [12] 1436 	clr	a
      000112 93               [24] 1437 	movc	a,@a+dptr
      000113 FD               [12] 1438 	mov	r5,a
      000114 A3               [24] 1439 	inc	dptr
      000115 E4               [12] 1440 	clr	a
      000116 93               [24] 1441 	movc	a,@a+dptr
      000117 FE               [12] 1442 	mov	r6,a
      000118 8D 82            [24] 1443 	mov	dpl,r5
      00011A 8E 83            [24] 1444 	mov	dph,r6
                                   1445 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:277: for(i = 0; i < OUTPUT_CONFIG_COUNT; i++) {
      00011C 80 66            [24] 1446 	sjmp	00108$
      00011E                       1447 00112$:
      00011E 7D 00            [12] 1448 	mov	r5,#0x00
      000120 7E 00            [12] 1449 	mov	r6,#0x00
      000122 7B 00            [12] 1450 	mov	r3,#0x00
      000124 7C 00            [12] 1451 	mov	r4,#0x00
      000126                       1452 00106$:
                                   1453 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:278: if(reg_val >= output_power[i].txpower_val) {
      000126 A8 81            [24] 1454 	mov	r0,sp
      000128 18               [12] 1455 	dec	r0
      000129 EB               [12] 1456 	mov	a,r3
      00012A 24r00            [12] 1457 	add	a,#_output_power
      00012C F6               [12] 1458 	mov	@r0,a
      00012D EC               [12] 1459 	mov	a,r4
      00012E 34s00            [12] 1460 	addc	a,#(_output_power >> 8)
      000130 08               [12] 1461 	inc	r0
      000131 F6               [12] 1462 	mov	@r0,a
      000132 A8 81            [24] 1463 	mov	r0,sp
      000134 18               [12] 1464 	dec	r0
      000135 86 82            [24] 1465 	mov	dpl,@r0
      000137 08               [12] 1466 	inc	r0
      000138 86 83            [24] 1467 	mov	dph,@r0
      00013A A3               [24] 1468 	inc	dptr
      00013B A3               [24] 1469 	inc	dptr
      00013C E4               [12] 1470 	clr	a
      00013D 93               [24] 1471 	movc	a,@a+dptr
      00013E FA               [12] 1472 	mov	r2,a
      00013F C3               [12] 1473 	clr	c
      000140 EF               [12] 1474 	mov	a,r7
      000141 9A               [12] 1475 	subb	a,r2
      000142 40 1B            [24] 1476 	jc	00107$
                                   1477 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:279: return output_power[i].power;
      000144 A8 81            [24] 1478 	mov	r0,sp
      000146 18               [12] 1479 	dec	r0
      000147 86 82            [24] 1480 	mov	dpl,@r0
      000149 08               [12] 1481 	inc	r0
      00014A 86 83            [24] 1482 	mov	dph,@r0
      00014C E4               [12] 1483 	clr	a
      00014D 93               [24] 1484 	movc	a,@a+dptr
      00014E 18               [12] 1485 	dec	r0
      00014F F6               [12] 1486 	mov	@r0,a
      000150 A3               [24] 1487 	inc	dptr
      000151 E4               [12] 1488 	clr	a
      000152 93               [24] 1489 	movc	a,@a+dptr
      000153 08               [12] 1490 	inc	r0
      000154 F6               [12] 1491 	mov	@r0,a
      000155 A8 81            [24] 1492 	mov	r0,sp
      000157 18               [12] 1493 	dec	r0
      000158 86 82            [24] 1494 	mov	dpl,@r0
      00015A 08               [12] 1495 	inc	r0
      00015B 86 83            [24] 1496 	mov	dph,@r0
      00015D 80 25            [24] 1497 	sjmp	00108$
      00015F                       1498 00107$:
                                   1499 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:277: for(i = 0; i < OUTPUT_CONFIG_COUNT; i++) {
      00015F 74 03            [12] 1500 	mov	a,#0x03
      000161 2B               [12] 1501 	add	a,r3
      000162 FB               [12] 1502 	mov	r3,a
      000163 E4               [12] 1503 	clr	a
      000164 3C               [12] 1504 	addc	a,r4
      000165 FC               [12] 1505 	mov	r4,a
      000166 0D               [12] 1506 	inc	r5
      000167 BD 00 01         [24] 1507 	cjne	r5,#0x00,00125$
      00016A 0E               [12] 1508 	inc	r6
      00016B                       1509 00125$:
      00016B C3               [12] 1510 	clr	c
      00016C ED               [12] 1511 	mov	a,r5
      00016D 94 11            [12] 1512 	subb	a,#0x11
      00016F EE               [12] 1513 	mov	a,r6
      000170 64 80            [12] 1514 	xrl	a,#0x80
      000172 94 80            [12] 1515 	subb	a,#0x80
      000174 40 B0            [24] 1516 	jc	00106$
                                   1517 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:282: return OUTPUT_POWER_MIN;
      000176 90r00r30         [24] 1518 	mov	dptr,#(_output_power + 0x0030)
      000179 E4               [12] 1519 	clr	a
      00017A 93               [24] 1520 	movc	a,@a+dptr
      00017B FE               [12] 1521 	mov	r6,a
      00017C A3               [24] 1522 	inc	dptr
      00017D E4               [12] 1523 	clr	a
      00017E 93               [24] 1524 	movc	a,@a+dptr
      00017F FF               [12] 1525 	mov	r7,a
      000180 8E 82            [24] 1526 	mov	dpl,r6
      000182 8F 83            [24] 1527 	mov	dph,r7
      000184                       1528 00108$:
      000184 15 81            [12] 1529 	dec	sp
      000186 15 81            [12] 1530 	dec	sp
      000188 22               [24] 1531 	ret
                                   1532 ;------------------------------------------------------------
                                   1533 ;Allocation info for local variables in function 'set_tx_power'
                                   1534 ;------------------------------------------------------------
                                   1535 ;power                     Allocated to registers r6 r7 
                                   1536 ;i                         Allocated to registers r4 r5 
                                   1537 ;------------------------------------------------------------
                                   1538 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:292: set_tx_power(radio_value_t power)
                                   1539 ;	-----------------------------------------
                                   1540 ;	 function set_tx_power
                                   1541 ;	-----------------------------------------
      000189                       1542 _set_tx_power:
      000189 AE 82            [24] 1543 	mov	r6,dpl
      00018B AF 83            [24] 1544 	mov	r7,dph
                                   1545 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:296: if(power <= output_power[OUTPUT_CONFIG_COUNT - 1].power) {
      00018D 90r00r30         [24] 1546 	mov	dptr,#(_output_power + 0x0030)
      000190 E4               [12] 1547 	clr	a
      000191 93               [24] 1548 	movc	a,@a+dptr
      000192 FC               [12] 1549 	mov	r4,a
      000193 A3               [24] 1550 	inc	dptr
      000194 E4               [12] 1551 	clr	a
      000195 93               [24] 1552 	movc	a,@a+dptr
      000196 FD               [12] 1553 	mov	r5,a
      000197 C3               [12] 1554 	clr	c
      000198 EC               [12] 1555 	mov	a,r4
      000199 9E               [12] 1556 	subb	a,r6
      00019A ED               [12] 1557 	mov	a,r5
      00019B 64 80            [12] 1558 	xrl	a,#0x80
      00019D 8F F0            [24] 1559 	mov	b,r7
      00019F 63 F0 80         [24] 1560 	xrl	b,#0x80
      0001A2 95 F0            [12] 1561 	subb	a,b
      0001A4 40 10            [24] 1562 	jc	00112$
                                   1563 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:297: TXCTRL = CC2530_RF_TX_POWER_TXCTRL_MIN_VAL;
      0001A6 90 61 91         [24] 1564 	mov	dptr,#_TXCTRL
      0001A9 74 09            [12] 1565 	mov	a,#0x09
      0001AB F0               [24] 1566 	movx	@dptr,a
                                   1567 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:298: TXPOWER = output_power[OUTPUT_CONFIG_COUNT - 1].txpower_val;
      0001AC 90r00r32         [24] 1568 	mov	dptr,#(_output_power + 0x0032)
      0001AF E4               [12] 1569 	clr	a
      0001B0 93               [24] 1570 	movc	a,@a+dptr
      0001B1 90 61 90         [24] 1571 	mov	dptr,#_TXPOWER
      0001B4 F0               [24] 1572 	movx	@dptr,a
                                   1573 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:299: return;
                                   1574 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:302: for(i = OUTPUT_CONFIG_COUNT - 2; i >= 0; --i) {
      0001B5 22               [24] 1575 	ret
      0001B6                       1576 00112$:
      0001B6 7C 0F            [12] 1577 	mov	r4,#0x0F
      0001B8 7D 00            [12] 1578 	mov	r5,#0x00
      0001BA 7A 2D            [12] 1579 	mov	r2,#0x2D
      0001BC 7B 00            [12] 1580 	mov	r3,#0x00
      0001BE                       1581 00106$:
                                   1582 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:303: if(power <= output_power[i].power) {
      0001BE EA               [12] 1583 	mov	a,r2
      0001BF 24r00            [12] 1584 	add	a,#_output_power
      0001C1 F5 82            [12] 1585 	mov	dpl,a
      0001C3 EB               [12] 1586 	mov	a,r3
      0001C4 34s00            [12] 1587 	addc	a,#(_output_power >> 8)
      0001C6 F5 83            [12] 1588 	mov	dph,a
      0001C8 E4               [12] 1589 	clr	a
      0001C9 93               [24] 1590 	movc	a,@a+dptr
      0001CA F8               [12] 1591 	mov	r0,a
      0001CB A3               [24] 1592 	inc	dptr
      0001CC E4               [12] 1593 	clr	a
      0001CD 93               [24] 1594 	movc	a,@a+dptr
      0001CE F9               [12] 1595 	mov	r1,a
      0001CF C3               [12] 1596 	clr	c
      0001D0 E8               [12] 1597 	mov	a,r0
      0001D1 9E               [12] 1598 	subb	a,r6
      0001D2 E9               [12] 1599 	mov	a,r1
      0001D3 64 80            [12] 1600 	xrl	a,#0x80
      0001D5 8F F0            [24] 1601 	mov	b,r7
      0001D7 63 F0 80         [24] 1602 	xrl	b,#0x80
      0001DA 95 F0            [12] 1603 	subb	a,b
      0001DC 40 1B            [24] 1604 	jc	00107$
                                   1605 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:305: TXCTRL = CC2530_RF_TX_POWER_TXCTRL_DEF_VAL;
      0001DE 90 61 91         [24] 1606 	mov	dptr,#_TXCTRL
      0001E1 74 69            [12] 1607 	mov	a,#0x69
      0001E3 F0               [24] 1608 	movx	@dptr,a
                                   1609 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:306: TXPOWER = output_power[i].txpower_val;
      0001E4 EA               [12] 1610 	mov	a,r2
      0001E5 24r00            [12] 1611 	add	a,#_output_power
      0001E7 F8               [12] 1612 	mov	r0,a
      0001E8 EB               [12] 1613 	mov	a,r3
      0001E9 34s00            [12] 1614 	addc	a,#(_output_power >> 8)
      0001EB F9               [12] 1615 	mov	r1,a
      0001EC 88 82            [24] 1616 	mov	dpl,r0
      0001EE 89 83            [24] 1617 	mov	dph,r1
      0001F0 A3               [24] 1618 	inc	dptr
      0001F1 A3               [24] 1619 	inc	dptr
      0001F2 E4               [12] 1620 	clr	a
      0001F3 93               [24] 1621 	movc	a,@a+dptr
      0001F4 90 61 90         [24] 1622 	mov	dptr,#_TXPOWER
      0001F7 F0               [24] 1623 	movx	@dptr,a
                                   1624 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:307: return;
      0001F8 22               [24] 1625 	ret
      0001F9                       1626 00107$:
                                   1627 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:302: for(i = OUTPUT_CONFIG_COUNT - 2; i >= 0; --i) {
      0001F9 EA               [12] 1628 	mov	a,r2
      0001FA 24 FD            [12] 1629 	add	a,#0xFD
      0001FC FA               [12] 1630 	mov	r2,a
      0001FD EB               [12] 1631 	mov	a,r3
      0001FE 34 FF            [12] 1632 	addc	a,#0xFF
      000200 FB               [12] 1633 	mov	r3,a
      000201 1C               [12] 1634 	dec	r4
      000202 BC FF 01         [24] 1635 	cjne	r4,#0xFF,00121$
      000205 1D               [12] 1636 	dec	r5
      000206                       1637 00121$:
      000206 ED               [12] 1638 	mov	a,r5
      000207 30 E7 B4         [24] 1639 	jnb	acc.7,00106$
      00020A 22               [24] 1640 	ret
                                   1641 ;------------------------------------------------------------
                                   1642 ;Allocation info for local variables in function 'set_frame_filtering'
                                   1643 ;------------------------------------------------------------
                                   1644 ;enable                    Allocated to registers r7 
                                   1645 ;------------------------------------------------------------
                                   1646 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:313: set_frame_filtering(uint8_t enable)
                                   1647 ;	-----------------------------------------
                                   1648 ;	 function set_frame_filtering
                                   1649 ;	-----------------------------------------
      00020B                       1650 _set_frame_filtering:
                                   1651 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:315: if(enable) {
      00020B E5 82            [12] 1652 	mov	a,dpl
      00020D FF               [12] 1653 	mov	r7,a
      00020E 60 0A            [24] 1654 	jz	00102$
                                   1655 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:316: FRMFILT0 |= FRMFILT0_FRAME_FILTER_EN;
      000210 90 61 80         [24] 1656 	mov	dptr,#_FRMFILT0
      000213 E0               [24] 1657 	movx	a,@dptr
      000214 FF               [12] 1658 	mov	r7,a
      000215 74 01            [12] 1659 	mov	a,#0x01
      000217 4F               [12] 1660 	orl	a,r7
      000218 F0               [24] 1661 	movx	@dptr,a
      000219 22               [24] 1662 	ret
      00021A                       1663 00102$:
                                   1664 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:318: FRMFILT0 &= ~FRMFILT0_FRAME_FILTER_EN;
      00021A 90 61 80         [24] 1665 	mov	dptr,#_FRMFILT0
      00021D E0               [24] 1666 	movx	a,@dptr
      00021E FF               [12] 1667 	mov	r7,a
      00021F 74 FE            [12] 1668 	mov	a,#0xFE
      000221 5F               [12] 1669 	anl	a,r7
      000222 F0               [24] 1670 	movx	@dptr,a
      000223 22               [24] 1671 	ret
                                   1672 ;------------------------------------------------------------
                                   1673 ;Allocation info for local variables in function 'set_auto_ack'
                                   1674 ;------------------------------------------------------------
                                   1675 ;enable                    Allocated to registers r7 
                                   1676 ;------------------------------------------------------------
                                   1677 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:323: set_auto_ack(uint8_t enable)
                                   1678 ;	-----------------------------------------
                                   1679 ;	 function set_auto_ack
                                   1680 ;	-----------------------------------------
      000224                       1681 _set_auto_ack:
                                   1682 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:325: if(enable) {
      000224 E5 82            [12] 1683 	mov	a,dpl
      000226 FF               [12] 1684 	mov	r7,a
      000227 60 0A            [24] 1685 	jz	00102$
                                   1686 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:326: FRMCTRL0 |= FRMCTRL0_AUTOACK;
      000229 90 61 89         [24] 1687 	mov	dptr,#_FRMCTRL0
      00022C E0               [24] 1688 	movx	a,@dptr
      00022D FF               [12] 1689 	mov	r7,a
      00022E 74 20            [12] 1690 	mov	a,#0x20
      000230 4F               [12] 1691 	orl	a,r7
      000231 F0               [24] 1692 	movx	@dptr,a
      000232 22               [24] 1693 	ret
      000233                       1694 00102$:
                                   1695 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:328: FRMCTRL0 &= ~FRMCTRL0_AUTOACK;
      000233 90 61 89         [24] 1696 	mov	dptr,#_FRMCTRL0
      000236 E0               [24] 1697 	movx	a,@dptr
      000237 FF               [12] 1698 	mov	r7,a
      000238 74 DF            [12] 1699 	mov	a,#0xDF
      00023A 5F               [12] 1700 	anl	a,r7
      00023B F0               [24] 1701 	movx	@dptr,a
      00023C 22               [24] 1702 	ret
                                   1703 ;------------------------------------------------------------
                                   1704 ;Allocation info for local variables in function 'init'
                                   1705 ;------------------------------------------------------------
                                   1706 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:335: init(void)
                                   1707 ;	-----------------------------------------
                                   1708 ;	 function init
                                   1709 ;	-----------------------------------------
      00023D                       1710 _init:
                                   1711 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:339: if(rf_flags & RF_ON) {
      00023D E5*00            [12] 1712 	mov	a,_rf_flags
      00023F 30 E0 04         [24] 1713 	jnb	acc.0,00102$
                                   1714 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:340: return 0;
      000242 90 00 00         [24] 1715 	mov	dptr,#0x0000
      000245 22               [24] 1716 	ret
      000246                       1717 00102$:
                                   1718 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:348: RXCTRL = 0x3F;
      000246 90 61 AB         [24] 1719 	mov	dptr,#_RXCTRL
      000249 74 3F            [12] 1720 	mov	a,#0x3F
      00024B F0               [24] 1721 	movx	@dptr,a
                                   1722 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:349: FSCTRL = 0x55;
      00024C 90 61 AC         [24] 1723 	mov	dptr,#_FSCTRL
      00024F 74 55            [12] 1724 	mov	a,#0x55
      000251 F0               [24] 1725 	movx	@dptr,a
                                   1726 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:352: CCACTRL0 = CC2530_RF_CCA_THRES;
      000252 90 61 96         [24] 1727 	mov	dptr,#_CCACTRL0
      000255 74 F8            [12] 1728 	mov	a,#0xF8
      000257 F0               [24] 1729 	movx	@dptr,a
                                   1730 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:360: TXFILTCFG = 0x09; /* TX anti-aliasing filter */
      000258 90 61 FA         [24] 1731 	mov	dptr,#_TXFILTCFG
      00025B 74 09            [12] 1732 	mov	a,#0x09
      00025D F0               [24] 1733 	movx	@dptr,a
                                   1734 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:361: AGCCTRL1 = 0x15;  /* AGC target value */
      00025E 90 61 B2         [24] 1735 	mov	dptr,#_AGCCTRL1
      000261 74 15            [12] 1736 	mov	a,#0x15
      000263 F0               [24] 1737 	movx	@dptr,a
                                   1738 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:362: FSCAL1 = 0x00;    /* Reduce the VCO leakage */
      000264 90 61 AE         [24] 1739 	mov	dptr,#_FSCAL1
      000267 E4               [12] 1740 	clr	a
      000268 F0               [24] 1741 	movx	@dptr,a
                                   1742 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:365: FRMCTRL0 = FRMCTRL0_AUTOCRC;
      000269 90 61 89         [24] 1743 	mov	dptr,#_FRMCTRL0
      00026C 74 40            [12] 1744 	mov	a,#0x40
      00026E F0               [24] 1745 	movx	@dptr,a
                                   1746 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:367: FRMCTRL0 |= FRMCTRL0_AUTOACK;
      00026F E0               [24] 1747 	movx	a,@dptr
      000270 FF               [12] 1748 	mov	r7,a
      000271 74 20            [12] 1749 	mov	a,#0x20
      000273 4F               [12] 1750 	orl	a,r7
      000274 F0               [24] 1751 	movx	@dptr,a
                                   1752 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:371: SRCMATCH = 0; /* investigate */
      000275 90 61 82         [24] 1753 	mov	dptr,#_SRCMATCH
      000278 E4               [12] 1754 	clr	a
      000279 F0               [24] 1755 	movx	@dptr,a
                                   1756 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:374: FIFOPCTRL = CC2530_RF_MAX_PACKET_LEN;
      00027A 90 61 94         [24] 1757 	mov	dptr,#_FIFOPCTRL
      00027D 74 7F            [12] 1758 	mov	a,#0x7F
      00027F F0               [24] 1759 	movx	@dptr,a
                                   1760 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:376: TXPOWER = CC2530_RF_TX_POWER;
      000280 90 61 90         [24] 1761 	mov	dptr,#_TXPOWER
      000283 74 D5            [12] 1762 	mov	a,#0xD5
      000285 F0               [24] 1763 	movx	@dptr,a
                                   1764 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:381: rf_flags |= RF_ON;
      000286 43*00 01         [24] 1765 	orl	_rf_flags,#0x01
                                   1766 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:383: return 1;
      000289 90 00 01         [24] 1767 	mov	dptr,#0x0001
      00028C 22               [24] 1768 	ret
                                   1769 ;------------------------------------------------------------
                                   1770 ;Allocation info for local variables in function 'prepare'
                                   1771 ;------------------------------------------------------------
                                   1772 ;payload_len               Allocated to stack - sp -6
                                   1773 ;payload                   Allocated to stack - sp -2
                                   1774 ;i                         Allocated to registers r4 
                                   1775 ;------------------------------------------------------------
                                   1776 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:387: prepare(const void *payload, unsigned short payload_len)
                                   1777 ;	-----------------------------------------
                                   1778 ;	 function prepare
                                   1779 ;	-----------------------------------------
      00028D                       1780 _prepare:
      00028D C0 82            [24] 1781 	push	dpl
      00028F C0 83            [24] 1782 	push	dph
      000291 C0 F0            [24] 1783 	push	b
                                   1784 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:399: while(FSMSTAT1 & FSMSTAT1_TX_ACTIVE);
      000293                       1785 00101$:
      000293 90 61 93         [24] 1786 	mov	dptr,#_FSMSTAT1
      000296 E0               [24] 1787 	movx	a,@dptr
      000297 FC               [12] 1788 	mov	r4,a
      000298 20 E1 F8         [24] 1789 	jb	acc.1,00101$
                                   1790 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:401: if((rf_flags & RX_ACTIVE) == 0) {
      00029B E5*00            [12] 1791 	mov	a,_rf_flags
      00029D 20 E7 03         [24] 1792 	jb	acc.7,00106$
                                   1793 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:402: on();
      0002A0 12r04rEA         [24] 1794 	lcall	_on
                                   1795 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:405: CC2530_CSP_ISFLUSHTX();
      0002A3                       1796 00106$:
      0002A3 75 E1 EE         [24] 1797 	mov	_RFST,#0xEE
      0002A6 75 E1 EE         [24] 1798 	mov	_RFST,#0xEE
                                   1799 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:409: RFD = payload_len + CHECKSUM_LEN; /* Payload plus FCS */
      0002A9 E5 81            [12] 1800 	mov	a,sp
      0002AB 24 FA            [12] 1801 	add	a,#0xfa
      0002AD F8               [12] 1802 	mov	r0,a
      0002AE 86 04            [24] 1803 	mov	ar4,@r0
      0002B0 74 02            [12] 1804 	mov	a,#0x02
      0002B2 2C               [12] 1805 	add	a,r4
      0002B3 F5 D9            [12] 1806 	mov	_RFD,a
                                   1807 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:410: for(i = 0; i < payload_len; i++) {
      0002B5 7C 00            [12] 1808 	mov	r4,#0x00
      0002B7                       1809 00111$:
      0002B7 8C 02            [24] 1810 	mov	ar2,r4
      0002B9 7B 00            [12] 1811 	mov	r3,#0x00
      0002BB E5 81            [12] 1812 	mov	a,sp
      0002BD 24 FA            [12] 1813 	add	a,#0xfa
      0002BF F8               [12] 1814 	mov	r0,a
      0002C0 C3               [12] 1815 	clr	c
      0002C1 EA               [12] 1816 	mov	a,r2
      0002C2 96               [12] 1817 	subb	a,@r0
      0002C3 EB               [12] 1818 	mov	a,r3
      0002C4 08               [12] 1819 	inc	r0
      0002C5 96               [12] 1820 	subb	a,@r0
      0002C6 50 20            [24] 1821 	jnc	00109$
                                   1822 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:411: RFD = ((unsigned char *)(payload))[i];
      0002C8 A8 81            [24] 1823 	mov	r0,sp
      0002CA 18               [12] 1824 	dec	r0
      0002CB 18               [12] 1825 	dec	r0
      0002CC 86 02            [24] 1826 	mov	ar2,@r0
      0002CE 08               [12] 1827 	inc	r0
      0002CF 86 03            [24] 1828 	mov	ar3,@r0
      0002D1 08               [12] 1829 	inc	r0
      0002D2 86 07            [24] 1830 	mov	ar7,@r0
      0002D4 EC               [12] 1831 	mov	a,r4
      0002D5 2A               [12] 1832 	add	a,r2
      0002D6 FA               [12] 1833 	mov	r2,a
      0002D7 E4               [12] 1834 	clr	a
      0002D8 3B               [12] 1835 	addc	a,r3
      0002D9 FB               [12] 1836 	mov	r3,a
      0002DA 8A 82            [24] 1837 	mov	dpl,r2
      0002DC 8B 83            [24] 1838 	mov	dph,r3
      0002DE 8F F0            [24] 1839 	mov	b,r7
      0002E0 12r00r00         [24] 1840 	lcall	__gptrget
      0002E3 F5 D9            [12] 1841 	mov	_RFD,a
                                   1842 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:410: for(i = 0; i < payload_len; i++) {
      0002E5 0C               [12] 1843 	inc	r4
      0002E6 80 CF            [24] 1844 	sjmp	00111$
      0002E8                       1845 00109$:
                                   1846 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:417: RFD = 0;
      0002E8 75 D9 00         [24] 1847 	mov	_RFD,#0x00
                                   1848 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:418: RFD = 0;
      0002EB 75 D9 00         [24] 1849 	mov	_RFD,#0x00
                                   1850 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:420: return 0;
      0002EE 90 00 00         [24] 1851 	mov	dptr,#0x0000
      0002F1 15 81            [12] 1852 	dec	sp
      0002F3 15 81            [12] 1853 	dec	sp
      0002F5 15 81            [12] 1854 	dec	sp
      0002F7 22               [24] 1855 	ret
                                   1856 ;------------------------------------------------------------
                                   1857 ;Allocation info for local variables in function 'transmit'
                                   1858 ;------------------------------------------------------------
                                   1859 ;transmit_len              Allocated to registers 
                                   1860 ;counter                   Allocated to registers r7 
                                   1861 ;ret                       Allocated to registers r6 r7 
                                   1862 ;t0                        Allocated to registers 
                                   1863 ;------------------------------------------------------------
                                   1864 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:424: transmit(unsigned short transmit_len)
                                   1865 ;	-----------------------------------------
                                   1866 ;	 function transmit
                                   1867 ;	-----------------------------------------
      0002F8                       1868 _transmit:
                                   1869 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:431: if(!(rf_flags & RX_ACTIVE)) {
      0002F8 E5*00            [12] 1870 	mov	a,_rf_flags
      0002FA 20 E7 3C         [24] 1871 	jb	acc.7,00105$
                                   1872 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:432: t0 = RTIMER_NOW();
      0002FD AE E2            [24] 1873 	mov	r6,_T1CNTL
      0002FF 7F 00            [12] 1874 	mov	r7,#0x00
      000301 AC E3            [24] 1875 	mov	r4,_T1CNTH
      000303 8C 05            [24] 1876 	mov	ar5,r4
      000305 E4               [12] 1877 	clr	a
      000306 2E               [12] 1878 	add	a,r6
      000307 FE               [12] 1879 	mov	r6,a
      000308 ED               [12] 1880 	mov	a,r5
      000309 3F               [12] 1881 	addc	a,r7
      00030A FF               [12] 1882 	mov	r7,a
                                   1883 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:433: on();
      00030B C0 07            [24] 1884 	push	ar7
      00030D C0 06            [24] 1885 	push	ar6
      00030F 12r04rEA         [24] 1886 	lcall	_on
      000312 D0 06            [24] 1887 	pop	ar6
      000314 D0 07            [24] 1888 	pop	ar7
                                   1889 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:434: rf_flags |= WAS_OFF;
      000316 43*00 10         [24] 1890 	orl	_rf_flags,#0x10
                                   1891 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:435: while(RTIMER_CLOCK_LT(RTIMER_NOW(), t0 + ONOFF_TIME));
      000319 74 05            [12] 1892 	mov	a,#0x05
      00031B 2E               [12] 1893 	add	a,r6
      00031C FE               [12] 1894 	mov	r6,a
      00031D E4               [12] 1895 	clr	a
      00031E 3F               [12] 1896 	addc	a,r7
      00031F FF               [12] 1897 	mov	r7,a
      000320                       1898 00101$:
      000320 AC E2            [24] 1899 	mov	r4,_T1CNTL
      000322 7D 00            [12] 1900 	mov	r5,#0x00
      000324 AA E3            [24] 1901 	mov	r2,_T1CNTH
      000326 8A 03            [24] 1902 	mov	ar3,r2
      000328 E4               [12] 1903 	clr	a
      000329 FA               [12] 1904 	mov	r2,a
      00032A 2C               [12] 1905 	add	a,r4
      00032B FC               [12] 1906 	mov	r4,a
      00032C EB               [12] 1907 	mov	a,r3
      00032D 3D               [12] 1908 	addc	a,r5
      00032E FD               [12] 1909 	mov	r5,a
      00032F EC               [12] 1910 	mov	a,r4
      000330 C3               [12] 1911 	clr	c
      000331 9E               [12] 1912 	subb	a,r6
      000332 FC               [12] 1913 	mov	r4,a
      000333 ED               [12] 1914 	mov	a,r5
      000334 9F               [12] 1915 	subb	a,r7
      000335 FD               [12] 1916 	mov	r5,a
      000336 20 E7 E7         [24] 1917 	jb	acc.7,00101$
      000339                       1918 00105$:
                                   1919 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:438: if(channel_clear() == CC2530_RF_CCA_BUSY) {
      000339 12r04rC3         [24] 1920 	lcall	_channel_clear
      00033C E5 82            [12] 1921 	mov	a,dpl
      00033E 85 83 F0         [24] 1922 	mov	b,dph
      000341 45 F0            [12] 1923 	orl	a,b
      000343 70 04            [24] 1924 	jnz	00107$
                                   1925 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:440: return RADIO_TX_COLLISION;
      000345 90 00 02         [24] 1926 	mov	dptr,#0x0002
      000348 22               [24] 1927 	ret
      000349                       1928 00107$:
                                   1929 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:447: if(FSMSTAT1 & FSMSTAT1_SFD) {
      000349 90 61 93         [24] 1930 	mov	dptr,#_FSMSTAT1
      00034C E0               [24] 1931 	movx	a,@dptr
      00034D FF               [12] 1932 	mov	r7,a
      00034E 30 E5 04         [24] 1933 	jnb	acc.5,00110$
                                   1934 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:449: return RADIO_TX_COLLISION;
      000351 90 00 02         [24] 1935 	mov	dptr,#0x0002
                                   1936 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:454: ENERGEST_OFF(ENERGEST_TYPE_LISTEN);
      000354 22               [24] 1937 	ret
      000355                       1938 00110$:
                                   1939 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:457: CC2530_CSP_ISTXON();
      000355 75 E1 E9         [24] 1940 	mov	_RFST,#0xE9
                                   1941 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:460: while(!(FSMSTAT1 & FSMSTAT1_TX_ACTIVE) && (counter++ < 3)) {
      000358 7F 00            [12] 1942 	mov	r7,#0x00
      00035A                       1943 00118$:
      00035A 90 61 93         [24] 1944 	mov	dptr,#_FSMSTAT1
      00035D E0               [24] 1945 	movx	a,@dptr
      00035E FE               [12] 1946 	mov	r6,a
      00035F 20 E1 14         [24] 1947 	jb	acc.1,00120$
      000362 8F 06            [24] 1948 	mov	ar6,r7
      000364 0F               [12] 1949 	inc	r7
      000365 BE 03 00         [24] 1950 	cjne	r6,#0x03,00177$
      000368                       1951 00177$:
      000368 50 0C            [24] 1952 	jnc	00120$
                                   1953 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:461: clock_delay_usec(6);
      00036A 90 00 06         [24] 1954 	mov	dptr,#0x0006
      00036D C0 07            [24] 1955 	push	ar7
      00036F 12r00r00         [24] 1956 	lcall	_clock_delay_usec
      000372 D0 07            [24] 1957 	pop	ar7
      000374 80 E4            [24] 1958 	sjmp	00118$
      000376                       1959 00120$:
                                   1960 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:464: if(!(FSMSTAT1 & FSMSTAT1_TX_ACTIVE)) {
      000376 90 61 93         [24] 1961 	mov	dptr,#_FSMSTAT1
      000379 E0               [24] 1962 	movx	a,@dptr
      00037A FF               [12] 1963 	mov	r7,a
      00037B 20 E1 0C         [24] 1964 	jb	acc.1,00124$
                                   1965 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:466: CC2530_CSP_ISFLUSHTX();
      00037E 75 E1 EE         [24] 1966 	mov	_RFST,#0xEE
      000381 75 E1 EE         [24] 1967 	mov	_RFST,#0xEE
                                   1968 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:467: ret = RADIO_TX_ERR;
      000384 7E 01            [12] 1969 	mov	r6,#0x01
      000386 7F 00            [12] 1970 	mov	r7,#0x00
                                   1971 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:470: while(FSMSTAT1 & FSMSTAT1_TX_ACTIVE);
      000388 80 0C            [24] 1972 	sjmp	00130$
      00038A                       1973 00124$:
      00038A 90 61 93         [24] 1974 	mov	dptr,#_FSMSTAT1
      00038D E0               [24] 1975 	movx	a,@dptr
      00038E FD               [12] 1976 	mov	r5,a
      00038F 20 E1 F8         [24] 1977 	jb	acc.1,00124$
                                   1978 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:471: ret = RADIO_TX_OK;
      000392 7E 00            [12] 1979 	mov	r6,#0x00
      000394 7F 00            [12] 1980 	mov	r7,#0x00
                                   1981 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:473: ENERGEST_OFF(ENERGEST_TYPE_TRANSMIT);
      000396                       1982 00130$:
                                   1983 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:476: if(rf_flags & WAS_OFF) {
      000396 E5*00            [12] 1984 	mov	a,_rf_flags
      000398 30 E4 0B         [24] 1985 	jnb	acc.4,00135$
                                   1986 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:477: off();
      00039B C0 07            [24] 1987 	push	ar7
      00039D C0 06            [24] 1988 	push	ar6
      00039F 12r04rFF         [24] 1989 	lcall	_off
      0003A2 D0 06            [24] 1990 	pop	ar6
      0003A4 D0 07            [24] 1991 	pop	ar7
      0003A6                       1992 00135$:
                                   1993 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:485: return ret;
      0003A6 8E 82            [24] 1994 	mov	dpl,r6
      0003A8 8F 83            [24] 1995 	mov	dph,r7
      0003AA 22               [24] 1996 	ret
                                   1997 ;------------------------------------------------------------
                                   1998 ;Allocation info for local variables in function 'send'
                                   1999 ;------------------------------------------------------------
                                   2000 ;payload_len               Allocated to stack - sp -3
                                   2001 ;payload                   Allocated to registers r5 r6 r7 
                                   2002 ;------------------------------------------------------------
                                   2003 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:489: send(const void *payload, unsigned short payload_len)
                                   2004 ;	-----------------------------------------
                                   2005 ;	 function send
                                   2006 ;	-----------------------------------------
      0003AB                       2007 _send:
      0003AB AD 82            [24] 2008 	mov	r5,dpl
      0003AD AE 83            [24] 2009 	mov	r6,dph
      0003AF AF F0            [24] 2010 	mov	r7,b
                                   2011 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:491: prepare(payload, payload_len);
      0003B1 E5 81            [12] 2012 	mov	a,sp
      0003B3 24 FD            [12] 2013 	add	a,#0xfd
      0003B5 F8               [12] 2014 	mov	r0,a
      0003B6 E6               [12] 2015 	mov	a,@r0
      0003B7 C0 E0            [24] 2016 	push	acc
      0003B9 08               [12] 2017 	inc	r0
      0003BA E6               [12] 2018 	mov	a,@r0
      0003BB C0 E0            [24] 2019 	push	acc
      0003BD 8D 82            [24] 2020 	mov	dpl,r5
      0003BF 8E 83            [24] 2021 	mov	dph,r6
      0003C1 8F F0            [24] 2022 	mov	b,r7
      0003C3 12r02r8D         [24] 2023 	lcall	_prepare
      0003C6 15 81            [12] 2024 	dec	sp
      0003C8 15 81            [12] 2025 	dec	sp
                                   2026 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:492: return transmit(payload_len);
      0003CA E5 81            [12] 2027 	mov	a,sp
      0003CC 24 FD            [12] 2028 	add	a,#0xfd
      0003CE F8               [12] 2029 	mov	r0,a
      0003CF 86 82            [24] 2030 	mov	dpl,@r0
      0003D1 08               [12] 2031 	inc	r0
      0003D2 86 83            [24] 2032 	mov	dph,@r0
      0003D4 02r02rF8         [24] 2033 	ljmp	_transmit
                                   2034 ;------------------------------------------------------------
                                   2035 ;Allocation info for local variables in function 'read'
                                   2036 ;------------------------------------------------------------
                                   2037 ;bufsize                   Allocated to stack - sp -6
                                   2038 ;buf                       Allocated to stack - sp -2
                                   2039 ;i                         Allocated to registers r3 
                                   2040 ;len                       Allocated to registers r4 
                                   2041 ;crc_corr                  Allocated to registers r6 
                                   2042 ;rssi                      Allocated to registers r7 
                                   2043 ;------------------------------------------------------------
                                   2044 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:496: read(void *buf, unsigned short bufsize)
                                   2045 ;	-----------------------------------------
                                   2046 ;	 function read
                                   2047 ;	-----------------------------------------
      0003D7                       2048 _read:
      0003D7 C0 82            [24] 2049 	push	dpl
      0003D9 C0 83            [24] 2050 	push	dph
      0003DB C0 F0            [24] 2051 	push	b
                                   2052 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:506: len = RFD;
                                   2053 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:509: if(len > CC2530_RF_MAX_PACKET_LEN) {
      0003DD E5 D9            [12] 2054 	mov	a,_RFD
      0003DF FC               [12] 2055 	mov	r4,a
      0003E0 24 80            [12] 2056 	add	a,#0xff - 0x7F
      0003E2 50 0C            [24] 2057 	jnc	00105$
                                   2058 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:514: CC2530_CSP_ISFLUSHRX();
      0003E4 75 E1 ED         [24] 2059 	mov	_RFST,#0xED
      0003E7 75 E1 ED         [24] 2060 	mov	_RFST,#0xED
                                   2061 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:515: return 0;
      0003EA 90 00 00         [24] 2062 	mov	dptr,#0x0000
      0003ED 02r04rBC         [24] 2063 	ljmp	00133$
      0003F0                       2064 00105$:
                                   2065 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:518: if(len <= CC2530_RF_MIN_PACKET_LEN) {
      0003F0 EC               [12] 2066 	mov	a,r4
      0003F1 24 FB            [12] 2067 	add	a,#0xff - 0x04
      0003F3 40 0C            [24] 2068 	jc	00110$
                                   2069 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:522: CC2530_CSP_ISFLUSHRX();
      0003F5 75 E1 ED         [24] 2070 	mov	_RFST,#0xED
      0003F8 75 E1 ED         [24] 2071 	mov	_RFST,#0xED
                                   2072 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:523: return 0;
      0003FB 90 00 00         [24] 2073 	mov	dptr,#0x0000
      0003FE 02r04rBC         [24] 2074 	ljmp	00133$
      000401                       2075 00110$:
                                   2076 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:526: if(len - CHECKSUM_LEN > bufsize) {
      000401 8C 02            [24] 2077 	mov	ar2,r4
      000403 7B 00            [12] 2078 	mov	r3,#0x00
      000405 EA               [12] 2079 	mov	a,r2
      000406 24 FE            [12] 2080 	add	a,#0xFE
      000408 FA               [12] 2081 	mov	r2,a
      000409 EB               [12] 2082 	mov	a,r3
      00040A 34 FF            [12] 2083 	addc	a,#0xFF
      00040C FB               [12] 2084 	mov	r3,a
      00040D E5 81            [12] 2085 	mov	a,sp
      00040F 24 FA            [12] 2086 	add	a,#0xfa
      000411 F8               [12] 2087 	mov	r0,a
      000412 C3               [12] 2088 	clr	c
      000413 E6               [12] 2089 	mov	a,@r0
      000414 9A               [12] 2090 	subb	a,r2
      000415 08               [12] 2091 	inc	r0
      000416 E6               [12] 2092 	mov	a,@r0
      000417 9B               [12] 2093 	subb	a,r3
      000418 50 0C            [24] 2094 	jnc	00115$
                                   2095 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:530: CC2530_CSP_ISFLUSHRX();
      00041A 75 E1 ED         [24] 2096 	mov	_RFST,#0xED
      00041D 75 E1 ED         [24] 2097 	mov	_RFST,#0xED
                                   2098 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:531: return 0;
      000420 90 00 00         [24] 2099 	mov	dptr,#0x0000
      000423 02r04rBC         [24] 2100 	ljmp	00133$
      000426                       2101 00115$:
                                   2102 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:548: len -= CHECKSUM_LEN;
      000426 1C               [12] 2103 	dec	r4
      000427 1C               [12] 2104 	dec	r4
                                   2105 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:549: for(i = 0; i < len; ++i) {
      000428 7B 00            [12] 2106 	mov	r3,#0x00
      00042A                       2107 00131$:
      00042A C3               [12] 2108 	clr	c
      00042B EB               [12] 2109 	mov	a,r3
      00042C 9C               [12] 2110 	subb	a,r4
      00042D 50 25            [24] 2111 	jnc	00116$
                                   2112 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:550: ((unsigned char *)(buf))[i] = RFD;
      00042F C0 04            [24] 2113 	push	ar4
      000431 E5 81            [12] 2114 	mov	a,sp
      000433 24 FD            [12] 2115 	add	a,#0xfd
      000435 F8               [12] 2116 	mov	r0,a
      000436 86 02            [24] 2117 	mov	ar2,@r0
      000438 08               [12] 2118 	inc	r0
      000439 86 04            [24] 2119 	mov	ar4,@r0
      00043B 08               [12] 2120 	inc	r0
      00043C 86 07            [24] 2121 	mov	ar7,@r0
      00043E EB               [12] 2122 	mov	a,r3
      00043F 2A               [12] 2123 	add	a,r2
      000440 FA               [12] 2124 	mov	r2,a
      000441 E4               [12] 2125 	clr	a
      000442 3C               [12] 2126 	addc	a,r4
      000443 FC               [12] 2127 	mov	r4,a
      000444 8A 82            [24] 2128 	mov	dpl,r2
      000446 8C 83            [24] 2129 	mov	dph,r4
      000448 8F F0            [24] 2130 	mov	b,r7
      00044A E5 D9            [12] 2131 	mov	a,_RFD
      00044C 12r00r00         [24] 2132 	lcall	__gptrput
                                   2133 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:549: for(i = 0; i < len; ++i) {
      00044F 0B               [12] 2134 	inc	r3
      000450 D0 04            [24] 2135 	pop	ar4
      000452 80 D6            [24] 2136 	sjmp	00131$
      000454                       2137 00116$:
                                   2138 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:559: rssi = ((int8_t) RFD) - RSSI_OFFSET;
      000454 E5 D9            [12] 2139 	mov	a,_RFD
      000456 24 B7            [12] 2140 	add	a,#0xB7
      000458 FF               [12] 2141 	mov	r7,a
                                   2142 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:560: crc_corr = RFD;
                                   2143 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:569: if(crc_corr & CRC_BIT_MASK) {
      000459 E5 D9            [12] 2144 	mov	a,_RFD
      00045B FE               [12] 2145 	mov	r6,a
      00045C 30 E7 34         [24] 2146 	jnb	acc.7,00117$
                                   2147 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:570: packetbuf_set_attr(PACKETBUF_ATTR_RSSI, rssi);
      00045F EF               [12] 2148 	mov	a,r7
      000460 33               [12] 2149 	rlc	a
      000461 95 E0            [12] 2150 	subb	a,acc
      000463 FD               [12] 2151 	mov	r5,a
      000464 C0 06            [24] 2152 	push	ar6
      000466 C0 04            [24] 2153 	push	ar4
      000468 C0 07            [24] 2154 	push	ar7
      00046A C0 05            [24] 2155 	push	ar5
      00046C 75 82 04         [24] 2156 	mov	dpl,#0x04
      00046F 12r00r00         [24] 2157 	lcall	_packetbuf_set_attr
      000472 15 81            [12] 2158 	dec	sp
      000474 15 81            [12] 2159 	dec	sp
      000476 D0 04            [24] 2160 	pop	ar4
      000478 D0 06            [24] 2161 	pop	ar6
                                   2162 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:571: packetbuf_set_attr(PACKETBUF_ATTR_LINK_QUALITY, crc_corr & LQI_BIT_MASK);
      00047A 53 06 7F         [24] 2163 	anl	ar6,#0x7F
      00047D 7F 00            [12] 2164 	mov	r7,#0x00
      00047F C0 04            [24] 2165 	push	ar4
      000481 C0 06            [24] 2166 	push	ar6
      000483 C0 07            [24] 2167 	push	ar7
      000485 75 82 03         [24] 2168 	mov	dpl,#0x03
      000488 12r00r00         [24] 2169 	lcall	_packetbuf_set_attr
      00048B 15 81            [12] 2170 	dec	sp
      00048D 15 81            [12] 2171 	dec	sp
      00048F D0 04            [24] 2172 	pop	ar4
                                   2173 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:575: CC2530_CSP_ISFLUSHRX();
      000491 80 0B            [24] 2174 	sjmp	00122$
      000493                       2175 00117$:
      000493 75 E1 ED         [24] 2176 	mov	_RFST,#0xED
      000496 75 E1 ED         [24] 2177 	mov	_RFST,#0xED
                                   2178 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:577: return 0;
      000499 90 00 00         [24] 2179 	mov	dptr,#0x0000
      00049C 80 1E            [24] 2180 	sjmp	00133$
      00049E                       2181 00122$:
                                   2182 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:581: if((FSMSTAT1 & (FSMSTAT1_FIFO | FSMSTAT1_FIFOP)) == FSMSTAT1_FIFOP) {
      00049E 90 61 93         [24] 2183 	mov	dptr,#_FSMSTAT1
      0004A1 E0               [24] 2184 	movx	a,@dptr
      0004A2 FF               [12] 2185 	mov	r7,a
      0004A3 53 07 C0         [24] 2186 	anl	ar7,#0xC0
      0004A6 BF 40 0D         [24] 2187 	cjne	r7,#0x40,00129$
                                   2188 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:589: if(!RXFIFOCNT) {
      0004A9 90 61 9B         [24] 2189 	mov	dptr,#_RXFIFOCNT
      0004AC E0               [24] 2190 	movx	a,@dptr
      0004AD E0               [24] 2191 	movx	a,@dptr
      0004AE 70 06            [24] 2192 	jnz	00129$
                                   2193 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:590: CC2530_CSP_ISFLUSHRX();
      0004B0 75 E1 ED         [24] 2194 	mov	_RFST,#0xED
      0004B3 75 E1 ED         [24] 2195 	mov	_RFST,#0xED
      0004B6                       2196 00129$:
                                   2197 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:596: return (len);
      0004B6 7F 00            [12] 2198 	mov	r7,#0x00
      0004B8 8C 82            [24] 2199 	mov	dpl,r4
      0004BA 8F 83            [24] 2200 	mov	dph,r7
      0004BC                       2201 00133$:
      0004BC 15 81            [12] 2202 	dec	sp
      0004BE 15 81            [12] 2203 	dec	sp
      0004C0 15 81            [12] 2204 	dec	sp
      0004C2 22               [24] 2205 	ret
                                   2206 ;------------------------------------------------------------
                                   2207 ;Allocation info for local variables in function 'channel_clear'
                                   2208 ;------------------------------------------------------------
                                   2209 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:600: channel_clear(void)
                                   2210 ;	-----------------------------------------
                                   2211 ;	 function channel_clear
                                   2212 ;	-----------------------------------------
      0004C3                       2213 _channel_clear:
                                   2214 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:602: if(FSMSTAT1 & FSMSTAT1_CCA) {
      0004C3 90 61 93         [24] 2215 	mov	dptr,#_FSMSTAT1
      0004C6 E0               [24] 2216 	movx	a,@dptr
      0004C7 FF               [12] 2217 	mov	r7,a
      0004C8 30 E4 04         [24] 2218 	jnb	acc.4,00102$
                                   2219 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:603: return CC2530_RF_CCA_CLEAR;
      0004CB 90 00 01         [24] 2220 	mov	dptr,#0x0001
      0004CE 22               [24] 2221 	ret
      0004CF                       2222 00102$:
                                   2223 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:605: return CC2530_RF_CCA_BUSY;
      0004CF 90 00 00         [24] 2224 	mov	dptr,#0x0000
      0004D2 22               [24] 2225 	ret
                                   2226 ;------------------------------------------------------------
                                   2227 ;Allocation info for local variables in function 'receiving_packet'
                                   2228 ;------------------------------------------------------------
                                   2229 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:609: receiving_packet(void)
                                   2230 ;	-----------------------------------------
                                   2231 ;	 function receiving_packet
                                   2232 ;	-----------------------------------------
      0004D3                       2233 _receiving_packet:
                                   2234 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:619: return (FSMSTAT1 & (FSMSTAT1_TX_ACTIVE | FSMSTAT1_SFD) == FSMSTAT1_SFD);
      0004D3 90 61 93         [24] 2235 	mov	dptr,#_FSMSTAT1
      0004D6 E0               [24] 2236 	movx	a,@dptr
      0004D7 90 00 00         [24] 2237 	mov	dptr,#0x0000
      0004DA 22               [24] 2238 	ret
                                   2239 ;------------------------------------------------------------
                                   2240 ;Allocation info for local variables in function 'pending_packet'
                                   2241 ;------------------------------------------------------------
                                   2242 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:623: pending_packet(void)
                                   2243 ;	-----------------------------------------
                                   2244 ;	 function pending_packet
                                   2245 ;	-----------------------------------------
      0004DB                       2246 _pending_packet:
                                   2247 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:625: return (FSMSTAT1 & FSMSTAT1_FIFOP);
      0004DB 90 61 93         [24] 2248 	mov	dptr,#_FSMSTAT1
      0004DE E0               [24] 2249 	movx	a,@dptr
      0004DF FF               [12] 2250 	mov	r7,a
      0004E0 53 07 40         [24] 2251 	anl	ar7,#0x40
      0004E3 7E 00            [12] 2252 	mov	r6,#0x00
      0004E5 8F 82            [24] 2253 	mov	dpl,r7
      0004E7 8E 83            [24] 2254 	mov	dph,r6
      0004E9 22               [24] 2255 	ret
                                   2256 ;------------------------------------------------------------
                                   2257 ;Allocation info for local variables in function 'on'
                                   2258 ;------------------------------------------------------------
                                   2259 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:629: on(void)
                                   2260 ;	-----------------------------------------
                                   2261 ;	 function on
                                   2262 ;	-----------------------------------------
      0004EA                       2263 _on:
                                   2264 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:631: if(!(rf_flags & RX_ACTIVE)) {
      0004EA E5*00            [12] 2265 	mov	a,_rf_flags
      0004EC 20 E7 0C         [24] 2266 	jb	acc.7,00109$
                                   2267 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:632: CC2530_CSP_ISFLUSHRX();
      0004EF 75 E1 ED         [24] 2268 	mov	_RFST,#0xED
      0004F2 75 E1 ED         [24] 2269 	mov	_RFST,#0xED
                                   2270 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:633: CC2530_CSP_ISRXON();
      0004F5 75 E1 E3         [24] 2271 	mov	_RFST,#0xE3
                                   2272 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:635: rf_flags |= RX_ACTIVE;
      0004F8 43*00 80         [24] 2273 	orl	_rf_flags,#0x80
                                   2274 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:638: ENERGEST_ON(ENERGEST_TYPE_LISTEN);
      0004FB                       2275 00109$:
                                   2276 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:639: return 1;
      0004FB 90 00 01         [24] 2277 	mov	dptr,#0x0001
      0004FE 22               [24] 2278 	ret
                                   2279 ;------------------------------------------------------------
                                   2280 ;Allocation info for local variables in function 'off'
                                   2281 ;------------------------------------------------------------
                                   2282 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:643: off(void)
                                   2283 ;	-----------------------------------------
                                   2284 ;	 function off
                                   2285 ;	-----------------------------------------
      0004FF                       2286 _off:
                                   2287 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:645: CC2530_CSP_ISRFOFF();
      0004FF 75 E1 EF         [24] 2288 	mov	_RFST,#0xEF
                                   2289 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:646: CC2530_CSP_ISFLUSHRX();
      000502 75 E1 ED         [24] 2290 	mov	_RFST,#0xED
      000505 75 E1 ED         [24] 2291 	mov	_RFST,#0xED
                                   2292 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:648: rf_flags &= ~RX_ACTIVE;
      000508 AF*00            [24] 2293 	mov	r7,_rf_flags
      00050A 74 7F            [12] 2294 	mov	a,#0x7F
      00050C 5F               [12] 2295 	anl	a,r7
      00050D F5*00            [12] 2296 	mov	_rf_flags,a
                                   2297 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:651: return 1;
      00050F 90 00 01         [24] 2298 	mov	dptr,#0x0001
      000512 22               [24] 2299 	ret
                                   2300 ;------------------------------------------------------------
                                   2301 ;Allocation info for local variables in function 'get_value'
                                   2302 ;------------------------------------------------------------
                                   2303 ;value                     Allocated to stack - sp -4
                                   2304 ;param                     Allocated to registers r6 r7 
                                   2305 ;------------------------------------------------------------
                                   2306 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:655: get_value(radio_param_t param, radio_value_t *value)
                                   2307 ;	-----------------------------------------
                                   2308 ;	 function get_value
                                   2309 ;	-----------------------------------------
      000513                       2310 _get_value:
      000513 AE 82            [24] 2311 	mov	r6,dpl
      000515 AF 83            [24] 2312 	mov	r7,dph
                                   2313 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:657: if(!value) {
      000517 E5 81            [12] 2314 	mov	a,sp
      000519 24 FC            [12] 2315 	add	a,#0xfc
      00051B F8               [12] 2316 	mov	r0,a
      00051C E6               [12] 2317 	mov	a,@r0
      00051D 08               [12] 2318 	inc	r0
      00051E 46               [12] 2319 	orl	a,@r0
      00051F 70 04            [24] 2320 	jnz	00102$
                                   2321 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:658: return RADIO_RESULT_INVALID_VALUE;
      000521 75 82 02         [24] 2322 	mov	dpl,#0x02
      000524 22               [24] 2323 	ret
      000525                       2324 00102$:
                                   2325 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:661: switch(param) {
      000525 C3               [12] 2326 	clr	c
      000526 74 0D            [12] 2327 	mov	a,#0x0D
      000528 9E               [12] 2328 	subb	a,r6
      000529 E4               [12] 2329 	clr	a
      00052A 9F               [12] 2330 	subb	a,r7
      00052B 50 03            [24] 2331 	jnc	00141$
      00052D 02r07rC2         [24] 2332 	ljmp	00119$
      000530                       2333 00141$:
      000530 EE               [12] 2334 	mov	a,r6
      000531 24 0A            [12] 2335 	add	a,#(00142$-3-.)
      000533 83               [24] 2336 	movc	a,@a+pc
      000534 F5 82            [12] 2337 	mov	dpl,a
      000536 EE               [12] 2338 	mov	a,r6
      000537 24 12            [12] 2339 	add	a,#(00143$-3-.)
      000539 83               [24] 2340 	movc	a,@a+pc
      00053A F5 83            [12] 2341 	mov	dph,a
      00053C E4               [12] 2342 	clr	a
      00053D 73               [24] 2343 	jmp	@a+dptr
      00053E                       2344 00142$:
      00053Er5A                    2345 	.db	00103$
      00053Fr89                    2346 	.db	00104$
      000540rBC                    2347 	.db	00105$
      000541rEF                    2348 	.db	00106$
      000542r22                    2349 	.db	00107$
      000543rC2                    2350 	.db	00119$
      000544r93                    2351 	.db	00112$
      000545rC6                    2352 	.db	00113$
      000546rF9                    2353 	.db	00114$
      000547rC2                    2354 	.db	00119$
      000548r2C                    2355 	.db	00115$
      000549r4D                    2356 	.db	00116$
      00054Ar6E                    2357 	.db	00117$
      00054Br98                    2358 	.db	00118$
      00054C                       2359 00143$:
      00054Cs05                    2360 	.db	00103$>>8
      00054Ds05                    2361 	.db	00104$>>8
      00054Es05                    2362 	.db	00105$>>8
      00054Fs05                    2363 	.db	00106$>>8
      000550s06                    2364 	.db	00107$>>8
      000551s07                    2365 	.db	00119$>>8
      000552s06                    2366 	.db	00112$>>8
      000553s06                    2367 	.db	00113$>>8
      000554s06                    2368 	.db	00114$>>8
      000555s07                    2369 	.db	00119$>>8
      000556s07                    2370 	.db	00115$>>8
      000557s07                    2371 	.db	00116$>>8
      000558s07                    2372 	.db	00117$>>8
      000559s07                    2373 	.db	00118$>>8
                                   2374 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:662: case RADIO_PARAM_POWER_MODE:
      00055A                       2375 00103$:
                                   2376 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:663: *value = RXENABLE == 0 ? RADIO_POWER_MODE_OFF : RADIO_POWER_MODE_ON;
      00055A E5 81            [12] 2377 	mov	a,sp
      00055C 24 FC            [12] 2378 	add	a,#0xfc
      00055E F8               [12] 2379 	mov	r0,a
      00055F 86 05            [24] 2380 	mov	ar5,@r0
      000561 08               [12] 2381 	inc	r0
      000562 86 06            [24] 2382 	mov	ar6,@r0
      000564 08               [12] 2383 	inc	r0
      000565 86 07            [24] 2384 	mov	ar7,@r0
      000567 90 61 8B         [24] 2385 	mov	dptr,#_RXENABLE
      00056A E0               [24] 2386 	movx	a,@dptr
      00056B E0               [24] 2387 	movx	a,@dptr
      00056C 70 04            [24] 2388 	jnz	00123$
      00056E FB               [12] 2389 	mov	r3,a
      00056F FC               [12] 2390 	mov	r4,a
      000570 80 04            [24] 2391 	sjmp	00124$
      000572                       2392 00123$:
      000572 7B 01            [12] 2393 	mov	r3,#0x01
      000574 7C 00            [12] 2394 	mov	r4,#0x00
      000576                       2395 00124$:
      000576 8D 82            [24] 2396 	mov	dpl,r5
      000578 8E 83            [24] 2397 	mov	dph,r6
      00057A 8F F0            [24] 2398 	mov	b,r7
      00057C EB               [12] 2399 	mov	a,r3
      00057D 12r00r00         [24] 2400 	lcall	__gptrput
      000580 A3               [24] 2401 	inc	dptr
      000581 EC               [12] 2402 	mov	a,r4
      000582 12r00r00         [24] 2403 	lcall	__gptrput
                                   2404 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:664: return RADIO_RESULT_OK;
      000585 75 82 00         [24] 2405 	mov	dpl,#0x00
      000588 22               [24] 2406 	ret
                                   2407 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:665: case RADIO_PARAM_CHANNEL:
      000589                       2408 00104$:
                                   2409 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:666: *value = (radio_value_t)get_channel();
      000589 E5 81            [12] 2410 	mov	a,sp
      00058B 24 FC            [12] 2411 	add	a,#0xfc
      00058D F8               [12] 2412 	mov	r0,a
      00058E 86 05            [24] 2413 	mov	ar5,@r0
      000590 08               [12] 2414 	inc	r0
      000591 86 06            [24] 2415 	mov	ar6,@r0
      000593 08               [12] 2416 	inc	r0
      000594 86 07            [24] 2417 	mov	ar7,@r0
      000596 C0 07            [24] 2418 	push	ar7
      000598 C0 06            [24] 2419 	push	ar6
      00059A C0 05            [24] 2420 	push	ar5
      00059C 12r00r00         [24] 2421 	lcall	_get_channel
      00059F AC 82            [24] 2422 	mov	r4,dpl
      0005A1 D0 05            [24] 2423 	pop	ar5
      0005A3 D0 06            [24] 2424 	pop	ar6
      0005A5 D0 07            [24] 2425 	pop	ar7
      0005A7 7B 00            [12] 2426 	mov	r3,#0x00
      0005A9 8D 82            [24] 2427 	mov	dpl,r5
      0005AB 8E 83            [24] 2428 	mov	dph,r6
      0005AD 8F F0            [24] 2429 	mov	b,r7
      0005AF EC               [12] 2430 	mov	a,r4
      0005B0 12r00r00         [24] 2431 	lcall	__gptrput
      0005B3 A3               [24] 2432 	inc	dptr
      0005B4 EB               [12] 2433 	mov	a,r3
      0005B5 12r00r00         [24] 2434 	lcall	__gptrput
                                   2435 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:667: return RADIO_RESULT_OK;
      0005B8 75 82 00         [24] 2436 	mov	dpl,#0x00
      0005BB 22               [24] 2437 	ret
                                   2438 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:668: case RADIO_PARAM_PAN_ID:
      0005BC                       2439 00105$:
                                   2440 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:669: *value = get_pan_id();
      0005BC E5 81            [12] 2441 	mov	a,sp
      0005BE 24 FC            [12] 2442 	add	a,#0xfc
      0005C0 F8               [12] 2443 	mov	r0,a
      0005C1 86 05            [24] 2444 	mov	ar5,@r0
      0005C3 08               [12] 2445 	inc	r0
      0005C4 86 06            [24] 2446 	mov	ar6,@r0
      0005C6 08               [12] 2447 	inc	r0
      0005C7 86 07            [24] 2448 	mov	ar7,@r0
      0005C9 C0 07            [24] 2449 	push	ar7
      0005CB C0 06            [24] 2450 	push	ar6
      0005CD C0 05            [24] 2451 	push	ar5
      0005CF 12r00r53         [24] 2452 	lcall	_get_pan_id
      0005D2 AB 82            [24] 2453 	mov	r3,dpl
      0005D4 AC 83            [24] 2454 	mov	r4,dph
      0005D6 D0 05            [24] 2455 	pop	ar5
      0005D8 D0 06            [24] 2456 	pop	ar6
      0005DA D0 07            [24] 2457 	pop	ar7
      0005DC 8D 82            [24] 2458 	mov	dpl,r5
      0005DE 8E 83            [24] 2459 	mov	dph,r6
      0005E0 8F F0            [24] 2460 	mov	b,r7
      0005E2 EB               [12] 2461 	mov	a,r3
      0005E3 12r00r00         [24] 2462 	lcall	__gptrput
      0005E6 A3               [24] 2463 	inc	dptr
      0005E7 EC               [12] 2464 	mov	a,r4
      0005E8 12r00r00         [24] 2465 	lcall	__gptrput
                                   2466 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:670: return RADIO_RESULT_OK;
      0005EB 75 82 00         [24] 2467 	mov	dpl,#0x00
      0005EE 22               [24] 2468 	ret
                                   2469 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:671: case RADIO_PARAM_16BIT_ADDR:
      0005EF                       2470 00106$:
                                   2471 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:672: *value = get_short_addr();
      0005EF E5 81            [12] 2472 	mov	a,sp
      0005F1 24 FC            [12] 2473 	add	a,#0xfc
      0005F3 F8               [12] 2474 	mov	r0,a
      0005F4 86 05            [24] 2475 	mov	ar5,@r0
      0005F6 08               [12] 2476 	inc	r0
      0005F7 86 06            [24] 2477 	mov	ar6,@r0
      0005F9 08               [12] 2478 	inc	r0
      0005FA 86 07            [24] 2479 	mov	ar7,@r0
      0005FC C0 07            [24] 2480 	push	ar7
      0005FE C0 06            [24] 2481 	push	ar6
      000600 C0 05            [24] 2482 	push	ar5
      000602 12r00r7B         [24] 2483 	lcall	_get_short_addr
      000605 AB 82            [24] 2484 	mov	r3,dpl
      000607 AC 83            [24] 2485 	mov	r4,dph
      000609 D0 05            [24] 2486 	pop	ar5
      00060B D0 06            [24] 2487 	pop	ar6
      00060D D0 07            [24] 2488 	pop	ar7
      00060F 8D 82            [24] 2489 	mov	dpl,r5
      000611 8E 83            [24] 2490 	mov	dph,r6
      000613 8F F0            [24] 2491 	mov	b,r7
      000615 EB               [12] 2492 	mov	a,r3
      000616 12r00r00         [24] 2493 	lcall	__gptrput
      000619 A3               [24] 2494 	inc	dptr
      00061A EC               [12] 2495 	mov	a,r4
      00061B 12r00r00         [24] 2496 	lcall	__gptrput
                                   2497 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:673: return RADIO_RESULT_OK;
      00061E 75 82 00         [24] 2498 	mov	dpl,#0x00
      000621 22               [24] 2499 	ret
                                   2500 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:674: case RADIO_PARAM_RX_MODE:
      000622                       2501 00107$:
                                   2502 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:675: *value = 0;
      000622 E5 81            [12] 2503 	mov	a,sp
      000624 24 FC            [12] 2504 	add	a,#0xfc
      000626 F8               [12] 2505 	mov	r0,a
      000627 86 05            [24] 2506 	mov	ar5,@r0
      000629 08               [12] 2507 	inc	r0
      00062A 86 06            [24] 2508 	mov	ar6,@r0
      00062C 08               [12] 2509 	inc	r0
      00062D 86 07            [24] 2510 	mov	ar7,@r0
      00062F 8D 82            [24] 2511 	mov	dpl,r5
      000631 8E 83            [24] 2512 	mov	dph,r6
      000633 8F F0            [24] 2513 	mov	b,r7
      000635 E4               [12] 2514 	clr	a
      000636 12r00r00         [24] 2515 	lcall	__gptrput
      000639 A3               [24] 2516 	inc	dptr
      00063A 12r00r00         [24] 2517 	lcall	__gptrput
                                   2518 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:676: if(FRMFILT0 & FRMFILT0_FRAME_FILTER_EN) {
      00063D 90 61 80         [24] 2519 	mov	dptr,#_FRMFILT0
      000640 E0               [24] 2520 	movx	a,@dptr
      000641 FC               [12] 2521 	mov	r4,a
      000642 30 E0 21         [24] 2522 	jnb	acc.0,00109$
                                   2523 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:677: *value |= RADIO_RX_MODE_ADDRESS_FILTER;
      000645 8D 82            [24] 2524 	mov	dpl,r5
      000647 8E 83            [24] 2525 	mov	dph,r6
      000649 8F F0            [24] 2526 	mov	b,r7
      00064B 12r00r00         [24] 2527 	lcall	__gptrget
      00064E FB               [12] 2528 	mov	r3,a
      00064F A3               [24] 2529 	inc	dptr
      000650 12r00r00         [24] 2530 	lcall	__gptrget
      000653 FC               [12] 2531 	mov	r4,a
      000654 43 03 01         [24] 2532 	orl	ar3,#0x01
      000657 8D 82            [24] 2533 	mov	dpl,r5
      000659 8E 83            [24] 2534 	mov	dph,r6
      00065B 8F F0            [24] 2535 	mov	b,r7
      00065D EB               [12] 2536 	mov	a,r3
      00065E 12r00r00         [24] 2537 	lcall	__gptrput
      000661 A3               [24] 2538 	inc	dptr
      000662 EC               [12] 2539 	mov	a,r4
      000663 12r00r00         [24] 2540 	lcall	__gptrput
      000666                       2541 00109$:
                                   2542 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:679: if(FRMCTRL0 & FRMCTRL0_AUTOACK) {
      000666 90 61 89         [24] 2543 	mov	dptr,#_FRMCTRL0
      000669 E0               [24] 2544 	movx	a,@dptr
      00066A FC               [12] 2545 	mov	r4,a
      00066B 30 E5 21         [24] 2546 	jnb	acc.5,00111$
                                   2547 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:680: *value |= RADIO_RX_MODE_AUTOACK;
      00066E 8D 82            [24] 2548 	mov	dpl,r5
      000670 8E 83            [24] 2549 	mov	dph,r6
      000672 8F F0            [24] 2550 	mov	b,r7
      000674 12r00r00         [24] 2551 	lcall	__gptrget
      000677 FB               [12] 2552 	mov	r3,a
      000678 A3               [24] 2553 	inc	dptr
      000679 12r00r00         [24] 2554 	lcall	__gptrget
      00067C FC               [12] 2555 	mov	r4,a
      00067D 43 03 02         [24] 2556 	orl	ar3,#0x02
      000680 8D 82            [24] 2557 	mov	dpl,r5
      000682 8E 83            [24] 2558 	mov	dph,r6
      000684 8F F0            [24] 2559 	mov	b,r7
      000686 EB               [12] 2560 	mov	a,r3
      000687 12r00r00         [24] 2561 	lcall	__gptrput
      00068A A3               [24] 2562 	inc	dptr
      00068B EC               [12] 2563 	mov	a,r4
      00068C 12r00r00         [24] 2564 	lcall	__gptrput
      00068F                       2565 00111$:
                                   2566 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:682: return RADIO_RESULT_OK;
      00068F 75 82 00         [24] 2567 	mov	dpl,#0x00
      000692 22               [24] 2568 	ret
                                   2569 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:683: case RADIO_PARAM_TXPOWER:
      000693                       2570 00112$:
                                   2571 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:684: *value = get_tx_power();
      000693 E5 81            [12] 2572 	mov	a,sp
      000695 24 FC            [12] 2573 	add	a,#0xfc
      000697 F8               [12] 2574 	mov	r0,a
      000698 86 05            [24] 2575 	mov	ar5,@r0
      00069A 08               [12] 2576 	inc	r0
      00069B 86 06            [24] 2577 	mov	ar6,@r0
      00069D 08               [12] 2578 	inc	r0
      00069E 86 07            [24] 2579 	mov	ar7,@r0
      0006A0 C0 07            [24] 2580 	push	ar7
      0006A2 C0 06            [24] 2581 	push	ar6
      0006A4 C0 05            [24] 2582 	push	ar5
      0006A6 12r00rFD         [24] 2583 	lcall	_get_tx_power
      0006A9 AB 82            [24] 2584 	mov	r3,dpl
      0006AB AC 83            [24] 2585 	mov	r4,dph
      0006AD D0 05            [24] 2586 	pop	ar5
      0006AF D0 06            [24] 2587 	pop	ar6
      0006B1 D0 07            [24] 2588 	pop	ar7
      0006B3 8D 82            [24] 2589 	mov	dpl,r5
      0006B5 8E 83            [24] 2590 	mov	dph,r6
      0006B7 8F F0            [24] 2591 	mov	b,r7
      0006B9 EB               [12] 2592 	mov	a,r3
      0006BA 12r00r00         [24] 2593 	lcall	__gptrput
      0006BD A3               [24] 2594 	inc	dptr
      0006BE EC               [12] 2595 	mov	a,r4
      0006BF 12r00r00         [24] 2596 	lcall	__gptrput
                                   2597 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:685: return RADIO_RESULT_OK;
      0006C2 75 82 00         [24] 2598 	mov	dpl,#0x00
      0006C5 22               [24] 2599 	ret
                                   2600 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:686: case RADIO_PARAM_CCA_THRESHOLD:
      0006C6                       2601 00113$:
                                   2602 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:687: *value = get_cca_threshold();
      0006C6 E5 81            [12] 2603 	mov	a,sp
      0006C8 24 FC            [12] 2604 	add	a,#0xfc
      0006CA F8               [12] 2605 	mov	r0,a
      0006CB 86 05            [24] 2606 	mov	ar5,@r0
      0006CD 08               [12] 2607 	inc	r0
      0006CE 86 06            [24] 2608 	mov	ar6,@r0
      0006D0 08               [12] 2609 	inc	r0
      0006D1 86 07            [24] 2610 	mov	ar7,@r0
      0006D3 C0 07            [24] 2611 	push	ar7
      0006D5 C0 06            [24] 2612 	push	ar6
      0006D7 C0 05            [24] 2613 	push	ar5
      0006D9 12r00rDE         [24] 2614 	lcall	_get_cca_threshold
      0006DC AB 82            [24] 2615 	mov	r3,dpl
      0006DE AC 83            [24] 2616 	mov	r4,dph
      0006E0 D0 05            [24] 2617 	pop	ar5
      0006E2 D0 06            [24] 2618 	pop	ar6
      0006E4 D0 07            [24] 2619 	pop	ar7
      0006E6 8D 82            [24] 2620 	mov	dpl,r5
      0006E8 8E 83            [24] 2621 	mov	dph,r6
      0006EA 8F F0            [24] 2622 	mov	b,r7
      0006EC EB               [12] 2623 	mov	a,r3
      0006ED 12r00r00         [24] 2624 	lcall	__gptrput
      0006F0 A3               [24] 2625 	inc	dptr
      0006F1 EC               [12] 2626 	mov	a,r4
      0006F2 12r00r00         [24] 2627 	lcall	__gptrput
                                   2628 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:688: return RADIO_RESULT_OK;
      0006F5 75 82 00         [24] 2629 	mov	dpl,#0x00
      0006F8 22               [24] 2630 	ret
                                   2631 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:689: case RADIO_PARAM_RSSI:
      0006F9                       2632 00114$:
                                   2633 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:690: *value = get_rssi();
      0006F9 E5 81            [12] 2634 	mov	a,sp
      0006FB 24 FC            [12] 2635 	add	a,#0xfc
      0006FD F8               [12] 2636 	mov	r0,a
      0006FE 86 05            [24] 2637 	mov	ar5,@r0
      000700 08               [12] 2638 	inc	r0
      000701 86 06            [24] 2639 	mov	ar6,@r0
      000703 08               [12] 2640 	inc	r0
      000704 86 07            [24] 2641 	mov	ar7,@r0
      000706 C0 07            [24] 2642 	push	ar7
      000708 C0 06            [24] 2643 	push	ar6
      00070A C0 05            [24] 2644 	push	ar5
      00070C 12r00rA3         [24] 2645 	lcall	_get_rssi
      00070F AB 82            [24] 2646 	mov	r3,dpl
      000711 AC 83            [24] 2647 	mov	r4,dph
      000713 D0 05            [24] 2648 	pop	ar5
      000715 D0 06            [24] 2649 	pop	ar6
      000717 D0 07            [24] 2650 	pop	ar7
      000719 8D 82            [24] 2651 	mov	dpl,r5
      00071B 8E 83            [24] 2652 	mov	dph,r6
      00071D 8F F0            [24] 2653 	mov	b,r7
      00071F EB               [12] 2654 	mov	a,r3
      000720 12r00r00         [24] 2655 	lcall	__gptrput
      000723 A3               [24] 2656 	inc	dptr
      000724 EC               [12] 2657 	mov	a,r4
      000725 12r00r00         [24] 2658 	lcall	__gptrput
                                   2659 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:691: return RADIO_RESULT_OK;
      000728 75 82 00         [24] 2660 	mov	dpl,#0x00
      00072B 22               [24] 2661 	ret
                                   2662 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:692: case RADIO_CONST_CHANNEL_MIN:
      00072C                       2663 00115$:
                                   2664 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:693: *value = CC2530_RF_CHANNEL_MIN;
      00072C E5 81            [12] 2665 	mov	a,sp
      00072E 24 FC            [12] 2666 	add	a,#0xfc
      000730 F8               [12] 2667 	mov	r0,a
      000731 86 05            [24] 2668 	mov	ar5,@r0
      000733 08               [12] 2669 	inc	r0
      000734 86 06            [24] 2670 	mov	ar6,@r0
      000736 08               [12] 2671 	inc	r0
      000737 86 07            [24] 2672 	mov	ar7,@r0
      000739 8D 82            [24] 2673 	mov	dpl,r5
      00073B 8E 83            [24] 2674 	mov	dph,r6
      00073D 8F F0            [24] 2675 	mov	b,r7
      00073F 74 0B            [12] 2676 	mov	a,#0x0B
      000741 12r00r00         [24] 2677 	lcall	__gptrput
      000744 A3               [24] 2678 	inc	dptr
      000745 E4               [12] 2679 	clr	a
      000746 12r00r00         [24] 2680 	lcall	__gptrput
                                   2681 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:694: return RADIO_RESULT_OK;
      000749 75 82 00         [24] 2682 	mov	dpl,#0x00
      00074C 22               [24] 2683 	ret
                                   2684 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:695: case RADIO_CONST_CHANNEL_MAX:
      00074D                       2685 00116$:
                                   2686 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:696: *value = CC2530_RF_CHANNEL_MAX;
      00074D E5 81            [12] 2687 	mov	a,sp
      00074F 24 FC            [12] 2688 	add	a,#0xfc
      000751 F8               [12] 2689 	mov	r0,a
      000752 86 05            [24] 2690 	mov	ar5,@r0
      000754 08               [12] 2691 	inc	r0
      000755 86 06            [24] 2692 	mov	ar6,@r0
      000757 08               [12] 2693 	inc	r0
      000758 86 07            [24] 2694 	mov	ar7,@r0
      00075A 8D 82            [24] 2695 	mov	dpl,r5
      00075C 8E 83            [24] 2696 	mov	dph,r6
      00075E 8F F0            [24] 2697 	mov	b,r7
      000760 74 1A            [12] 2698 	mov	a,#0x1A
      000762 12r00r00         [24] 2699 	lcall	__gptrput
      000765 A3               [24] 2700 	inc	dptr
      000766 E4               [12] 2701 	clr	a
      000767 12r00r00         [24] 2702 	lcall	__gptrput
                                   2703 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:697: return RADIO_RESULT_OK;
      00076A 75 82 00         [24] 2704 	mov	dpl,#0x00
                                   2705 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:698: case RADIO_CONST_TXPOWER_MIN:
      00076D 22               [24] 2706 	ret
      00076E                       2707 00117$:
                                   2708 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:699: *value = OUTPUT_POWER_MIN;
      00076E E5 81            [12] 2709 	mov	a,sp
      000770 24 FC            [12] 2710 	add	a,#0xfc
      000772 F8               [12] 2711 	mov	r0,a
      000773 86 05            [24] 2712 	mov	ar5,@r0
      000775 08               [12] 2713 	inc	r0
      000776 86 06            [24] 2714 	mov	ar6,@r0
      000778 08               [12] 2715 	inc	r0
      000779 86 07            [24] 2716 	mov	ar7,@r0
      00077B 90r00r30         [24] 2717 	mov	dptr,#(_output_power + 0x0030)
      00077E E4               [12] 2718 	clr	a
      00077F 93               [24] 2719 	movc	a,@a+dptr
      000780 FB               [12] 2720 	mov	r3,a
      000781 A3               [24] 2721 	inc	dptr
      000782 E4               [12] 2722 	clr	a
      000783 93               [24] 2723 	movc	a,@a+dptr
      000784 FC               [12] 2724 	mov	r4,a
      000785 8D 82            [24] 2725 	mov	dpl,r5
      000787 8E 83            [24] 2726 	mov	dph,r6
      000789 8F F0            [24] 2727 	mov	b,r7
      00078B EB               [12] 2728 	mov	a,r3
      00078C 12r00r00         [24] 2729 	lcall	__gptrput
      00078F A3               [24] 2730 	inc	dptr
      000790 EC               [12] 2731 	mov	a,r4
      000791 12r00r00         [24] 2732 	lcall	__gptrput
                                   2733 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:700: return RADIO_RESULT_OK;
      000794 75 82 00         [24] 2734 	mov	dpl,#0x00
                                   2735 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:701: case RADIO_CONST_TXPOWER_MAX:
      000797 22               [24] 2736 	ret
      000798                       2737 00118$:
                                   2738 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:702: *value = OUTPUT_POWER_MAX;
      000798 E5 81            [12] 2739 	mov	a,sp
      00079A 24 FC            [12] 2740 	add	a,#0xfc
      00079C F8               [12] 2741 	mov	r0,a
      00079D 86 05            [24] 2742 	mov	ar5,@r0
      00079F 08               [12] 2743 	inc	r0
      0007A0 86 06            [24] 2744 	mov	ar6,@r0
      0007A2 08               [12] 2745 	inc	r0
      0007A3 86 07            [24] 2746 	mov	ar7,@r0
      0007A5 90r00r00         [24] 2747 	mov	dptr,#_output_power
      0007A8 E4               [12] 2748 	clr	a
      0007A9 93               [24] 2749 	movc	a,@a+dptr
      0007AA FB               [12] 2750 	mov	r3,a
      0007AB A3               [24] 2751 	inc	dptr
      0007AC E4               [12] 2752 	clr	a
      0007AD 93               [24] 2753 	movc	a,@a+dptr
      0007AE FC               [12] 2754 	mov	r4,a
      0007AF 8D 82            [24] 2755 	mov	dpl,r5
      0007B1 8E 83            [24] 2756 	mov	dph,r6
      0007B3 8F F0            [24] 2757 	mov	b,r7
      0007B5 EB               [12] 2758 	mov	a,r3
      0007B6 12r00r00         [24] 2759 	lcall	__gptrput
      0007B9 A3               [24] 2760 	inc	dptr
      0007BA EC               [12] 2761 	mov	a,r4
      0007BB 12r00r00         [24] 2762 	lcall	__gptrput
                                   2763 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:703: return RADIO_RESULT_OK;
      0007BE 75 82 00         [24] 2764 	mov	dpl,#0x00
                                   2765 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:704: default:
      0007C1 22               [24] 2766 	ret
      0007C2                       2767 00119$:
                                   2768 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:705: return RADIO_RESULT_NOT_SUPPORTED;
      0007C2 75 82 01         [24] 2769 	mov	dpl,#0x01
                                   2770 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:706: }
      0007C5 22               [24] 2771 	ret
                                   2772 ;------------------------------------------------------------
                                   2773 ;Allocation info for local variables in function 'set_value'
                                   2774 ;------------------------------------------------------------
                                   2775 ;value                     Allocated to stack - sp -3
                                   2776 ;param                     Allocated to registers r6 r7 
                                   2777 ;------------------------------------------------------------
                                   2778 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:710: set_value(radio_param_t param, radio_value_t value)
                                   2779 ;	-----------------------------------------
                                   2780 ;	 function set_value
                                   2781 ;	-----------------------------------------
      0007C6                       2782 _set_value:
      0007C6 AE 82            [24] 2783 	mov	r6,dpl
      0007C8 AF 83            [24] 2784 	mov	r7,dph
                                   2785 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:712: switch(param) {
      0007CA C3               [12] 2786 	clr	c
      0007CB 74 07            [12] 2787 	mov	a,#0x07
      0007CD 9E               [12] 2788 	subb	a,r6
      0007CE E4               [12] 2789 	clr	a
      0007CF 9F               [12] 2790 	subb	a,r7
      0007D0 50 03            [24] 2791 	jnc	00147$
      0007D2 02r09r3E         [24] 2792 	ljmp	00122$
      0007D5                       2793 00147$:
      0007D5 EE               [12] 2794 	mov	a,r6
      0007D6 24 0A            [12] 2795 	add	a,#(00148$-3-.)
      0007D8 83               [24] 2796 	movc	a,@a+pc
      0007D9 F5 82            [12] 2797 	mov	dpl,a
      0007DB EE               [12] 2798 	mov	a,r6
      0007DC 24 0C            [12] 2799 	add	a,#(00149$-3-.)
      0007DE 83               [24] 2800 	movc	a,@a+pc
      0007DF F5 83            [12] 2801 	mov	dph,a
      0007E1 E4               [12] 2802 	clr	a
      0007E2 73               [24] 2803 	jmp	@a+dptr
      0007E3                       2804 00148$:
      0007E3rF3                    2805 	.db	00101$
      0007E4r1B                    2806 	.db	00106$
      0007E5r5E                    2807 	.db	00112$
      0007E6r73                    2808 	.db	00113$
      0007E7r88                    2809 	.db	00114$
      0007E8r3E                    2810 	.db	00122$
      0007E9rDA                    2811 	.db	00117$
      0007EAr2D                    2812 	.db	00121$
      0007EB                       2813 00149$:
      0007EBs07                    2814 	.db	00101$>>8
      0007ECs08                    2815 	.db	00106$>>8
      0007EDs08                    2816 	.db	00112$>>8
      0007EEs08                    2817 	.db	00113$>>8
      0007EFs08                    2818 	.db	00114$>>8
      0007F0s09                    2819 	.db	00122$>>8
      0007F1s08                    2820 	.db	00117$>>8
      0007F2s09                    2821 	.db	00121$>>8
                                   2822 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:713: case RADIO_PARAM_POWER_MODE:
      0007F3                       2823 00101$:
                                   2824 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:714: if(value == RADIO_POWER_MODE_ON) {
      0007F3 E5 81            [12] 2825 	mov	a,sp
      0007F5 24 FD            [12] 2826 	add	a,#0xfd
      0007F7 F8               [12] 2827 	mov	r0,a
      0007F8 B6 01 0B         [24] 2828 	cjne	@r0,#0x01,00103$
      0007FB 08               [12] 2829 	inc	r0
      0007FC B6 00 07         [24] 2830 	cjne	@r0,#0x00,00103$
                                   2831 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:715: on();
      0007FF 12r04rEA         [24] 2832 	lcall	_on
                                   2833 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:716: return RADIO_RESULT_OK;
      000802 75 82 00         [24] 2834 	mov	dpl,#0x00
      000805 22               [24] 2835 	ret
      000806                       2836 00103$:
                                   2837 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:718: if(value == RADIO_POWER_MODE_OFF) {
      000806 E5 81            [12] 2838 	mov	a,sp
      000808 24 FD            [12] 2839 	add	a,#0xfd
      00080A F8               [12] 2840 	mov	r0,a
      00080B E6               [12] 2841 	mov	a,@r0
      00080C 08               [12] 2842 	inc	r0
      00080D 46               [12] 2843 	orl	a,@r0
      00080E 70 07            [24] 2844 	jnz	00105$
                                   2845 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:719: off();
      000810 12r04rFF         [24] 2846 	lcall	_off
                                   2847 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:720: return RADIO_RESULT_OK;
      000813 75 82 00         [24] 2848 	mov	dpl,#0x00
      000816 22               [24] 2849 	ret
      000817                       2850 00105$:
                                   2851 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:722: return RADIO_RESULT_INVALID_VALUE;
      000817 75 82 02         [24] 2852 	mov	dpl,#0x02
      00081A 22               [24] 2853 	ret
                                   2854 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:723: case RADIO_PARAM_CHANNEL:
      00081B                       2855 00106$:
                                   2856 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:724: if(value < CC2530_RF_CHANNEL_MIN || value > CC2530_RF_CHANNEL_MAX) {
      00081B E5 81            [12] 2857 	mov	a,sp
      00081D 24 FD            [12] 2858 	add	a,#0xfd
      00081F F8               [12] 2859 	mov	r0,a
      000820 C3               [12] 2860 	clr	c
      000821 E6               [12] 2861 	mov	a,@r0
      000822 94 0B            [12] 2862 	subb	a,#0x0B
      000824 08               [12] 2863 	inc	r0
      000825 E6               [12] 2864 	mov	a,@r0
      000826 64 80            [12] 2865 	xrl	a,#0x80
      000828 94 80            [12] 2866 	subb	a,#0x80
      00082A 40 15            [24] 2867 	jc	00107$
      00082C E5 81            [12] 2868 	mov	a,sp
      00082E 24 FD            [12] 2869 	add	a,#0xfd
      000830 F8               [12] 2870 	mov	r0,a
      000831 C3               [12] 2871 	clr	c
      000832 74 1A            [12] 2872 	mov	a,#0x1A
      000834 96               [12] 2873 	subb	a,@r0
      000835 74 80            [12] 2874 	mov	a,#(0x00 ^ 0x80)
      000837 08               [12] 2875 	inc	r0
      000838 86 F0            [24] 2876 	mov	b,@r0
      00083A 63 F0 80         [24] 2877 	xrl	b,#0x80
      00083D 95 F0            [12] 2878 	subb	a,b
      00083F 50 04            [24] 2879 	jnc	00108$
      000841                       2880 00107$:
                                   2881 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:725: return RADIO_RESULT_INVALID_VALUE;
      000841 75 82 02         [24] 2882 	mov	dpl,#0x02
      000844 22               [24] 2883 	ret
      000845                       2884 00108$:
                                   2885 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:727: if(set_channel(value) == CC2530_RF_CHANNEL_SET_ERROR) {
      000845 E5 81            [12] 2886 	mov	a,sp
      000847 24 FD            [12] 2887 	add	a,#0xfd
      000849 F8               [12] 2888 	mov	r0,a
      00084A 86 07            [24] 2889 	mov	ar7,@r0
      00084C 8F 82            [24] 2890 	mov	dpl,r7
      00084E 12r00r25         [24] 2891 	lcall	_set_channel
      000851 AF 82            [24] 2892 	mov	r7,dpl
      000853 BF FF 04         [24] 2893 	cjne	r7,#0xFF,00111$
                                   2894 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:728: return RADIO_RESULT_ERROR;
      000856 75 82 03         [24] 2895 	mov	dpl,#0x03
      000859 22               [24] 2896 	ret
      00085A                       2897 00111$:
                                   2898 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:730: return RADIO_RESULT_OK;
      00085A 75 82 00         [24] 2899 	mov	dpl,#0x00
      00085D 22               [24] 2900 	ret
                                   2901 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:731: case RADIO_PARAM_PAN_ID:
      00085E                       2902 00112$:
                                   2903 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:732: set_pan_id(value & 0xffff);
      00085E E5 81            [12] 2904 	mov	a,sp
      000860 24 FD            [12] 2905 	add	a,#0xfd
      000862 F8               [12] 2906 	mov	r0,a
      000863 86 06            [24] 2907 	mov	ar6,@r0
      000865 08               [12] 2908 	inc	r0
      000866 86 07            [24] 2909 	mov	ar7,@r0
      000868 8E 82            [24] 2910 	mov	dpl,r6
      00086A 8F 83            [24] 2911 	mov	dph,r7
      00086C 12r00r6A         [24] 2912 	lcall	_set_pan_id
                                   2913 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:733: return RADIO_RESULT_OK;
      00086F 75 82 00         [24] 2914 	mov	dpl,#0x00
      000872 22               [24] 2915 	ret
                                   2916 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:734: case RADIO_PARAM_16BIT_ADDR:
      000873                       2917 00113$:
                                   2918 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:735: set_short_addr(value & 0xffff);
      000873 E5 81            [12] 2919 	mov	a,sp
      000875 24 FD            [12] 2920 	add	a,#0xfd
      000877 F8               [12] 2921 	mov	r0,a
      000878 86 06            [24] 2922 	mov	ar6,@r0
      00087A 08               [12] 2923 	inc	r0
      00087B 86 07            [24] 2924 	mov	ar7,@r0
      00087D 8E 82            [24] 2925 	mov	dpl,r6
      00087F 8F 83            [24] 2926 	mov	dph,r7
      000881 12r00r92         [24] 2927 	lcall	_set_short_addr
                                   2928 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:736: return RADIO_RESULT_OK;
      000884 75 82 00         [24] 2929 	mov	dpl,#0x00
      000887 22               [24] 2930 	ret
                                   2931 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:737: case RADIO_PARAM_RX_MODE:
      000888                       2932 00114$:
                                   2933 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:739: RADIO_RX_MODE_AUTOACK)) {
      000888 E5 81            [12] 2934 	mov	a,sp
      00088A 24 FD            [12] 2935 	add	a,#0xfd
      00088C F8               [12] 2936 	mov	r0,a
      00088D E6               [12] 2937 	mov	a,@r0
      00088E 54 FC            [12] 2938 	anl	a,#0xFC
      000890 70 04            [24] 2939 	jnz	00157$
      000892 08               [12] 2940 	inc	r0
      000893 E6               [12] 2941 	mov	a,@r0
      000894 60 04            [24] 2942 	jz	00116$
      000896                       2943 00157$:
                                   2944 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:740: return RADIO_RESULT_INVALID_VALUE;
      000896 75 82 02         [24] 2945 	mov	dpl,#0x02
      000899 22               [24] 2946 	ret
      00089A                       2947 00116$:
                                   2948 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:743: set_frame_filtering((value & RADIO_RX_MODE_ADDRESS_FILTER) != 0);
      00089A E5 81            [12] 2949 	mov	a,sp
      00089C 24 FD            [12] 2950 	add	a,#0xfd
      00089E F8               [12] 2951 	mov	r0,a
      00089F 74 01            [12] 2952 	mov	a,#0x01
      0008A1 56               [12] 2953 	anl	a,@r0
      0008A2 FE               [12] 2954 	mov	r6,a
      0008A3 7F 00            [12] 2955 	mov	r7,#0x00
      0008A5 E4               [12] 2956 	clr	a
      0008A6 BE 00 04         [24] 2957 	cjne	r6,#0x00,00158$
      0008A9 BF 00 01         [24] 2958 	cjne	r7,#0x00,00158$
      0008AC 04               [12] 2959 	inc	a
      0008AD                       2960 00158$:
      0008AD FE               [12] 2961 	mov	r6,a
      0008AE B4 01 00         [24] 2962 	cjne	a,#0x01,00160$
      0008B1                       2963 00160$:
      0008B1 E4               [12] 2964 	clr	a
      0008B2 33               [12] 2965 	rlc	a
      0008B3 F5 82            [12] 2966 	mov	dpl,a
      0008B5 12r02r0B         [24] 2967 	lcall	_set_frame_filtering
                                   2968 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:744: set_auto_ack((value & RADIO_RX_MODE_AUTOACK) != 0);
      0008B8 E5 81            [12] 2969 	mov	a,sp
      0008BA 24 FD            [12] 2970 	add	a,#0xfd
      0008BC F8               [12] 2971 	mov	r0,a
      0008BD 74 02            [12] 2972 	mov	a,#0x02
      0008BF 56               [12] 2973 	anl	a,@r0
      0008C0 FE               [12] 2974 	mov	r6,a
      0008C1 7F 00            [12] 2975 	mov	r7,#0x00
      0008C3 E4               [12] 2976 	clr	a
      0008C4 BE 00 04         [24] 2977 	cjne	r6,#0x00,00161$
      0008C7 BF 00 01         [24] 2978 	cjne	r7,#0x00,00161$
      0008CA 04               [12] 2979 	inc	a
      0008CB                       2980 00161$:
      0008CB FE               [12] 2981 	mov	r6,a
      0008CC B4 01 00         [24] 2982 	cjne	a,#0x01,00163$
      0008CF                       2983 00163$:
      0008CF E4               [12] 2984 	clr	a
      0008D0 33               [12] 2985 	rlc	a
      0008D1 F5 82            [12] 2986 	mov	dpl,a
      0008D3 12r02r24         [24] 2987 	lcall	_set_auto_ack
                                   2988 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:746: return RADIO_RESULT_OK;
      0008D6 75 82 00         [24] 2989 	mov	dpl,#0x00
                                   2990 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:747: case RADIO_PARAM_TXPOWER:
      0008D9 22               [24] 2991 	ret
      0008DA                       2992 00117$:
                                   2993 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:748: if(value < OUTPUT_POWER_MIN || value > OUTPUT_POWER_MAX) {
      0008DA 90r00r30         [24] 2994 	mov	dptr,#(_output_power + 0x0030)
      0008DD E4               [12] 2995 	clr	a
      0008DE 93               [24] 2996 	movc	a,@a+dptr
      0008DF FE               [12] 2997 	mov	r6,a
      0008E0 A3               [24] 2998 	inc	dptr
      0008E1 E4               [12] 2999 	clr	a
      0008E2 93               [24] 3000 	movc	a,@a+dptr
      0008E3 FF               [12] 3001 	mov	r7,a
      0008E4 E5 81            [12] 3002 	mov	a,sp
      0008E6 24 FD            [12] 3003 	add	a,#0xfd
      0008E8 F8               [12] 3004 	mov	r0,a
      0008E9 C3               [12] 3005 	clr	c
      0008EA E6               [12] 3006 	mov	a,@r0
      0008EB 9E               [12] 3007 	subb	a,r6
      0008EC 08               [12] 3008 	inc	r0
      0008ED E6               [12] 3009 	mov	a,@r0
      0008EE 64 80            [12] 3010 	xrl	a,#0x80
      0008F0 8F F0            [24] 3011 	mov	b,r7
      0008F2 63 F0 80         [24] 3012 	xrl	b,#0x80
      0008F5 95 F0            [12] 3013 	subb	a,b
      0008F7 40 1F            [24] 3014 	jc	00118$
      0008F9 90r00r00         [24] 3015 	mov	dptr,#_output_power
      0008FC E4               [12] 3016 	clr	a
      0008FD 93               [24] 3017 	movc	a,@a+dptr
      0008FE FE               [12] 3018 	mov	r6,a
      0008FF A3               [24] 3019 	inc	dptr
      000900 E4               [12] 3020 	clr	a
      000901 93               [24] 3021 	movc	a,@a+dptr
      000902 FF               [12] 3022 	mov	r7,a
      000903 E5 81            [12] 3023 	mov	a,sp
      000905 24 FD            [12] 3024 	add	a,#0xfd
      000907 F8               [12] 3025 	mov	r0,a
      000908 C3               [12] 3026 	clr	c
      000909 EE               [12] 3027 	mov	a,r6
      00090A 96               [12] 3028 	subb	a,@r0
      00090B EF               [12] 3029 	mov	a,r7
      00090C 64 80            [12] 3030 	xrl	a,#0x80
      00090E 08               [12] 3031 	inc	r0
      00090F 86 F0            [24] 3032 	mov	b,@r0
      000911 63 F0 80         [24] 3033 	xrl	b,#0x80
      000914 95 F0            [12] 3034 	subb	a,b
      000916 50 04            [24] 3035 	jnc	00119$
      000918                       3036 00118$:
                                   3037 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:749: return RADIO_RESULT_INVALID_VALUE;
      000918 75 82 02         [24] 3038 	mov	dpl,#0x02
      00091B 22               [24] 3039 	ret
      00091C                       3040 00119$:
                                   3041 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:752: set_tx_power(value);
      00091C E5 81            [12] 3042 	mov	a,sp
      00091E 24 FD            [12] 3043 	add	a,#0xfd
      000920 F8               [12] 3044 	mov	r0,a
      000921 86 82            [24] 3045 	mov	dpl,@r0
      000923 08               [12] 3046 	inc	r0
      000924 86 83            [24] 3047 	mov	dph,@r0
      000926 12r01r89         [24] 3048 	lcall	_set_tx_power
                                   3049 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:753: return RADIO_RESULT_OK;
      000929 75 82 00         [24] 3050 	mov	dpl,#0x00
                                   3051 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:754: case RADIO_PARAM_CCA_THRESHOLD:
      00092C 22               [24] 3052 	ret
      00092D                       3053 00121$:
                                   3054 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:755: set_cca_threshold(value);
      00092D E5 81            [12] 3055 	mov	a,sp
      00092F 24 FD            [12] 3056 	add	a,#0xfd
      000931 F8               [12] 3057 	mov	r0,a
      000932 86 82            [24] 3058 	mov	dpl,@r0
      000934 08               [12] 3059 	inc	r0
      000935 86 83            [24] 3060 	mov	dph,@r0
      000937 12r00rF3         [24] 3061 	lcall	_set_cca_threshold
                                   3062 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:756: return RADIO_RESULT_OK;
      00093A 75 82 00         [24] 3063 	mov	dpl,#0x00
                                   3064 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:757: default:
      00093D 22               [24] 3065 	ret
      00093E                       3066 00122$:
                                   3067 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:758: return RADIO_RESULT_NOT_SUPPORTED;
      00093E 75 82 01         [24] 3068 	mov	dpl,#0x01
                                   3069 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:759: }
      000941 22               [24] 3070 	ret
                                   3071 ;------------------------------------------------------------
                                   3072 ;Allocation info for local variables in function 'get_object'
                                   3073 ;------------------------------------------------------------
                                   3074 ;dest                      Allocated to stack - sp -9
                                   3075 ;size                      Allocated to stack - sp -11
                                   3076 ;param                     Allocated to registers r6 r7 
                                   3077 ;target                    Allocated to stack - sp -4
                                   3078 ;i                         Allocated to stack - sp -1
                                   3079 ;------------------------------------------------------------
                                   3080 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:763: get_object(radio_param_t param, void *dest, size_t size)
                                   3081 ;	-----------------------------------------
                                   3082 ;	 function get_object
                                   3083 ;	-----------------------------------------
      000942                       3084 _get_object:
      000942 E5 81            [12] 3085 	mov	a,sp
      000944 24 05            [12] 3086 	add	a,#0x05
      000946 F5 81            [12] 3087 	mov	sp,a
      000948 AE 82            [24] 3088 	mov	r6,dpl
      00094A AF 83            [24] 3089 	mov	r7,dph
                                   3090 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:768: if(param == RADIO_PARAM_64BIT_ADDR) {
      00094C BE 09 05         [24] 3091 	cjne	r6,#0x09,00124$
      00094F BF 00 02         [24] 3092 	cjne	r7,#0x00,00124$
      000952 80 03            [24] 3093 	sjmp	00125$
      000954                       3094 00124$:
      000954 02r09rDE         [24] 3095 	ljmp	00106$
      000957                       3096 00125$:
                                   3097 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:769: if(size != 8 || !dest) {
      000957 E5 81            [12] 3098 	mov	a,sp
      000959 24 F5            [12] 3099 	add	a,#0xf5
      00095B F8               [12] 3100 	mov	r0,a
      00095C B6 08 0E         [24] 3101 	cjne	@r0,#0x08,00101$
      00095F 08               [12] 3102 	inc	r0
      000960 B6 00 0A         [24] 3103 	cjne	@r0,#0x00,00101$
      000963 E5 81            [12] 3104 	mov	a,sp
      000965 24 F7            [12] 3105 	add	a,#0xf7
      000967 F8               [12] 3106 	mov	r0,a
      000968 E6               [12] 3107 	mov	a,@r0
      000969 08               [12] 3108 	inc	r0
      00096A 46               [12] 3109 	orl	a,@r0
      00096B 70 05            [24] 3110 	jnz	00102$
      00096D                       3111 00101$:
                                   3112 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:770: return RADIO_RESULT_INVALID_VALUE;
      00096D 75 82 02         [24] 3113 	mov	dpl,#0x02
      000970 80 6F            [24] 3114 	sjmp	00109$
      000972                       3115 00102$:
                                   3116 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:773: target = dest;
      000972 E5 81            [12] 3117 	mov	a,sp
      000974 24 F7            [12] 3118 	add	a,#0xf7
      000976 F8               [12] 3119 	mov	r0,a
      000977 E5 81            [12] 3120 	mov	a,sp
      000979 24 FC            [12] 3121 	add	a,#0xfc
      00097B F9               [12] 3122 	mov	r1,a
      00097C E6               [12] 3123 	mov	a,@r0
      00097D F7               [12] 3124 	mov	@r1,a
      00097E 08               [12] 3125 	inc	r0
      00097F 09               [12] 3126 	inc	r1
      000980 E6               [12] 3127 	mov	a,@r0
      000981 F7               [12] 3128 	mov	@r1,a
      000982 08               [12] 3129 	inc	r0
      000983 09               [12] 3130 	inc	r1
      000984 E6               [12] 3131 	mov	a,@r0
      000985 F7               [12] 3132 	mov	@r1,a
                                   3133 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:774: for(i = 0; i < 8; i++) {
      000986 A8 81            [24] 3134 	mov	r0,sp
      000988 18               [12] 3135 	dec	r0
      000989 E4               [12] 3136 	clr	a
      00098A F6               [12] 3137 	mov	@r0,a
      00098B 08               [12] 3138 	inc	r0
      00098C F6               [12] 3139 	mov	@r0,a
      00098D                       3140 00107$:
                                   3141 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:775: target[i] = ((uint8_t *)&EXT_ADDR0)[7 - i] & 0xFF;
      00098D E5 81            [12] 3142 	mov	a,sp
      00098F 24 FC            [12] 3143 	add	a,#0xfc
      000991 F8               [12] 3144 	mov	r0,a
      000992 A9 81            [24] 3145 	mov	r1,sp
      000994 19               [12] 3146 	dec	r1
      000995 E7               [12] 3147 	mov	a,@r1
      000996 26               [12] 3148 	add	a,@r0
      000997 FA               [12] 3149 	mov	r2,a
      000998 09               [12] 3150 	inc	r1
      000999 E7               [12] 3151 	mov	a,@r1
      00099A 08               [12] 3152 	inc	r0
      00099B 36               [12] 3153 	addc	a,@r0
      00099C FE               [12] 3154 	mov	r6,a
      00099D 08               [12] 3155 	inc	r0
      00099E 86 07            [24] 3156 	mov	ar7,@r0
      0009A0 A8 81            [24] 3157 	mov	r0,sp
      0009A2 18               [12] 3158 	dec	r0
      0009A3 74 07            [12] 3159 	mov	a,#0x07
      0009A5 C3               [12] 3160 	clr	c
      0009A6 96               [12] 3161 	subb	a,@r0
      0009A7 FC               [12] 3162 	mov	r4,a
      0009A8 E4               [12] 3163 	clr	a
      0009A9 08               [12] 3164 	inc	r0
      0009AA 96               [12] 3165 	subb	a,@r0
      0009AB FD               [12] 3166 	mov	r5,a
      0009AC EC               [12] 3167 	mov	a,r4
      0009AD 24 6A            [12] 3168 	add	a,#_EXT_ADDR0
      0009AF F5 82            [12] 3169 	mov	dpl,a
      0009B1 ED               [12] 3170 	mov	a,r5
      0009B2 34 61            [12] 3171 	addc	a,#(_EXT_ADDR0 >> 8)
      0009B4 F5 83            [12] 3172 	mov	dph,a
      0009B6 E0               [24] 3173 	movx	a,@dptr
      0009B7 FD               [12] 3174 	mov	r5,a
      0009B8 8A 82            [24] 3175 	mov	dpl,r2
      0009BA 8E 83            [24] 3176 	mov	dph,r6
      0009BC 8F F0            [24] 3177 	mov	b,r7
      0009BE 12r00r00         [24] 3178 	lcall	__gptrput
                                   3179 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:774: for(i = 0; i < 8; i++) {
      0009C1 A8 81            [24] 3180 	mov	r0,sp
      0009C3 18               [12] 3181 	dec	r0
      0009C4 06               [12] 3182 	inc	@r0
      0009C5 B6 00 02         [24] 3183 	cjne	@r0,#0x00,00129$
      0009C8 08               [12] 3184 	inc	r0
      0009C9 06               [12] 3185 	inc	@r0
      0009CA                       3186 00129$:
      0009CA A8 81            [24] 3187 	mov	r0,sp
      0009CC 18               [12] 3188 	dec	r0
      0009CD C3               [12] 3189 	clr	c
      0009CE E6               [12] 3190 	mov	a,@r0
      0009CF 94 08            [12] 3191 	subb	a,#0x08
      0009D1 08               [12] 3192 	inc	r0
      0009D2 E6               [12] 3193 	mov	a,@r0
      0009D3 64 80            [12] 3194 	xrl	a,#0x80
      0009D5 94 80            [12] 3195 	subb	a,#0x80
      0009D7 40 B4            [24] 3196 	jc	00107$
                                   3197 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:778: return RADIO_RESULT_OK;
      0009D9 75 82 00         [24] 3198 	mov	dpl,#0x00
      0009DC 80 03            [24] 3199 	sjmp	00109$
      0009DE                       3200 00106$:
                                   3201 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:780: return RADIO_RESULT_NOT_SUPPORTED;
      0009DE 75 82 01         [24] 3202 	mov	dpl,#0x01
      0009E1                       3203 00109$:
      0009E1 E5 81            [12] 3204 	mov	a,sp
      0009E3 24 FB            [12] 3205 	add	a,#0xFB
      0009E5 F5 81            [12] 3206 	mov	sp,a
      0009E7 22               [24] 3207 	ret
                                   3208 ;------------------------------------------------------------
                                   3209 ;Allocation info for local variables in function 'set_object'
                                   3210 ;------------------------------------------------------------
                                   3211 ;src                       Allocated to stack - sp -8
                                   3212 ;size                      Allocated to stack - sp -10
                                   3213 ;param                     Allocated to registers r6 r7 
                                   3214 ;i                         Allocated to stack - sp -1
                                   3215 ;sloc0                     Allocated to stack - sp -3
                                   3216 ;------------------------------------------------------------
                                   3217 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:784: set_object(radio_param_t param, const void *src, size_t size)
                                   3218 ;	-----------------------------------------
                                   3219 ;	 function set_object
                                   3220 ;	-----------------------------------------
      0009E8                       3221 _set_object:
      0009E8 E5 81            [12] 3222 	mov	a,sp
      0009EA 24 04            [12] 3223 	add	a,#0x04
      0009EC F5 81            [12] 3224 	mov	sp,a
      0009EE AE 82            [24] 3225 	mov	r6,dpl
      0009F0 AF 83            [24] 3226 	mov	r7,dph
                                   3227 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:788: if(param == RADIO_PARAM_64BIT_ADDR) {
      0009F2 BE 09 05         [24] 3228 	cjne	r6,#0x09,00124$
      0009F5 BF 00 02         [24] 3229 	cjne	r7,#0x00,00124$
      0009F8 80 03            [24] 3230 	sjmp	00125$
      0009FA                       3231 00124$:
      0009FA 02r0Ar83         [24] 3232 	ljmp	00106$
      0009FD                       3233 00125$:
                                   3234 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:789: if(size != 8 || !src) {
      0009FD E5 81            [12] 3235 	mov	a,sp
      0009FF 24 F6            [12] 3236 	add	a,#0xf6
      000A01 F8               [12] 3237 	mov	r0,a
      000A02 B6 08 0E         [24] 3238 	cjne	@r0,#0x08,00101$
      000A05 08               [12] 3239 	inc	r0
      000A06 B6 00 0A         [24] 3240 	cjne	@r0,#0x00,00101$
      000A09 E5 81            [12] 3241 	mov	a,sp
      000A0B 24 F8            [12] 3242 	add	a,#0xf8
      000A0D F8               [12] 3243 	mov	r0,a
      000A0E E6               [12] 3244 	mov	a,@r0
      000A0F 08               [12] 3245 	inc	r0
      000A10 46               [12] 3246 	orl	a,@r0
      000A11 70 05            [24] 3247 	jnz	00113$
      000A13                       3248 00101$:
                                   3249 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:790: return RADIO_RESULT_INVALID_VALUE;
      000A13 75 82 02         [24] 3250 	mov	dpl,#0x02
                                   3251 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:793: for(i = 0; i < 8; i++) {
      000A16 80 6E            [24] 3252 	sjmp	00109$
      000A18                       3253 00113$:
      000A18 A8 81            [24] 3254 	mov	r0,sp
      000A1A 18               [12] 3255 	dec	r0
      000A1B E4               [12] 3256 	clr	a
      000A1C F6               [12] 3257 	mov	@r0,a
      000A1D 08               [12] 3258 	inc	r0
      000A1E F6               [12] 3259 	mov	@r0,a
      000A1F                       3260 00107$:
                                   3261 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:794: ((uint8_t *)&EXT_ADDR0)[i] = ((uint8_t *)src)[7 - i];
      000A1F A8 81            [24] 3262 	mov	r0,sp
      000A21 18               [12] 3263 	dec	r0
      000A22 E5 81            [12] 3264 	mov	a,sp
      000A24 24 FD            [12] 3265 	add	a,#0xfd
      000A26 F9               [12] 3266 	mov	r1,a
      000A27 E6               [12] 3267 	mov	a,@r0
      000A28 24 6A            [12] 3268 	add	a,#_EXT_ADDR0
      000A2A F7               [12] 3269 	mov	@r1,a
      000A2B 08               [12] 3270 	inc	r0
      000A2C E6               [12] 3271 	mov	a,@r0
      000A2D 34 61            [12] 3272 	addc	a,#(_EXT_ADDR0 >> 8)
      000A2F 09               [12] 3273 	inc	r1
      000A30 F7               [12] 3274 	mov	@r1,a
      000A31 E5 81            [12] 3275 	mov	a,sp
      000A33 24 F8            [12] 3276 	add	a,#0xf8
      000A35 F8               [12] 3277 	mov	r0,a
      000A36 86 02            [24] 3278 	mov	ar2,@r0
      000A38 08               [12] 3279 	inc	r0
      000A39 86 03            [24] 3280 	mov	ar3,@r0
      000A3B 08               [12] 3281 	inc	r0
      000A3C 86 07            [24] 3282 	mov	ar7,@r0
      000A3E A8 81            [24] 3283 	mov	r0,sp
      000A40 18               [12] 3284 	dec	r0
      000A41 74 07            [12] 3285 	mov	a,#0x07
      000A43 C3               [12] 3286 	clr	c
      000A44 96               [12] 3287 	subb	a,@r0
      000A45 FD               [12] 3288 	mov	r5,a
      000A46 E4               [12] 3289 	clr	a
      000A47 08               [12] 3290 	inc	r0
      000A48 96               [12] 3291 	subb	a,@r0
      000A49 FE               [12] 3292 	mov	r6,a
      000A4A ED               [12] 3293 	mov	a,r5
      000A4B 2A               [12] 3294 	add	a,r2
      000A4C FA               [12] 3295 	mov	r2,a
      000A4D EE               [12] 3296 	mov	a,r6
      000A4E 3B               [12] 3297 	addc	a,r3
      000A4F FB               [12] 3298 	mov	r3,a
      000A50 8A 82            [24] 3299 	mov	dpl,r2
      000A52 8B 83            [24] 3300 	mov	dph,r3
      000A54 8F F0            [24] 3301 	mov	b,r7
      000A56 12r00r00         [24] 3302 	lcall	__gptrget
      000A59 FA               [12] 3303 	mov	r2,a
      000A5A E5 81            [12] 3304 	mov	a,sp
      000A5C 24 FD            [12] 3305 	add	a,#0xfd
      000A5E F8               [12] 3306 	mov	r0,a
      000A5F 86 82            [24] 3307 	mov	dpl,@r0
      000A61 08               [12] 3308 	inc	r0
      000A62 86 83            [24] 3309 	mov	dph,@r0
      000A64 EA               [12] 3310 	mov	a,r2
      000A65 F0               [24] 3311 	movx	@dptr,a
                                   3312 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:793: for(i = 0; i < 8; i++) {
      000A66 A8 81            [24] 3313 	mov	r0,sp
      000A68 18               [12] 3314 	dec	r0
      000A69 06               [12] 3315 	inc	@r0
      000A6A B6 00 02         [24] 3316 	cjne	@r0,#0x00,00129$
      000A6D 08               [12] 3317 	inc	r0
      000A6E 06               [12] 3318 	inc	@r0
      000A6F                       3319 00129$:
      000A6F A8 81            [24] 3320 	mov	r0,sp
      000A71 18               [12] 3321 	dec	r0
      000A72 C3               [12] 3322 	clr	c
      000A73 E6               [12] 3323 	mov	a,@r0
      000A74 94 08            [12] 3324 	subb	a,#0x08
      000A76 08               [12] 3325 	inc	r0
      000A77 E6               [12] 3326 	mov	a,@r0
      000A78 64 80            [12] 3327 	xrl	a,#0x80
      000A7A 94 80            [12] 3328 	subb	a,#0x80
      000A7C 40 A1            [24] 3329 	jc	00107$
                                   3330 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:797: return RADIO_RESULT_OK;
      000A7E 75 82 00         [24] 3331 	mov	dpl,#0x00
      000A81 80 03            [24] 3332 	sjmp	00109$
      000A83                       3333 00106$:
                                   3334 ;	/opt/contiki/cpu/cc253x/dev/cc2530-rf.c:799: return RADIO_RESULT_NOT_SUPPORTED;
      000A83 75 82 01         [24] 3335 	mov	dpl,#0x01
      000A86                       3336 00109$:
      000A86 E5 81            [12] 3337 	mov	a,sp
      000A88 24 FC            [12] 3338 	add	a,#0xFC
      000A8A F5 81            [12] 3339 	mov	sp,a
      000A8C 22               [24] 3340 	ret
                                   3341 	.area CSEG    (CODE)
                                   3342 	.area CONST   (CODE)
      000000                       3343 _output_power:
      000000 05 00                 3344 	.byte #0x05,#0x00	;  5
      000002 F5                    3345 	.db #0xF5	; 245
      000003 03 00                 3346 	.byte #0x03,#0x00	;  3
      000005 E5                    3347 	.db #0xE5	; 229
      000006 01 00                 3348 	.byte #0x01,#0x00	;  1
      000008 D5                    3349 	.db #0xD5	; 213
      000009 00 00                 3350 	.byte #0x00,#0x00	;  0
      00000B C5                    3351 	.db #0xC5	; 197
      00000C FF FF                 3352 	.byte #0xFF,#0xFF	; -1
      00000E B5                    3353 	.db #0xB5	; 181
      00000F FD FF                 3354 	.byte #0xFD,#0xFF	; -3
      000011 A5                    3355 	.db #0xA5	; 165
      000012 FC FF                 3356 	.byte #0xFC,#0xFF	; -4
      000014 95                    3357 	.db #0x95	; 149
      000015 FA FF                 3358 	.byte #0xFA,#0xFF	; -6
      000017 85                    3359 	.db #0x85	; 133
      000018 F8 FF                 3360 	.byte #0xF8,#0xFF	; -8
      00001A 75                    3361 	.db #0x75	; 117	'u'
      00001B F6 FF                 3362 	.byte #0xF6,#0xFF	; -10
      00001D 65                    3363 	.db #0x65	; 101	'e'
      00001E F4 FF                 3364 	.byte #0xF4,#0xFF	; -12
      000020 55                    3365 	.db #0x55	; 85	'U'
      000021 F2 FF                 3366 	.byte #0xF2,#0xFF	; -14
      000023 45                    3367 	.db #0x45	; 69	'E'
      000024 F0 FF                 3368 	.byte #0xF0,#0xFF	; -16
      000026 35                    3369 	.db #0x35	; 53	'5'
      000027 EE FF                 3370 	.byte #0xEE,#0xFF	; -18
      000029 25                    3371 	.db #0x25	; 37
      00002A EC FF                 3372 	.byte #0xEC,#0xFF	; -20
      00002C 15                    3373 	.db #0x15	; 21
      00002D EA FF                 3374 	.byte #0xEA,#0xFF	; -22
      00002F 05                    3375 	.db #0x05	; 5
      000030 E4 FF                 3376 	.byte #0xE4,#0xFF	; -28
      000032 05                    3377 	.db #0x05	; 5
      000033                       3378 _cc2530_rf_driver:
      000033r3Ds02                 3379 	.byte _init, (_init >> 8)
      000035r8Ds02                 3380 	.byte _prepare, (_prepare >> 8)
      000037rF8s02                 3381 	.byte _transmit, (_transmit >> 8)
      000039rABs03                 3382 	.byte _send, (_send >> 8)
      00003BrD7s03                 3383 	.byte _read, (_read >> 8)
      00003DrC3s04                 3384 	.byte _channel_clear, (_channel_clear >> 8)
      00003FrD3s04                 3385 	.byte _receiving_packet, (_receiving_packet >> 8)
      000041rDBs04                 3386 	.byte _pending_packet, (_pending_packet >> 8)
      000043rEAs04                 3387 	.byte _on, (_on >> 8)
      000045rFFs04                 3388 	.byte _off, (_off >> 8)
      000047r13s05                 3389 	.byte _get_value, (_get_value >> 8)
      000049rC6s07                 3390 	.byte _set_value, (_set_value >> 8)
      00004Br42s09                 3391 	.byte _get_object, (_get_object >> 8)
      00004DrE8s09                 3392 	.byte _set_object, (_set_object >> 8)
                                   3393 	.area XINIT   (CODE)
                                   3394 	.area CABS    (ABS,CODE)
