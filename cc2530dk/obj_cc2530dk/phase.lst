                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.5 #9380 (Linux)
                                      4 ; This file was generated Tue Nov 17 16:52:54 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module phase
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _nbr_table_remove
                                     13 	.globl _nbr_table_get_from_lladdr
                                     14 	.globl _nbr_table_add_lladdr
                                     15 	.globl _nbr_table_register
                                     16 	.globl _queuebuf_free
                                     17 	.globl _queuebuf_to_packetbuf
                                     18 	.globl _queuebuf_new_from_packetbuf
                                     19 	.globl _packetbuf_set_attr
                                     20 	.globl _ctimer_set
                                     21 	.globl _memb_free
                                     22 	.globl _memb_alloc
                                     23 	.globl _memb_init
                                     24 	.globl _timer_expired
                                     25 	.globl _timer_set
                                     26 	.globl _ACTIVE
                                     27 	.globl _TX_BYTE
                                     28 	.globl _RX_BYTE
                                     29 	.globl _ERR
                                     30 	.globl _FE
                                     31 	.globl _SLAVE
                                     32 	.globl _RE
                                     33 	.globl _MODE
                                     34 	.globl _T3OVFIF
                                     35 	.globl _T3CH0IF
                                     36 	.globl _T3CH1IF
                                     37 	.globl _T4OVFIF
                                     38 	.globl _T4CH0IF
                                     39 	.globl _T4CH1IF
                                     40 	.globl _OVFIM
                                     41 	.globl _B_0
                                     42 	.globl _B_1
                                     43 	.globl _B_2
                                     44 	.globl _B_3
                                     45 	.globl _B_4
                                     46 	.globl _B_5
                                     47 	.globl _B_6
                                     48 	.globl _B_7
                                     49 	.globl _P2IF
                                     50 	.globl _UTX0IF
                                     51 	.globl _UTX1IF
                                     52 	.globl _P1IF
                                     53 	.globl _WDTIF
                                     54 	.globl _ACC_0
                                     55 	.globl _ACC_1
                                     56 	.globl _ACC_2
                                     57 	.globl _ACC_3
                                     58 	.globl _ACC_4
                                     59 	.globl _ACC_5
                                     60 	.globl _ACC_6
                                     61 	.globl _ACC_7
                                     62 	.globl _P
                                     63 	.globl _F1
                                     64 	.globl _OV
                                     65 	.globl _RS0
                                     66 	.globl _RS1
                                     67 	.globl _F0
                                     68 	.globl _AC
                                     69 	.globl _CY
                                     70 	.globl _DMAIF
                                     71 	.globl _T1IF
                                     72 	.globl _T2IF
                                     73 	.globl _T3IF
                                     74 	.globl _T4IF
                                     75 	.globl _P0IF
                                     76 	.globl _STIF
                                     77 	.globl _DMAIE
                                     78 	.globl _T1IE
                                     79 	.globl _T2IE
                                     80 	.globl _T3IE
                                     81 	.globl _T4IE
                                     82 	.globl _P0IE
                                     83 	.globl _RFERRIE
                                     84 	.globl _ADCIE
                                     85 	.globl _URX0IE
                                     86 	.globl _URX1IE
                                     87 	.globl _ENCIE
                                     88 	.globl _STIE
                                     89 	.globl _EA
                                     90 	.globl _P2_0
                                     91 	.globl _P2_1
                                     92 	.globl _P2_2
                                     93 	.globl _P2_3
                                     94 	.globl _P2_4
                                     95 	.globl _P2_5
                                     96 	.globl _P2_6
                                     97 	.globl _P2_7
                                     98 	.globl _ENCIF_0
                                     99 	.globl _ENCIF_1
                                    100 	.globl _P1_0
                                    101 	.globl _P1_1
                                    102 	.globl _P1_2
                                    103 	.globl _P1_3
                                    104 	.globl _P1_4
                                    105 	.globl _P1_5
                                    106 	.globl _P1_6
                                    107 	.globl _P1_7
                                    108 	.globl _IT0
                                    109 	.globl _RFERRIF
                                    110 	.globl _IT1
                                    111 	.globl _URX0IF
                                    112 	.globl _ADCIF
                                    113 	.globl _URX1IF
                                    114 	.globl _P0_0
                                    115 	.globl _P0_1
                                    116 	.globl _P0_2
                                    117 	.globl _P0_3
                                    118 	.globl _P0_4
                                    119 	.globl _P0_5
                                    120 	.globl _P0_6
                                    121 	.globl _P0_7
                                    122 	.globl _WDCTL
                                    123 	.globl _U1GCR
                                    124 	.globl _U1UCR
                                    125 	.globl _U1BAUD
                                    126 	.globl _U1DBUF
                                    127 	.globl _U1CSR
                                    128 	.globl _U0GCR
                                    129 	.globl _U0UCR
                                    130 	.globl _U0BAUD
                                    131 	.globl _U0DBUF
                                    132 	.globl _U0CSR
                                    133 	.globl _TIMIF
                                    134 	.globl _T4CC1
                                    135 	.globl _T4CCTL1
                                    136 	.globl _T4CC0
                                    137 	.globl _T4CCTL0
                                    138 	.globl _T4CTL
                                    139 	.globl _T4CNT
                                    140 	.globl _T3CC1
                                    141 	.globl _T3CCTL1
                                    142 	.globl _T3CC0
                                    143 	.globl _T3CCTL0
                                    144 	.globl _T3CTL
                                    145 	.globl _T3CNT
                                    146 	.globl _T2MSEL
                                    147 	.globl _T2IRQM
                                    148 	.globl _T2MOVF2
                                    149 	.globl _T2MOVF1
                                    150 	.globl _T2MOVF0
                                    151 	.globl _T2M1
                                    152 	.globl _T2M0
                                    153 	.globl _T2IRQF
                                    154 	.globl _T2EVTCFG
                                    155 	.globl _T2CTRL
                                    156 	.globl _T1STAT
                                    157 	.globl _T1CCTL2
                                    158 	.globl _T1CCTL1
                                    159 	.globl _T1CCTL0
                                    160 	.globl _T1CTL
                                    161 	.globl _T1CNTH
                                    162 	.globl _T1CNTL
                                    163 	.globl _T1CC2H
                                    164 	.globl _T1CC2L
                                    165 	.globl _T1CC1H
                                    166 	.globl _T1CC1L
                                    167 	.globl _T1CC0H
                                    168 	.globl _T1CC0L
                                    169 	.globl _CLKCONSTA
                                    170 	.globl _CLKCONCMD
                                    171 	.globl _SLEEPSTA
                                    172 	.globl _SLEEPCMD
                                    173 	.globl _STLOAD
                                    174 	.globl _ST2
                                    175 	.globl _ST1
                                    176 	.globl _ST0
                                    177 	.globl _RFERRF
                                    178 	.globl _RFIRQF0
                                    179 	.globl _RFST
                                    180 	.globl _RFD
                                    181 	.globl _RFIRQF1
                                    182 	.globl _PSBANK
                                    183 	.globl _FMAP
                                    184 	.globl _MEMCTR
                                    185 	.globl __XPAGE
                                    186 	.globl _MPAGE
                                    187 	.globl _PMUX
                                    188 	.globl _P2DIR
                                    189 	.globl _P1DIR
                                    190 	.globl _P0DIR
                                    191 	.globl _P2INP
                                    192 	.globl _P1INP
                                    193 	.globl _P2SEL
                                    194 	.globl _P1SEL
                                    195 	.globl _P0SEL
                                    196 	.globl _APCFG
                                    197 	.globl _PERCFG
                                    198 	.globl _P0INP
                                    199 	.globl _P2IEN
                                    200 	.globl _P1IEN
                                    201 	.globl _P0IEN
                                    202 	.globl _PICTL
                                    203 	.globl _P2IFG
                                    204 	.globl _P1IFG
                                    205 	.globl _P0IFG
                                    206 	.globl _DMAREQ
                                    207 	.globl _DMAARM
                                    208 	.globl _DMA0CFGH
                                    209 	.globl _DMA0CFGL
                                    210 	.globl _DMA1CFGH
                                    211 	.globl _DMA1CFGL
                                    212 	.globl _DMAIRQ
                                    213 	.globl _ENCCS
                                    214 	.globl _ENCDO
                                    215 	.globl _ENCDI
                                    216 	.globl _RNDH
                                    217 	.globl _RNDL
                                    218 	.globl _ADCH
                                    219 	.globl _ADCL
                                    220 	.globl _ADCCON3
                                    221 	.globl _ADCCON2
                                    222 	.globl _ADCCON1
                                    223 	.globl _B
                                    224 	.globl _IRCON2
                                    225 	.globl _ACC
                                    226 	.globl _PSW
                                    227 	.globl _IRCON
                                    228 	.globl _IP1
                                    229 	.globl _IEN1
                                    230 	.globl _IP0
                                    231 	.globl _IEN0
                                    232 	.globl _P2
                                    233 	.globl _S1CON
                                    234 	.globl _IEN2
                                    235 	.globl _S0CON
                                    236 	.globl _DPS
                                    237 	.globl _P1
                                    238 	.globl _TCON
                                    239 	.globl _PCON
                                    240 	.globl _DPH1
                                    241 	.globl _DPL1
                                    242 	.globl _DPH0
                                    243 	.globl _DPL0
                                    244 	.globl _SP
                                    245 	.globl _P0
                                    246 	.globl _X_IEEE_ADDR
                                    247 	.globl _X_INFOPAGE
                                    248 	.globl _X_P2DIR
                                    249 	.globl _X_P1DIR
                                    250 	.globl _X_P0DIR
                                    251 	.globl _X_U1GCR
                                    252 	.globl _X_U1UCR
                                    253 	.globl _X_U1BAUD
                                    254 	.globl _X_U1DBUF
                                    255 	.globl _X_U1CSR
                                    256 	.globl _X_P2INP
                                    257 	.globl _X_P1INP
                                    258 	.globl _X_P2SEL
                                    259 	.globl _X_P1SEL
                                    260 	.globl _X_P0SEL
                                    261 	.globl _X_APCFG
                                    262 	.globl _X_PERCFG
                                    263 	.globl _X_T4CC1
                                    264 	.globl _X_T4CCTL1
                                    265 	.globl _X_T4CC0
                                    266 	.globl _X_T4CCTL0
                                    267 	.globl _X_T4CTL
                                    268 	.globl _X_T4CNT
                                    269 	.globl _X_RFIRQF0
                                    270 	.globl _X_T1CCTL2
                                    271 	.globl _X_T1CCTL1
                                    272 	.globl _X_T1CCTL0
                                    273 	.globl _X_T1CTL
                                    274 	.globl _X_T1CNTH
                                    275 	.globl _X_T1CNTL
                                    276 	.globl _X_RFST
                                    277 	.globl _X_T1CC2H
                                    278 	.globl _X_T1CC2L
                                    279 	.globl _X_T1CC1H
                                    280 	.globl _X_T1CC1L
                                    281 	.globl _X_T1CC0H
                                    282 	.globl _X_T1CC0L
                                    283 	.globl _X_RFD
                                    284 	.globl _X_TIMIF
                                    285 	.globl _X_DMAREQ
                                    286 	.globl _X_DMAARM
                                    287 	.globl _X_DMA0CFGH
                                    288 	.globl _X_DMA0CFGL
                                    289 	.globl _X_DMA1CFGH
                                    290 	.globl _X_DMA1CFGL
                                    291 	.globl _X_DMAIRQ
                                    292 	.globl _X_T3CC1
                                    293 	.globl _X_T3CCTL1
                                    294 	.globl _X_T3CC0
                                    295 	.globl _X_T3CCTL0
                                    296 	.globl _X_T3CTL
                                    297 	.globl _X_T3CNT
                                    298 	.globl _X_WDCTL
                                    299 	.globl _X_MEMCTR
                                    300 	.globl _X_CLKCONCMD
                                    301 	.globl _X_U0GCR
                                    302 	.globl _X_U0UCR
                                    303 	.globl _X_T2MSEL
                                    304 	.globl _X_U0BAUD
                                    305 	.globl _X_U0DBUF
                                    306 	.globl _X_RFERRF
                                    307 	.globl _X_SLEEPCMD
                                    308 	.globl _X_RNDH
                                    309 	.globl _X_RNDL
                                    310 	.globl _X_ADCH
                                    311 	.globl _X_ADCL
                                    312 	.globl _X_ADCCON3
                                    313 	.globl _X_ADCCON2
                                    314 	.globl _X_ADCCON1
                                    315 	.globl _X_ENCCS
                                    316 	.globl _X_ENCDO
                                    317 	.globl _X_ENCDI
                                    318 	.globl _X_T1STAT
                                    319 	.globl _X_PMUX
                                    320 	.globl _X_STLOAD
                                    321 	.globl _X_P2IEN
                                    322 	.globl _X_P0IEN
                                    323 	.globl _X_T2IRQM
                                    324 	.globl _X_T2MOVF2
                                    325 	.globl _X_T2MOVF1
                                    326 	.globl _X_T2MOVF0
                                    327 	.globl _X_T2M1
                                    328 	.globl _X_T2M0
                                    329 	.globl _X_T2IRQF
                                    330 	.globl _X_P2
                                    331 	.globl _X_PSBANK
                                    332 	.globl _X_FMAP
                                    333 	.globl _X_CLKCONSTA
                                    334 	.globl _X_SLEEPSTA
                                    335 	.globl _X_T2EVTCFG
                                    336 	.globl _X_ST2
                                    337 	.globl _X_ST1
                                    338 	.globl _X_ST0
                                    339 	.globl _X_T2CTRL
                                    340 	.globl _X__XPAGE
                                    341 	.globl _X_MPAGE
                                    342 	.globl _X_RFIRQF1
                                    343 	.globl _X_P1
                                    344 	.globl _X_P0INP
                                    345 	.globl _X_P1IEN
                                    346 	.globl _X_PICTL
                                    347 	.globl _X_P2IFG
                                    348 	.globl _X_P1IFG
                                    349 	.globl _X_P0IFG
                                    350 	.globl _X_U0CSR
                                    351 	.globl _X_P0
                                    352 	.globl _USBF5
                                    353 	.globl _USBF4
                                    354 	.globl _USBF3
                                    355 	.globl _USBF2
                                    356 	.globl _USBF1
                                    357 	.globl _USBF0
                                    358 	.globl _USBCNTH
                                    359 	.globl _USBCNTL
                                    360 	.globl _USBCNT0
                                    361 	.globl _USBCSOH
                                    362 	.globl _USBCSOL
                                    363 	.globl _USBMAXO
                                    364 	.globl _USBCSIH
                                    365 	.globl _USBCSIL
                                    366 	.globl _USBCS0
                                    367 	.globl _USBMAXI
                                    368 	.globl _USBCTRL
                                    369 	.globl _USBINDEX
                                    370 	.globl _USBFRMH
                                    371 	.globl _USBFRML
                                    372 	.globl _USBCIE
                                    373 	.globl _USBOIE
                                    374 	.globl _USBIIE
                                    375 	.globl _USBCIF
                                    376 	.globl _USBOIF
                                    377 	.globl _USBIIF
                                    378 	.globl _USBPOW
                                    379 	.globl _USBADDR
                                    380 	.globl _CSPT
                                    381 	.globl _CSPZ
                                    382 	.globl _CSPY
                                    383 	.globl _CSPX
                                    384 	.globl _CSPSTAT
                                    385 	.globl _CSPCTRL
                                    386 	.globl _CSPPROG23
                                    387 	.globl _CSPPROG22
                                    388 	.globl _CSPPROG21
                                    389 	.globl _CSPPROG20
                                    390 	.globl _CSPPROG19
                                    391 	.globl _CSPPROG18
                                    392 	.globl _CSPPROG17
                                    393 	.globl _CSPPROG16
                                    394 	.globl _CSPPROG15
                                    395 	.globl _CSPPROG14
                                    396 	.globl _CSPPROG13
                                    397 	.globl _CSPPROG12
                                    398 	.globl _CSPPROG11
                                    399 	.globl _CSPPROG10
                                    400 	.globl _CSPPROG9
                                    401 	.globl _CSPPROG8
                                    402 	.globl _CSPPROG7
                                    403 	.globl _CSPPROG6
                                    404 	.globl _CSPPROG5
                                    405 	.globl _CSPPROG4
                                    406 	.globl _CSPPROG3
                                    407 	.globl _CSPPROG2
                                    408 	.globl _CSPPROG1
                                    409 	.globl _CSPPROG0
                                    410 	.globl _RFC_OBS_CTRL2
                                    411 	.globl _RFC_OBS_CTRL1
                                    412 	.globl _RFC_OBS_CTRL0
                                    413 	.globl _TXFILTCFG
                                    414 	.globl _PTEST1
                                    415 	.globl _PTEST0
                                    416 	.globl _ATEST
                                    417 	.globl _DACTEST2
                                    418 	.globl _DACTEST1
                                    419 	.globl _DACTEST0
                                    420 	.globl _MDMTEST1
                                    421 	.globl _MDMTEST0
                                    422 	.globl _ADCTEST2
                                    423 	.globl _ADCTEST1
                                    424 	.globl _ADCTEST0
                                    425 	.globl _AGCCTRL3
                                    426 	.globl _AGCCTRL2
                                    427 	.globl _AGCCTRL1
                                    428 	.globl _AGCCTRL0
                                    429 	.globl _FSCAL3
                                    430 	.globl _FSCAL2
                                    431 	.globl _FSCAL1
                                    432 	.globl _FSCAL0
                                    433 	.globl _FSCTRL
                                    434 	.globl _RXCTRL
                                    435 	.globl _FREQEST
                                    436 	.globl _MDMCTRL1
                                    437 	.globl _MDMCTRL0
                                    438 	.globl _RFRND
                                    439 	.globl _RFERRM
                                    440 	.globl _RFIRQM1
                                    441 	.globl _RFIRQM0
                                    442 	.globl _TXLAST_PTR
                                    443 	.globl _TXFIRST_PTR
                                    444 	.globl _RXP1_PTR
                                    445 	.globl _RXLAST_PTR
                                    446 	.globl _RXFIRST_PTR
                                    447 	.globl _TXFIFOCNT
                                    448 	.globl _RXFIFOCNT
                                    449 	.globl _RXFIRST
                                    450 	.globl _RSSISTAT
                                    451 	.globl _RSSI
                                    452 	.globl _CCACTRL1
                                    453 	.globl _CCACTRL0
                                    454 	.globl _FSMCTRL
                                    455 	.globl _FIFOPCTRL
                                    456 	.globl _FSMSTAT1
                                    457 	.globl _FSMSTAT0
                                    458 	.globl _TXCTRL
                                    459 	.globl _TXPOWER
                                    460 	.globl _FREQCTRL
                                    461 	.globl _FREQTUNE
                                    462 	.globl _RXMASKCLR
                                    463 	.globl _RXMASKSET
                                    464 	.globl _RXENABLE
                                    465 	.globl _FRMCTRL1
                                    466 	.globl _FRMCTRL0
                                    467 	.globl _SRCEXTEN2
                                    468 	.globl _SRCEXTEN1
                                    469 	.globl _SRCEXTEN0
                                    470 	.globl _SRCSHORTEN2
                                    471 	.globl _SRCSHORTEN1
                                    472 	.globl _SRCSHORTEN0
                                    473 	.globl _SRCMATCH
                                    474 	.globl _FRMFILT1
                                    475 	.globl _FRMFILT0
                                    476 	.globl _SHORT_ADDR1
                                    477 	.globl _SHORT_ADDR0
                                    478 	.globl _PAN_ID1
                                    479 	.globl _PAN_ID0
                                    480 	.globl _EXT_ADDR7
                                    481 	.globl _EXT_ADDR6
                                    482 	.globl _EXT_ADDR5
                                    483 	.globl _EXT_ADDR4
                                    484 	.globl _EXT_ADDR3
                                    485 	.globl _EXT_ADDR2
                                    486 	.globl _EXT_ADDR1
                                    487 	.globl _EXT_ADDR0
                                    488 	.globl _SRCSHORTPENDEN2
                                    489 	.globl _SRCSHORTPENDEN1
                                    490 	.globl _SRCSHORTPENDEN0
                                    491 	.globl _SRCEXTPENDEN2
                                    492 	.globl _SRCEXTPENDEN1
                                    493 	.globl _SRCEXTPENDEN0
                                    494 	.globl _SRCRESINDEX
                                    495 	.globl _SRCRESMASK2
                                    496 	.globl _SRCRESMASK1
                                    497 	.globl _SRCRESMASK0
                                    498 	.globl _SRC_ADDR_TABLE
                                    499 	.globl _TXFIFO
                                    500 	.globl _RXFIFO
                                    501 	.globl _RFCORE_RAM
                                    502 	.globl _CMPCTL
                                    503 	.globl _OPAMPS
                                    504 	.globl _OPAMPC
                                    505 	.globl _STCV2
                                    506 	.globl _STCV1
                                    507 	.globl _STCV0
                                    508 	.globl _STCS
                                    509 	.globl _STCC
                                    510 	.globl _T1CC4H
                                    511 	.globl _T1CC4L
                                    512 	.globl _T1CC3H
                                    513 	.globl _T1CC3L
                                    514 	.globl _XX_T1CC2H
                                    515 	.globl _XX_T1CC2L
                                    516 	.globl _XX_T1CC1H
                                    517 	.globl _XX_T1CC1L
                                    518 	.globl _XX_T1CC0H
                                    519 	.globl _XX_T1CC0L
                                    520 	.globl _T1CCTL4
                                    521 	.globl _T1CCTL3
                                    522 	.globl _XX_T1CCTL2
                                    523 	.globl _XX_T1CCTL1
                                    524 	.globl _XX_T1CCTL0
                                    525 	.globl _CLD
                                    526 	.globl _IRCTL
                                    527 	.globl _CHIPINFO1
                                    528 	.globl _CHIPINFO0
                                    529 	.globl _FWDATA
                                    530 	.globl _FADDRH
                                    531 	.globl _FADDRL
                                    532 	.globl _FCTL
                                    533 	.globl _IVCTRL
                                    534 	.globl _BATTMON
                                    535 	.globl _SRCRC
                                    536 	.globl _DBGDATA
                                    537 	.globl _TESTREG0
                                    538 	.globl _CHIPID
                                    539 	.globl _CHVER
                                    540 	.globl _OBSSEL5
                                    541 	.globl _OBSSEL4
                                    542 	.globl _OBSSEL3
                                    543 	.globl _OBSSEL2
                                    544 	.globl _OBSSEL1
                                    545 	.globl _OBSSEL0
                                    546 	.globl _I2CIO
                                    547 	.globl _I2CWC
                                    548 	.globl _I2CADDR
                                    549 	.globl _I2CDATA
                                    550 	.globl _I2CSTAT
                                    551 	.globl _I2CCFG
                                    552 	.globl _OPAMPMC
                                    553 	.globl _MONMUX
                                    554 	.globl _phase_update
                                    555 	.globl _phase_wait
                                    556 	.globl _phase_init
                                    557 ;--------------------------------------------------------
                                    558 ; special function registers
                                    559 ;--------------------------------------------------------
                                    560 	.area RSEG    (ABS,DATA)
      000000                        561 	.org 0x0000
                           000080   562 _P0	=	0x0080
                           000081   563 _SP	=	0x0081
                           000082   564 _DPL0	=	0x0082
                           000083   565 _DPH0	=	0x0083
                           000084   566 _DPL1	=	0x0084
                           000085   567 _DPH1	=	0x0085
                           000087   568 _PCON	=	0x0087
                           000088   569 _TCON	=	0x0088
                           000090   570 _P1	=	0x0090
                           000092   571 _DPS	=	0x0092
                           000098   572 _S0CON	=	0x0098
                           00009A   573 _IEN2	=	0x009a
                           00009B   574 _S1CON	=	0x009b
                           0000A0   575 _P2	=	0x00a0
                           0000A8   576 _IEN0	=	0x00a8
                           0000A9   577 _IP0	=	0x00a9
                           0000B8   578 _IEN1	=	0x00b8
                           0000B9   579 _IP1	=	0x00b9
                           0000C0   580 _IRCON	=	0x00c0
                           0000D0   581 _PSW	=	0x00d0
                           0000E0   582 _ACC	=	0x00e0
                           0000E8   583 _IRCON2	=	0x00e8
                           0000F0   584 _B	=	0x00f0
                           0000B4   585 _ADCCON1	=	0x00b4
                           0000B5   586 _ADCCON2	=	0x00b5
                           0000B6   587 _ADCCON3	=	0x00b6
                           0000BA   588 _ADCL	=	0x00ba
                           0000BB   589 _ADCH	=	0x00bb
                           0000BC   590 _RNDL	=	0x00bc
                           0000BD   591 _RNDH	=	0x00bd
                           0000B1   592 _ENCDI	=	0x00b1
                           0000B2   593 _ENCDO	=	0x00b2
                           0000B3   594 _ENCCS	=	0x00b3
                           0000D1   595 _DMAIRQ	=	0x00d1
                           0000D2   596 _DMA1CFGL	=	0x00d2
                           0000D3   597 _DMA1CFGH	=	0x00d3
                           0000D4   598 _DMA0CFGL	=	0x00d4
                           0000D5   599 _DMA0CFGH	=	0x00d5
                           0000D6   600 _DMAARM	=	0x00d6
                           0000D7   601 _DMAREQ	=	0x00d7
                           000089   602 _P0IFG	=	0x0089
                           00008A   603 _P1IFG	=	0x008a
                           00008B   604 _P2IFG	=	0x008b
                           00008C   605 _PICTL	=	0x008c
                           0000AB   606 _P0IEN	=	0x00ab
                           00008D   607 _P1IEN	=	0x008d
                           0000AC   608 _P2IEN	=	0x00ac
                           00008F   609 _P0INP	=	0x008f
                           0000F1   610 _PERCFG	=	0x00f1
                           0000F2   611 _APCFG	=	0x00f2
                           0000F3   612 _P0SEL	=	0x00f3
                           0000F4   613 _P1SEL	=	0x00f4
                           0000F5   614 _P2SEL	=	0x00f5
                           0000F6   615 _P1INP	=	0x00f6
                           0000F7   616 _P2INP	=	0x00f7
                           0000FD   617 _P0DIR	=	0x00fd
                           0000FE   618 _P1DIR	=	0x00fe
                           0000FF   619 _P2DIR	=	0x00ff
                           0000AE   620 _PMUX	=	0x00ae
                           000093   621 _MPAGE	=	0x0093
                           000093   622 __XPAGE	=	0x0093
                           0000C7   623 _MEMCTR	=	0x00c7
                           00009F   624 _FMAP	=	0x009f
                           00009F   625 _PSBANK	=	0x009f
                           000091   626 _RFIRQF1	=	0x0091
                           0000D9   627 _RFD	=	0x00d9
                           0000E1   628 _RFST	=	0x00e1
                           0000E9   629 _RFIRQF0	=	0x00e9
                           0000BF   630 _RFERRF	=	0x00bf
                           000095   631 _ST0	=	0x0095
                           000096   632 _ST1	=	0x0096
                           000097   633 _ST2	=	0x0097
                           0000AD   634 _STLOAD	=	0x00ad
                           0000BE   635 _SLEEPCMD	=	0x00be
                           00009D   636 _SLEEPSTA	=	0x009d
                           0000C6   637 _CLKCONCMD	=	0x00c6
                           00009E   638 _CLKCONSTA	=	0x009e
                           0000DA   639 _T1CC0L	=	0x00da
                           0000DB   640 _T1CC0H	=	0x00db
                           0000DC   641 _T1CC1L	=	0x00dc
                           0000DD   642 _T1CC1H	=	0x00dd
                           0000DE   643 _T1CC2L	=	0x00de
                           0000DF   644 _T1CC2H	=	0x00df
                           0000E2   645 _T1CNTL	=	0x00e2
                           0000E3   646 _T1CNTH	=	0x00e3
                           0000E4   647 _T1CTL	=	0x00e4
                           0000E5   648 _T1CCTL0	=	0x00e5
                           0000E6   649 _T1CCTL1	=	0x00e6
                           0000E7   650 _T1CCTL2	=	0x00e7
                           0000AF   651 _T1STAT	=	0x00af
                           000094   652 _T2CTRL	=	0x0094
                           00009C   653 _T2EVTCFG	=	0x009c
                           0000A1   654 _T2IRQF	=	0x00a1
                           0000A2   655 _T2M0	=	0x00a2
                           0000A3   656 _T2M1	=	0x00a3
                           0000A4   657 _T2MOVF0	=	0x00a4
                           0000A5   658 _T2MOVF1	=	0x00a5
                           0000A6   659 _T2MOVF2	=	0x00a6
                           0000A7   660 _T2IRQM	=	0x00a7
                           0000C3   661 _T2MSEL	=	0x00c3
                           0000CA   662 _T3CNT	=	0x00ca
                           0000CB   663 _T3CTL	=	0x00cb
                           0000CC   664 _T3CCTL0	=	0x00cc
                           0000CD   665 _T3CC0	=	0x00cd
                           0000CE   666 _T3CCTL1	=	0x00ce
                           0000CF   667 _T3CC1	=	0x00cf
                           0000EA   668 _T4CNT	=	0x00ea
                           0000EB   669 _T4CTL	=	0x00eb
                           0000EC   670 _T4CCTL0	=	0x00ec
                           0000ED   671 _T4CC0	=	0x00ed
                           0000EE   672 _T4CCTL1	=	0x00ee
                           0000EF   673 _T4CC1	=	0x00ef
                           0000D8   674 _TIMIF	=	0x00d8
                           000086   675 _U0CSR	=	0x0086
                           0000C1   676 _U0DBUF	=	0x00c1
                           0000C2   677 _U0BAUD	=	0x00c2
                           0000C4   678 _U0UCR	=	0x00c4
                           0000C5   679 _U0GCR	=	0x00c5
                           0000F8   680 _U1CSR	=	0x00f8
                           0000F9   681 _U1DBUF	=	0x00f9
                           0000FA   682 _U1BAUD	=	0x00fa
                           0000FB   683 _U1UCR	=	0x00fb
                           0000FC   684 _U1GCR	=	0x00fc
                           0000C9   685 _WDCTL	=	0x00c9
                                    686 ;--------------------------------------------------------
                                    687 ; special function bits
                                    688 ;--------------------------------------------------------
                                    689 	.area RSEG    (ABS,DATA)
      000000                        690 	.org 0x0000
                           000087   691 _P0_7	=	0x0087
                           000086   692 _P0_6	=	0x0086
                           000085   693 _P0_5	=	0x0085
                           000084   694 _P0_4	=	0x0084
                           000083   695 _P0_3	=	0x0083
                           000082   696 _P0_2	=	0x0082
                           000081   697 _P0_1	=	0x0081
                           000080   698 _P0_0	=	0x0080
                           00008F   699 _URX1IF	=	0x008f
                           00008D   700 _ADCIF	=	0x008d
                           00008B   701 _URX0IF	=	0x008b
                           00008A   702 _IT1	=	0x008a
                           000089   703 _RFERRIF	=	0x0089
                           000088   704 _IT0	=	0x0088
                           000097   705 _P1_7	=	0x0097
                           000096   706 _P1_6	=	0x0096
                           000095   707 _P1_5	=	0x0095
                           000094   708 _P1_4	=	0x0094
                           000093   709 _P1_3	=	0x0093
                           000092   710 _P1_2	=	0x0092
                           000091   711 _P1_1	=	0x0091
                           000090   712 _P1_0	=	0x0090
                           000099   713 _ENCIF_1	=	0x0099
                           000098   714 _ENCIF_0	=	0x0098
                           0000A7   715 _P2_7	=	0x00a7
                           0000A6   716 _P2_6	=	0x00a6
                           0000A5   717 _P2_5	=	0x00a5
                           0000A4   718 _P2_4	=	0x00a4
                           0000A3   719 _P2_3	=	0x00a3
                           0000A2   720 _P2_2	=	0x00a2
                           0000A1   721 _P2_1	=	0x00a1
                           0000A0   722 _P2_0	=	0x00a0
                           0000AF   723 _EA	=	0x00af
                           0000AD   724 _STIE	=	0x00ad
                           0000AC   725 _ENCIE	=	0x00ac
                           0000AB   726 _URX1IE	=	0x00ab
                           0000AA   727 _URX0IE	=	0x00aa
                           0000A9   728 _ADCIE	=	0x00a9
                           0000A8   729 _RFERRIE	=	0x00a8
                           0000BD   730 _P0IE	=	0x00bd
                           0000BC   731 _T4IE	=	0x00bc
                           0000BB   732 _T3IE	=	0x00bb
                           0000BA   733 _T2IE	=	0x00ba
                           0000B9   734 _T1IE	=	0x00b9
                           0000B8   735 _DMAIE	=	0x00b8
                           0000C7   736 _STIF	=	0x00c7
                           0000C5   737 _P0IF	=	0x00c5
                           0000C4   738 _T4IF	=	0x00c4
                           0000C3   739 _T3IF	=	0x00c3
                           0000C2   740 _T2IF	=	0x00c2
                           0000C1   741 _T1IF	=	0x00c1
                           0000C0   742 _DMAIF	=	0x00c0
                           0000D7   743 _CY	=	0x00d7
                           0000D6   744 _AC	=	0x00d6
                           0000D5   745 _F0	=	0x00d5
                           0000D4   746 _RS1	=	0x00d4
                           0000D3   747 _RS0	=	0x00d3
                           0000D2   748 _OV	=	0x00d2
                           0000D1   749 _F1	=	0x00d1
                           0000D0   750 _P	=	0x00d0
                           0000E7   751 _ACC_7	=	0x00e7
                           0000E6   752 _ACC_6	=	0x00e6
                           0000E5   753 _ACC_5	=	0x00e5
                           0000E4   754 _ACC_4	=	0x00e4
                           0000E3   755 _ACC_3	=	0x00e3
                           0000E2   756 _ACC_2	=	0x00e2
                           0000E1   757 _ACC_1	=	0x00e1
                           0000E0   758 _ACC_0	=	0x00e0
                           0000EC   759 _WDTIF	=	0x00ec
                           0000EB   760 _P1IF	=	0x00eb
                           0000EA   761 _UTX1IF	=	0x00ea
                           0000E9   762 _UTX0IF	=	0x00e9
                           0000E8   763 _P2IF	=	0x00e8
                           0000F7   764 _B_7	=	0x00f7
                           0000F6   765 _B_6	=	0x00f6
                           0000F5   766 _B_5	=	0x00f5
                           0000F4   767 _B_4	=	0x00f4
                           0000F3   768 _B_3	=	0x00f3
                           0000F2   769 _B_2	=	0x00f2
                           0000F1   770 _B_1	=	0x00f1
                           0000F0   771 _B_0	=	0x00f0
                           0000DE   772 _OVFIM	=	0x00de
                           0000DD   773 _T4CH1IF	=	0x00dd
                           0000DC   774 _T4CH0IF	=	0x00dc
                           0000DB   775 _T4OVFIF	=	0x00db
                           0000DA   776 _T3CH1IF	=	0x00da
                           0000D9   777 _T3CH0IF	=	0x00d9
                           0000D8   778 _T3OVFIF	=	0x00d8
                           0000FF   779 _MODE	=	0x00ff
                           0000FE   780 _RE	=	0x00fe
                           0000FD   781 _SLAVE	=	0x00fd
                           0000FC   782 _FE	=	0x00fc
                           0000FB   783 _ERR	=	0x00fb
                           0000FA   784 _RX_BYTE	=	0x00fa
                           0000F9   785 _TX_BYTE	=	0x00f9
                           0000F8   786 _ACTIVE	=	0x00f8
                                    787 ;--------------------------------------------------------
                                    788 ; overlayable register banks
                                    789 ;--------------------------------------------------------
                                    790 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        791 	.ds 8
                                    792 ;--------------------------------------------------------
                                    793 ; internal ram data
                                    794 ;--------------------------------------------------------
                                    795 	.area DSEG    (DATA)
                                    796 ;--------------------------------------------------------
                                    797 ; overlayable items in internal ram 
                                    798 ;--------------------------------------------------------
                                    799 ;--------------------------------------------------------
                                    800 ; indirectly addressable internal ram data
                                    801 ;--------------------------------------------------------
                                    802 	.area ISEG    (DATA)
                                    803 ;--------------------------------------------------------
                                    804 ; absolute internal ram data
                                    805 ;--------------------------------------------------------
                                    806 	.area IABS    (ABS,DATA)
                                    807 	.area IABS    (ABS,DATA)
                                    808 ;--------------------------------------------------------
                                    809 ; bit data
                                    810 ;--------------------------------------------------------
                                    811 	.area BSEG    (BIT)
                                    812 ;--------------------------------------------------------
                                    813 ; paged external ram data
                                    814 ;--------------------------------------------------------
                                    815 	.area PSEG    (PAG,XDATA)
                                    816 ;--------------------------------------------------------
                                    817 ; external ram data
                                    818 ;--------------------------------------------------------
                                    819 	.area XSEG    (XDATA)
                           0061A6   820 _MONMUX	=	0x61a6
                           0061A6   821 _OPAMPMC	=	0x61a6
                           006230   822 _I2CCFG	=	0x6230
                           006231   823 _I2CSTAT	=	0x6231
                           006232   824 _I2CDATA	=	0x6232
                           006233   825 _I2CADDR	=	0x6233
                           006234   826 _I2CWC	=	0x6234
                           006235   827 _I2CIO	=	0x6235
                           006243   828 _OBSSEL0	=	0x6243
                           006244   829 _OBSSEL1	=	0x6244
                           006245   830 _OBSSEL2	=	0x6245
                           006246   831 _OBSSEL3	=	0x6246
                           006247   832 _OBSSEL4	=	0x6247
                           006248   833 _OBSSEL5	=	0x6248
                           006249   834 _CHVER	=	0x6249
                           00624A   835 _CHIPID	=	0x624a
                           00624B   836 _TESTREG0	=	0x624b
                           006260   837 _DBGDATA	=	0x6260
                           006262   838 _SRCRC	=	0x6262
                           006264   839 _BATTMON	=	0x6264
                           006265   840 _IVCTRL	=	0x6265
                           006270   841 _FCTL	=	0x6270
                           006271   842 _FADDRL	=	0x6271
                           006272   843 _FADDRH	=	0x6272
                           006273   844 _FWDATA	=	0x6273
                           006276   845 _CHIPINFO0	=	0x6276
                           006277   846 _CHIPINFO1	=	0x6277
                           006281   847 _IRCTL	=	0x6281
                           006290   848 _CLD	=	0x6290
                           0062A0   849 _XX_T1CCTL0	=	0x62a0
                           0062A1   850 _XX_T1CCTL1	=	0x62a1
                           0062A2   851 _XX_T1CCTL2	=	0x62a2
                           0062A3   852 _T1CCTL3	=	0x62a3
                           0062A4   853 _T1CCTL4	=	0x62a4
                           0062A6   854 _XX_T1CC0L	=	0x62a6
                           0062A7   855 _XX_T1CC0H	=	0x62a7
                           0062A8   856 _XX_T1CC1L	=	0x62a8
                           0062A9   857 _XX_T1CC1H	=	0x62a9
                           0062AA   858 _XX_T1CC2L	=	0x62aa
                           0062AB   859 _XX_T1CC2H	=	0x62ab
                           0062AC   860 _T1CC3L	=	0x62ac
                           0062AD   861 _T1CC3H	=	0x62ad
                           0062AE   862 _T1CC4L	=	0x62ae
                           0062AF   863 _T1CC4H	=	0x62af
                           0062B0   864 _STCC	=	0x62b0
                           0062B1   865 _STCS	=	0x62b1
                           0062B2   866 _STCV0	=	0x62b2
                           0062B3   867 _STCV1	=	0x62b3
                           0062B4   868 _STCV2	=	0x62b4
                           0062C0   869 _OPAMPC	=	0x62c0
                           0062C1   870 _OPAMPS	=	0x62c1
                           0062D0   871 _CMPCTL	=	0x62d0
                           006000   872 _RFCORE_RAM	=	0x6000
                           006000   873 _RXFIFO	=	0x6000
                           006080   874 _TXFIFO	=	0x6080
                           006100   875 _SRC_ADDR_TABLE	=	0x6100
                           006160   876 _SRCRESMASK0	=	0x6160
                           006161   877 _SRCRESMASK1	=	0x6161
                           006162   878 _SRCRESMASK2	=	0x6162
                           006163   879 _SRCRESINDEX	=	0x6163
                           006164   880 _SRCEXTPENDEN0	=	0x6164
                           006165   881 _SRCEXTPENDEN1	=	0x6165
                           006166   882 _SRCEXTPENDEN2	=	0x6166
                           006167   883 _SRCSHORTPENDEN0	=	0x6167
                           006168   884 _SRCSHORTPENDEN1	=	0x6168
                           006169   885 _SRCSHORTPENDEN2	=	0x6169
                           00616A   886 _EXT_ADDR0	=	0x616a
                           00616B   887 _EXT_ADDR1	=	0x616b
                           00616C   888 _EXT_ADDR2	=	0x616c
                           00616D   889 _EXT_ADDR3	=	0x616d
                           00616E   890 _EXT_ADDR4	=	0x616e
                           00616F   891 _EXT_ADDR5	=	0x616f
                           006170   892 _EXT_ADDR6	=	0x6170
                           006171   893 _EXT_ADDR7	=	0x6171
                           006172   894 _PAN_ID0	=	0x6172
                           006173   895 _PAN_ID1	=	0x6173
                           006174   896 _SHORT_ADDR0	=	0x6174
                           006175   897 _SHORT_ADDR1	=	0x6175
                           006180   898 _FRMFILT0	=	0x6180
                           006181   899 _FRMFILT1	=	0x6181
                           006182   900 _SRCMATCH	=	0x6182
                           006183   901 _SRCSHORTEN0	=	0x6183
                           006184   902 _SRCSHORTEN1	=	0x6184
                           006185   903 _SRCSHORTEN2	=	0x6185
                           006186   904 _SRCEXTEN0	=	0x6186
                           006187   905 _SRCEXTEN1	=	0x6187
                           006188   906 _SRCEXTEN2	=	0x6188
                           006189   907 _FRMCTRL0	=	0x6189
                           00618A   908 _FRMCTRL1	=	0x618a
                           00618B   909 _RXENABLE	=	0x618b
                           00618C   910 _RXMASKSET	=	0x618c
                           00618D   911 _RXMASKCLR	=	0x618d
                           00618E   912 _FREQTUNE	=	0x618e
                           00618F   913 _FREQCTRL	=	0x618f
                           006190   914 _TXPOWER	=	0x6190
                           006191   915 _TXCTRL	=	0x6191
                           006192   916 _FSMSTAT0	=	0x6192
                           006193   917 _FSMSTAT1	=	0x6193
                           006194   918 _FIFOPCTRL	=	0x6194
                           006195   919 _FSMCTRL	=	0x6195
                           006196   920 _CCACTRL0	=	0x6196
                           006197   921 _CCACTRL1	=	0x6197
                           006198   922 _RSSI	=	0x6198
                           006199   923 _RSSISTAT	=	0x6199
                           00619A   924 _RXFIRST	=	0x619a
                           00619B   925 _RXFIFOCNT	=	0x619b
                           00619C   926 _TXFIFOCNT	=	0x619c
                           00619D   927 _RXFIRST_PTR	=	0x619d
                           00619E   928 _RXLAST_PTR	=	0x619e
                           00619F   929 _RXP1_PTR	=	0x619f
                           0061A1   930 _TXFIRST_PTR	=	0x61a1
                           0061A2   931 _TXLAST_PTR	=	0x61a2
                           0061A3   932 _RFIRQM0	=	0x61a3
                           0061A4   933 _RFIRQM1	=	0x61a4
                           0061A5   934 _RFERRM	=	0x61a5
                           0061A7   935 _RFRND	=	0x61a7
                           0061A8   936 _MDMCTRL0	=	0x61a8
                           0061A9   937 _MDMCTRL1	=	0x61a9
                           0061AA   938 _FREQEST	=	0x61aa
                           0061AB   939 _RXCTRL	=	0x61ab
                           0061AC   940 _FSCTRL	=	0x61ac
                           0061AD   941 _FSCAL0	=	0x61ad
                           0061AE   942 _FSCAL1	=	0x61ae
                           0061AF   943 _FSCAL2	=	0x61af
                           0061B0   944 _FSCAL3	=	0x61b0
                           0061B1   945 _AGCCTRL0	=	0x61b1
                           0061B2   946 _AGCCTRL1	=	0x61b2
                           0061B3   947 _AGCCTRL2	=	0x61b3
                           0061B4   948 _AGCCTRL3	=	0x61b4
                           0061B5   949 _ADCTEST0	=	0x61b5
                           0061B6   950 _ADCTEST1	=	0x61b6
                           0061B7   951 _ADCTEST2	=	0x61b7
                           0061B8   952 _MDMTEST0	=	0x61b8
                           0061B9   953 _MDMTEST1	=	0x61b9
                           0061BA   954 _DACTEST0	=	0x61ba
                           0061BB   955 _DACTEST1	=	0x61bb
                           0061BC   956 _DACTEST2	=	0x61bc
                           0061BD   957 _ATEST	=	0x61bd
                           0061BE   958 _PTEST0	=	0x61be
                           0061BF   959 _PTEST1	=	0x61bf
                           0061FA   960 _TXFILTCFG	=	0x61fa
                           0061EB   961 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   962 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   963 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   964 _CSPPROG0	=	0x61c0
                           0061C1   965 _CSPPROG1	=	0x61c1
                           0061C2   966 _CSPPROG2	=	0x61c2
                           0061C3   967 _CSPPROG3	=	0x61c3
                           0061C4   968 _CSPPROG4	=	0x61c4
                           0061C5   969 _CSPPROG5	=	0x61c5
                           0061C6   970 _CSPPROG6	=	0x61c6
                           0061C7   971 _CSPPROG7	=	0x61c7
                           0061C8   972 _CSPPROG8	=	0x61c8
                           0061C9   973 _CSPPROG9	=	0x61c9
                           0061CA   974 _CSPPROG10	=	0x61ca
                           0061CB   975 _CSPPROG11	=	0x61cb
                           0061CC   976 _CSPPROG12	=	0x61cc
                           0061CD   977 _CSPPROG13	=	0x61cd
                           0061CE   978 _CSPPROG14	=	0x61ce
                           0061CF   979 _CSPPROG15	=	0x61cf
                           0061D0   980 _CSPPROG16	=	0x61d0
                           0061D1   981 _CSPPROG17	=	0x61d1
                           0061D2   982 _CSPPROG18	=	0x61d2
                           0061D3   983 _CSPPROG19	=	0x61d3
                           0061D4   984 _CSPPROG20	=	0x61d4
                           0061D5   985 _CSPPROG21	=	0x61d5
                           0061D6   986 _CSPPROG22	=	0x61d6
                           0061D7   987 _CSPPROG23	=	0x61d7
                           0061E0   988 _CSPCTRL	=	0x61e0
                           0061E1   989 _CSPSTAT	=	0x61e1
                           0061E2   990 _CSPX	=	0x61e2
                           0061E3   991 _CSPY	=	0x61e3
                           0061E4   992 _CSPZ	=	0x61e4
                           0061E5   993 _CSPT	=	0x61e5
                           006200   994 _USBADDR	=	0x6200
                           006201   995 _USBPOW	=	0x6201
                           006202   996 _USBIIF	=	0x6202
                           006204   997 _USBOIF	=	0x6204
                           006206   998 _USBCIF	=	0x6206
                           006207   999 _USBIIE	=	0x6207
                           006209  1000 _USBOIE	=	0x6209
                           00620B  1001 _USBCIE	=	0x620b
                           00620C  1002 _USBFRML	=	0x620c
                           00620D  1003 _USBFRMH	=	0x620d
                           00620E  1004 _USBINDEX	=	0x620e
                           00620F  1005 _USBCTRL	=	0x620f
                           006210  1006 _USBMAXI	=	0x6210
                           006211  1007 _USBCS0	=	0x6211
                           006211  1008 _USBCSIL	=	0x6211
                           006212  1009 _USBCSIH	=	0x6212
                           006213  1010 _USBMAXO	=	0x6213
                           006214  1011 _USBCSOL	=	0x6214
                           006215  1012 _USBCSOH	=	0x6215
                           006216  1013 _USBCNT0	=	0x6216
                           006216  1014 _USBCNTL	=	0x6216
                           006217  1015 _USBCNTH	=	0x6217
                           006220  1016 _USBF0	=	0x6220
                           006222  1017 _USBF1	=	0x6222
                           006224  1018 _USBF2	=	0x6224
                           006226  1019 _USBF3	=	0x6226
                           006228  1020 _USBF4	=	0x6228
                           00622A  1021 _USBF5	=	0x622a
                           007080  1022 _X_P0	=	0x7080
                           007086  1023 _X_U0CSR	=	0x7086
                           007089  1024 _X_P0IFG	=	0x7089
                           00708A  1025 _X_P1IFG	=	0x708a
                           00708B  1026 _X_P2IFG	=	0x708b
                           00708C  1027 _X_PICTL	=	0x708c
                           00708D  1028 _X_P1IEN	=	0x708d
                           00708F  1029 _X_P0INP	=	0x708f
                           007090  1030 _X_P1	=	0x7090
                           007091  1031 _X_RFIRQF1	=	0x7091
                           007093  1032 _X_MPAGE	=	0x7093
                           007093  1033 _X__XPAGE	=	0x7093
                           007094  1034 _X_T2CTRL	=	0x7094
                           007095  1035 _X_ST0	=	0x7095
                           007096  1036 _X_ST1	=	0x7096
                           007097  1037 _X_ST2	=	0x7097
                           00709C  1038 _X_T2EVTCFG	=	0x709c
                           00709D  1039 _X_SLEEPSTA	=	0x709d
                           00709E  1040 _X_CLKCONSTA	=	0x709e
                           00709F  1041 _X_FMAP	=	0x709f
                           00709F  1042 _X_PSBANK	=	0x709f
                           0070A0  1043 _X_P2	=	0x70a0
                           0070A1  1044 _X_T2IRQF	=	0x70a1
                           0070A2  1045 _X_T2M0	=	0x70a2
                           0070A3  1046 _X_T2M1	=	0x70a3
                           0070A4  1047 _X_T2MOVF0	=	0x70a4
                           0070A5  1048 _X_T2MOVF1	=	0x70a5
                           0070A6  1049 _X_T2MOVF2	=	0x70a6
                           0070A7  1050 _X_T2IRQM	=	0x70a7
                           0070AB  1051 _X_P0IEN	=	0x70ab
                           0070AC  1052 _X_P2IEN	=	0x70ac
                           0070AD  1053 _X_STLOAD	=	0x70ad
                           0070AE  1054 _X_PMUX	=	0x70ae
                           0070AF  1055 _X_T1STAT	=	0x70af
                           0070B1  1056 _X_ENCDI	=	0x70b1
                           0070B2  1057 _X_ENCDO	=	0x70b2
                           0070B3  1058 _X_ENCCS	=	0x70b3
                           0070B4  1059 _X_ADCCON1	=	0x70b4
                           0070B5  1060 _X_ADCCON2	=	0x70b5
                           0070B6  1061 _X_ADCCON3	=	0x70b6
                           0070BA  1062 _X_ADCL	=	0x70ba
                           0070BB  1063 _X_ADCH	=	0x70bb
                           0070BC  1064 _X_RNDL	=	0x70bc
                           0070BD  1065 _X_RNDH	=	0x70bd
                           0070BE  1066 _X_SLEEPCMD	=	0x70be
                           0070BF  1067 _X_RFERRF	=	0x70bf
                           0070C1  1068 _X_U0DBUF	=	0x70c1
                           0070C2  1069 _X_U0BAUD	=	0x70c2
                           0070C3  1070 _X_T2MSEL	=	0x70c3
                           0070C4  1071 _X_U0UCR	=	0x70c4
                           0070C5  1072 _X_U0GCR	=	0x70c5
                           0070C6  1073 _X_CLKCONCMD	=	0x70c6
                           0070C7  1074 _X_MEMCTR	=	0x70c7
                           0070C9  1075 _X_WDCTL	=	0x70c9
                           0070CA  1076 _X_T3CNT	=	0x70ca
                           0070CB  1077 _X_T3CTL	=	0x70cb
                           0070CC  1078 _X_T3CCTL0	=	0x70cc
                           0070CD  1079 _X_T3CC0	=	0x70cd
                           0070CE  1080 _X_T3CCTL1	=	0x70ce
                           0070CF  1081 _X_T3CC1	=	0x70cf
                           0070D1  1082 _X_DMAIRQ	=	0x70d1
                           0070D2  1083 _X_DMA1CFGL	=	0x70d2
                           0070D3  1084 _X_DMA1CFGH	=	0x70d3
                           0070D4  1085 _X_DMA0CFGL	=	0x70d4
                           0070D5  1086 _X_DMA0CFGH	=	0x70d5
                           0070D6  1087 _X_DMAARM	=	0x70d6
                           0070D7  1088 _X_DMAREQ	=	0x70d7
                           0070D8  1089 _X_TIMIF	=	0x70d8
                           0070D9  1090 _X_RFD	=	0x70d9
                           0070DA  1091 _X_T1CC0L	=	0x70da
                           0070DB  1092 _X_T1CC0H	=	0x70db
                           0070DC  1093 _X_T1CC1L	=	0x70dc
                           0070DD  1094 _X_T1CC1H	=	0x70dd
                           0070DE  1095 _X_T1CC2L	=	0x70de
                           0070DF  1096 _X_T1CC2H	=	0x70df
                           0070E1  1097 _X_RFST	=	0x70e1
                           0070E2  1098 _X_T1CNTL	=	0x70e2
                           0070E3  1099 _X_T1CNTH	=	0x70e3
                           0070E4  1100 _X_T1CTL	=	0x70e4
                           0070E5  1101 _X_T1CCTL0	=	0x70e5
                           0070E6  1102 _X_T1CCTL1	=	0x70e6
                           0070E7  1103 _X_T1CCTL2	=	0x70e7
                           0070E9  1104 _X_RFIRQF0	=	0x70e9
                           0070EA  1105 _X_T4CNT	=	0x70ea
                           0070EB  1106 _X_T4CTL	=	0x70eb
                           0070EC  1107 _X_T4CCTL0	=	0x70ec
                           0070ED  1108 _X_T4CC0	=	0x70ed
                           0070EE  1109 _X_T4CCTL1	=	0x70ee
                           0070EF  1110 _X_T4CC1	=	0x70ef
                           0070F1  1111 _X_PERCFG	=	0x70f1
                           0070F2  1112 _X_APCFG	=	0x70f2
                           0070F3  1113 _X_P0SEL	=	0x70f3
                           0070F4  1114 _X_P1SEL	=	0x70f4
                           0070F5  1115 _X_P2SEL	=	0x70f5
                           0070F6  1116 _X_P1INP	=	0x70f6
                           0070F7  1117 _X_P2INP	=	0x70f7
                           0070F8  1118 _X_U1CSR	=	0x70f8
                           0070F9  1119 _X_U1DBUF	=	0x70f9
                           0070FA  1120 _X_U1BAUD	=	0x70fa
                           0070FB  1121 _X_U1UCR	=	0x70fb
                           0070FC  1122 _X_U1GCR	=	0x70fc
                           0070FD  1123 _X_P0DIR	=	0x70fd
                           0070FE  1124 _X_P1DIR	=	0x70fe
                           0070FF  1125 _X_P2DIR	=	0x70ff
                           007800  1126 _X_INFOPAGE	=	0x7800
                           00780C  1127 _X_IEEE_ADDR	=	0x780c
      000000                       1128 _queued_packets_memb_memb_count:
      000000                       1129 	.ds 8
      000008                       1130 _queued_packets_memb_memb_mem:
      000008                       1131 	.ds 256
      000108                       1132 __nbr_phase_mem:
      000108                       1133 	.ds 56
                                   1134 ;--------------------------------------------------------
                                   1135 ; absolute external ram data
                                   1136 ;--------------------------------------------------------
                                   1137 	.area XABS    (ABS,XDATA)
                                   1138 ;--------------------------------------------------------
                                   1139 ; external initialized ram data
                                   1140 ;--------------------------------------------------------
                                   1141 	.area XISEG   (XDATA)
      000000                       1142 _queued_packets_memb:
      000000                       1143 	.ds 10
      00000A                       1144 _nbr_phase_struct:
      00000A                       1145 	.ds 9
      000013                       1146 _nbr_phase:
      000013                       1147 	.ds 3
                                   1148 	.area HOME    (CODE)
                                   1149 	.area GSINIT0 (CODE)
                                   1150 	.area GSINIT1 (CODE)
                                   1151 	.area GSINIT2 (CODE)
                                   1152 	.area GSINIT3 (CODE)
                                   1153 	.area GSINIT4 (CODE)
                                   1154 	.area GSINIT5 (CODE)
                                   1155 	.area GSINIT  (CODE)
                                   1156 	.area GSFINAL (CODE)
                                   1157 	.area CSEG    (CODE)
                                   1158 ;--------------------------------------------------------
                                   1159 ; global & static initialisations
                                   1160 ;--------------------------------------------------------
                                   1161 	.area HOME    (CODE)
                                   1162 	.area GSINIT  (CODE)
                                   1163 	.area GSFINAL (CODE)
                                   1164 	.area GSINIT  (CODE)
                                   1165 ;--------------------------------------------------------
                                   1166 ; Home
                                   1167 ;--------------------------------------------------------
                                   1168 	.area HOME    (CODE)
                                   1169 	.area HOME    (CODE)
                                   1170 ;--------------------------------------------------------
                                   1171 ; code
                                   1172 ;--------------------------------------------------------
                                   1173 	.area CSEG    (CODE)
                                   1174 ;------------------------------------------------------------
                                   1175 ;Allocation info for local variables in function 'phase_update'
                                   1176 ;------------------------------------------------------------
                                   1177 ;time                      Allocated to stack - sp -6
                                   1178 ;mac_status                Allocated to stack - sp -8
                                   1179 ;neighbor                  Allocated to registers r5 r6 r7 
                                   1180 ;e                         Allocated to stack - sp -2
                                   1181 ;sloc0                     Allocated to stack - sp +4
                                   1182 ;------------------------------------------------------------
                                   1183 ;	/opt/contiki/core/net/mac/phase.c:91: phase_update(const linkaddr_t *neighbor, rtimer_clock_t time,
                                   1184 ;	-----------------------------------------
                                   1185 ;	 function phase_update
                                   1186 ;	-----------------------------------------
      000000                       1187 _phase_update:
                           000007  1188 	ar7 = 0x07
                           000006  1189 	ar6 = 0x06
                           000005  1190 	ar5 = 0x05
                           000004  1191 	ar4 = 0x04
                           000003  1192 	ar3 = 0x03
                           000002  1193 	ar2 = 0x02
                           000001  1194 	ar1 = 0x01
                           000000  1195 	ar0 = 0x00
      000000 05 81            [12] 1196 	inc	sp
      000002 05 81            [12] 1197 	inc	sp
      000004 05 81            [12] 1198 	inc	sp
      000006 AD 82            [24] 1199 	mov	r5,dpl
      000008 AE 83            [24] 1200 	mov	r6,dph
      00000A AF F0            [24] 1201 	mov	r7,b
                                   1202 ;	/opt/contiki/core/net/mac/phase.c:97: e = nbr_table_get_from_lladdr(nbr_phase, neighbor);
      00000C 90r00r13         [24] 1203 	mov	dptr,#_nbr_phase
      00000F E0               [24] 1204 	movx	a,@dptr
      000010 FA               [12] 1205 	mov	r2,a
      000011 A3               [24] 1206 	inc	dptr
      000012 E0               [24] 1207 	movx	a,@dptr
      000013 FB               [12] 1208 	mov	r3,a
      000014 A3               [24] 1209 	inc	dptr
      000015 E0               [24] 1210 	movx	a,@dptr
      000016 FC               [12] 1211 	mov	r4,a
      000017 C0 07            [24] 1212 	push	ar7
      000019 C0 06            [24] 1213 	push	ar6
      00001B C0 05            [24] 1214 	push	ar5
      00001D C0 05            [24] 1215 	push	ar5
      00001F C0 06            [24] 1216 	push	ar6
      000021 C0 07            [24] 1217 	push	ar7
      000023 8A 82            [24] 1218 	mov	dpl,r2
      000025 8B 83            [24] 1219 	mov	dph,r3
      000027 8C F0            [24] 1220 	mov	b,r4
      000029 12r00r00         [24] 1221 	lcall	_nbr_table_get_from_lladdr
      00002C AA 82            [24] 1222 	mov	r2,dpl
      00002E AB 83            [24] 1223 	mov	r3,dph
      000030 AC F0            [24] 1224 	mov	r4,b
      000032 15 81            [12] 1225 	dec	sp
      000034 15 81            [12] 1226 	dec	sp
      000036 15 81            [12] 1227 	dec	sp
      000038 D0 05            [24] 1228 	pop	ar5
      00003A D0 06            [24] 1229 	pop	ar6
      00003C D0 07            [24] 1230 	pop	ar7
      00003E A8 81            [24] 1231 	mov	r0,sp
      000040 18               [12] 1232 	dec	r0
      000041 18               [12] 1233 	dec	r0
      000042 A6 02            [24] 1234 	mov	@r0,ar2
      000044 08               [12] 1235 	inc	r0
      000045 A6 03            [24] 1236 	mov	@r0,ar3
      000047 08               [12] 1237 	inc	r0
      000048 A6 04            [24] 1238 	mov	@r0,ar4
                                   1239 ;	/opt/contiki/core/net/mac/phase.c:98: if(e != NULL) {
      00004A A8 81            [24] 1240 	mov	r0,sp
      00004C 18               [12] 1241 	dec	r0
      00004D 18               [12] 1242 	dec	r0
      00004E E6               [12] 1243 	mov	a,@r0
      00004F 08               [12] 1244 	inc	r0
      000050 46               [12] 1245 	orl	a,@r0
      000051 70 03            [24] 1246 	jnz	00150$
      000053 02r01r6D         [24] 1247 	ljmp	00119$
      000056                       1248 00150$:
                                   1249 ;	/opt/contiki/core/net/mac/phase.c:99: if(mac_status == MAC_TX_OK) {
      000056 E5 81            [12] 1250 	mov	a,sp
      000058 24 F8            [12] 1251 	add	a,#0xf8
      00005A F8               [12] 1252 	mov	r0,a
      00005B E6               [12] 1253 	mov	a,@r0
      00005C 08               [12] 1254 	inc	r0
      00005D 46               [12] 1255 	orl	a,@r0
      00005E 70 1B            [24] 1256 	jnz	00102$
                                   1257 ;	/opt/contiki/core/net/mac/phase.c:103: e->time = time;
      000060 A8 81            [24] 1258 	mov	r0,sp
      000062 18               [12] 1259 	dec	r0
      000063 18               [12] 1260 	dec	r0
      000064 86 82            [24] 1261 	mov	dpl,@r0
      000066 08               [12] 1262 	inc	r0
      000067 86 83            [24] 1263 	mov	dph,@r0
      000069 08               [12] 1264 	inc	r0
      00006A 86 F0            [24] 1265 	mov	b,@r0
      00006C E5 81            [12] 1266 	mov	a,sp
      00006E 24 FA            [12] 1267 	add	a,#0xfa
      000070 F9               [12] 1268 	mov	r1,a
      000071 E7               [12] 1269 	mov	a,@r1
      000072 12r00r00         [24] 1270 	lcall	__gptrput
      000075 A3               [24] 1271 	inc	dptr
      000076 09               [12] 1272 	inc	r1
      000077 E7               [12] 1273 	mov	a,@r1
      000078 12r00r00         [24] 1274 	lcall	__gptrput
      00007B                       1275 00102$:
                                   1276 ;	/opt/contiki/core/net/mac/phase.c:108: if(mac_status == MAC_TX_NOACK) {
      00007B E5 81            [12] 1277 	mov	a,sp
      00007D 24 F8            [12] 1278 	add	a,#0xf8
      00007F F8               [12] 1279 	mov	r0,a
      000080 B6 02 06         [24] 1280 	cjne	@r0,#0x02,00152$
      000083 08               [12] 1281 	inc	r0
      000084 B6 00 02         [24] 1282 	cjne	@r0,#0x00,00152$
      000087 80 03            [24] 1283 	sjmp	00153$
      000089                       1284 00152$:
      000089 02r01r44         [24] 1285 	ljmp	00111$
      00008C                       1286 00153$:
                                   1287 ;	/opt/contiki/core/net/mac/phase.c:110: e->noacks++;
      00008C A8 81            [24] 1288 	mov	r0,sp
      00008E 18               [12] 1289 	dec	r0
      00008F 18               [12] 1290 	dec	r0
      000090 74 02            [12] 1291 	mov	a,#0x02
      000092 26               [12] 1292 	add	a,@r0
      000093 FF               [12] 1293 	mov	r7,a
      000094 E4               [12] 1294 	clr	a
      000095 08               [12] 1295 	inc	r0
      000096 36               [12] 1296 	addc	a,@r0
      000097 FE               [12] 1297 	mov	r6,a
      000098 08               [12] 1298 	inc	r0
      000099 86 05            [24] 1299 	mov	ar5,@r0
      00009B 8F 82            [24] 1300 	mov	dpl,r7
      00009D 8E 83            [24] 1301 	mov	dph,r6
      00009F 8D F0            [24] 1302 	mov	b,r5
      0000A1 12r00r00         [24] 1303 	lcall	__gptrget
      0000A4 FC               [12] 1304 	mov	r4,a
      0000A5 0C               [12] 1305 	inc	r4
      0000A6 8F 82            [24] 1306 	mov	dpl,r7
      0000A8 8E 83            [24] 1307 	mov	dph,r6
      0000AA 8D F0            [24] 1308 	mov	b,r5
      0000AC EC               [12] 1309 	mov	a,r4
      0000AD 12r00r00         [24] 1310 	lcall	__gptrput
                                   1311 ;	/opt/contiki/core/net/mac/phase.c:111: if(e->noacks == 1) {
      0000B0 BC 01 2F         [24] 1312 	cjne	r4,#0x01,00104$
                                   1313 ;	/opt/contiki/core/net/mac/phase.c:112: timer_set(&e->noacks_timer, MAX_NOACKS_TIME);
      0000B3 A8 81            [24] 1314 	mov	r0,sp
      0000B5 18               [12] 1315 	dec	r0
      0000B6 18               [12] 1316 	dec	r0
      0000B7 74 03            [12] 1317 	mov	a,#0x03
      0000B9 26               [12] 1318 	add	a,@r0
      0000BA FA               [12] 1319 	mov	r2,a
      0000BB E4               [12] 1320 	clr	a
      0000BC 08               [12] 1321 	inc	r0
      0000BD 36               [12] 1322 	addc	a,@r0
      0000BE FB               [12] 1323 	mov	r3,a
      0000BF 08               [12] 1324 	inc	r0
      0000C0 86 04            [24] 1325 	mov	ar4,@r0
      0000C2 C0 07            [24] 1326 	push	ar7
      0000C4 C0 06            [24] 1327 	push	ar6
      0000C6 C0 05            [24] 1328 	push	ar5
      0000C8 E4               [12] 1329 	clr	a
      0000C9 C0 E0            [24] 1330 	push	acc
      0000CB 74 0F            [12] 1331 	mov	a,#0x0F
      0000CD C0 E0            [24] 1332 	push	acc
      0000CF 8A 82            [24] 1333 	mov	dpl,r2
      0000D1 8B 83            [24] 1334 	mov	dph,r3
      0000D3 8C F0            [24] 1335 	mov	b,r4
      0000D5 12r00r00         [24] 1336 	lcall	_timer_set
      0000D8 15 81            [12] 1337 	dec	sp
      0000DA 15 81            [12] 1338 	dec	sp
      0000DC D0 05            [24] 1339 	pop	ar5
      0000DE D0 06            [24] 1340 	pop	ar6
      0000E0 D0 07            [24] 1341 	pop	ar7
      0000E2                       1342 00104$:
                                   1343 ;	/opt/contiki/core/net/mac/phase.c:114: if(e->noacks >= MAX_NOACKS || timer_expired(&e->noacks_timer)) {
      0000E2 8F 82            [24] 1344 	mov	dpl,r7
      0000E4 8E 83            [24] 1345 	mov	dph,r6
      0000E6 8D F0            [24] 1346 	mov	b,r5
      0000E8 12r00r00         [24] 1347 	lcall	__gptrget
      0000EB FC               [12] 1348 	mov	r4,a
      0000EC BC 10 00         [24] 1349 	cjne	r4,#0x10,00156$
      0000EF                       1350 00156$:
      0000EF 50 24            [24] 1351 	jnc	00105$
      0000F1 A8 81            [24] 1352 	mov	r0,sp
      0000F3 18               [12] 1353 	dec	r0
      0000F4 18               [12] 1354 	dec	r0
      0000F5 74 03            [12] 1355 	mov	a,#0x03
      0000F7 26               [12] 1356 	add	a,@r0
      0000F8 FA               [12] 1357 	mov	r2,a
      0000F9 E4               [12] 1358 	clr	a
      0000FA 08               [12] 1359 	inc	r0
      0000FB 36               [12] 1360 	addc	a,@r0
      0000FC FB               [12] 1361 	mov	r3,a
      0000FD 08               [12] 1362 	inc	r0
      0000FE 86 04            [24] 1363 	mov	ar4,@r0
      000100 8A 82            [24] 1364 	mov	dpl,r2
      000102 8B 83            [24] 1365 	mov	dph,r3
      000104 8C F0            [24] 1366 	mov	b,r4
      000106 12r00r00         [24] 1367 	lcall	_timer_expired
      000109 E5 82            [12] 1368 	mov	a,dpl
      00010B 85 83 F0         [24] 1369 	mov	b,dph
      00010E 45 F0            [12] 1370 	orl	a,b
      000110 70 03            [24] 1371 	jnz	00158$
      000112 02r01rEF         [24] 1372 	ljmp	00121$
      000115                       1373 00158$:
      000115                       1374 00105$:
                                   1375 ;	/opt/contiki/core/net/mac/phase.c:116: nbr_table_remove(nbr_phase, e);
      000115 A8 81            [24] 1376 	mov	r0,sp
      000117 18               [12] 1377 	dec	r0
      000118 18               [12] 1378 	dec	r0
      000119 86 07            [24] 1379 	mov	ar7,@r0
      00011B 08               [12] 1380 	inc	r0
      00011C 86 06            [24] 1381 	mov	ar6,@r0
      00011E 08               [12] 1382 	inc	r0
      00011F 86 05            [24] 1383 	mov	ar5,@r0
      000121 90r00r13         [24] 1384 	mov	dptr,#_nbr_phase
      000124 E0               [24] 1385 	movx	a,@dptr
      000125 FA               [12] 1386 	mov	r2,a
      000126 A3               [24] 1387 	inc	dptr
      000127 E0               [24] 1388 	movx	a,@dptr
      000128 FB               [12] 1389 	mov	r3,a
      000129 A3               [24] 1390 	inc	dptr
      00012A E0               [24] 1391 	movx	a,@dptr
      00012B FC               [12] 1392 	mov	r4,a
      00012C C0 07            [24] 1393 	push	ar7
      00012E C0 06            [24] 1394 	push	ar6
      000130 C0 05            [24] 1395 	push	ar5
      000132 8A 82            [24] 1396 	mov	dpl,r2
      000134 8B 83            [24] 1397 	mov	dph,r3
      000136 8C F0            [24] 1398 	mov	b,r4
      000138 12r00r00         [24] 1399 	lcall	_nbr_table_remove
      00013B 15 81            [12] 1400 	dec	sp
      00013D 15 81            [12] 1401 	dec	sp
      00013F 15 81            [12] 1402 	dec	sp
                                   1403 ;	/opt/contiki/core/net/mac/phase.c:117: return;
      000141 02r01rEF         [24] 1404 	ljmp	00121$
      000144                       1405 00111$:
                                   1406 ;	/opt/contiki/core/net/mac/phase.c:119: } else if(mac_status == MAC_TX_OK) {
      000144 E5 81            [12] 1407 	mov	a,sp
      000146 24 F8            [12] 1408 	add	a,#0xf8
      000148 F8               [12] 1409 	mov	r0,a
      000149 E6               [12] 1410 	mov	a,@r0
      00014A 08               [12] 1411 	inc	r0
      00014B 46               [12] 1412 	orl	a,@r0
      00014C 60 03            [24] 1413 	jz	00159$
      00014E 02r01rEF         [24] 1414 	ljmp	00121$
      000151                       1415 00159$:
                                   1416 ;	/opt/contiki/core/net/mac/phase.c:120: e->noacks = 0;
      000151 A8 81            [24] 1417 	mov	r0,sp
      000153 18               [12] 1418 	dec	r0
      000154 18               [12] 1419 	dec	r0
      000155 74 02            [12] 1420 	mov	a,#0x02
      000157 26               [12] 1421 	add	a,@r0
      000158 FA               [12] 1422 	mov	r2,a
      000159 E4               [12] 1423 	clr	a
      00015A 08               [12] 1424 	inc	r0
      00015B 36               [12] 1425 	addc	a,@r0
      00015C FB               [12] 1426 	mov	r3,a
      00015D 08               [12] 1427 	inc	r0
      00015E 86 04            [24] 1428 	mov	ar4,@r0
      000160 8A 82            [24] 1429 	mov	dpl,r2
      000162 8B 83            [24] 1430 	mov	dph,r3
      000164 8C F0            [24] 1431 	mov	b,r4
      000166 E4               [12] 1432 	clr	a
      000167 12r00r00         [24] 1433 	lcall	__gptrput
      00016A 02r01rEF         [24] 1434 	ljmp	00121$
      00016D                       1435 00119$:
                                   1436 ;	/opt/contiki/core/net/mac/phase.c:124: if(mac_status == MAC_TX_OK && e == NULL) {
      00016D E5 81            [12] 1437 	mov	a,sp
      00016F 24 F8            [12] 1438 	add	a,#0xf8
      000171 F8               [12] 1439 	mov	r0,a
      000172 E6               [12] 1440 	mov	a,@r0
      000173 08               [12] 1441 	inc	r0
      000174 46               [12] 1442 	orl	a,@r0
      000175 70 78            [24] 1443 	jnz	00121$
      000177 A8 81            [24] 1444 	mov	r0,sp
      000179 18               [12] 1445 	dec	r0
      00017A 18               [12] 1446 	dec	r0
      00017B E6               [12] 1447 	mov	a,@r0
      00017C 08               [12] 1448 	inc	r0
      00017D 46               [12] 1449 	orl	a,@r0
      00017E 70 6F            [24] 1450 	jnz	00121$
                                   1451 ;	/opt/contiki/core/net/mac/phase.c:125: e = nbr_table_add_lladdr(nbr_phase, neighbor);
      000180 90r00r13         [24] 1452 	mov	dptr,#_nbr_phase
      000183 E0               [24] 1453 	movx	a,@dptr
      000184 FA               [12] 1454 	mov	r2,a
      000185 A3               [24] 1455 	inc	dptr
      000186 E0               [24] 1456 	movx	a,@dptr
      000187 FB               [12] 1457 	mov	r3,a
      000188 A3               [24] 1458 	inc	dptr
      000189 E0               [24] 1459 	movx	a,@dptr
      00018A FC               [12] 1460 	mov	r4,a
      00018B C0 05            [24] 1461 	push	ar5
      00018D C0 06            [24] 1462 	push	ar6
      00018F C0 07            [24] 1463 	push	ar7
      000191 8A 82            [24] 1464 	mov	dpl,r2
      000193 8B 83            [24] 1465 	mov	dph,r3
      000195 8C F0            [24] 1466 	mov	b,r4
      000197 12r00r00         [24] 1467 	lcall	_nbr_table_add_lladdr
      00019A AD 82            [24] 1468 	mov	r5,dpl
      00019C AE 83            [24] 1469 	mov	r6,dph
      00019E AF F0            [24] 1470 	mov	r7,b
      0001A0 15 81            [12] 1471 	dec	sp
      0001A2 15 81            [12] 1472 	dec	sp
      0001A4 15 81            [12] 1473 	dec	sp
      0001A6 A8 81            [24] 1474 	mov	r0,sp
      0001A8 18               [12] 1475 	dec	r0
      0001A9 18               [12] 1476 	dec	r0
      0001AA A6 05            [24] 1477 	mov	@r0,ar5
      0001AC 08               [12] 1478 	inc	r0
      0001AD A6 06            [24] 1479 	mov	@r0,ar6
      0001AF 08               [12] 1480 	inc	r0
      0001B0 A6 07            [24] 1481 	mov	@r0,ar7
                                   1482 ;	/opt/contiki/core/net/mac/phase.c:126: if(e) {
      0001B2 A8 81            [24] 1483 	mov	r0,sp
      0001B4 18               [12] 1484 	dec	r0
      0001B5 18               [12] 1485 	dec	r0
      0001B6 E6               [12] 1486 	mov	a,@r0
      0001B7 08               [12] 1487 	inc	r0
      0001B8 46               [12] 1488 	orl	a,@r0
      0001B9 60 34            [24] 1489 	jz	00121$
                                   1490 ;	/opt/contiki/core/net/mac/phase.c:127: e->time = time;
      0001BB A8 81            [24] 1491 	mov	r0,sp
      0001BD 18               [12] 1492 	dec	r0
      0001BE 18               [12] 1493 	dec	r0
      0001BF 86 82            [24] 1494 	mov	dpl,@r0
      0001C1 08               [12] 1495 	inc	r0
      0001C2 86 83            [24] 1496 	mov	dph,@r0
      0001C4 08               [12] 1497 	inc	r0
      0001C5 86 F0            [24] 1498 	mov	b,@r0
      0001C7 E5 81            [12] 1499 	mov	a,sp
      0001C9 24 FA            [12] 1500 	add	a,#0xfa
      0001CB F9               [12] 1501 	mov	r1,a
      0001CC E7               [12] 1502 	mov	a,@r1
      0001CD 12r00r00         [24] 1503 	lcall	__gptrput
      0001D0 A3               [24] 1504 	inc	dptr
      0001D1 09               [12] 1505 	inc	r1
      0001D2 E7               [12] 1506 	mov	a,@r1
      0001D3 12r00r00         [24] 1507 	lcall	__gptrput
                                   1508 ;	/opt/contiki/core/net/mac/phase.c:131: e->noacks = 0;
      0001D6 A8 81            [24] 1509 	mov	r0,sp
      0001D8 18               [12] 1510 	dec	r0
      0001D9 18               [12] 1511 	dec	r0
      0001DA 74 02            [12] 1512 	mov	a,#0x02
      0001DC 26               [12] 1513 	add	a,@r0
      0001DD FD               [12] 1514 	mov	r5,a
      0001DE E4               [12] 1515 	clr	a
      0001DF 08               [12] 1516 	inc	r0
      0001E0 36               [12] 1517 	addc	a,@r0
      0001E1 FE               [12] 1518 	mov	r6,a
      0001E2 08               [12] 1519 	inc	r0
      0001E3 86 07            [24] 1520 	mov	ar7,@r0
      0001E5 8D 82            [24] 1521 	mov	dpl,r5
      0001E7 8E 83            [24] 1522 	mov	dph,r6
      0001E9 8F F0            [24] 1523 	mov	b,r7
      0001EB E4               [12] 1524 	clr	a
      0001EC 12r00r00         [24] 1525 	lcall	__gptrput
      0001EF                       1526 00121$:
      0001EF 15 81            [12] 1527 	dec	sp
      0001F1 15 81            [12] 1528 	dec	sp
      0001F3 15 81            [12] 1529 	dec	sp
      0001F5 22               [24] 1530 	ret
                                   1531 ;------------------------------------------------------------
                                   1532 ;Allocation info for local variables in function 'send_packet'
                                   1533 ;------------------------------------------------------------
                                   1534 ;ptr                       Allocated to registers r5 r6 r7 
                                   1535 ;p                         Allocated to stack - sp -2
                                   1536 ;sloc0                     Allocated to stack - sp -8
                                   1537 ;sloc1                     Allocated to stack - sp -5
                                   1538 ;------------------------------------------------------------
                                   1539 ;	/opt/contiki/core/net/mac/phase.c:138: send_packet(void *ptr)
                                   1540 ;	-----------------------------------------
                                   1541 ;	 function send_packet
                                   1542 ;	-----------------------------------------
      0001F6                       1543 _send_packet:
      0001F6 E5 81            [12] 1544 	mov	a,sp
      0001F8 24 09            [12] 1545 	add	a,#0x09
      0001FA F5 81            [12] 1546 	mov	sp,a
      0001FC AD 82            [24] 1547 	mov	r5,dpl
      0001FE AE 83            [24] 1548 	mov	r6,dph
      000200 AF F0            [24] 1549 	mov	r7,b
                                   1550 ;	/opt/contiki/core/net/mac/phase.c:140: struct phase_queueitem *p = ptr;
      000202 A8 81            [24] 1551 	mov	r0,sp
      000204 18               [12] 1552 	dec	r0
      000205 18               [12] 1553 	dec	r0
      000206 A6 05            [24] 1554 	mov	@r0,ar5
      000208 08               [12] 1555 	inc	r0
      000209 A6 06            [24] 1556 	mov	@r0,ar6
      00020B 08               [12] 1557 	inc	r0
      00020C A6 07            [24] 1558 	mov	@r0,ar7
                                   1559 ;	/opt/contiki/core/net/mac/phase.c:142: if(p->buf_list == NULL) {
      00020E A8 81            [24] 1560 	mov	r0,sp
      000210 18               [12] 1561 	dec	r0
      000211 18               [12] 1562 	dec	r0
      000212 74 1D            [12] 1563 	mov	a,#0x1D
      000214 26               [12] 1564 	add	a,@r0
      000215 FA               [12] 1565 	mov	r2,a
      000216 E4               [12] 1566 	clr	a
      000217 08               [12] 1567 	inc	r0
      000218 36               [12] 1568 	addc	a,@r0
      000219 FB               [12] 1569 	mov	r3,a
      00021A 08               [12] 1570 	inc	r0
      00021B 86 04            [24] 1571 	mov	ar4,@r0
      00021D 8A 82            [24] 1572 	mov	dpl,r2
      00021F 8B 83            [24] 1573 	mov	dph,r3
      000221 8C F0            [24] 1574 	mov	b,r4
      000223 12r00r00         [24] 1575 	lcall	__gptrget
      000226 FA               [12] 1576 	mov	r2,a
      000227 A3               [24] 1577 	inc	dptr
      000228 12r00r00         [24] 1578 	lcall	__gptrget
      00022B FB               [12] 1579 	mov	r3,a
      00022C A3               [24] 1580 	inc	dptr
      00022D 12r00r00         [24] 1581 	lcall	__gptrget
      000230 FC               [12] 1582 	mov	r4,a
      000231 EA               [12] 1583 	mov	a,r2
      000232 4B               [12] 1584 	orl	a,r3
      000233 60 03            [24] 1585 	jz	00109$
      000235 02r03r0E         [24] 1586 	ljmp	00102$
      000238                       1587 00109$:
                                   1588 ;	/opt/contiki/core/net/mac/phase.c:143: queuebuf_to_packetbuf(p->q);
      000238 A8 81            [24] 1589 	mov	r0,sp
      00023A 18               [12] 1590 	dec	r0
      00023B 18               [12] 1591 	dec	r0
      00023C 74 1A            [12] 1592 	mov	a,#0x1A
      00023E 26               [12] 1593 	add	a,@r0
      00023F FC               [12] 1594 	mov	r4,a
      000240 E4               [12] 1595 	clr	a
      000241 08               [12] 1596 	inc	r0
      000242 36               [12] 1597 	addc	a,@r0
      000243 FB               [12] 1598 	mov	r3,a
      000244 08               [12] 1599 	inc	r0
      000245 86 02            [24] 1600 	mov	ar2,@r0
      000247 8C 82            [24] 1601 	mov	dpl,r4
      000249 8B 83            [24] 1602 	mov	dph,r3
      00024B 8A F0            [24] 1603 	mov	b,r2
      00024D 12r00r00         [24] 1604 	lcall	__gptrget
      000250 FD               [12] 1605 	mov	r5,a
      000251 A3               [24] 1606 	inc	dptr
      000252 12r00r00         [24] 1607 	lcall	__gptrget
      000255 FE               [12] 1608 	mov	r6,a
      000256 A3               [24] 1609 	inc	dptr
      000257 12r00r00         [24] 1610 	lcall	__gptrget
      00025A FF               [12] 1611 	mov	r7,a
      00025B 8D 82            [24] 1612 	mov	dpl,r5
      00025D 8E 83            [24] 1613 	mov	dph,r6
      00025F 8F F0            [24] 1614 	mov	b,r7
      000261 C0 04            [24] 1615 	push	ar4
      000263 C0 03            [24] 1616 	push	ar3
      000265 C0 02            [24] 1617 	push	ar2
      000267 12r00r00         [24] 1618 	lcall	_queuebuf_to_packetbuf
      00026A D0 02            [24] 1619 	pop	ar2
      00026C D0 03            [24] 1620 	pop	ar3
      00026E D0 04            [24] 1621 	pop	ar4
                                   1622 ;	/opt/contiki/core/net/mac/phase.c:144: queuebuf_free(p->q);
      000270 8C 82            [24] 1623 	mov	dpl,r4
      000272 8B 83            [24] 1624 	mov	dph,r3
      000274 8A F0            [24] 1625 	mov	b,r2
      000276 12r00r00         [24] 1626 	lcall	__gptrget
      000279 FD               [12] 1627 	mov	r5,a
      00027A A3               [24] 1628 	inc	dptr
      00027B 12r00r00         [24] 1629 	lcall	__gptrget
      00027E FE               [12] 1630 	mov	r6,a
      00027F A3               [24] 1631 	inc	dptr
      000280 12r00r00         [24] 1632 	lcall	__gptrget
      000283 FF               [12] 1633 	mov	r7,a
      000284 8D 82            [24] 1634 	mov	dpl,r5
      000286 8E 83            [24] 1635 	mov	dph,r6
      000288 8F F0            [24] 1636 	mov	b,r7
      00028A 12r00r00         [24] 1637 	lcall	_queuebuf_free
                                   1638 ;	/opt/contiki/core/net/mac/phase.c:145: NETSTACK_RDC.send(p->mac_callback, p->mac_callback_ptr);
      00028D 90r00r05         [24] 1639 	mov	dptr,#(_nullrdc_driver + 0x0005)
      000290 E4               [12] 1640 	clr	a
      000291 93               [24] 1641 	movc	a,@a+dptr
      000292 FC               [12] 1642 	mov	r4,a
      000293 A3               [24] 1643 	inc	dptr
      000294 E4               [12] 1644 	clr	a
      000295 93               [24] 1645 	movc	a,@a+dptr
      000296 FB               [12] 1646 	mov	r3,a
      000297 A8 81            [24] 1647 	mov	r0,sp
      000299 18               [12] 1648 	dec	r0
      00029A 18               [12] 1649 	dec	r0
      00029B 74 17            [12] 1650 	mov	a,#0x17
      00029D 26               [12] 1651 	add	a,@r0
      00029E FD               [12] 1652 	mov	r5,a
      00029F E4               [12] 1653 	clr	a
      0002A0 08               [12] 1654 	inc	r0
      0002A1 36               [12] 1655 	addc	a,@r0
      0002A2 FE               [12] 1656 	mov	r6,a
      0002A3 08               [12] 1657 	inc	r0
      0002A4 86 07            [24] 1658 	mov	ar7,@r0
      0002A6 8D 82            [24] 1659 	mov	dpl,r5
      0002A8 8E 83            [24] 1660 	mov	dph,r6
      0002AA 8F F0            [24] 1661 	mov	b,r7
      0002AC E5 81            [12] 1662 	mov	a,sp
      0002AE 24 FB            [12] 1663 	add	a,#0xfb
      0002B0 F8               [12] 1664 	mov	r0,a
      0002B1 12r00r00         [24] 1665 	lcall	__gptrget
      0002B4 F6               [12] 1666 	mov	@r0,a
      0002B5 A3               [24] 1667 	inc	dptr
      0002B6 12r00r00         [24] 1668 	lcall	__gptrget
      0002B9 08               [12] 1669 	inc	r0
      0002BA F6               [12] 1670 	mov	@r0,a
      0002BB A3               [24] 1671 	inc	dptr
      0002BC 12r00r00         [24] 1672 	lcall	__gptrget
      0002BF 08               [12] 1673 	inc	r0
      0002C0 F6               [12] 1674 	mov	@r0,a
      0002C1 A8 81            [24] 1675 	mov	r0,sp
      0002C3 18               [12] 1676 	dec	r0
      0002C4 18               [12] 1677 	dec	r0
      0002C5 74 15            [12] 1678 	mov	a,#0x15
      0002C7 26               [12] 1679 	add	a,@r0
      0002C8 FD               [12] 1680 	mov	r5,a
      0002C9 E4               [12] 1681 	clr	a
      0002CA 08               [12] 1682 	inc	r0
      0002CB 36               [12] 1683 	addc	a,@r0
      0002CC FE               [12] 1684 	mov	r6,a
      0002CD 08               [12] 1685 	inc	r0
      0002CE 86 07            [24] 1686 	mov	ar7,@r0
      0002D0 8D 82            [24] 1687 	mov	dpl,r5
      0002D2 8E 83            [24] 1688 	mov	dph,r6
      0002D4 8F F0            [24] 1689 	mov	b,r7
      0002D6 12r00r00         [24] 1690 	lcall	__gptrget
      0002D9 FD               [12] 1691 	mov	r5,a
      0002DA A3               [24] 1692 	inc	dptr
      0002DB 12r00r00         [24] 1693 	lcall	__gptrget
      0002DE FE               [12] 1694 	mov	r6,a
      0002DF C0 04            [24] 1695 	push	ar4
      0002E1 C0 03            [24] 1696 	push	ar3
      0002E3 E5 81            [12] 1697 	mov	a,sp
      0002E5 24 F9            [12] 1698 	add	a,#0xf9
      0002E7 F8               [12] 1699 	mov	r0,a
      0002E8 E6               [12] 1700 	mov	a,@r0
      0002E9 C0 E0            [24] 1701 	push	acc
      0002EB 08               [12] 1702 	inc	r0
      0002EC E6               [12] 1703 	mov	a,@r0
      0002ED C0 E0            [24] 1704 	push	acc
      0002EF 08               [12] 1705 	inc	r0
      0002F0 E6               [12] 1706 	mov	a,@r0
      0002F1 C0 E0            [24] 1707 	push	acc
      0002F3 12r02rF8         [24] 1708 	lcall	00110$
      0002F6 80 09            [24] 1709 	sjmp	00111$
      0002F8                       1710 00110$:
      0002F8 C0 04            [24] 1711 	push	ar4
      0002FA C0 03            [24] 1712 	push	ar3
      0002FC 8D 82            [24] 1713 	mov	dpl,r5
      0002FE 8E 83            [24] 1714 	mov	dph,r6
      000300 22               [24] 1715 	ret
      000301                       1716 00111$:
      000301 15 81            [12] 1717 	dec	sp
      000303 15 81            [12] 1718 	dec	sp
      000305 15 81            [12] 1719 	dec	sp
      000307 D0 03            [24] 1720 	pop	ar3
      000309 D0 04            [24] 1721 	pop	ar4
      00030B 02r03r98         [24] 1722 	ljmp	00103$
      00030E                       1723 00102$:
                                   1724 ;	/opt/contiki/core/net/mac/phase.c:147: NETSTACK_RDC.send_list(p->mac_callback, p->mac_callback_ptr, p->buf_list);
      00030E 90r00r07         [24] 1725 	mov	dptr,#(_nullrdc_driver + 0x0007)
      000311 E5 81            [12] 1726 	mov	a,sp
      000313 24 FB            [12] 1727 	add	a,#0xfb
      000315 F8               [12] 1728 	mov	r0,a
      000316 E4               [12] 1729 	clr	a
      000317 93               [24] 1730 	movc	a,@a+dptr
      000318 F6               [12] 1731 	mov	@r0,a
      000319 A3               [24] 1732 	inc	dptr
      00031A E4               [12] 1733 	clr	a
      00031B 93               [24] 1734 	movc	a,@a+dptr
      00031C 08               [12] 1735 	inc	r0
      00031D F6               [12] 1736 	mov	@r0,a
      00031E A8 81            [24] 1737 	mov	r0,sp
      000320 18               [12] 1738 	dec	r0
      000321 18               [12] 1739 	dec	r0
      000322 74 17            [12] 1740 	mov	a,#0x17
      000324 26               [12] 1741 	add	a,@r0
      000325 FD               [12] 1742 	mov	r5,a
      000326 E4               [12] 1743 	clr	a
      000327 08               [12] 1744 	inc	r0
      000328 36               [12] 1745 	addc	a,@r0
      000329 FE               [12] 1746 	mov	r6,a
      00032A 08               [12] 1747 	inc	r0
      00032B 86 07            [24] 1748 	mov	ar7,@r0
      00032D 8D 82            [24] 1749 	mov	dpl,r5
      00032F 8E 83            [24] 1750 	mov	dph,r6
      000331 8F F0            [24] 1751 	mov	b,r7
      000333 E5 81            [12] 1752 	mov	a,sp
      000335 24 F8            [12] 1753 	add	a,#0xf8
      000337 F8               [12] 1754 	mov	r0,a
      000338 12r00r00         [24] 1755 	lcall	__gptrget
      00033B F6               [12] 1756 	mov	@r0,a
      00033C A3               [24] 1757 	inc	dptr
      00033D 12r00r00         [24] 1758 	lcall	__gptrget
      000340 08               [12] 1759 	inc	r0
      000341 F6               [12] 1760 	mov	@r0,a
      000342 A3               [24] 1761 	inc	dptr
      000343 12r00r00         [24] 1762 	lcall	__gptrget
      000346 08               [12] 1763 	inc	r0
      000347 F6               [12] 1764 	mov	@r0,a
      000348 A8 81            [24] 1765 	mov	r0,sp
      00034A 18               [12] 1766 	dec	r0
      00034B 18               [12] 1767 	dec	r0
      00034C 74 15            [12] 1768 	mov	a,#0x15
      00034E 26               [12] 1769 	add	a,@r0
      00034F FD               [12] 1770 	mov	r5,a
      000350 E4               [12] 1771 	clr	a
      000351 08               [12] 1772 	inc	r0
      000352 36               [12] 1773 	addc	a,@r0
      000353 FE               [12] 1774 	mov	r6,a
      000354 08               [12] 1775 	inc	r0
      000355 86 07            [24] 1776 	mov	ar7,@r0
      000357 8D 82            [24] 1777 	mov	dpl,r5
      000359 8E 83            [24] 1778 	mov	dph,r6
      00035B 8F F0            [24] 1779 	mov	b,r7
      00035D 12r00r00         [24] 1780 	lcall	__gptrget
      000360 FD               [12] 1781 	mov	r5,a
      000361 A3               [24] 1782 	inc	dptr
      000362 12r00r00         [24] 1783 	lcall	__gptrget
      000365 FE               [12] 1784 	mov	r6,a
      000366 C0 02            [24] 1785 	push	ar2
      000368 C0 03            [24] 1786 	push	ar3
      00036A C0 04            [24] 1787 	push	ar4
      00036C E5 81            [12] 1788 	mov	a,sp
      00036E 24 F5            [12] 1789 	add	a,#0xf5
      000370 F8               [12] 1790 	mov	r0,a
      000371 E6               [12] 1791 	mov	a,@r0
      000372 C0 E0            [24] 1792 	push	acc
      000374 08               [12] 1793 	inc	r0
      000375 E6               [12] 1794 	mov	a,@r0
      000376 C0 E0            [24] 1795 	push	acc
      000378 08               [12] 1796 	inc	r0
      000379 E6               [12] 1797 	mov	a,@r0
      00037A C0 E0            [24] 1798 	push	acc
      00037C 12r03r81         [24] 1799 	lcall	00112$
      00037F 80 11            [24] 1800 	sjmp	00113$
      000381                       1801 00112$:
      000381 E5 81            [12] 1802 	mov	a,sp
      000383 24 F3            [12] 1803 	add	a,#0xf3
      000385 F8               [12] 1804 	mov	r0,a
      000386 E6               [12] 1805 	mov	a,@r0
      000387 C0 E0            [24] 1806 	push	acc
      000389 08               [12] 1807 	inc	r0
      00038A E6               [12] 1808 	mov	a,@r0
      00038B C0 E0            [24] 1809 	push	acc
      00038D 8D 82            [24] 1810 	mov	dpl,r5
      00038F 8E 83            [24] 1811 	mov	dph,r6
      000391 22               [24] 1812 	ret
      000392                       1813 00113$:
      000392 E5 81            [12] 1814 	mov	a,sp
      000394 24 FA            [12] 1815 	add	a,#0xfa
      000396 F5 81            [12] 1816 	mov	sp,a
      000398                       1817 00103$:
                                   1818 ;	/opt/contiki/core/net/mac/phase.c:150: memb_free(&queued_packets_memb, p);
      000398 A8 81            [24] 1819 	mov	r0,sp
      00039A 18               [12] 1820 	dec	r0
      00039B 18               [12] 1821 	dec	r0
      00039C 86 05            [24] 1822 	mov	ar5,@r0
      00039E 08               [12] 1823 	inc	r0
      00039F 86 06            [24] 1824 	mov	ar6,@r0
      0003A1 08               [12] 1825 	inc	r0
      0003A2 86 07            [24] 1826 	mov	ar7,@r0
      0003A4 C0 05            [24] 1827 	push	ar5
      0003A6 C0 06            [24] 1828 	push	ar6
      0003A8 C0 07            [24] 1829 	push	ar7
      0003AA 90r00r00         [24] 1830 	mov	dptr,#_queued_packets_memb
      0003AD 75 F0 00         [24] 1831 	mov	b,#0x00
      0003B0 12r00r00         [24] 1832 	lcall	_memb_free
      0003B3 15 81            [12] 1833 	dec	sp
      0003B5 15 81            [12] 1834 	dec	sp
      0003B7 15 81            [12] 1835 	dec	sp
      0003B9 E5 81            [12] 1836 	mov	a,sp
      0003BB 24 F7            [12] 1837 	add	a,#0xF7
      0003BD F5 81            [12] 1838 	mov	sp,a
      0003BF 22               [24] 1839 	ret
                                   1840 ;------------------------------------------------------------
                                   1841 ;Allocation info for local variables in function 'phase_wait'
                                   1842 ;------------------------------------------------------------
                                   1843 ;cycle_time                Allocated to stack - sp -13
                                   1844 ;guard_time                Allocated to stack - sp -15
                                   1845 ;mac_callback              Allocated to stack - sp -17
                                   1846 ;mac_callback_ptr          Allocated to stack - sp -20
                                   1847 ;buf_list                  Allocated to stack - sp -23
                                   1848 ;neighbor                  Allocated to registers r5 r6 r7 
                                   1849 ;e                         Allocated to stack - sp -9
                                   1850 ;wait                      Allocated to stack - sp -6
                                   1851 ;now                       Allocated to registers r6 r7 
                                   1852 ;expected                  Allocated to registers r4 r5 
                                   1853 ;sync                      Allocated to registers r4 r5 
                                   1854 ;ctimewait                 Allocated to stack - sp -4
                                   1855 ;p                         Allocated to stack - sp -2
                                   1856 ;sloc0                     Allocated to stack - sp +10
                                   1857 ;------------------------------------------------------------
                                   1858 ;	/opt/contiki/core/net/mac/phase.c:154: phase_wait(const linkaddr_t *neighbor, rtimer_clock_t cycle_time,
                                   1859 ;	-----------------------------------------
                                   1860 ;	 function phase_wait
                                   1861 ;	-----------------------------------------
      0003C0                       1862 _phase_wait:
      0003C0 E5 81            [12] 1863 	mov	a,sp
      0003C2 24 0A            [12] 1864 	add	a,#0x0A
      0003C4 F5 81            [12] 1865 	mov	sp,a
      0003C6 AD 82            [24] 1866 	mov	r5,dpl
      0003C8 AE 83            [24] 1867 	mov	r6,dph
      0003CA AF F0            [24] 1868 	mov	r7,b
                                   1869 ;	/opt/contiki/core/net/mac/phase.c:165: e = nbr_table_get_from_lladdr(nbr_phase, neighbor);
      0003CC 90r00r13         [24] 1870 	mov	dptr,#_nbr_phase
      0003CF E0               [24] 1871 	movx	a,@dptr
      0003D0 FA               [12] 1872 	mov	r2,a
      0003D1 A3               [24] 1873 	inc	dptr
      0003D2 E0               [24] 1874 	movx	a,@dptr
      0003D3 FB               [12] 1875 	mov	r3,a
      0003D4 A3               [24] 1876 	inc	dptr
      0003D5 E0               [24] 1877 	movx	a,@dptr
      0003D6 FC               [12] 1878 	mov	r4,a
      0003D7 C0 05            [24] 1879 	push	ar5
      0003D9 C0 06            [24] 1880 	push	ar6
      0003DB C0 07            [24] 1881 	push	ar7
      0003DD 8A 82            [24] 1882 	mov	dpl,r2
      0003DF 8B 83            [24] 1883 	mov	dph,r3
      0003E1 8C F0            [24] 1884 	mov	b,r4
      0003E3 12r00r00         [24] 1885 	lcall	_nbr_table_get_from_lladdr
      0003E6 AD 82            [24] 1886 	mov	r5,dpl
      0003E8 AE 83            [24] 1887 	mov	r6,dph
      0003EA AF F0            [24] 1888 	mov	r7,b
      0003EC 15 81            [12] 1889 	dec	sp
      0003EE 15 81            [12] 1890 	dec	sp
      0003F0 15 81            [12] 1891 	dec	sp
      0003F2 E5 81            [12] 1892 	mov	a,sp
      0003F4 24 F7            [12] 1893 	add	a,#0xf7
      0003F6 F8               [12] 1894 	mov	r0,a
      0003F7 A6 05            [24] 1895 	mov	@r0,ar5
      0003F9 08               [12] 1896 	inc	r0
      0003FA A6 06            [24] 1897 	mov	@r0,ar6
      0003FC 08               [12] 1898 	inc	r0
      0003FD A6 07            [24] 1899 	mov	@r0,ar7
                                   1900 ;	/opt/contiki/core/net/mac/phase.c:166: if(e != NULL) {
      0003FF E5 81            [12] 1901 	mov	a,sp
      000401 24 F7            [12] 1902 	add	a,#0xf7
      000403 F8               [12] 1903 	mov	r0,a
      000404 E6               [12] 1904 	mov	a,@r0
      000405 08               [12] 1905 	inc	r0
      000406 46               [12] 1906 	orl	a,@r0
      000407 70 03            [24] 1907 	jnz	00152$
      000409 02r06rF5         [24] 1908 	ljmp	00120$
      00040C                       1909 00152$:
                                   1910 ;	/opt/contiki/core/net/mac/phase.c:184: now = RTIMER_NOW();
      00040C AB E2            [24] 1911 	mov	r3,_T1CNTL
      00040E 7C 00            [12] 1912 	mov	r4,#0x00
      000410 AA E3            [24] 1913 	mov	r2,_T1CNTH
      000412 8A 07            [24] 1914 	mov	ar7,r2
      000414 E4               [12] 1915 	clr	a
      000415 FA               [12] 1916 	mov	r2,a
      000416 2B               [12] 1917 	add	a,r3
      000417 FB               [12] 1918 	mov	r3,a
      000418 EF               [12] 1919 	mov	a,r7
      000419 3C               [12] 1920 	addc	a,r4
      00041A FC               [12] 1921 	mov	r4,a
      00041B 8B 06            [24] 1922 	mov	ar6,r3
      00041D 8C 07            [24] 1923 	mov	ar7,r4
                                   1924 ;	/opt/contiki/core/net/mac/phase.c:186: sync = (e == NULL) ? now : e->time;
      00041F E5 81            [12] 1925 	mov	a,sp
      000421 24 F7            [12] 1926 	add	a,#0xf7
      000423 F8               [12] 1927 	mov	r0,a
      000424 E6               [12] 1928 	mov	a,@r0
      000425 08               [12] 1929 	inc	r0
      000426 46               [12] 1930 	orl	a,@r0
      000427 70 06            [24] 1931 	jnz	00123$
      000429 8E 04            [24] 1932 	mov	ar4,r6
      00042B 8F 05            [24] 1933 	mov	ar5,r7
      00042D 80 16            [24] 1934 	sjmp	00124$
      00042F                       1935 00123$:
      00042F E5 81            [12] 1936 	mov	a,sp
      000431 24 F7            [12] 1937 	add	a,#0xf7
      000433 F8               [12] 1938 	mov	r0,a
      000434 86 82            [24] 1939 	mov	dpl,@r0
      000436 08               [12] 1940 	inc	r0
      000437 86 83            [24] 1941 	mov	dph,@r0
      000439 08               [12] 1942 	inc	r0
      00043A 86 F0            [24] 1943 	mov	b,@r0
      00043C 12r00r00         [24] 1944 	lcall	__gptrget
      00043F FC               [12] 1945 	mov	r4,a
      000440 A3               [24] 1946 	inc	dptr
      000441 12r00r00         [24] 1947 	lcall	__gptrget
      000444 FD               [12] 1948 	mov	r5,a
      000445                       1949 00124$:
                                   1950 ;	/opt/contiki/core/net/mac/phase.c:200: if(!(cycle_time & (cycle_time - 1))) {
      000445 E5 81            [12] 1951 	mov	a,sp
      000447 24 F3            [12] 1952 	add	a,#0xf3
      000449 F8               [12] 1953 	mov	r0,a
      00044A E6               [12] 1954 	mov	a,@r0
      00044B 24 FF            [12] 1955 	add	a,#0xFF
      00044D FA               [12] 1956 	mov	r2,a
      00044E 08               [12] 1957 	inc	r0
      00044F E6               [12] 1958 	mov	a,@r0
      000450 34 FF            [12] 1959 	addc	a,#0xFF
      000452 FB               [12] 1960 	mov	r3,a
      000453 E5 81            [12] 1961 	mov	a,sp
      000455 24 F3            [12] 1962 	add	a,#0xf3
      000457 F8               [12] 1963 	mov	r0,a
      000458 E6               [12] 1964 	mov	a,@r0
      000459 52 02            [12] 1965 	anl	ar2,a
      00045B 08               [12] 1966 	inc	r0
      00045C E6               [12] 1967 	mov	a,@r0
      00045D 52 03            [12] 1968 	anl	ar3,a
      00045F EA               [12] 1969 	mov	a,r2
      000460 4B               [12] 1970 	orl	a,r3
      000461 70 2F            [24] 1971 	jnz	00102$
                                   1972 ;	/opt/contiki/core/net/mac/phase.c:202: wait = (rtimer_clock_t)((sync - now) & (cycle_time - 1));
      000463 EC               [12] 1973 	mov	a,r4
      000464 C3               [12] 1974 	clr	c
      000465 9E               [12] 1975 	subb	a,r6
      000466 FA               [12] 1976 	mov	r2,a
      000467 ED               [12] 1977 	mov	a,r5
      000468 9F               [12] 1978 	subb	a,r7
      000469 FB               [12] 1979 	mov	r3,a
      00046A C0 06            [24] 1980 	push	ar6
      00046C C0 07            [24] 1981 	push	ar7
      00046E E5 81            [12] 1982 	mov	a,sp
      000470 24 F1            [12] 1983 	add	a,#0xf1
      000472 F8               [12] 1984 	mov	r0,a
      000473 E6               [12] 1985 	mov	a,@r0
      000474 24 FF            [12] 1986 	add	a,#0xFF
      000476 FE               [12] 1987 	mov	r6,a
      000477 08               [12] 1988 	inc	r0
      000478 E6               [12] 1989 	mov	a,@r0
      000479 34 FF            [12] 1990 	addc	a,#0xFF
      00047B FF               [12] 1991 	mov	r7,a
      00047C EE               [12] 1992 	mov	a,r6
      00047D 52 02            [12] 1993 	anl	ar2,a
      00047F EF               [12] 1994 	mov	a,r7
      000480 52 03            [12] 1995 	anl	ar3,a
      000482 E5 81            [12] 1996 	mov	a,sp
      000484 24 F8            [12] 1997 	add	a,#0xf8
      000486 F8               [12] 1998 	mov	r0,a
      000487 A6 02            [24] 1999 	mov	@r0,ar2
      000489 08               [12] 2000 	inc	r0
      00048A A6 03            [24] 2001 	mov	@r0,ar3
      00048C D0 07            [24] 2002 	pop	ar7
      00048E D0 06            [24] 2003 	pop	ar6
      000490 80 41            [24] 2004 	sjmp	00103$
      000492                       2005 00102$:
                                   2006 ;	/opt/contiki/core/net/mac/phase.c:205: wait = cycle_time - (rtimer_clock_t)((now - sync) % cycle_time);
      000492 EE               [12] 2007 	mov	a,r6
      000493 C3               [12] 2008 	clr	c
      000494 9C               [12] 2009 	subb	a,r4
      000495 FC               [12] 2010 	mov	r4,a
      000496 EF               [12] 2011 	mov	a,r7
      000497 9D               [12] 2012 	subb	a,r5
      000498 FD               [12] 2013 	mov	r5,a
      000499 C0 07            [24] 2014 	push	ar7
      00049B C0 06            [24] 2015 	push	ar6
      00049D E5 81            [12] 2016 	mov	a,sp
      00049F 24 F1            [12] 2017 	add	a,#0xf1
      0004A1 F8               [12] 2018 	mov	r0,a
      0004A2 E6               [12] 2019 	mov	a,@r0
      0004A3 C0 E0            [24] 2020 	push	acc
      0004A5 08               [12] 2021 	inc	r0
      0004A6 E6               [12] 2022 	mov	a,@r0
      0004A7 C0 E0            [24] 2023 	push	acc
      0004A9 8C 82            [24] 2024 	mov	dpl,r4
      0004AB 8D 83            [24] 2025 	mov	dph,r5
      0004AD 12r00r00         [24] 2026 	lcall	__moduint
      0004B0 AC 82            [24] 2027 	mov	r4,dpl
      0004B2 AD 83            [24] 2028 	mov	r5,dph
      0004B4 15 81            [12] 2029 	dec	sp
      0004B6 15 81            [12] 2030 	dec	sp
      0004B8 D0 06            [24] 2031 	pop	ar6
      0004BA D0 07            [24] 2032 	pop	ar7
      0004BC E5 81            [12] 2033 	mov	a,sp
      0004BE 24 F3            [12] 2034 	add	a,#0xf3
      0004C0 F8               [12] 2035 	mov	r0,a
      0004C1 E6               [12] 2036 	mov	a,@r0
      0004C2 C3               [12] 2037 	clr	c
      0004C3 9C               [12] 2038 	subb	a,r4
      0004C4 FC               [12] 2039 	mov	r4,a
      0004C5 08               [12] 2040 	inc	r0
      0004C6 E6               [12] 2041 	mov	a,@r0
      0004C7 9D               [12] 2042 	subb	a,r5
      0004C8 FD               [12] 2043 	mov	r5,a
      0004C9 E5 81            [12] 2044 	mov	a,sp
      0004CB 24 FA            [12] 2045 	add	a,#0xfa
      0004CD F8               [12] 2046 	mov	r0,a
      0004CE A6 04            [24] 2047 	mov	@r0,ar4
      0004D0 08               [12] 2048 	inc	r0
      0004D1 A6 05            [24] 2049 	mov	@r0,ar5
      0004D3                       2050 00103$:
                                   2051 ;	/opt/contiki/core/net/mac/phase.c:208: if(wait < guard_time) {
      0004D3 E5 81            [12] 2052 	mov	a,sp
      0004D5 24 FA            [12] 2053 	add	a,#0xfa
      0004D7 F8               [12] 2054 	mov	r0,a
      0004D8 E5 81            [12] 2055 	mov	a,sp
      0004DA 24 F1            [12] 2056 	add	a,#0xf1
      0004DC F9               [12] 2057 	mov	r1,a
      0004DD C3               [12] 2058 	clr	c
      0004DE E6               [12] 2059 	mov	a,@r0
      0004DF 97               [12] 2060 	subb	a,@r1
      0004E0 08               [12] 2061 	inc	r0
      0004E1 E6               [12] 2062 	mov	a,@r0
      0004E2 09               [12] 2063 	inc	r1
      0004E3 97               [12] 2064 	subb	a,@r1
      0004E4 50 12            [24] 2065 	jnc	00105$
                                   2066 ;	/opt/contiki/core/net/mac/phase.c:209: wait += cycle_time;
      0004E6 E5 81            [12] 2067 	mov	a,sp
      0004E8 24 FA            [12] 2068 	add	a,#0xfa
      0004EA F8               [12] 2069 	mov	r0,a
      0004EB E5 81            [12] 2070 	mov	a,sp
      0004ED 24 F3            [12] 2071 	add	a,#0xf3
      0004EF F9               [12] 2072 	mov	r1,a
      0004F0 E7               [12] 2073 	mov	a,@r1
      0004F1 26               [12] 2074 	add	a,@r0
      0004F2 F6               [12] 2075 	mov	@r0,a
      0004F3 09               [12] 2076 	inc	r1
      0004F4 E7               [12] 2077 	mov	a,@r1
      0004F5 08               [12] 2078 	inc	r0
      0004F6 36               [12] 2079 	addc	a,@r0
      0004F7 F6               [12] 2080 	mov	@r0,a
      0004F8                       2081 00105$:
                                   2082 ;	/opt/contiki/core/net/mac/phase.c:212: ctimewait = (CLOCK_SECOND * (wait - guard_time)) / RTIMER_ARCH_SECOND;
      0004F8 E5 81            [12] 2083 	mov	a,sp
      0004FA 24 FA            [12] 2084 	add	a,#0xfa
      0004FC F8               [12] 2085 	mov	r0,a
      0004FD E5 81            [12] 2086 	mov	a,sp
      0004FF 24 F1            [12] 2087 	add	a,#0xf1
      000501 F9               [12] 2088 	mov	r1,a
      000502 E6               [12] 2089 	mov	a,@r0
      000503 C3               [12] 2090 	clr	c
      000504 97               [12] 2091 	subb	a,@r1
      000505 FC               [12] 2092 	mov	r4,a
      000506 08               [12] 2093 	inc	r0
      000507 E6               [12] 2094 	mov	a,@r0
      000508 09               [12] 2095 	inc	r1
      000509 97               [12] 2096 	subb	a,@r1
      00050A 54 01            [12] 2097 	anl	a,#0x01
      00050C A2 E0            [12] 2098 	mov	c,acc.0
      00050E CC               [12] 2099 	xch	a,r4
      00050F 13               [12] 2100 	rrc	a
      000510 CC               [12] 2101 	xch	a,r4
      000511 13               [12] 2102 	rrc	a
      000512 CC               [12] 2103 	xch	a,r4
      000513 FD               [12] 2104 	mov	r5,a
      000514 C0 07            [24] 2105 	push	ar7
      000516 C0 06            [24] 2106 	push	ar6
      000518 74 09            [12] 2107 	mov	a,#0x09
      00051A C0 E0            [24] 2108 	push	acc
      00051C 74 3D            [12] 2109 	mov	a,#0x3D
      00051E C0 E0            [24] 2110 	push	acc
      000520 8C 82            [24] 2111 	mov	dpl,r4
      000522 8D 83            [24] 2112 	mov	dph,r5
      000524 12r00r00         [24] 2113 	lcall	__divuint
      000527 AC 82            [24] 2114 	mov	r4,dpl
      000529 AD 83            [24] 2115 	mov	r5,dph
      00052B 15 81            [12] 2116 	dec	sp
      00052D 15 81            [12] 2117 	dec	sp
      00052F D0 06            [24] 2118 	pop	ar6
      000531 D0 07            [24] 2119 	pop	ar7
      000533 E5 81            [12] 2120 	mov	a,sp
      000535 24 FC            [12] 2121 	add	a,#0xfc
      000537 F8               [12] 2122 	mov	r0,a
      000538 A6 04            [24] 2123 	mov	@r0,ar4
      00053A 08               [12] 2124 	inc	r0
      00053B A6 05            [24] 2125 	mov	@r0,ar5
                                   2126 ;	/opt/contiki/core/net/mac/phase.c:214: if(ctimewait > PHASE_DEFER_THRESHOLD) {
      00053D E5 81            [12] 2127 	mov	a,sp
      00053F 24 FC            [12] 2128 	add	a,#0xfc
      000541 F8               [12] 2129 	mov	r0,a
      000542 C3               [12] 2130 	clr	c
      000543 74 01            [12] 2131 	mov	a,#0x01
      000545 96               [12] 2132 	subb	a,@r0
      000546 E4               [12] 2133 	clr	a
      000547 08               [12] 2134 	inc	r0
      000548 96               [12] 2135 	subb	a,@r0
      000549 40 03            [24] 2136 	jc	00156$
      00054B 02r06rB4         [24] 2137 	ljmp	00113$
      00054E                       2138 00156$:
                                   2139 ;	/opt/contiki/core/net/mac/phase.c:217: p = memb_alloc(&queued_packets_memb);
      00054E 90r00r00         [24] 2140 	mov	dptr,#_queued_packets_memb
      000551 75 F0 00         [24] 2141 	mov	b,#0x00
      000554 C0 07            [24] 2142 	push	ar7
      000556 C0 06            [24] 2143 	push	ar6
      000558 12r00r00         [24] 2144 	lcall	_memb_alloc
      00055B AA 82            [24] 2145 	mov	r2,dpl
      00055D AB 83            [24] 2146 	mov	r3,dph
      00055F AD F0            [24] 2147 	mov	r5,b
      000561 D0 06            [24] 2148 	pop	ar6
      000563 D0 07            [24] 2149 	pop	ar7
      000565 A8 81            [24] 2150 	mov	r0,sp
      000567 18               [12] 2151 	dec	r0
      000568 18               [12] 2152 	dec	r0
      000569 A6 02            [24] 2153 	mov	@r0,ar2
      00056B 08               [12] 2154 	inc	r0
      00056C A6 03            [24] 2155 	mov	@r0,ar3
      00056E 08               [12] 2156 	inc	r0
      00056F A6 05            [24] 2157 	mov	@r0,ar5
                                   2158 ;	/opt/contiki/core/net/mac/phase.c:218: if(p != NULL) {
      000571 A8 81            [24] 2159 	mov	r0,sp
      000573 18               [12] 2160 	dec	r0
      000574 18               [12] 2161 	dec	r0
      000575 E6               [12] 2162 	mov	a,@r0
      000576 08               [12] 2163 	inc	r0
      000577 46               [12] 2164 	orl	a,@r0
      000578 70 03            [24] 2165 	jnz	00157$
      00057A 02r06rB4         [24] 2166 	ljmp	00113$
      00057D                       2167 00157$:
                                   2168 ;	/opt/contiki/core/net/mac/phase.c:219: if(buf_list == NULL) {
      00057D E5 81            [12] 2169 	mov	a,sp
      00057F 24 E9            [12] 2170 	add	a,#0xe9
      000581 F8               [12] 2171 	mov	r0,a
      000582 E6               [12] 2172 	mov	a,@r0
      000583 08               [12] 2173 	inc	r0
      000584 46               [12] 2174 	orl	a,@r0
      000585 70 74            [24] 2175 	jnz	00109$
                                   2176 ;	/opt/contiki/core/net/mac/phase.c:220: packetbuf_set_attr(PACKETBUF_ATTR_IS_CREATED_AND_SECURED, 1);
      000587 74 01            [12] 2177 	mov	a,#0x01
      000589 C0 E0            [24] 2178 	push	acc
      00058B E4               [12] 2179 	clr	a
      00058C C0 E0            [24] 2180 	push	acc
      00058E 75 82 0C         [24] 2181 	mov	dpl,#0x0C
      000591 12r00r00         [24] 2182 	lcall	_packetbuf_set_attr
      000594 15 81            [12] 2183 	dec	sp
      000596 15 81            [12] 2184 	dec	sp
                                   2185 ;	/opt/contiki/core/net/mac/phase.c:221: p->q = queuebuf_new_from_packetbuf();
      000598 A8 81            [24] 2186 	mov	r0,sp
      00059A 18               [12] 2187 	dec	r0
      00059B 18               [12] 2188 	dec	r0
      00059C 74 1A            [12] 2189 	mov	a,#0x1A
      00059E 26               [12] 2190 	add	a,@r0
      00059F FF               [12] 2191 	mov	r7,a
      0005A0 E4               [12] 2192 	clr	a
      0005A1 08               [12] 2193 	inc	r0
      0005A2 36               [12] 2194 	addc	a,@r0
      0005A3 FE               [12] 2195 	mov	r6,a
      0005A4 08               [12] 2196 	inc	r0
      0005A5 86 02            [24] 2197 	mov	ar2,@r0
      0005A7 C0 07            [24] 2198 	push	ar7
      0005A9 C0 06            [24] 2199 	push	ar6
      0005AB C0 02            [24] 2200 	push	ar2
      0005AD 12r00r00         [24] 2201 	lcall	_queuebuf_new_from_packetbuf
      0005B0 AB 82            [24] 2202 	mov	r3,dpl
      0005B2 AC 83            [24] 2203 	mov	r4,dph
      0005B4 AD F0            [24] 2204 	mov	r5,b
      0005B6 D0 02            [24] 2205 	pop	ar2
      0005B8 D0 06            [24] 2206 	pop	ar6
      0005BA D0 07            [24] 2207 	pop	ar7
      0005BC 8F 82            [24] 2208 	mov	dpl,r7
      0005BE 8E 83            [24] 2209 	mov	dph,r6
      0005C0 8A F0            [24] 2210 	mov	b,r2
      0005C2 EB               [12] 2211 	mov	a,r3
      0005C3 12r00r00         [24] 2212 	lcall	__gptrput
      0005C6 A3               [24] 2213 	inc	dptr
      0005C7 EC               [12] 2214 	mov	a,r4
      0005C8 12r00r00         [24] 2215 	lcall	__gptrput
      0005CB A3               [24] 2216 	inc	dptr
      0005CC ED               [12] 2217 	mov	a,r5
      0005CD 12r00r00         [24] 2218 	lcall	__gptrput
                                   2219 ;	/opt/contiki/core/net/mac/phase.c:222: if(p->q == NULL) {
      0005D0 EB               [12] 2220 	mov	a,r3
      0005D1 4C               [12] 2221 	orl	a,r4
      0005D2 70 27            [24] 2222 	jnz	00109$
                                   2223 ;	/opt/contiki/core/net/mac/phase.c:224: memb_free(&queued_packets_memb, p);
      0005D4 A8 81            [24] 2224 	mov	r0,sp
      0005D6 18               [12] 2225 	dec	r0
      0005D7 18               [12] 2226 	dec	r0
      0005D8 86 07            [24] 2227 	mov	ar7,@r0
      0005DA 08               [12] 2228 	inc	r0
      0005DB 86 06            [24] 2229 	mov	ar6,@r0
      0005DD 08               [12] 2230 	inc	r0
      0005DE 86 05            [24] 2231 	mov	ar5,@r0
      0005E0 C0 07            [24] 2232 	push	ar7
      0005E2 C0 06            [24] 2233 	push	ar6
      0005E4 C0 05            [24] 2234 	push	ar5
      0005E6 90r00r00         [24] 2235 	mov	dptr,#_queued_packets_memb
      0005E9 75 F0 00         [24] 2236 	mov	b,#0x00
      0005EC 12r00r00         [24] 2237 	lcall	_memb_free
      0005EF 15 81            [12] 2238 	dec	sp
      0005F1 15 81            [12] 2239 	dec	sp
      0005F3 15 81            [12] 2240 	dec	sp
                                   2241 ;	/opt/contiki/core/net/mac/phase.c:225: return PHASE_UNKNOWN;
      0005F5 75 82 00         [24] 2242 	mov	dpl,#0x00
      0005F8 02r06rF8         [24] 2243 	ljmp	00121$
      0005FB                       2244 00109$:
                                   2245 ;	/opt/contiki/core/net/mac/phase.c:228: p->mac_callback = mac_callback;
      0005FB A8 81            [24] 2246 	mov	r0,sp
      0005FD 18               [12] 2247 	dec	r0
      0005FE 18               [12] 2248 	dec	r0
      0005FF 74 15            [12] 2249 	mov	a,#0x15
      000601 26               [12] 2250 	add	a,@r0
      000602 FA               [12] 2251 	mov	r2,a
      000603 E4               [12] 2252 	clr	a
      000604 08               [12] 2253 	inc	r0
      000605 36               [12] 2254 	addc	a,@r0
      000606 FB               [12] 2255 	mov	r3,a
      000607 08               [12] 2256 	inc	r0
      000608 86 05            [24] 2257 	mov	ar5,@r0
      00060A 8A 82            [24] 2258 	mov	dpl,r2
      00060C 8B 83            [24] 2259 	mov	dph,r3
      00060E 8D F0            [24] 2260 	mov	b,r5
      000610 E5 81            [12] 2261 	mov	a,sp
      000612 24 EF            [12] 2262 	add	a,#0xef
      000614 F8               [12] 2263 	mov	r0,a
      000615 E6               [12] 2264 	mov	a,@r0
      000616 12r00r00         [24] 2265 	lcall	__gptrput
      000619 A3               [24] 2266 	inc	dptr
      00061A 08               [12] 2267 	inc	r0
      00061B E6               [12] 2268 	mov	a,@r0
      00061C 12r00r00         [24] 2269 	lcall	__gptrput
                                   2270 ;	/opt/contiki/core/net/mac/phase.c:229: p->mac_callback_ptr = mac_callback_ptr;
      00061F A8 81            [24] 2271 	mov	r0,sp
      000621 18               [12] 2272 	dec	r0
      000622 18               [12] 2273 	dec	r0
      000623 74 17            [12] 2274 	mov	a,#0x17
      000625 26               [12] 2275 	add	a,@r0
      000626 FB               [12] 2276 	mov	r3,a
      000627 E4               [12] 2277 	clr	a
      000628 08               [12] 2278 	inc	r0
      000629 36               [12] 2279 	addc	a,@r0
      00062A FC               [12] 2280 	mov	r4,a
      00062B 08               [12] 2281 	inc	r0
      00062C 86 05            [24] 2282 	mov	ar5,@r0
      00062E 8B 82            [24] 2283 	mov	dpl,r3
      000630 8C 83            [24] 2284 	mov	dph,r4
      000632 8D F0            [24] 2285 	mov	b,r5
      000634 E5 81            [12] 2286 	mov	a,sp
      000636 24 EC            [12] 2287 	add	a,#0xec
      000638 F8               [12] 2288 	mov	r0,a
      000639 E6               [12] 2289 	mov	a,@r0
      00063A 12r00r00         [24] 2290 	lcall	__gptrput
      00063D A3               [24] 2291 	inc	dptr
      00063E 08               [12] 2292 	inc	r0
      00063F E6               [12] 2293 	mov	a,@r0
      000640 12r00r00         [24] 2294 	lcall	__gptrput
      000643 A3               [24] 2295 	inc	dptr
      000644 08               [12] 2296 	inc	r0
      000645 E6               [12] 2297 	mov	a,@r0
      000646 12r00r00         [24] 2298 	lcall	__gptrput
                                   2299 ;	/opt/contiki/core/net/mac/phase.c:230: p->buf_list = buf_list;
      000649 A8 81            [24] 2300 	mov	r0,sp
      00064B 18               [12] 2301 	dec	r0
      00064C 18               [12] 2302 	dec	r0
      00064D 74 1D            [12] 2303 	mov	a,#0x1D
      00064F 26               [12] 2304 	add	a,@r0
      000650 FB               [12] 2305 	mov	r3,a
      000651 E4               [12] 2306 	clr	a
      000652 08               [12] 2307 	inc	r0
      000653 36               [12] 2308 	addc	a,@r0
      000654 FC               [12] 2309 	mov	r4,a
      000655 08               [12] 2310 	inc	r0
      000656 86 05            [24] 2311 	mov	ar5,@r0
      000658 8B 82            [24] 2312 	mov	dpl,r3
      00065A 8C 83            [24] 2313 	mov	dph,r4
      00065C 8D F0            [24] 2314 	mov	b,r5
      00065E E5 81            [12] 2315 	mov	a,sp
      000660 24 E9            [12] 2316 	add	a,#0xe9
      000662 F8               [12] 2317 	mov	r0,a
      000663 E6               [12] 2318 	mov	a,@r0
      000664 12r00r00         [24] 2319 	lcall	__gptrput
      000667 A3               [24] 2320 	inc	dptr
      000668 08               [12] 2321 	inc	r0
      000669 E6               [12] 2322 	mov	a,@r0
      00066A 12r00r00         [24] 2323 	lcall	__gptrput
      00066D A3               [24] 2324 	inc	dptr
      00066E 08               [12] 2325 	inc	r0
      00066F E6               [12] 2326 	mov	a,@r0
      000670 12r00r00         [24] 2327 	lcall	__gptrput
                                   2328 ;	/opt/contiki/core/net/mac/phase.c:231: ctimer_set(&p->timer, ctimewait, send_packet, p);
      000673 A8 81            [24] 2329 	mov	r0,sp
      000675 18               [12] 2330 	dec	r0
      000676 18               [12] 2331 	dec	r0
      000677 86 03            [24] 2332 	mov	ar3,@r0
      000679 08               [12] 2333 	inc	r0
      00067A 86 04            [24] 2334 	mov	ar4,@r0
      00067C 08               [12] 2335 	inc	r0
      00067D 86 05            [24] 2336 	mov	ar5,@r0
      00067F C0 03            [24] 2337 	push	ar3
      000681 C0 04            [24] 2338 	push	ar4
      000683 C0 05            [24] 2339 	push	ar5
      000685 74rF6            [12] 2340 	mov	a,#_send_packet
      000687 C0 E0            [24] 2341 	push	acc
      000689 74s01            [12] 2342 	mov	a,#(_send_packet >> 8)
      00068B C0 E0            [24] 2343 	push	acc
      00068D E5 81            [12] 2344 	mov	a,sp
      00068F 24 F7            [12] 2345 	add	a,#0xf7
      000691 F8               [12] 2346 	mov	r0,a
      000692 E6               [12] 2347 	mov	a,@r0
      000693 C0 E0            [24] 2348 	push	acc
      000695 08               [12] 2349 	inc	r0
      000696 E6               [12] 2350 	mov	a,@r0
      000697 C0 E0            [24] 2351 	push	acc
      000699 E5 81            [12] 2352 	mov	a,sp
      00069B 24 F7            [12] 2353 	add	a,#0xf7
      00069D F8               [12] 2354 	mov	r0,a
      00069E 86 82            [24] 2355 	mov	dpl,@r0
      0006A0 08               [12] 2356 	inc	r0
      0006A1 86 83            [24] 2357 	mov	dph,@r0
      0006A3 08               [12] 2358 	inc	r0
      0006A4 86 F0            [24] 2359 	mov	b,@r0
      0006A6 12r00r00         [24] 2360 	lcall	_ctimer_set
      0006A9 E5 81            [12] 2361 	mov	a,sp
      0006AB 24 F9            [12] 2362 	add	a,#0xf9
      0006AD F5 81            [12] 2363 	mov	sp,a
                                   2364 ;	/opt/contiki/core/net/mac/phase.c:232: return PHASE_DEFERRED;
      0006AF 75 82 02         [24] 2365 	mov	dpl,#0x02
      0006B2 80 44            [24] 2366 	sjmp	00121$
      0006B4                       2367 00113$:
                                   2368 ;	/opt/contiki/core/net/mac/phase.c:236: expected = now + wait - guard_time;
      0006B4 E5 81            [12] 2369 	mov	a,sp
      0006B6 24 FA            [12] 2370 	add	a,#0xfa
      0006B8 F8               [12] 2371 	mov	r0,a
      0006B9 E6               [12] 2372 	mov	a,@r0
      0006BA 2E               [12] 2373 	add	a,r6
      0006BB FC               [12] 2374 	mov	r4,a
      0006BC 08               [12] 2375 	inc	r0
      0006BD E6               [12] 2376 	mov	a,@r0
      0006BE 3F               [12] 2377 	addc	a,r7
      0006BF FD               [12] 2378 	mov	r5,a
      0006C0 E5 81            [12] 2379 	mov	a,sp
      0006C2 24 F1            [12] 2380 	add	a,#0xf1
      0006C4 F8               [12] 2381 	mov	r0,a
      0006C5 EC               [12] 2382 	mov	a,r4
      0006C6 C3               [12] 2383 	clr	c
      0006C7 96               [12] 2384 	subb	a,@r0
      0006C8 FC               [12] 2385 	mov	r4,a
      0006C9 ED               [12] 2386 	mov	a,r5
      0006CA 08               [12] 2387 	inc	r0
      0006CB 96               [12] 2388 	subb	a,@r0
      0006CC FD               [12] 2389 	mov	r5,a
                                   2390 ;	/opt/contiki/core/net/mac/phase.c:237: if(!RTIMER_CLOCK_LT(expected, now)) {
      0006CD EC               [12] 2391 	mov	a,r4
      0006CE C3               [12] 2392 	clr	c
      0006CF 9E               [12] 2393 	subb	a,r6
      0006D0 FE               [12] 2394 	mov	r6,a
      0006D1 ED               [12] 2395 	mov	a,r5
      0006D2 9F               [12] 2396 	subb	a,r7
      0006D3 FF               [12] 2397 	mov	r7,a
      0006D4 20 E7 19         [24] 2398 	jb	acc.7,00118$
                                   2399 ;	/opt/contiki/core/net/mac/phase.c:239: while(RTIMER_CLOCK_LT(RTIMER_NOW(), expected));
      0006D7                       2400 00114$:
      0006D7 AE E2            [24] 2401 	mov	r6,_T1CNTL
      0006D9 7F 00            [12] 2402 	mov	r7,#0x00
      0006DB AA E3            [24] 2403 	mov	r2,_T1CNTH
      0006DD 8A 03            [24] 2404 	mov	ar3,r2
      0006DF E4               [12] 2405 	clr	a
      0006E0 FA               [12] 2406 	mov	r2,a
      0006E1 2E               [12] 2407 	add	a,r6
      0006E2 FE               [12] 2408 	mov	r6,a
      0006E3 EB               [12] 2409 	mov	a,r3
      0006E4 3F               [12] 2410 	addc	a,r7
      0006E5 FF               [12] 2411 	mov	r7,a
      0006E6 EE               [12] 2412 	mov	a,r6
      0006E7 C3               [12] 2413 	clr	c
      0006E8 9C               [12] 2414 	subb	a,r4
      0006E9 FE               [12] 2415 	mov	r6,a
      0006EA EF               [12] 2416 	mov	a,r7
      0006EB 9D               [12] 2417 	subb	a,r5
      0006EC FF               [12] 2418 	mov	r7,a
      0006ED 20 E7 E7         [24] 2419 	jb	acc.7,00114$
      0006F0                       2420 00118$:
                                   2421 ;	/opt/contiki/core/net/mac/phase.c:241: return PHASE_SEND_NOW;
      0006F0 75 82 01         [24] 2422 	mov	dpl,#0x01
      0006F3 80 03            [24] 2423 	sjmp	00121$
      0006F5                       2424 00120$:
                                   2425 ;	/opt/contiki/core/net/mac/phase.c:243: return PHASE_UNKNOWN;
      0006F5 75 82 00         [24] 2426 	mov	dpl,#0x00
      0006F8                       2427 00121$:
      0006F8 E5 81            [12] 2428 	mov	a,sp
      0006FA 24 F6            [12] 2429 	add	a,#0xF6
      0006FC F5 81            [12] 2430 	mov	sp,a
      0006FE 22               [24] 2431 	ret
                                   2432 ;------------------------------------------------------------
                                   2433 ;Allocation info for local variables in function 'phase_init'
                                   2434 ;------------------------------------------------------------
                                   2435 ;	/opt/contiki/core/net/mac/phase.c:247: phase_init(void)
                                   2436 ;	-----------------------------------------
                                   2437 ;	 function phase_init
                                   2438 ;	-----------------------------------------
      0006FF                       2439 _phase_init:
                                   2440 ;	/opt/contiki/core/net/mac/phase.c:249: memb_init(&queued_packets_memb);
      0006FF 90r00r00         [24] 2441 	mov	dptr,#_queued_packets_memb
      000702 75 F0 00         [24] 2442 	mov	b,#0x00
      000705 12r00r00         [24] 2443 	lcall	_memb_init
                                   2444 ;	/opt/contiki/core/net/mac/phase.c:250: nbr_table_register(nbr_phase, NULL);
      000708 90r00r13         [24] 2445 	mov	dptr,#_nbr_phase
      00070B E0               [24] 2446 	movx	a,@dptr
      00070C FD               [12] 2447 	mov	r5,a
      00070D A3               [24] 2448 	inc	dptr
      00070E E0               [24] 2449 	movx	a,@dptr
      00070F FE               [12] 2450 	mov	r6,a
      000710 A3               [24] 2451 	inc	dptr
      000711 E0               [24] 2452 	movx	a,@dptr
      000712 FF               [12] 2453 	mov	r7,a
      000713 E4               [12] 2454 	clr	a
      000714 C0 E0            [24] 2455 	push	acc
      000716 C0 E0            [24] 2456 	push	acc
      000718 74 80            [12] 2457 	mov	a,#0x80
      00071A C0 E0            [24] 2458 	push	acc
      00071C 8D 82            [24] 2459 	mov	dpl,r5
      00071E 8E 83            [24] 2460 	mov	dph,r6
      000720 8F F0            [24] 2461 	mov	b,r7
      000722 12r00r00         [24] 2462 	lcall	_nbr_table_register
      000725 15 81            [12] 2463 	dec	sp
      000727 15 81            [12] 2464 	dec	sp
      000729 15 81            [12] 2465 	dec	sp
      00072B 22               [24] 2466 	ret
                                   2467 	.area CSEG    (CODE)
                                   2468 	.area CONST   (CODE)
                                   2469 	.area XINIT   (CODE)
      000000                       2470 __xinit__queued_packets_memb:
      000000 20 00                 2471 	.byte #0x20,#0x00	; 32
      000002 08 00                 2472 	.byte #0x08,#0x00	; 8
      000004r00s00 00              2473 	.byte _queued_packets_memb_memb_count, (_queued_packets_memb_memb_count >> 8),#0x00
      000007r08s00 00              2474 	.byte _queued_packets_memb_memb_mem, (_queued_packets_memb_memb_mem >> 8),#0x00
      00000A                       2475 __xinit__nbr_phase_struct:
      00000A 00 00                 2476 	.byte #0x00,#0x00	;  0
      00000C 07 00                 2477 	.byte #0x07,#0x00	;  7
      00000E 00 00                 2478 	.byte #0x00,#0x00
      000010r08s01 00              2479 	.byte __nbr_phase_mem, (__nbr_phase_mem >> 8),#0x00
      000013                       2480 __xinit__nbr_phase:
      000013r0As00 00              2481 	.byte _nbr_phase_struct, (_nbr_phase_struct >> 8),#0x00
                                   2482 	.area CABS    (ABS,CODE)
