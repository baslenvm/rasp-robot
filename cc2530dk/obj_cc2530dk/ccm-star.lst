                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.5 #9380 (Linux)
                                      4 ; This file was generated Tue Nov 17 16:52:50 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module ccm_star
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _ccm_star_driver
                                     13 	.globl _memcpy
                                     14 	.globl _ACTIVE
                                     15 	.globl _TX_BYTE
                                     16 	.globl _RX_BYTE
                                     17 	.globl _ERR
                                     18 	.globl _FE
                                     19 	.globl _SLAVE
                                     20 	.globl _RE
                                     21 	.globl _MODE
                                     22 	.globl _T3OVFIF
                                     23 	.globl _T3CH0IF
                                     24 	.globl _T3CH1IF
                                     25 	.globl _T4OVFIF
                                     26 	.globl _T4CH0IF
                                     27 	.globl _T4CH1IF
                                     28 	.globl _OVFIM
                                     29 	.globl _B_0
                                     30 	.globl _B_1
                                     31 	.globl _B_2
                                     32 	.globl _B_3
                                     33 	.globl _B_4
                                     34 	.globl _B_5
                                     35 	.globl _B_6
                                     36 	.globl _B_7
                                     37 	.globl _P2IF
                                     38 	.globl _UTX0IF
                                     39 	.globl _UTX1IF
                                     40 	.globl _P1IF
                                     41 	.globl _WDTIF
                                     42 	.globl _ACC_0
                                     43 	.globl _ACC_1
                                     44 	.globl _ACC_2
                                     45 	.globl _ACC_3
                                     46 	.globl _ACC_4
                                     47 	.globl _ACC_5
                                     48 	.globl _ACC_6
                                     49 	.globl _ACC_7
                                     50 	.globl _P
                                     51 	.globl _F1
                                     52 	.globl _OV
                                     53 	.globl _RS0
                                     54 	.globl _RS1
                                     55 	.globl _F0
                                     56 	.globl _AC
                                     57 	.globl _CY
                                     58 	.globl _DMAIF
                                     59 	.globl _T1IF
                                     60 	.globl _T2IF
                                     61 	.globl _T3IF
                                     62 	.globl _T4IF
                                     63 	.globl _P0IF
                                     64 	.globl _STIF
                                     65 	.globl _DMAIE
                                     66 	.globl _T1IE
                                     67 	.globl _T2IE
                                     68 	.globl _T3IE
                                     69 	.globl _T4IE
                                     70 	.globl _P0IE
                                     71 	.globl _RFERRIE
                                     72 	.globl _ADCIE
                                     73 	.globl _URX0IE
                                     74 	.globl _URX1IE
                                     75 	.globl _ENCIE
                                     76 	.globl _STIE
                                     77 	.globl _EA
                                     78 	.globl _P2_0
                                     79 	.globl _P2_1
                                     80 	.globl _P2_2
                                     81 	.globl _P2_3
                                     82 	.globl _P2_4
                                     83 	.globl _P2_5
                                     84 	.globl _P2_6
                                     85 	.globl _P2_7
                                     86 	.globl _ENCIF_0
                                     87 	.globl _ENCIF_1
                                     88 	.globl _P1_0
                                     89 	.globl _P1_1
                                     90 	.globl _P1_2
                                     91 	.globl _P1_3
                                     92 	.globl _P1_4
                                     93 	.globl _P1_5
                                     94 	.globl _P1_6
                                     95 	.globl _P1_7
                                     96 	.globl _IT0
                                     97 	.globl _RFERRIF
                                     98 	.globl _IT1
                                     99 	.globl _URX0IF
                                    100 	.globl _ADCIF
                                    101 	.globl _URX1IF
                                    102 	.globl _P0_0
                                    103 	.globl _P0_1
                                    104 	.globl _P0_2
                                    105 	.globl _P0_3
                                    106 	.globl _P0_4
                                    107 	.globl _P0_5
                                    108 	.globl _P0_6
                                    109 	.globl _P0_7
                                    110 	.globl _WDCTL
                                    111 	.globl _U1GCR
                                    112 	.globl _U1UCR
                                    113 	.globl _U1BAUD
                                    114 	.globl _U1DBUF
                                    115 	.globl _U1CSR
                                    116 	.globl _U0GCR
                                    117 	.globl _U0UCR
                                    118 	.globl _U0BAUD
                                    119 	.globl _U0DBUF
                                    120 	.globl _U0CSR
                                    121 	.globl _TIMIF
                                    122 	.globl _T4CC1
                                    123 	.globl _T4CCTL1
                                    124 	.globl _T4CC0
                                    125 	.globl _T4CCTL0
                                    126 	.globl _T4CTL
                                    127 	.globl _T4CNT
                                    128 	.globl _T3CC1
                                    129 	.globl _T3CCTL1
                                    130 	.globl _T3CC0
                                    131 	.globl _T3CCTL0
                                    132 	.globl _T3CTL
                                    133 	.globl _T3CNT
                                    134 	.globl _T2MSEL
                                    135 	.globl _T2IRQM
                                    136 	.globl _T2MOVF2
                                    137 	.globl _T2MOVF1
                                    138 	.globl _T2MOVF0
                                    139 	.globl _T2M1
                                    140 	.globl _T2M0
                                    141 	.globl _T2IRQF
                                    142 	.globl _T2EVTCFG
                                    143 	.globl _T2CTRL
                                    144 	.globl _T1STAT
                                    145 	.globl _T1CCTL2
                                    146 	.globl _T1CCTL1
                                    147 	.globl _T1CCTL0
                                    148 	.globl _T1CTL
                                    149 	.globl _T1CNTH
                                    150 	.globl _T1CNTL
                                    151 	.globl _T1CC2H
                                    152 	.globl _T1CC2L
                                    153 	.globl _T1CC1H
                                    154 	.globl _T1CC1L
                                    155 	.globl _T1CC0H
                                    156 	.globl _T1CC0L
                                    157 	.globl _CLKCONSTA
                                    158 	.globl _CLKCONCMD
                                    159 	.globl _SLEEPSTA
                                    160 	.globl _SLEEPCMD
                                    161 	.globl _STLOAD
                                    162 	.globl _ST2
                                    163 	.globl _ST1
                                    164 	.globl _ST0
                                    165 	.globl _RFERRF
                                    166 	.globl _RFIRQF0
                                    167 	.globl _RFST
                                    168 	.globl _RFD
                                    169 	.globl _RFIRQF1
                                    170 	.globl _PSBANK
                                    171 	.globl _FMAP
                                    172 	.globl _MEMCTR
                                    173 	.globl __XPAGE
                                    174 	.globl _MPAGE
                                    175 	.globl _PMUX
                                    176 	.globl _P2DIR
                                    177 	.globl _P1DIR
                                    178 	.globl _P0DIR
                                    179 	.globl _P2INP
                                    180 	.globl _P1INP
                                    181 	.globl _P2SEL
                                    182 	.globl _P1SEL
                                    183 	.globl _P0SEL
                                    184 	.globl _APCFG
                                    185 	.globl _PERCFG
                                    186 	.globl _P0INP
                                    187 	.globl _P2IEN
                                    188 	.globl _P1IEN
                                    189 	.globl _P0IEN
                                    190 	.globl _PICTL
                                    191 	.globl _P2IFG
                                    192 	.globl _P1IFG
                                    193 	.globl _P0IFG
                                    194 	.globl _DMAREQ
                                    195 	.globl _DMAARM
                                    196 	.globl _DMA0CFGH
                                    197 	.globl _DMA0CFGL
                                    198 	.globl _DMA1CFGH
                                    199 	.globl _DMA1CFGL
                                    200 	.globl _DMAIRQ
                                    201 	.globl _ENCCS
                                    202 	.globl _ENCDO
                                    203 	.globl _ENCDI
                                    204 	.globl _RNDH
                                    205 	.globl _RNDL
                                    206 	.globl _ADCH
                                    207 	.globl _ADCL
                                    208 	.globl _ADCCON3
                                    209 	.globl _ADCCON2
                                    210 	.globl _ADCCON1
                                    211 	.globl _B
                                    212 	.globl _IRCON2
                                    213 	.globl _ACC
                                    214 	.globl _PSW
                                    215 	.globl _IRCON
                                    216 	.globl _IP1
                                    217 	.globl _IEN1
                                    218 	.globl _IP0
                                    219 	.globl _IEN0
                                    220 	.globl _P2
                                    221 	.globl _S1CON
                                    222 	.globl _IEN2
                                    223 	.globl _S0CON
                                    224 	.globl _DPS
                                    225 	.globl _P1
                                    226 	.globl _TCON
                                    227 	.globl _PCON
                                    228 	.globl _DPH1
                                    229 	.globl _DPL1
                                    230 	.globl _DPH0
                                    231 	.globl _DPL0
                                    232 	.globl _SP
                                    233 	.globl _P0
                                    234 	.globl _X_IEEE_ADDR
                                    235 	.globl _X_INFOPAGE
                                    236 	.globl _X_P2DIR
                                    237 	.globl _X_P1DIR
                                    238 	.globl _X_P0DIR
                                    239 	.globl _X_U1GCR
                                    240 	.globl _X_U1UCR
                                    241 	.globl _X_U1BAUD
                                    242 	.globl _X_U1DBUF
                                    243 	.globl _X_U1CSR
                                    244 	.globl _X_P2INP
                                    245 	.globl _X_P1INP
                                    246 	.globl _X_P2SEL
                                    247 	.globl _X_P1SEL
                                    248 	.globl _X_P0SEL
                                    249 	.globl _X_APCFG
                                    250 	.globl _X_PERCFG
                                    251 	.globl _X_T4CC1
                                    252 	.globl _X_T4CCTL1
                                    253 	.globl _X_T4CC0
                                    254 	.globl _X_T4CCTL0
                                    255 	.globl _X_T4CTL
                                    256 	.globl _X_T4CNT
                                    257 	.globl _X_RFIRQF0
                                    258 	.globl _X_T1CCTL2
                                    259 	.globl _X_T1CCTL1
                                    260 	.globl _X_T1CCTL0
                                    261 	.globl _X_T1CTL
                                    262 	.globl _X_T1CNTH
                                    263 	.globl _X_T1CNTL
                                    264 	.globl _X_RFST
                                    265 	.globl _X_T1CC2H
                                    266 	.globl _X_T1CC2L
                                    267 	.globl _X_T1CC1H
                                    268 	.globl _X_T1CC1L
                                    269 	.globl _X_T1CC0H
                                    270 	.globl _X_T1CC0L
                                    271 	.globl _X_RFD
                                    272 	.globl _X_TIMIF
                                    273 	.globl _X_DMAREQ
                                    274 	.globl _X_DMAARM
                                    275 	.globl _X_DMA0CFGH
                                    276 	.globl _X_DMA0CFGL
                                    277 	.globl _X_DMA1CFGH
                                    278 	.globl _X_DMA1CFGL
                                    279 	.globl _X_DMAIRQ
                                    280 	.globl _X_T3CC1
                                    281 	.globl _X_T3CCTL1
                                    282 	.globl _X_T3CC0
                                    283 	.globl _X_T3CCTL0
                                    284 	.globl _X_T3CTL
                                    285 	.globl _X_T3CNT
                                    286 	.globl _X_WDCTL
                                    287 	.globl _X_MEMCTR
                                    288 	.globl _X_CLKCONCMD
                                    289 	.globl _X_U0GCR
                                    290 	.globl _X_U0UCR
                                    291 	.globl _X_T2MSEL
                                    292 	.globl _X_U0BAUD
                                    293 	.globl _X_U0DBUF
                                    294 	.globl _X_RFERRF
                                    295 	.globl _X_SLEEPCMD
                                    296 	.globl _X_RNDH
                                    297 	.globl _X_RNDL
                                    298 	.globl _X_ADCH
                                    299 	.globl _X_ADCL
                                    300 	.globl _X_ADCCON3
                                    301 	.globl _X_ADCCON2
                                    302 	.globl _X_ADCCON1
                                    303 	.globl _X_ENCCS
                                    304 	.globl _X_ENCDO
                                    305 	.globl _X_ENCDI
                                    306 	.globl _X_T1STAT
                                    307 	.globl _X_PMUX
                                    308 	.globl _X_STLOAD
                                    309 	.globl _X_P2IEN
                                    310 	.globl _X_P0IEN
                                    311 	.globl _X_T2IRQM
                                    312 	.globl _X_T2MOVF2
                                    313 	.globl _X_T2MOVF1
                                    314 	.globl _X_T2MOVF0
                                    315 	.globl _X_T2M1
                                    316 	.globl _X_T2M0
                                    317 	.globl _X_T2IRQF
                                    318 	.globl _X_P2
                                    319 	.globl _X_PSBANK
                                    320 	.globl _X_FMAP
                                    321 	.globl _X_CLKCONSTA
                                    322 	.globl _X_SLEEPSTA
                                    323 	.globl _X_T2EVTCFG
                                    324 	.globl _X_ST2
                                    325 	.globl _X_ST1
                                    326 	.globl _X_ST0
                                    327 	.globl _X_T2CTRL
                                    328 	.globl _X__XPAGE
                                    329 	.globl _X_MPAGE
                                    330 	.globl _X_RFIRQF1
                                    331 	.globl _X_P1
                                    332 	.globl _X_P0INP
                                    333 	.globl _X_P1IEN
                                    334 	.globl _X_PICTL
                                    335 	.globl _X_P2IFG
                                    336 	.globl _X_P1IFG
                                    337 	.globl _X_P0IFG
                                    338 	.globl _X_U0CSR
                                    339 	.globl _X_P0
                                    340 	.globl _USBF5
                                    341 	.globl _USBF4
                                    342 	.globl _USBF3
                                    343 	.globl _USBF2
                                    344 	.globl _USBF1
                                    345 	.globl _USBF0
                                    346 	.globl _USBCNTH
                                    347 	.globl _USBCNTL
                                    348 	.globl _USBCNT0
                                    349 	.globl _USBCSOH
                                    350 	.globl _USBCSOL
                                    351 	.globl _USBMAXO
                                    352 	.globl _USBCSIH
                                    353 	.globl _USBCSIL
                                    354 	.globl _USBCS0
                                    355 	.globl _USBMAXI
                                    356 	.globl _USBCTRL
                                    357 	.globl _USBINDEX
                                    358 	.globl _USBFRMH
                                    359 	.globl _USBFRML
                                    360 	.globl _USBCIE
                                    361 	.globl _USBOIE
                                    362 	.globl _USBIIE
                                    363 	.globl _USBCIF
                                    364 	.globl _USBOIF
                                    365 	.globl _USBIIF
                                    366 	.globl _USBPOW
                                    367 	.globl _USBADDR
                                    368 	.globl _CSPT
                                    369 	.globl _CSPZ
                                    370 	.globl _CSPY
                                    371 	.globl _CSPX
                                    372 	.globl _CSPSTAT
                                    373 	.globl _CSPCTRL
                                    374 	.globl _CSPPROG23
                                    375 	.globl _CSPPROG22
                                    376 	.globl _CSPPROG21
                                    377 	.globl _CSPPROG20
                                    378 	.globl _CSPPROG19
                                    379 	.globl _CSPPROG18
                                    380 	.globl _CSPPROG17
                                    381 	.globl _CSPPROG16
                                    382 	.globl _CSPPROG15
                                    383 	.globl _CSPPROG14
                                    384 	.globl _CSPPROG13
                                    385 	.globl _CSPPROG12
                                    386 	.globl _CSPPROG11
                                    387 	.globl _CSPPROG10
                                    388 	.globl _CSPPROG9
                                    389 	.globl _CSPPROG8
                                    390 	.globl _CSPPROG7
                                    391 	.globl _CSPPROG6
                                    392 	.globl _CSPPROG5
                                    393 	.globl _CSPPROG4
                                    394 	.globl _CSPPROG3
                                    395 	.globl _CSPPROG2
                                    396 	.globl _CSPPROG1
                                    397 	.globl _CSPPROG0
                                    398 	.globl _RFC_OBS_CTRL2
                                    399 	.globl _RFC_OBS_CTRL1
                                    400 	.globl _RFC_OBS_CTRL0
                                    401 	.globl _TXFILTCFG
                                    402 	.globl _PTEST1
                                    403 	.globl _PTEST0
                                    404 	.globl _ATEST
                                    405 	.globl _DACTEST2
                                    406 	.globl _DACTEST1
                                    407 	.globl _DACTEST0
                                    408 	.globl _MDMTEST1
                                    409 	.globl _MDMTEST0
                                    410 	.globl _ADCTEST2
                                    411 	.globl _ADCTEST1
                                    412 	.globl _ADCTEST0
                                    413 	.globl _AGCCTRL3
                                    414 	.globl _AGCCTRL2
                                    415 	.globl _AGCCTRL1
                                    416 	.globl _AGCCTRL0
                                    417 	.globl _FSCAL3
                                    418 	.globl _FSCAL2
                                    419 	.globl _FSCAL1
                                    420 	.globl _FSCAL0
                                    421 	.globl _FSCTRL
                                    422 	.globl _RXCTRL
                                    423 	.globl _FREQEST
                                    424 	.globl _MDMCTRL1
                                    425 	.globl _MDMCTRL0
                                    426 	.globl _RFRND
                                    427 	.globl _RFERRM
                                    428 	.globl _RFIRQM1
                                    429 	.globl _RFIRQM0
                                    430 	.globl _TXLAST_PTR
                                    431 	.globl _TXFIRST_PTR
                                    432 	.globl _RXP1_PTR
                                    433 	.globl _RXLAST_PTR
                                    434 	.globl _RXFIRST_PTR
                                    435 	.globl _TXFIFOCNT
                                    436 	.globl _RXFIFOCNT
                                    437 	.globl _RXFIRST
                                    438 	.globl _RSSISTAT
                                    439 	.globl _RSSI
                                    440 	.globl _CCACTRL1
                                    441 	.globl _CCACTRL0
                                    442 	.globl _FSMCTRL
                                    443 	.globl _FIFOPCTRL
                                    444 	.globl _FSMSTAT1
                                    445 	.globl _FSMSTAT0
                                    446 	.globl _TXCTRL
                                    447 	.globl _TXPOWER
                                    448 	.globl _FREQCTRL
                                    449 	.globl _FREQTUNE
                                    450 	.globl _RXMASKCLR
                                    451 	.globl _RXMASKSET
                                    452 	.globl _RXENABLE
                                    453 	.globl _FRMCTRL1
                                    454 	.globl _FRMCTRL0
                                    455 	.globl _SRCEXTEN2
                                    456 	.globl _SRCEXTEN1
                                    457 	.globl _SRCEXTEN0
                                    458 	.globl _SRCSHORTEN2
                                    459 	.globl _SRCSHORTEN1
                                    460 	.globl _SRCSHORTEN0
                                    461 	.globl _SRCMATCH
                                    462 	.globl _FRMFILT1
                                    463 	.globl _FRMFILT0
                                    464 	.globl _SHORT_ADDR1
                                    465 	.globl _SHORT_ADDR0
                                    466 	.globl _PAN_ID1
                                    467 	.globl _PAN_ID0
                                    468 	.globl _EXT_ADDR7
                                    469 	.globl _EXT_ADDR6
                                    470 	.globl _EXT_ADDR5
                                    471 	.globl _EXT_ADDR4
                                    472 	.globl _EXT_ADDR3
                                    473 	.globl _EXT_ADDR2
                                    474 	.globl _EXT_ADDR1
                                    475 	.globl _EXT_ADDR0
                                    476 	.globl _SRCSHORTPENDEN2
                                    477 	.globl _SRCSHORTPENDEN1
                                    478 	.globl _SRCSHORTPENDEN0
                                    479 	.globl _SRCEXTPENDEN2
                                    480 	.globl _SRCEXTPENDEN1
                                    481 	.globl _SRCEXTPENDEN0
                                    482 	.globl _SRCRESINDEX
                                    483 	.globl _SRCRESMASK2
                                    484 	.globl _SRCRESMASK1
                                    485 	.globl _SRCRESMASK0
                                    486 	.globl _SRC_ADDR_TABLE
                                    487 	.globl _TXFIFO
                                    488 	.globl _RXFIFO
                                    489 	.globl _RFCORE_RAM
                                    490 	.globl _CMPCTL
                                    491 	.globl _OPAMPS
                                    492 	.globl _OPAMPC
                                    493 	.globl _STCV2
                                    494 	.globl _STCV1
                                    495 	.globl _STCV0
                                    496 	.globl _STCS
                                    497 	.globl _STCC
                                    498 	.globl _T1CC4H
                                    499 	.globl _T1CC4L
                                    500 	.globl _T1CC3H
                                    501 	.globl _T1CC3L
                                    502 	.globl _XX_T1CC2H
                                    503 	.globl _XX_T1CC2L
                                    504 	.globl _XX_T1CC1H
                                    505 	.globl _XX_T1CC1L
                                    506 	.globl _XX_T1CC0H
                                    507 	.globl _XX_T1CC0L
                                    508 	.globl _T1CCTL4
                                    509 	.globl _T1CCTL3
                                    510 	.globl _XX_T1CCTL2
                                    511 	.globl _XX_T1CCTL1
                                    512 	.globl _XX_T1CCTL0
                                    513 	.globl _CLD
                                    514 	.globl _IRCTL
                                    515 	.globl _CHIPINFO1
                                    516 	.globl _CHIPINFO0
                                    517 	.globl _FWDATA
                                    518 	.globl _FADDRH
                                    519 	.globl _FADDRL
                                    520 	.globl _FCTL
                                    521 	.globl _IVCTRL
                                    522 	.globl _BATTMON
                                    523 	.globl _SRCRC
                                    524 	.globl _DBGDATA
                                    525 	.globl _TESTREG0
                                    526 	.globl _CHIPID
                                    527 	.globl _CHVER
                                    528 	.globl _OBSSEL5
                                    529 	.globl _OBSSEL4
                                    530 	.globl _OBSSEL3
                                    531 	.globl _OBSSEL2
                                    532 	.globl _OBSSEL1
                                    533 	.globl _OBSSEL0
                                    534 	.globl _I2CIO
                                    535 	.globl _I2CWC
                                    536 	.globl _I2CADDR
                                    537 	.globl _I2CDATA
                                    538 	.globl _I2CSTAT
                                    539 	.globl _I2CCFG
                                    540 	.globl _OPAMPMC
                                    541 	.globl _MONMUX
                                    542 ;--------------------------------------------------------
                                    543 ; special function registers
                                    544 ;--------------------------------------------------------
                                    545 	.area RSEG    (ABS,DATA)
      000000                        546 	.org 0x0000
                           000080   547 _P0	=	0x0080
                           000081   548 _SP	=	0x0081
                           000082   549 _DPL0	=	0x0082
                           000083   550 _DPH0	=	0x0083
                           000084   551 _DPL1	=	0x0084
                           000085   552 _DPH1	=	0x0085
                           000087   553 _PCON	=	0x0087
                           000088   554 _TCON	=	0x0088
                           000090   555 _P1	=	0x0090
                           000092   556 _DPS	=	0x0092
                           000098   557 _S0CON	=	0x0098
                           00009A   558 _IEN2	=	0x009a
                           00009B   559 _S1CON	=	0x009b
                           0000A0   560 _P2	=	0x00a0
                           0000A8   561 _IEN0	=	0x00a8
                           0000A9   562 _IP0	=	0x00a9
                           0000B8   563 _IEN1	=	0x00b8
                           0000B9   564 _IP1	=	0x00b9
                           0000C0   565 _IRCON	=	0x00c0
                           0000D0   566 _PSW	=	0x00d0
                           0000E0   567 _ACC	=	0x00e0
                           0000E8   568 _IRCON2	=	0x00e8
                           0000F0   569 _B	=	0x00f0
                           0000B4   570 _ADCCON1	=	0x00b4
                           0000B5   571 _ADCCON2	=	0x00b5
                           0000B6   572 _ADCCON3	=	0x00b6
                           0000BA   573 _ADCL	=	0x00ba
                           0000BB   574 _ADCH	=	0x00bb
                           0000BC   575 _RNDL	=	0x00bc
                           0000BD   576 _RNDH	=	0x00bd
                           0000B1   577 _ENCDI	=	0x00b1
                           0000B2   578 _ENCDO	=	0x00b2
                           0000B3   579 _ENCCS	=	0x00b3
                           0000D1   580 _DMAIRQ	=	0x00d1
                           0000D2   581 _DMA1CFGL	=	0x00d2
                           0000D3   582 _DMA1CFGH	=	0x00d3
                           0000D4   583 _DMA0CFGL	=	0x00d4
                           0000D5   584 _DMA0CFGH	=	0x00d5
                           0000D6   585 _DMAARM	=	0x00d6
                           0000D7   586 _DMAREQ	=	0x00d7
                           000089   587 _P0IFG	=	0x0089
                           00008A   588 _P1IFG	=	0x008a
                           00008B   589 _P2IFG	=	0x008b
                           00008C   590 _PICTL	=	0x008c
                           0000AB   591 _P0IEN	=	0x00ab
                           00008D   592 _P1IEN	=	0x008d
                           0000AC   593 _P2IEN	=	0x00ac
                           00008F   594 _P0INP	=	0x008f
                           0000F1   595 _PERCFG	=	0x00f1
                           0000F2   596 _APCFG	=	0x00f2
                           0000F3   597 _P0SEL	=	0x00f3
                           0000F4   598 _P1SEL	=	0x00f4
                           0000F5   599 _P2SEL	=	0x00f5
                           0000F6   600 _P1INP	=	0x00f6
                           0000F7   601 _P2INP	=	0x00f7
                           0000FD   602 _P0DIR	=	0x00fd
                           0000FE   603 _P1DIR	=	0x00fe
                           0000FF   604 _P2DIR	=	0x00ff
                           0000AE   605 _PMUX	=	0x00ae
                           000093   606 _MPAGE	=	0x0093
                           000093   607 __XPAGE	=	0x0093
                           0000C7   608 _MEMCTR	=	0x00c7
                           00009F   609 _FMAP	=	0x009f
                           00009F   610 _PSBANK	=	0x009f
                           000091   611 _RFIRQF1	=	0x0091
                           0000D9   612 _RFD	=	0x00d9
                           0000E1   613 _RFST	=	0x00e1
                           0000E9   614 _RFIRQF0	=	0x00e9
                           0000BF   615 _RFERRF	=	0x00bf
                           000095   616 _ST0	=	0x0095
                           000096   617 _ST1	=	0x0096
                           000097   618 _ST2	=	0x0097
                           0000AD   619 _STLOAD	=	0x00ad
                           0000BE   620 _SLEEPCMD	=	0x00be
                           00009D   621 _SLEEPSTA	=	0x009d
                           0000C6   622 _CLKCONCMD	=	0x00c6
                           00009E   623 _CLKCONSTA	=	0x009e
                           0000DA   624 _T1CC0L	=	0x00da
                           0000DB   625 _T1CC0H	=	0x00db
                           0000DC   626 _T1CC1L	=	0x00dc
                           0000DD   627 _T1CC1H	=	0x00dd
                           0000DE   628 _T1CC2L	=	0x00de
                           0000DF   629 _T1CC2H	=	0x00df
                           0000E2   630 _T1CNTL	=	0x00e2
                           0000E3   631 _T1CNTH	=	0x00e3
                           0000E4   632 _T1CTL	=	0x00e4
                           0000E5   633 _T1CCTL0	=	0x00e5
                           0000E6   634 _T1CCTL1	=	0x00e6
                           0000E7   635 _T1CCTL2	=	0x00e7
                           0000AF   636 _T1STAT	=	0x00af
                           000094   637 _T2CTRL	=	0x0094
                           00009C   638 _T2EVTCFG	=	0x009c
                           0000A1   639 _T2IRQF	=	0x00a1
                           0000A2   640 _T2M0	=	0x00a2
                           0000A3   641 _T2M1	=	0x00a3
                           0000A4   642 _T2MOVF0	=	0x00a4
                           0000A5   643 _T2MOVF1	=	0x00a5
                           0000A6   644 _T2MOVF2	=	0x00a6
                           0000A7   645 _T2IRQM	=	0x00a7
                           0000C3   646 _T2MSEL	=	0x00c3
                           0000CA   647 _T3CNT	=	0x00ca
                           0000CB   648 _T3CTL	=	0x00cb
                           0000CC   649 _T3CCTL0	=	0x00cc
                           0000CD   650 _T3CC0	=	0x00cd
                           0000CE   651 _T3CCTL1	=	0x00ce
                           0000CF   652 _T3CC1	=	0x00cf
                           0000EA   653 _T4CNT	=	0x00ea
                           0000EB   654 _T4CTL	=	0x00eb
                           0000EC   655 _T4CCTL0	=	0x00ec
                           0000ED   656 _T4CC0	=	0x00ed
                           0000EE   657 _T4CCTL1	=	0x00ee
                           0000EF   658 _T4CC1	=	0x00ef
                           0000D8   659 _TIMIF	=	0x00d8
                           000086   660 _U0CSR	=	0x0086
                           0000C1   661 _U0DBUF	=	0x00c1
                           0000C2   662 _U0BAUD	=	0x00c2
                           0000C4   663 _U0UCR	=	0x00c4
                           0000C5   664 _U0GCR	=	0x00c5
                           0000F8   665 _U1CSR	=	0x00f8
                           0000F9   666 _U1DBUF	=	0x00f9
                           0000FA   667 _U1BAUD	=	0x00fa
                           0000FB   668 _U1UCR	=	0x00fb
                           0000FC   669 _U1GCR	=	0x00fc
                           0000C9   670 _WDCTL	=	0x00c9
                                    671 ;--------------------------------------------------------
                                    672 ; special function bits
                                    673 ;--------------------------------------------------------
                                    674 	.area RSEG    (ABS,DATA)
      000000                        675 	.org 0x0000
                           000087   676 _P0_7	=	0x0087
                           000086   677 _P0_6	=	0x0086
                           000085   678 _P0_5	=	0x0085
                           000084   679 _P0_4	=	0x0084
                           000083   680 _P0_3	=	0x0083
                           000082   681 _P0_2	=	0x0082
                           000081   682 _P0_1	=	0x0081
                           000080   683 _P0_0	=	0x0080
                           00008F   684 _URX1IF	=	0x008f
                           00008D   685 _ADCIF	=	0x008d
                           00008B   686 _URX0IF	=	0x008b
                           00008A   687 _IT1	=	0x008a
                           000089   688 _RFERRIF	=	0x0089
                           000088   689 _IT0	=	0x0088
                           000097   690 _P1_7	=	0x0097
                           000096   691 _P1_6	=	0x0096
                           000095   692 _P1_5	=	0x0095
                           000094   693 _P1_4	=	0x0094
                           000093   694 _P1_3	=	0x0093
                           000092   695 _P1_2	=	0x0092
                           000091   696 _P1_1	=	0x0091
                           000090   697 _P1_0	=	0x0090
                           000099   698 _ENCIF_1	=	0x0099
                           000098   699 _ENCIF_0	=	0x0098
                           0000A7   700 _P2_7	=	0x00a7
                           0000A6   701 _P2_6	=	0x00a6
                           0000A5   702 _P2_5	=	0x00a5
                           0000A4   703 _P2_4	=	0x00a4
                           0000A3   704 _P2_3	=	0x00a3
                           0000A2   705 _P2_2	=	0x00a2
                           0000A1   706 _P2_1	=	0x00a1
                           0000A0   707 _P2_0	=	0x00a0
                           0000AF   708 _EA	=	0x00af
                           0000AD   709 _STIE	=	0x00ad
                           0000AC   710 _ENCIE	=	0x00ac
                           0000AB   711 _URX1IE	=	0x00ab
                           0000AA   712 _URX0IE	=	0x00aa
                           0000A9   713 _ADCIE	=	0x00a9
                           0000A8   714 _RFERRIE	=	0x00a8
                           0000BD   715 _P0IE	=	0x00bd
                           0000BC   716 _T4IE	=	0x00bc
                           0000BB   717 _T3IE	=	0x00bb
                           0000BA   718 _T2IE	=	0x00ba
                           0000B9   719 _T1IE	=	0x00b9
                           0000B8   720 _DMAIE	=	0x00b8
                           0000C7   721 _STIF	=	0x00c7
                           0000C5   722 _P0IF	=	0x00c5
                           0000C4   723 _T4IF	=	0x00c4
                           0000C3   724 _T3IF	=	0x00c3
                           0000C2   725 _T2IF	=	0x00c2
                           0000C1   726 _T1IF	=	0x00c1
                           0000C0   727 _DMAIF	=	0x00c0
                           0000D7   728 _CY	=	0x00d7
                           0000D6   729 _AC	=	0x00d6
                           0000D5   730 _F0	=	0x00d5
                           0000D4   731 _RS1	=	0x00d4
                           0000D3   732 _RS0	=	0x00d3
                           0000D2   733 _OV	=	0x00d2
                           0000D1   734 _F1	=	0x00d1
                           0000D0   735 _P	=	0x00d0
                           0000E7   736 _ACC_7	=	0x00e7
                           0000E6   737 _ACC_6	=	0x00e6
                           0000E5   738 _ACC_5	=	0x00e5
                           0000E4   739 _ACC_4	=	0x00e4
                           0000E3   740 _ACC_3	=	0x00e3
                           0000E2   741 _ACC_2	=	0x00e2
                           0000E1   742 _ACC_1	=	0x00e1
                           0000E0   743 _ACC_0	=	0x00e0
                           0000EC   744 _WDTIF	=	0x00ec
                           0000EB   745 _P1IF	=	0x00eb
                           0000EA   746 _UTX1IF	=	0x00ea
                           0000E9   747 _UTX0IF	=	0x00e9
                           0000E8   748 _P2IF	=	0x00e8
                           0000F7   749 _B_7	=	0x00f7
                           0000F6   750 _B_6	=	0x00f6
                           0000F5   751 _B_5	=	0x00f5
                           0000F4   752 _B_4	=	0x00f4
                           0000F3   753 _B_3	=	0x00f3
                           0000F2   754 _B_2	=	0x00f2
                           0000F1   755 _B_1	=	0x00f1
                           0000F0   756 _B_0	=	0x00f0
                           0000DE   757 _OVFIM	=	0x00de
                           0000DD   758 _T4CH1IF	=	0x00dd
                           0000DC   759 _T4CH0IF	=	0x00dc
                           0000DB   760 _T4OVFIF	=	0x00db
                           0000DA   761 _T3CH1IF	=	0x00da
                           0000D9   762 _T3CH0IF	=	0x00d9
                           0000D8   763 _T3OVFIF	=	0x00d8
                           0000FF   764 _MODE	=	0x00ff
                           0000FE   765 _RE	=	0x00fe
                           0000FD   766 _SLAVE	=	0x00fd
                           0000FC   767 _FE	=	0x00fc
                           0000FB   768 _ERR	=	0x00fb
                           0000FA   769 _RX_BYTE	=	0x00fa
                           0000F9   770 _TX_BYTE	=	0x00f9
                           0000F8   771 _ACTIVE	=	0x00f8
                                    772 ;--------------------------------------------------------
                                    773 ; overlayable register banks
                                    774 ;--------------------------------------------------------
                                    775 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        776 	.ds 8
                                    777 ;--------------------------------------------------------
                                    778 ; internal ram data
                                    779 ;--------------------------------------------------------
                                    780 	.area DSEG    (DATA)
                                    781 ;--------------------------------------------------------
                                    782 ; overlayable items in internal ram 
                                    783 ;--------------------------------------------------------
                                    784 ;--------------------------------------------------------
                                    785 ; indirectly addressable internal ram data
                                    786 ;--------------------------------------------------------
                                    787 	.area ISEG    (DATA)
                                    788 ;--------------------------------------------------------
                                    789 ; absolute internal ram data
                                    790 ;--------------------------------------------------------
                                    791 	.area IABS    (ABS,DATA)
                                    792 	.area IABS    (ABS,DATA)
                                    793 ;--------------------------------------------------------
                                    794 ; bit data
                                    795 ;--------------------------------------------------------
                                    796 	.area BSEG    (BIT)
                                    797 ;--------------------------------------------------------
                                    798 ; paged external ram data
                                    799 ;--------------------------------------------------------
                                    800 	.area PSEG    (PAG,XDATA)
                                    801 ;--------------------------------------------------------
                                    802 ; external ram data
                                    803 ;--------------------------------------------------------
                                    804 	.area XSEG    (XDATA)
                           0061A6   805 _MONMUX	=	0x61a6
                           0061A6   806 _OPAMPMC	=	0x61a6
                           006230   807 _I2CCFG	=	0x6230
                           006231   808 _I2CSTAT	=	0x6231
                           006232   809 _I2CDATA	=	0x6232
                           006233   810 _I2CADDR	=	0x6233
                           006234   811 _I2CWC	=	0x6234
                           006235   812 _I2CIO	=	0x6235
                           006243   813 _OBSSEL0	=	0x6243
                           006244   814 _OBSSEL1	=	0x6244
                           006245   815 _OBSSEL2	=	0x6245
                           006246   816 _OBSSEL3	=	0x6246
                           006247   817 _OBSSEL4	=	0x6247
                           006248   818 _OBSSEL5	=	0x6248
                           006249   819 _CHVER	=	0x6249
                           00624A   820 _CHIPID	=	0x624a
                           00624B   821 _TESTREG0	=	0x624b
                           006260   822 _DBGDATA	=	0x6260
                           006262   823 _SRCRC	=	0x6262
                           006264   824 _BATTMON	=	0x6264
                           006265   825 _IVCTRL	=	0x6265
                           006270   826 _FCTL	=	0x6270
                           006271   827 _FADDRL	=	0x6271
                           006272   828 _FADDRH	=	0x6272
                           006273   829 _FWDATA	=	0x6273
                           006276   830 _CHIPINFO0	=	0x6276
                           006277   831 _CHIPINFO1	=	0x6277
                           006281   832 _IRCTL	=	0x6281
                           006290   833 _CLD	=	0x6290
                           0062A0   834 _XX_T1CCTL0	=	0x62a0
                           0062A1   835 _XX_T1CCTL1	=	0x62a1
                           0062A2   836 _XX_T1CCTL2	=	0x62a2
                           0062A3   837 _T1CCTL3	=	0x62a3
                           0062A4   838 _T1CCTL4	=	0x62a4
                           0062A6   839 _XX_T1CC0L	=	0x62a6
                           0062A7   840 _XX_T1CC0H	=	0x62a7
                           0062A8   841 _XX_T1CC1L	=	0x62a8
                           0062A9   842 _XX_T1CC1H	=	0x62a9
                           0062AA   843 _XX_T1CC2L	=	0x62aa
                           0062AB   844 _XX_T1CC2H	=	0x62ab
                           0062AC   845 _T1CC3L	=	0x62ac
                           0062AD   846 _T1CC3H	=	0x62ad
                           0062AE   847 _T1CC4L	=	0x62ae
                           0062AF   848 _T1CC4H	=	0x62af
                           0062B0   849 _STCC	=	0x62b0
                           0062B1   850 _STCS	=	0x62b1
                           0062B2   851 _STCV0	=	0x62b2
                           0062B3   852 _STCV1	=	0x62b3
                           0062B4   853 _STCV2	=	0x62b4
                           0062C0   854 _OPAMPC	=	0x62c0
                           0062C1   855 _OPAMPS	=	0x62c1
                           0062D0   856 _CMPCTL	=	0x62d0
                           006000   857 _RFCORE_RAM	=	0x6000
                           006000   858 _RXFIFO	=	0x6000
                           006080   859 _TXFIFO	=	0x6080
                           006100   860 _SRC_ADDR_TABLE	=	0x6100
                           006160   861 _SRCRESMASK0	=	0x6160
                           006161   862 _SRCRESMASK1	=	0x6161
                           006162   863 _SRCRESMASK2	=	0x6162
                           006163   864 _SRCRESINDEX	=	0x6163
                           006164   865 _SRCEXTPENDEN0	=	0x6164
                           006165   866 _SRCEXTPENDEN1	=	0x6165
                           006166   867 _SRCEXTPENDEN2	=	0x6166
                           006167   868 _SRCSHORTPENDEN0	=	0x6167
                           006168   869 _SRCSHORTPENDEN1	=	0x6168
                           006169   870 _SRCSHORTPENDEN2	=	0x6169
                           00616A   871 _EXT_ADDR0	=	0x616a
                           00616B   872 _EXT_ADDR1	=	0x616b
                           00616C   873 _EXT_ADDR2	=	0x616c
                           00616D   874 _EXT_ADDR3	=	0x616d
                           00616E   875 _EXT_ADDR4	=	0x616e
                           00616F   876 _EXT_ADDR5	=	0x616f
                           006170   877 _EXT_ADDR6	=	0x6170
                           006171   878 _EXT_ADDR7	=	0x6171
                           006172   879 _PAN_ID0	=	0x6172
                           006173   880 _PAN_ID1	=	0x6173
                           006174   881 _SHORT_ADDR0	=	0x6174
                           006175   882 _SHORT_ADDR1	=	0x6175
                           006180   883 _FRMFILT0	=	0x6180
                           006181   884 _FRMFILT1	=	0x6181
                           006182   885 _SRCMATCH	=	0x6182
                           006183   886 _SRCSHORTEN0	=	0x6183
                           006184   887 _SRCSHORTEN1	=	0x6184
                           006185   888 _SRCSHORTEN2	=	0x6185
                           006186   889 _SRCEXTEN0	=	0x6186
                           006187   890 _SRCEXTEN1	=	0x6187
                           006188   891 _SRCEXTEN2	=	0x6188
                           006189   892 _FRMCTRL0	=	0x6189
                           00618A   893 _FRMCTRL1	=	0x618a
                           00618B   894 _RXENABLE	=	0x618b
                           00618C   895 _RXMASKSET	=	0x618c
                           00618D   896 _RXMASKCLR	=	0x618d
                           00618E   897 _FREQTUNE	=	0x618e
                           00618F   898 _FREQCTRL	=	0x618f
                           006190   899 _TXPOWER	=	0x6190
                           006191   900 _TXCTRL	=	0x6191
                           006192   901 _FSMSTAT0	=	0x6192
                           006193   902 _FSMSTAT1	=	0x6193
                           006194   903 _FIFOPCTRL	=	0x6194
                           006195   904 _FSMCTRL	=	0x6195
                           006196   905 _CCACTRL0	=	0x6196
                           006197   906 _CCACTRL1	=	0x6197
                           006198   907 _RSSI	=	0x6198
                           006199   908 _RSSISTAT	=	0x6199
                           00619A   909 _RXFIRST	=	0x619a
                           00619B   910 _RXFIFOCNT	=	0x619b
                           00619C   911 _TXFIFOCNT	=	0x619c
                           00619D   912 _RXFIRST_PTR	=	0x619d
                           00619E   913 _RXLAST_PTR	=	0x619e
                           00619F   914 _RXP1_PTR	=	0x619f
                           0061A1   915 _TXFIRST_PTR	=	0x61a1
                           0061A2   916 _TXLAST_PTR	=	0x61a2
                           0061A3   917 _RFIRQM0	=	0x61a3
                           0061A4   918 _RFIRQM1	=	0x61a4
                           0061A5   919 _RFERRM	=	0x61a5
                           0061A7   920 _RFRND	=	0x61a7
                           0061A8   921 _MDMCTRL0	=	0x61a8
                           0061A9   922 _MDMCTRL1	=	0x61a9
                           0061AA   923 _FREQEST	=	0x61aa
                           0061AB   924 _RXCTRL	=	0x61ab
                           0061AC   925 _FSCTRL	=	0x61ac
                           0061AD   926 _FSCAL0	=	0x61ad
                           0061AE   927 _FSCAL1	=	0x61ae
                           0061AF   928 _FSCAL2	=	0x61af
                           0061B0   929 _FSCAL3	=	0x61b0
                           0061B1   930 _AGCCTRL0	=	0x61b1
                           0061B2   931 _AGCCTRL1	=	0x61b2
                           0061B3   932 _AGCCTRL2	=	0x61b3
                           0061B4   933 _AGCCTRL3	=	0x61b4
                           0061B5   934 _ADCTEST0	=	0x61b5
                           0061B6   935 _ADCTEST1	=	0x61b6
                           0061B7   936 _ADCTEST2	=	0x61b7
                           0061B8   937 _MDMTEST0	=	0x61b8
                           0061B9   938 _MDMTEST1	=	0x61b9
                           0061BA   939 _DACTEST0	=	0x61ba
                           0061BB   940 _DACTEST1	=	0x61bb
                           0061BC   941 _DACTEST2	=	0x61bc
                           0061BD   942 _ATEST	=	0x61bd
                           0061BE   943 _PTEST0	=	0x61be
                           0061BF   944 _PTEST1	=	0x61bf
                           0061FA   945 _TXFILTCFG	=	0x61fa
                           0061EB   946 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   947 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   948 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   949 _CSPPROG0	=	0x61c0
                           0061C1   950 _CSPPROG1	=	0x61c1
                           0061C2   951 _CSPPROG2	=	0x61c2
                           0061C3   952 _CSPPROG3	=	0x61c3
                           0061C4   953 _CSPPROG4	=	0x61c4
                           0061C5   954 _CSPPROG5	=	0x61c5
                           0061C6   955 _CSPPROG6	=	0x61c6
                           0061C7   956 _CSPPROG7	=	0x61c7
                           0061C8   957 _CSPPROG8	=	0x61c8
                           0061C9   958 _CSPPROG9	=	0x61c9
                           0061CA   959 _CSPPROG10	=	0x61ca
                           0061CB   960 _CSPPROG11	=	0x61cb
                           0061CC   961 _CSPPROG12	=	0x61cc
                           0061CD   962 _CSPPROG13	=	0x61cd
                           0061CE   963 _CSPPROG14	=	0x61ce
                           0061CF   964 _CSPPROG15	=	0x61cf
                           0061D0   965 _CSPPROG16	=	0x61d0
                           0061D1   966 _CSPPROG17	=	0x61d1
                           0061D2   967 _CSPPROG18	=	0x61d2
                           0061D3   968 _CSPPROG19	=	0x61d3
                           0061D4   969 _CSPPROG20	=	0x61d4
                           0061D5   970 _CSPPROG21	=	0x61d5
                           0061D6   971 _CSPPROG22	=	0x61d6
                           0061D7   972 _CSPPROG23	=	0x61d7
                           0061E0   973 _CSPCTRL	=	0x61e0
                           0061E1   974 _CSPSTAT	=	0x61e1
                           0061E2   975 _CSPX	=	0x61e2
                           0061E3   976 _CSPY	=	0x61e3
                           0061E4   977 _CSPZ	=	0x61e4
                           0061E5   978 _CSPT	=	0x61e5
                           006200   979 _USBADDR	=	0x6200
                           006201   980 _USBPOW	=	0x6201
                           006202   981 _USBIIF	=	0x6202
                           006204   982 _USBOIF	=	0x6204
                           006206   983 _USBCIF	=	0x6206
                           006207   984 _USBIIE	=	0x6207
                           006209   985 _USBOIE	=	0x6209
                           00620B   986 _USBCIE	=	0x620b
                           00620C   987 _USBFRML	=	0x620c
                           00620D   988 _USBFRMH	=	0x620d
                           00620E   989 _USBINDEX	=	0x620e
                           00620F   990 _USBCTRL	=	0x620f
                           006210   991 _USBMAXI	=	0x6210
                           006211   992 _USBCS0	=	0x6211
                           006211   993 _USBCSIL	=	0x6211
                           006212   994 _USBCSIH	=	0x6212
                           006213   995 _USBMAXO	=	0x6213
                           006214   996 _USBCSOL	=	0x6214
                           006215   997 _USBCSOH	=	0x6215
                           006216   998 _USBCNT0	=	0x6216
                           006216   999 _USBCNTL	=	0x6216
                           006217  1000 _USBCNTH	=	0x6217
                           006220  1001 _USBF0	=	0x6220
                           006222  1002 _USBF1	=	0x6222
                           006224  1003 _USBF2	=	0x6224
                           006226  1004 _USBF3	=	0x6226
                           006228  1005 _USBF4	=	0x6228
                           00622A  1006 _USBF5	=	0x622a
                           007080  1007 _X_P0	=	0x7080
                           007086  1008 _X_U0CSR	=	0x7086
                           007089  1009 _X_P0IFG	=	0x7089
                           00708A  1010 _X_P1IFG	=	0x708a
                           00708B  1011 _X_P2IFG	=	0x708b
                           00708C  1012 _X_PICTL	=	0x708c
                           00708D  1013 _X_P1IEN	=	0x708d
                           00708F  1014 _X_P0INP	=	0x708f
                           007090  1015 _X_P1	=	0x7090
                           007091  1016 _X_RFIRQF1	=	0x7091
                           007093  1017 _X_MPAGE	=	0x7093
                           007093  1018 _X__XPAGE	=	0x7093
                           007094  1019 _X_T2CTRL	=	0x7094
                           007095  1020 _X_ST0	=	0x7095
                           007096  1021 _X_ST1	=	0x7096
                           007097  1022 _X_ST2	=	0x7097
                           00709C  1023 _X_T2EVTCFG	=	0x709c
                           00709D  1024 _X_SLEEPSTA	=	0x709d
                           00709E  1025 _X_CLKCONSTA	=	0x709e
                           00709F  1026 _X_FMAP	=	0x709f
                           00709F  1027 _X_PSBANK	=	0x709f
                           0070A0  1028 _X_P2	=	0x70a0
                           0070A1  1029 _X_T2IRQF	=	0x70a1
                           0070A2  1030 _X_T2M0	=	0x70a2
                           0070A3  1031 _X_T2M1	=	0x70a3
                           0070A4  1032 _X_T2MOVF0	=	0x70a4
                           0070A5  1033 _X_T2MOVF1	=	0x70a5
                           0070A6  1034 _X_T2MOVF2	=	0x70a6
                           0070A7  1035 _X_T2IRQM	=	0x70a7
                           0070AB  1036 _X_P0IEN	=	0x70ab
                           0070AC  1037 _X_P2IEN	=	0x70ac
                           0070AD  1038 _X_STLOAD	=	0x70ad
                           0070AE  1039 _X_PMUX	=	0x70ae
                           0070AF  1040 _X_T1STAT	=	0x70af
                           0070B1  1041 _X_ENCDI	=	0x70b1
                           0070B2  1042 _X_ENCDO	=	0x70b2
                           0070B3  1043 _X_ENCCS	=	0x70b3
                           0070B4  1044 _X_ADCCON1	=	0x70b4
                           0070B5  1045 _X_ADCCON2	=	0x70b5
                           0070B6  1046 _X_ADCCON3	=	0x70b6
                           0070BA  1047 _X_ADCL	=	0x70ba
                           0070BB  1048 _X_ADCH	=	0x70bb
                           0070BC  1049 _X_RNDL	=	0x70bc
                           0070BD  1050 _X_RNDH	=	0x70bd
                           0070BE  1051 _X_SLEEPCMD	=	0x70be
                           0070BF  1052 _X_RFERRF	=	0x70bf
                           0070C1  1053 _X_U0DBUF	=	0x70c1
                           0070C2  1054 _X_U0BAUD	=	0x70c2
                           0070C3  1055 _X_T2MSEL	=	0x70c3
                           0070C4  1056 _X_U0UCR	=	0x70c4
                           0070C5  1057 _X_U0GCR	=	0x70c5
                           0070C6  1058 _X_CLKCONCMD	=	0x70c6
                           0070C7  1059 _X_MEMCTR	=	0x70c7
                           0070C9  1060 _X_WDCTL	=	0x70c9
                           0070CA  1061 _X_T3CNT	=	0x70ca
                           0070CB  1062 _X_T3CTL	=	0x70cb
                           0070CC  1063 _X_T3CCTL0	=	0x70cc
                           0070CD  1064 _X_T3CC0	=	0x70cd
                           0070CE  1065 _X_T3CCTL1	=	0x70ce
                           0070CF  1066 _X_T3CC1	=	0x70cf
                           0070D1  1067 _X_DMAIRQ	=	0x70d1
                           0070D2  1068 _X_DMA1CFGL	=	0x70d2
                           0070D3  1069 _X_DMA1CFGH	=	0x70d3
                           0070D4  1070 _X_DMA0CFGL	=	0x70d4
                           0070D5  1071 _X_DMA0CFGH	=	0x70d5
                           0070D6  1072 _X_DMAARM	=	0x70d6
                           0070D7  1073 _X_DMAREQ	=	0x70d7
                           0070D8  1074 _X_TIMIF	=	0x70d8
                           0070D9  1075 _X_RFD	=	0x70d9
                           0070DA  1076 _X_T1CC0L	=	0x70da
                           0070DB  1077 _X_T1CC0H	=	0x70db
                           0070DC  1078 _X_T1CC1L	=	0x70dc
                           0070DD  1079 _X_T1CC1H	=	0x70dd
                           0070DE  1080 _X_T1CC2L	=	0x70de
                           0070DF  1081 _X_T1CC2H	=	0x70df
                           0070E1  1082 _X_RFST	=	0x70e1
                           0070E2  1083 _X_T1CNTL	=	0x70e2
                           0070E3  1084 _X_T1CNTH	=	0x70e3
                           0070E4  1085 _X_T1CTL	=	0x70e4
                           0070E5  1086 _X_T1CCTL0	=	0x70e5
                           0070E6  1087 _X_T1CCTL1	=	0x70e6
                           0070E7  1088 _X_T1CCTL2	=	0x70e7
                           0070E9  1089 _X_RFIRQF0	=	0x70e9
                           0070EA  1090 _X_T4CNT	=	0x70ea
                           0070EB  1091 _X_T4CTL	=	0x70eb
                           0070EC  1092 _X_T4CCTL0	=	0x70ec
                           0070ED  1093 _X_T4CC0	=	0x70ed
                           0070EE  1094 _X_T4CCTL1	=	0x70ee
                           0070EF  1095 _X_T4CC1	=	0x70ef
                           0070F1  1096 _X_PERCFG	=	0x70f1
                           0070F2  1097 _X_APCFG	=	0x70f2
                           0070F3  1098 _X_P0SEL	=	0x70f3
                           0070F4  1099 _X_P1SEL	=	0x70f4
                           0070F5  1100 _X_P2SEL	=	0x70f5
                           0070F6  1101 _X_P1INP	=	0x70f6
                           0070F7  1102 _X_P2INP	=	0x70f7
                           0070F8  1103 _X_U1CSR	=	0x70f8
                           0070F9  1104 _X_U1DBUF	=	0x70f9
                           0070FA  1105 _X_U1BAUD	=	0x70fa
                           0070FB  1106 _X_U1UCR	=	0x70fb
                           0070FC  1107 _X_U1GCR	=	0x70fc
                           0070FD  1108 _X_P0DIR	=	0x70fd
                           0070FE  1109 _X_P1DIR	=	0x70fe
                           0070FF  1110 _X_P2DIR	=	0x70ff
                           007800  1111 _X_INFOPAGE	=	0x7800
                           00780C  1112 _X_IEEE_ADDR	=	0x780c
                                   1113 ;--------------------------------------------------------
                                   1114 ; absolute external ram data
                                   1115 ;--------------------------------------------------------
                                   1116 	.area XABS    (ABS,XDATA)
                                   1117 ;--------------------------------------------------------
                                   1118 ; external initialized ram data
                                   1119 ;--------------------------------------------------------
                                   1120 	.area XISEG   (XDATA)
                                   1121 	.area HOME    (CODE)
                                   1122 	.area GSINIT0 (CODE)
                                   1123 	.area GSINIT1 (CODE)
                                   1124 	.area GSINIT2 (CODE)
                                   1125 	.area GSINIT3 (CODE)
                                   1126 	.area GSINIT4 (CODE)
                                   1127 	.area GSINIT5 (CODE)
                                   1128 	.area GSINIT  (CODE)
                                   1129 	.area GSFINAL (CODE)
                                   1130 	.area CSEG    (CODE)
                                   1131 ;--------------------------------------------------------
                                   1132 ; global & static initialisations
                                   1133 ;--------------------------------------------------------
                                   1134 	.area HOME    (CODE)
                                   1135 	.area GSINIT  (CODE)
                                   1136 	.area GSFINAL (CODE)
                                   1137 	.area GSINIT  (CODE)
                                   1138 ;--------------------------------------------------------
                                   1139 ; Home
                                   1140 ;--------------------------------------------------------
                                   1141 	.area HOME    (CODE)
                                   1142 	.area HOME    (CODE)
                                   1143 ;--------------------------------------------------------
                                   1144 ; code
                                   1145 ;--------------------------------------------------------
                                   1146 	.area CSEG    (CODE)
                                   1147 ;------------------------------------------------------------
                                   1148 ;Allocation info for local variables in function 'set_iv'
                                   1149 ;------------------------------------------------------------
                                   1150 ;flags                     Allocated to stack - sp -5
                                   1151 ;nonce                     Allocated to stack - sp -8
                                   1152 ;counter                   Allocated to stack - sp -9
                                   1153 ;iv                        Allocated to stack - sp -2
                                   1154 ;------------------------------------------------------------
                                   1155 ;	/opt/contiki/core/lib/ccm-star.c:51: set_iv(uint8_t *iv,
                                   1156 ;	-----------------------------------------
                                   1157 ;	 function set_iv
                                   1158 ;	-----------------------------------------
      000000                       1159 _set_iv:
                           000007  1160 	ar7 = 0x07
                           000006  1161 	ar6 = 0x06
                           000005  1162 	ar5 = 0x05
                           000004  1163 	ar4 = 0x04
                           000003  1164 	ar3 = 0x03
                           000002  1165 	ar2 = 0x02
                           000001  1166 	ar1 = 0x01
                           000000  1167 	ar0 = 0x00
      000000 C0 82            [24] 1168 	push	dpl
      000002 C0 83            [24] 1169 	push	dph
      000004 C0 F0            [24] 1170 	push	b
                                   1171 ;	/opt/contiki/core/lib/ccm-star.c:56: iv[0] = flags;
      000006 A8 81            [24] 1172 	mov	r0,sp
      000008 18               [12] 1173 	dec	r0
      000009 18               [12] 1174 	dec	r0
      00000A 86 82            [24] 1175 	mov	dpl,@r0
      00000C 08               [12] 1176 	inc	r0
      00000D 86 83            [24] 1177 	mov	dph,@r0
      00000F 08               [12] 1178 	inc	r0
      000010 86 F0            [24] 1179 	mov	b,@r0
      000012 E5 81            [12] 1180 	mov	a,sp
      000014 24 FB            [12] 1181 	add	a,#0xfb
      000016 F9               [12] 1182 	mov	r1,a
      000017 E7               [12] 1183 	mov	a,@r1
      000018 12r00r00         [24] 1184 	lcall	__gptrput
                                   1185 ;	/opt/contiki/core/lib/ccm-star.c:57: memcpy(iv + 1, nonce, CCM_STAR_NONCE_LENGTH);
      00001B E5 81            [12] 1186 	mov	a,sp
      00001D 24 F8            [12] 1187 	add	a,#0xf8
      00001F F8               [12] 1188 	mov	r0,a
      000020 86 02            [24] 1189 	mov	ar2,@r0
      000022 08               [12] 1190 	inc	r0
      000023 86 03            [24] 1191 	mov	ar3,@r0
      000025 08               [12] 1192 	inc	r0
      000026 86 04            [24] 1193 	mov	ar4,@r0
      000028 A8 81            [24] 1194 	mov	r0,sp
      00002A 18               [12] 1195 	dec	r0
      00002B 18               [12] 1196 	dec	r0
      00002C 74 01            [12] 1197 	mov	a,#0x01
      00002E 26               [12] 1198 	add	a,@r0
      00002F FD               [12] 1199 	mov	r5,a
      000030 E4               [12] 1200 	clr	a
      000031 08               [12] 1201 	inc	r0
      000032 36               [12] 1202 	addc	a,@r0
      000033 FE               [12] 1203 	mov	r6,a
      000034 08               [12] 1204 	inc	r0
      000035 86 07            [24] 1205 	mov	ar7,@r0
      000037 74 0D            [12] 1206 	mov	a,#0x0D
      000039 C0 E0            [24] 1207 	push	acc
      00003B E4               [12] 1208 	clr	a
      00003C C0 E0            [24] 1209 	push	acc
      00003E C0 02            [24] 1210 	push	ar2
      000040 C0 03            [24] 1211 	push	ar3
      000042 C0 04            [24] 1212 	push	ar4
      000044 8D 82            [24] 1213 	mov	dpl,r5
      000046 8E 83            [24] 1214 	mov	dph,r6
      000048 8F F0            [24] 1215 	mov	b,r7
      00004A 12r00r00         [24] 1216 	lcall	_memcpy
      00004D E5 81            [12] 1217 	mov	a,sp
      00004F 24 FB            [12] 1218 	add	a,#0xfb
      000051 F5 81            [12] 1219 	mov	sp,a
                                   1220 ;	/opt/contiki/core/lib/ccm-star.c:58: iv[14] = 0;
      000053 A8 81            [24] 1221 	mov	r0,sp
      000055 18               [12] 1222 	dec	r0
      000056 18               [12] 1223 	dec	r0
      000057 74 0E            [12] 1224 	mov	a,#0x0E
      000059 26               [12] 1225 	add	a,@r0
      00005A FD               [12] 1226 	mov	r5,a
      00005B E4               [12] 1227 	clr	a
      00005C 08               [12] 1228 	inc	r0
      00005D 36               [12] 1229 	addc	a,@r0
      00005E FE               [12] 1230 	mov	r6,a
      00005F 08               [12] 1231 	inc	r0
      000060 86 07            [24] 1232 	mov	ar7,@r0
      000062 8D 82            [24] 1233 	mov	dpl,r5
      000064 8E 83            [24] 1234 	mov	dph,r6
      000066 8F F0            [24] 1235 	mov	b,r7
      000068 E4               [12] 1236 	clr	a
      000069 12r00r00         [24] 1237 	lcall	__gptrput
                                   1238 ;	/opt/contiki/core/lib/ccm-star.c:59: iv[15] = counter;
      00006C A8 81            [24] 1239 	mov	r0,sp
      00006E 18               [12] 1240 	dec	r0
      00006F 18               [12] 1241 	dec	r0
      000070 74 0F            [12] 1242 	mov	a,#0x0F
      000072 26               [12] 1243 	add	a,@r0
      000073 FD               [12] 1244 	mov	r5,a
      000074 E4               [12] 1245 	clr	a
      000075 08               [12] 1246 	inc	r0
      000076 36               [12] 1247 	addc	a,@r0
      000077 FE               [12] 1248 	mov	r6,a
      000078 08               [12] 1249 	inc	r0
      000079 86 07            [24] 1250 	mov	ar7,@r0
      00007B 8D 82            [24] 1251 	mov	dpl,r5
      00007D 8E 83            [24] 1252 	mov	dph,r6
      00007F 8F F0            [24] 1253 	mov	b,r7
      000081 E5 81            [12] 1254 	mov	a,sp
      000083 24 F7            [12] 1255 	add	a,#0xf7
      000085 F8               [12] 1256 	mov	r0,a
      000086 E6               [12] 1257 	mov	a,@r0
      000087 12r00r00         [24] 1258 	lcall	__gptrput
      00008A 15 81            [12] 1259 	dec	sp
      00008C 15 81            [12] 1260 	dec	sp
      00008E 15 81            [12] 1261 	dec	sp
      000090 22               [24] 1262 	ret
                                   1263 ;------------------------------------------------------------
                                   1264 ;Allocation info for local variables in function 'ctr_step'
                                   1265 ;------------------------------------------------------------
                                   1266 ;pos                       Allocated to stack - sp -24
                                   1267 ;m_and_result              Allocated to stack - sp -27
                                   1268 ;m_len                     Allocated to stack - sp -28
                                   1269 ;counter                   Allocated to stack - sp -29
                                   1270 ;nonce                     Allocated to stack - sp -21
                                   1271 ;a                         Allocated to stack - sp -15
                                   1272 ;i                         Allocated to stack - sp -16
                                   1273 ;sloc0                     Allocated to stack - sp -18
                                   1274 ;------------------------------------------------------------
                                   1275 ;	/opt/contiki/core/lib/ccm-star.c:64: ctr_step(const uint8_t *nonce,
                                   1276 ;	-----------------------------------------
                                   1277 ;	 function ctr_step
                                   1278 ;	-----------------------------------------
      000091                       1279 _ctr_step:
      000091 C0 82            [24] 1280 	push	dpl
      000093 C0 83            [24] 1281 	push	dph
      000095 C0 F0            [24] 1282 	push	b
      000097 E5 81            [12] 1283 	mov	a,sp
      000099 24 13            [12] 1284 	add	a,#0x13
                                   1285 ;	/opt/contiki/core/lib/ccm-star.c:73: set_iv(a, CCM_STAR_ENCRYPTION_FLAGS, nonce, counter);
      00009B F5 81            [12] 1286 	mov	sp,a
      00009D 24 F1            [12] 1287 	add	a,#0xF1
      00009F FC               [12] 1288 	mov	r4,a
      0000A0 FA               [12] 1289 	mov	r2,a
      0000A1 7B 00            [12] 1290 	mov	r3,#0x00
      0000A3 7F 40            [12] 1291 	mov	r7,#0x40
      0000A5 C0 04            [24] 1292 	push	ar4
      0000A7 E5 81            [12] 1293 	mov	a,sp
      0000A9 24 E2            [12] 1294 	add	a,#0xe2
      0000AB F8               [12] 1295 	mov	r0,a
      0000AC E6               [12] 1296 	mov	a,@r0
      0000AD C0 E0            [24] 1297 	push	acc
      0000AF E5 81            [12] 1298 	mov	a,sp
      0000B1 24 E9            [12] 1299 	add	a,#0xe9
      0000B3 F8               [12] 1300 	mov	r0,a
      0000B4 E6               [12] 1301 	mov	a,@r0
      0000B5 C0 E0            [24] 1302 	push	acc
      0000B7 08               [12] 1303 	inc	r0
      0000B8 E6               [12] 1304 	mov	a,@r0
      0000B9 C0 E0            [24] 1305 	push	acc
      0000BB 08               [12] 1306 	inc	r0
      0000BC E6               [12] 1307 	mov	a,@r0
      0000BD C0 E0            [24] 1308 	push	acc
      0000BF 74 01            [12] 1309 	mov	a,#0x01
      0000C1 C0 E0            [24] 1310 	push	acc
      0000C3 8A 82            [24] 1311 	mov	dpl,r2
      0000C5 8B 83            [24] 1312 	mov	dph,r3
      0000C7 8F F0            [24] 1313 	mov	b,r7
      0000C9 12r00r00         [24] 1314 	lcall	_set_iv
      0000CC E5 81            [12] 1315 	mov	a,sp
      0000CE 24 FB            [12] 1316 	add	a,#0xfb
      0000D0 F5 81            [12] 1317 	mov	sp,a
      0000D2 D0 04            [24] 1318 	pop	ar4
                                   1319 ;	/opt/contiki/core/lib/ccm-star.c:74: AES_128.encrypt(a);
      0000D4 90r00r02         [24] 1320 	mov	dptr,#(_aes_128_driver + 0x0002)
      0000D7 E4               [12] 1321 	clr	a
      0000D8 93               [24] 1322 	movc	a,@a+dptr
      0000D9 FE               [12] 1323 	mov	r6,a
      0000DA A3               [24] 1324 	inc	dptr
      0000DB E4               [12] 1325 	clr	a
      0000DC 93               [24] 1326 	movc	a,@a+dptr
      0000DD FF               [12] 1327 	mov	r7,a
      0000DE 8C 05            [24] 1328 	mov	ar5,r4
      0000E0 7B 00            [12] 1329 	mov	r3,#0x00
      0000E2 7A 40            [12] 1330 	mov	r2,#0x40
      0000E4 C0 07            [24] 1331 	push	ar7
      0000E6 C0 06            [24] 1332 	push	ar6
      0000E8 C0 04            [24] 1333 	push	ar4
      0000EA 12r00rEF         [24] 1334 	lcall	00118$
      0000ED 80 0B            [24] 1335 	sjmp	00119$
      0000EF                       1336 00118$:
      0000EF C0 06            [24] 1337 	push	ar6
      0000F1 C0 07            [24] 1338 	push	ar7
      0000F3 8D 82            [24] 1339 	mov	dpl,r5
      0000F5 8B 83            [24] 1340 	mov	dph,r3
      0000F7 8A F0            [24] 1341 	mov	b,r2
      0000F9 22               [24] 1342 	ret
      0000FA                       1343 00119$:
      0000FA D0 04            [24] 1344 	pop	ar4
      0000FC D0 06            [24] 1345 	pop	ar6
      0000FE D0 07            [24] 1346 	pop	ar7
                                   1347 ;	/opt/contiki/core/lib/ccm-star.c:76: for(i = 0; (pos + i < m_len) && (i < AES_128_BLOCK_SIZE); i++) {
      000100 E5 81            [12] 1348 	mov	a,sp
      000102 24 F0            [12] 1349 	add	a,#0xf0
      000104 F8               [12] 1350 	mov	r0,a
      000105 76 00            [12] 1351 	mov	@r0,#0x00
      000107                       1352 00104$:
      000107 C0 04            [24] 1353 	push	ar4
      000109 E5 81            [12] 1354 	mov	a,sp
      00010B 24 E7            [12] 1355 	add	a,#0xe7
      00010D F8               [12] 1356 	mov	r0,a
      00010E 86 05            [24] 1357 	mov	ar5,@r0
      000110 7E 00            [12] 1358 	mov	r6,#0x00
      000112 E5 81            [12] 1359 	mov	a,sp
      000114 24 EF            [12] 1360 	add	a,#0xef
      000116 F8               [12] 1361 	mov	r0,a
      000117 86 02            [24] 1362 	mov	ar2,@r0
      000119 7B 00            [12] 1363 	mov	r3,#0x00
      00011B E5 81            [12] 1364 	mov	a,sp
      00011D 24 ED            [12] 1365 	add	a,#0xed
      00011F F8               [12] 1366 	mov	r0,a
      000120 EA               [12] 1367 	mov	a,r2
      000121 2D               [12] 1368 	add	a,r5
      000122 F6               [12] 1369 	mov	@r0,a
      000123 EB               [12] 1370 	mov	a,r3
      000124 3E               [12] 1371 	addc	a,r6
      000125 08               [12] 1372 	inc	r0
      000126 F6               [12] 1373 	mov	@r0,a
      000127 E5 81            [12] 1374 	mov	a,sp
      000129 24 E3            [12] 1375 	add	a,#0xe3
      00012B F8               [12] 1376 	mov	r0,a
      00012C 86 04            [24] 1377 	mov	ar4,@r0
      00012E 7F 00            [12] 1378 	mov	r7,#0x00
      000130 E5 81            [12] 1379 	mov	a,sp
      000132 24 ED            [12] 1380 	add	a,#0xed
      000134 F8               [12] 1381 	mov	r0,a
      000135 C3               [12] 1382 	clr	c
      000136 E6               [12] 1383 	mov	a,@r0
      000137 9C               [12] 1384 	subb	a,r4
      000138 08               [12] 1385 	inc	r0
      000139 E6               [12] 1386 	mov	a,@r0
      00013A 64 80            [12] 1387 	xrl	a,#0x80
      00013C 8F F0            [24] 1388 	mov	b,r7
      00013E 63 F0 80         [24] 1389 	xrl	b,#0x80
      000141 95 F0            [12] 1390 	subb	a,b
      000143 D0 04            [24] 1391 	pop	ar4
      000145 50 48            [24] 1392 	jnc	00106$
      000147 E5 81            [12] 1393 	mov	a,sp
      000149 24 F0            [12] 1394 	add	a,#0xf0
      00014B F8               [12] 1395 	mov	r0,a
      00014C B6 10 00         [24] 1396 	cjne	@r0,#0x10,00121$
      00014F                       1397 00121$:
      00014F 50 3E            [24] 1398 	jnc	00106$
                                   1399 ;	/opt/contiki/core/lib/ccm-star.c:77: m_and_result[pos + i] ^= a[i];
      000151 EA               [12] 1400 	mov	a,r2
      000152 2D               [12] 1401 	add	a,r5
      000153 FD               [12] 1402 	mov	r5,a
      000154 EB               [12] 1403 	mov	a,r3
      000155 3E               [12] 1404 	addc	a,r6
      000156 FE               [12] 1405 	mov	r6,a
      000157 E5 81            [12] 1406 	mov	a,sp
      000159 24 E5            [12] 1407 	add	a,#0xe5
      00015B F8               [12] 1408 	mov	r0,a
      00015C ED               [12] 1409 	mov	a,r5
      00015D 26               [12] 1410 	add	a,@r0
      00015E FD               [12] 1411 	mov	r5,a
      00015F EE               [12] 1412 	mov	a,r6
      000160 08               [12] 1413 	inc	r0
      000161 36               [12] 1414 	addc	a,@r0
      000162 FE               [12] 1415 	mov	r6,a
      000163 08               [12] 1416 	inc	r0
      000164 86 07            [24] 1417 	mov	ar7,@r0
      000166 8D 82            [24] 1418 	mov	dpl,r5
      000168 8E 83            [24] 1419 	mov	dph,r6
      00016A 8F F0            [24] 1420 	mov	b,r7
      00016C 12r00r00         [24] 1421 	lcall	__gptrget
      00016F FB               [12] 1422 	mov	r3,a
      000170 E5 81            [12] 1423 	mov	a,sp
      000172 24 F0            [12] 1424 	add	a,#0xf0
      000174 F8               [12] 1425 	mov	r0,a
      000175 E6               [12] 1426 	mov	a,@r0
      000176 2C               [12] 1427 	add	a,r4
      000177 F9               [12] 1428 	mov	r1,a
      000178 E7               [12] 1429 	mov	a,@r1
      000179 FA               [12] 1430 	mov	r2,a
      00017A 62 03            [12] 1431 	xrl	ar3,a
      00017C 8D 82            [24] 1432 	mov	dpl,r5
      00017E 8E 83            [24] 1433 	mov	dph,r6
      000180 8F F0            [24] 1434 	mov	b,r7
      000182 EB               [12] 1435 	mov	a,r3
      000183 12r00r00         [24] 1436 	lcall	__gptrput
                                   1437 ;	/opt/contiki/core/lib/ccm-star.c:76: for(i = 0; (pos + i < m_len) && (i < AES_128_BLOCK_SIZE); i++) {
      000186 E5 81            [12] 1438 	mov	a,sp
      000188 24 F0            [12] 1439 	add	a,#0xf0
      00018A F8               [12] 1440 	mov	r0,a
      00018B 06               [12] 1441 	inc	@r0
      00018C 02r01r07         [24] 1442 	ljmp	00104$
      00018F                       1443 00106$:
      00018F E5 81            [12] 1444 	mov	a,sp
      000191 24 EA            [12] 1445 	add	a,#0xEA
      000193 F5 81            [12] 1446 	mov	sp,a
      000195 22               [24] 1447 	ret
                                   1448 ;------------------------------------------------------------
                                   1449 ;Allocation info for local variables in function 'mic'
                                   1450 ;------------------------------------------------------------
                                   1451 ;m                         Allocated to stack - sp -29
                                   1452 ;m_len                     Allocated to stack - sp -30
                                   1453 ;a                         Allocated to stack - sp -33
                                   1454 ;a_len                     Allocated to stack - sp -34
                                   1455 ;result                    Allocated to stack - sp -37
                                   1456 ;mic_len                   Allocated to stack - sp -38
                                   1457 ;nonce                     Allocated to stack - sp -24
                                   1458 ;x                         Allocated to stack - sp -17
                                   1459 ;pos                       Allocated to stack - sp -1
                                   1460 ;i                         Allocated to stack - sp +0
                                   1461 ;sloc0                     Allocated to stack - sp -21
                                   1462 ;sloc1                     Allocated to stack - sp -19
                                   1463 ;------------------------------------------------------------
                                   1464 ;	/opt/contiki/core/lib/ccm-star.c:82: mic(const uint8_t *nonce,
                                   1465 ;	-----------------------------------------
                                   1466 ;	 function mic
                                   1467 ;	-----------------------------------------
      000196                       1468 _mic:
      000196 C0 82            [24] 1469 	push	dpl
      000198 C0 83            [24] 1470 	push	dph
      00019A C0 F0            [24] 1471 	push	b
      00019C E5 81            [12] 1472 	mov	a,sp
      00019E 24 16            [12] 1473 	add	a,#0x16
                                   1474 ;	/opt/contiki/core/lib/ccm-star.c:92: set_iv(x, CCM_STAR_AUTH_FLAGS(a_len, mic_len), nonce, m_len);
      0001A0 F5 81            [12] 1475 	mov	sp,a
      0001A2 24 DE            [12] 1476 	add	a,#0xde
      0001A4 F8               [12] 1477 	mov	r0,a
      0001A5 E6               [12] 1478 	mov	a,@r0
      0001A6 60 04            [24] 1479 	jz	00128$
      0001A8 7C 40            [12] 1480 	mov	r4,#0x40
      0001AA 80 02            [24] 1481 	sjmp	00129$
      0001AC                       1482 00128$:
      0001AC 7C 00            [12] 1483 	mov	r4,#0x00
      0001AE                       1484 00129$:
      0001AE E5 81            [12] 1485 	mov	a,sp
      0001B0 24 DA            [12] 1486 	add	a,#0xda
      0001B2 F8               [12] 1487 	mov	r0,a
      0001B3 86 02            [24] 1488 	mov	ar2,@r0
      0001B5 7B 00            [12] 1489 	mov	r3,#0x00
      0001B7 EA               [12] 1490 	mov	a,r2
      0001B8 24 FE            [12] 1491 	add	a,#0xFE
      0001BA FA               [12] 1492 	mov	r2,a
      0001BB EB               [12] 1493 	mov	a,r3
      0001BC 34 FF            [12] 1494 	addc	a,#0xFF
      0001BE C3               [12] 1495 	clr	c
      0001BF 13               [12] 1496 	rrc	a
      0001C0 CA               [12] 1497 	xch	a,r2
      0001C1 13               [12] 1498 	rrc	a
      0001C2 CA               [12] 1499 	xch	a,r2
      0001C3 EA               [12] 1500 	mov	a,r2
      0001C4 C4               [12] 1501 	swap	a
      0001C5 03               [12] 1502 	rr	a
      0001C6 54 F8            [12] 1503 	anl	a,#0xF8
      0001C8 42 04            [12] 1504 	orl	ar4,a
      0001CA 43 04 01         [24] 1505 	orl	ar4,#0x01
      0001CD E5 81            [12] 1506 	mov	a,sp
      0001CF 24 EF            [12] 1507 	add	a,#0xEF
      0001D1 FB               [12] 1508 	mov	r3,a
      0001D2 FA               [12] 1509 	mov	r2,a
      0001D3 7E 00            [12] 1510 	mov	r6,#0x00
      0001D5 7F 40            [12] 1511 	mov	r7,#0x40
      0001D7 C0 03            [24] 1512 	push	ar3
      0001D9 E5 81            [12] 1513 	mov	a,sp
      0001DB 24 E1            [12] 1514 	add	a,#0xe1
      0001DD F8               [12] 1515 	mov	r0,a
      0001DE E6               [12] 1516 	mov	a,@r0
      0001DF C0 E0            [24] 1517 	push	acc
      0001E1 E5 81            [12] 1518 	mov	a,sp
      0001E3 24 E6            [12] 1519 	add	a,#0xe6
      0001E5 F8               [12] 1520 	mov	r0,a
      0001E6 E6               [12] 1521 	mov	a,@r0
      0001E7 C0 E0            [24] 1522 	push	acc
      0001E9 08               [12] 1523 	inc	r0
      0001EA E6               [12] 1524 	mov	a,@r0
      0001EB C0 E0            [24] 1525 	push	acc
      0001ED 08               [12] 1526 	inc	r0
      0001EE E6               [12] 1527 	mov	a,@r0
      0001EF C0 E0            [24] 1528 	push	acc
      0001F1 C0 04            [24] 1529 	push	ar4
      0001F3 8A 82            [24] 1530 	mov	dpl,r2
      0001F5 8E 83            [24] 1531 	mov	dph,r6
      0001F7 8F F0            [24] 1532 	mov	b,r7
      0001F9 12r00r00         [24] 1533 	lcall	_set_iv
      0001FC E5 81            [12] 1534 	mov	a,sp
      0001FE 24 FB            [12] 1535 	add	a,#0xfb
      000200 F5 81            [12] 1536 	mov	sp,a
      000202 D0 03            [24] 1537 	pop	ar3
                                   1538 ;	/opt/contiki/core/lib/ccm-star.c:93: AES_128.encrypt(x);
      000204 90r00r02         [24] 1539 	mov	dptr,#(_aes_128_driver + 0x0002)
      000207 E4               [12] 1540 	clr	a
      000208 93               [24] 1541 	movc	a,@a+dptr
      000209 FE               [12] 1542 	mov	r6,a
      00020A A3               [24] 1543 	inc	dptr
      00020B E4               [12] 1544 	clr	a
      00020C 93               [24] 1545 	movc	a,@a+dptr
      00020D FF               [12] 1546 	mov	r7,a
      00020E 8B 05            [24] 1547 	mov	ar5,r3
      000210 7C 00            [12] 1548 	mov	r4,#0x00
      000212 7A 40            [12] 1549 	mov	r2,#0x40
      000214 C0 07            [24] 1550 	push	ar7
      000216 C0 06            [24] 1551 	push	ar6
      000218 C0 03            [24] 1552 	push	ar3
      00021A 12r02r1F         [24] 1553 	lcall	00184$
      00021D 80 0B            [24] 1554 	sjmp	00185$
      00021F                       1555 00184$:
      00021F C0 06            [24] 1556 	push	ar6
      000221 C0 07            [24] 1557 	push	ar7
      000223 8D 82            [24] 1558 	mov	dpl,r5
      000225 8C 83            [24] 1559 	mov	dph,r4
      000227 8A F0            [24] 1560 	mov	b,r2
      000229 22               [24] 1561 	ret
      00022A                       1562 00185$:
      00022A D0 03            [24] 1563 	pop	ar3
      00022C D0 06            [24] 1564 	pop	ar6
      00022E D0 07            [24] 1565 	pop	ar7
                                   1566 ;	/opt/contiki/core/lib/ccm-star.c:95: if(a_len) {
      000230 E5 81            [12] 1567 	mov	a,sp
      000232 24 DE            [12] 1568 	add	a,#0xde
      000234 F8               [12] 1569 	mov	r0,a
      000235 E6               [12] 1570 	mov	a,@r0
      000236 70 03            [24] 1571 	jnz	00186$
      000238 02r03r9D         [24] 1572 	ljmp	00107$
      00023B                       1573 00186$:
                                   1574 ;	/opt/contiki/core/lib/ccm-star.c:96: x[1] = x[1] ^ a_len;
      00023B EB               [12] 1575 	mov	a,r3
      00023C 04               [12] 1576 	inc	a
      00023D F9               [12] 1577 	mov	r1,a
      00023E 87 07            [24] 1578 	mov	ar7,@r1
      000240 E5 81            [12] 1579 	mov	a,sp
      000242 24 DE            [12] 1580 	add	a,#0xde
      000244 F8               [12] 1581 	mov	r0,a
      000245 E6               [12] 1582 	mov	a,@r0
      000246 6F               [12] 1583 	xrl	a,r7
      000247 F7               [12] 1584 	mov	@r1,a
                                   1585 ;	/opt/contiki/core/lib/ccm-star.c:97: for(i = 2; (i - 2 < a_len) && (i < AES_128_BLOCK_SIZE); i++) {
      000248 7F 02            [12] 1586 	mov	r7,#0x02
      00024A                       1587 00116$:
      00024A 8F 05            [24] 1588 	mov	ar5,r7
      00024C 7E 00            [12] 1589 	mov	r6,#0x00
      00024E ED               [12] 1590 	mov	a,r5
      00024F 24 FE            [12] 1591 	add	a,#0xFE
      000251 FA               [12] 1592 	mov	r2,a
      000252 EE               [12] 1593 	mov	a,r6
      000253 34 FF            [12] 1594 	addc	a,#0xFF
      000255 FC               [12] 1595 	mov	r4,a
      000256 E5 81            [12] 1596 	mov	a,sp
      000258 24 DE            [12] 1597 	add	a,#0xde
      00025A F8               [12] 1598 	mov	r0,a
      00025B E5 81            [12] 1599 	mov	a,sp
      00025D 24 EB            [12] 1600 	add	a,#0xeb
      00025F F9               [12] 1601 	mov	r1,a
      000260 E6               [12] 1602 	mov	a,@r0
      000261 F7               [12] 1603 	mov	@r1,a
      000262 09               [12] 1604 	inc	r1
      000263 77 00            [12] 1605 	mov	@r1,#0x00
      000265 E5 81            [12] 1606 	mov	a,sp
      000267 24 EB            [12] 1607 	add	a,#0xeb
      000269 F8               [12] 1608 	mov	r0,a
      00026A C3               [12] 1609 	clr	c
      00026B EA               [12] 1610 	mov	a,r2
      00026C 96               [12] 1611 	subb	a,@r0
      00026D EC               [12] 1612 	mov	a,r4
      00026E 64 80            [12] 1613 	xrl	a,#0x80
      000270 08               [12] 1614 	inc	r0
      000271 86 F0            [24] 1615 	mov	b,@r0
      000273 63 F0 80         [24] 1616 	xrl	b,#0x80
      000276 95 F0            [12] 1617 	subb	a,b
      000278 50 30            [24] 1618 	jnc	00101$
      00027A BF 10 00         [24] 1619 	cjne	r7,#0x10,00188$
      00027D                       1620 00188$:
      00027D 50 2B            [24] 1621 	jnc	00101$
                                   1622 ;	/opt/contiki/core/lib/ccm-star.c:98: x[i] ^= a[i - 2];
      00027F EF               [12] 1623 	mov	a,r7
      000280 2B               [12] 1624 	add	a,r3
      000281 F9               [12] 1625 	mov	r1,a
      000282 87 04            [24] 1626 	mov	ar4,@r1
      000284 ED               [12] 1627 	mov	a,r5
      000285 24 FE            [12] 1628 	add	a,#0xFE
      000287 FD               [12] 1629 	mov	r5,a
      000288 EE               [12] 1630 	mov	a,r6
      000289 34 FF            [12] 1631 	addc	a,#0xFF
      00028B FE               [12] 1632 	mov	r6,a
      00028C E5 81            [12] 1633 	mov	a,sp
      00028E 24 DF            [12] 1634 	add	a,#0xdf
      000290 F8               [12] 1635 	mov	r0,a
      000291 ED               [12] 1636 	mov	a,r5
      000292 26               [12] 1637 	add	a,@r0
      000293 FD               [12] 1638 	mov	r5,a
      000294 EE               [12] 1639 	mov	a,r6
      000295 08               [12] 1640 	inc	r0
      000296 36               [12] 1641 	addc	a,@r0
      000297 FE               [12] 1642 	mov	r6,a
      000298 08               [12] 1643 	inc	r0
      000299 86 02            [24] 1644 	mov	ar2,@r0
      00029B 8D 82            [24] 1645 	mov	dpl,r5
      00029D 8E 83            [24] 1646 	mov	dph,r6
      00029F 8A F0            [24] 1647 	mov	b,r2
      0002A1 12r00r00         [24] 1648 	lcall	__gptrget
      0002A4 FD               [12] 1649 	mov	r5,a
      0002A5 6C               [12] 1650 	xrl	a,r4
      0002A6 F7               [12] 1651 	mov	@r1,a
                                   1652 ;	/opt/contiki/core/lib/ccm-star.c:97: for(i = 2; (i - 2 < a_len) && (i < AES_128_BLOCK_SIZE); i++) {
      0002A7 0F               [12] 1653 	inc	r7
      0002A8 80 A0            [24] 1654 	sjmp	00116$
      0002AA                       1655 00101$:
                                   1656 ;	/opt/contiki/core/lib/ccm-star.c:101: AES_128.encrypt(x);
      0002AA 90r00r02         [24] 1657 	mov	dptr,#(_aes_128_driver + 0x0002)
      0002AD E4               [12] 1658 	clr	a
      0002AE 93               [24] 1659 	movc	a,@a+dptr
      0002AF FE               [12] 1660 	mov	r6,a
      0002B0 A3               [24] 1661 	inc	dptr
      0002B1 E4               [12] 1662 	clr	a
      0002B2 93               [24] 1663 	movc	a,@a+dptr
      0002B3 FF               [12] 1664 	mov	r7,a
      0002B4 8B 05            [24] 1665 	mov	ar5,r3
      0002B6 7C 00            [12] 1666 	mov	r4,#0x00
      0002B8 7A 40            [12] 1667 	mov	r2,#0x40
      0002BA C0 07            [24] 1668 	push	ar7
      0002BC C0 06            [24] 1669 	push	ar6
      0002BE C0 03            [24] 1670 	push	ar3
      0002C0 12r02rC5         [24] 1671 	lcall	00190$
      0002C3 80 0B            [24] 1672 	sjmp	00191$
      0002C5                       1673 00190$:
      0002C5 C0 06            [24] 1674 	push	ar6
      0002C7 C0 07            [24] 1675 	push	ar7
      0002C9 8D 82            [24] 1676 	mov	dpl,r5
      0002CB 8C 83            [24] 1677 	mov	dph,r4
      0002CD 8A F0            [24] 1678 	mov	b,r2
      0002CF 22               [24] 1679 	ret
      0002D0                       1680 00191$:
      0002D0 D0 03            [24] 1681 	pop	ar3
      0002D2 D0 06            [24] 1682 	pop	ar6
      0002D4 D0 07            [24] 1683 	pop	ar7
                                   1684 ;	/opt/contiki/core/lib/ccm-star.c:104: while(pos < a_len) {
      0002D6 8B 07            [24] 1685 	mov	ar7,r3
      0002D8 A8 81            [24] 1686 	mov	r0,sp
      0002DA 18               [12] 1687 	dec	r0
      0002DB 76 0E            [12] 1688 	mov	@r0,#0x0E
      0002DD                       1689 00103$:
      0002DD A8 81            [24] 1690 	mov	r0,sp
      0002DF 18               [12] 1691 	dec	r0
      0002E0 E5 81            [12] 1692 	mov	a,sp
      0002E2 24 DE            [12] 1693 	add	a,#0xde
      0002E4 F9               [12] 1694 	mov	r1,a
      0002E5 C3               [12] 1695 	clr	c
      0002E6 E6               [12] 1696 	mov	a,@r0
      0002E7 97               [12] 1697 	subb	a,@r1
      0002E8 40 03            [24] 1698 	jc	00192$
      0002EA 02r03r9D         [24] 1699 	ljmp	00107$
      0002ED                       1700 00192$:
                                   1701 ;	/opt/contiki/core/lib/ccm-star.c:105: for(i = 0; (pos + i < a_len) && (i < AES_128_BLOCK_SIZE); i++) {
      0002ED 7D 00            [12] 1702 	mov	r5,#0x00
      0002EF                       1703 00120$:
      0002EF C0 07            [24] 1704 	push	ar7
      0002F1 A8 81            [24] 1705 	mov	r0,sp
      0002F3 18               [12] 1706 	dec	r0
      0002F4 18               [12] 1707 	dec	r0
      0002F5 86 02            [24] 1708 	mov	ar2,@r0
      0002F7 7C 00            [12] 1709 	mov	r4,#0x00
      0002F9 E5 81            [12] 1710 	mov	a,sp
      0002FB 24 EC            [12] 1711 	add	a,#0xec
      0002FD F8               [12] 1712 	mov	r0,a
      0002FE A6 05            [24] 1713 	mov	@r0,ar5
      000300 08               [12] 1714 	inc	r0
      000301 76 00            [12] 1715 	mov	@r0,#0x00
      000303 E5 81            [12] 1716 	mov	a,sp
      000305 24 EC            [12] 1717 	add	a,#0xec
      000307 F8               [12] 1718 	mov	r0,a
      000308 E6               [12] 1719 	mov	a,@r0
      000309 2A               [12] 1720 	add	a,r2
      00030A FE               [12] 1721 	mov	r6,a
      00030B 08               [12] 1722 	inc	r0
      00030C E6               [12] 1723 	mov	a,@r0
      00030D 3C               [12] 1724 	addc	a,r4
      00030E FF               [12] 1725 	mov	r7,a
      00030F E5 81            [12] 1726 	mov	a,sp
      000311 24 EA            [12] 1727 	add	a,#0xea
      000313 F8               [12] 1728 	mov	r0,a
      000314 C3               [12] 1729 	clr	c
      000315 EE               [12] 1730 	mov	a,r6
      000316 96               [12] 1731 	subb	a,@r0
      000317 EF               [12] 1732 	mov	a,r7
      000318 64 80            [12] 1733 	xrl	a,#0x80
      00031A 08               [12] 1734 	inc	r0
      00031B 86 F0            [24] 1735 	mov	b,@r0
      00031D 63 F0 80         [24] 1736 	xrl	b,#0x80
      000320 95 F0            [12] 1737 	subb	a,b
      000322 D0 07            [24] 1738 	pop	ar7
      000324 50 38            [24] 1739 	jnc	00102$
      000326 BD 10 00         [24] 1740 	cjne	r5,#0x10,00194$
      000329                       1741 00194$:
      000329 50 33            [24] 1742 	jnc	00102$
                                   1743 ;	/opt/contiki/core/lib/ccm-star.c:106: x[i] ^= a[pos + i];
      00032B C0 07            [24] 1744 	push	ar7
      00032D ED               [12] 1745 	mov	a,r5
      00032E 2B               [12] 1746 	add	a,r3
      00032F F9               [12] 1747 	mov	r1,a
      000330 87 06            [24] 1748 	mov	ar6,@r1
      000332 E5 81            [12] 1749 	mov	a,sp
      000334 24 EC            [12] 1750 	add	a,#0xec
      000336 F8               [12] 1751 	mov	r0,a
      000337 E6               [12] 1752 	mov	a,@r0
      000338 2A               [12] 1753 	add	a,r2
      000339 FA               [12] 1754 	mov	r2,a
      00033A 08               [12] 1755 	inc	r0
      00033B E6               [12] 1756 	mov	a,@r0
      00033C 3C               [12] 1757 	addc	a,r4
      00033D FC               [12] 1758 	mov	r4,a
      00033E E5 81            [12] 1759 	mov	a,sp
      000340 24 DE            [12] 1760 	add	a,#0xde
      000342 F8               [12] 1761 	mov	r0,a
      000343 EA               [12] 1762 	mov	a,r2
      000344 26               [12] 1763 	add	a,@r0
      000345 FA               [12] 1764 	mov	r2,a
      000346 EC               [12] 1765 	mov	a,r4
      000347 08               [12] 1766 	inc	r0
      000348 36               [12] 1767 	addc	a,@r0
      000349 FC               [12] 1768 	mov	r4,a
      00034A 08               [12] 1769 	inc	r0
      00034B 86 07            [24] 1770 	mov	ar7,@r0
      00034D 8A 82            [24] 1771 	mov	dpl,r2
      00034F 8C 83            [24] 1772 	mov	dph,r4
      000351 8F F0            [24] 1773 	mov	b,r7
      000353 12r00r00         [24] 1774 	lcall	__gptrget
      000356 FA               [12] 1775 	mov	r2,a
      000357 6E               [12] 1776 	xrl	a,r6
      000358 F7               [12] 1777 	mov	@r1,a
                                   1778 ;	/opt/contiki/core/lib/ccm-star.c:105: for(i = 0; (pos + i < a_len) && (i < AES_128_BLOCK_SIZE); i++) {
      000359 0D               [12] 1779 	inc	r5
      00035A D0 07            [24] 1780 	pop	ar7
      00035C 80 91            [24] 1781 	sjmp	00120$
      00035E                       1782 00102$:
                                   1783 ;	/opt/contiki/core/lib/ccm-star.c:108: pos += AES_128_BLOCK_SIZE;
      00035E C0 03            [24] 1784 	push	ar3
      000360 A8 81            [24] 1785 	mov	r0,sp
      000362 18               [12] 1786 	dec	r0
      000363 18               [12] 1787 	dec	r0
      000364 74 10            [12] 1788 	mov	a,#0x10
      000366 26               [12] 1789 	add	a,@r0
      000367 F6               [12] 1790 	mov	@r0,a
                                   1791 ;	/opt/contiki/core/lib/ccm-star.c:109: AES_128.encrypt(x);
      000368 90r00r02         [24] 1792 	mov	dptr,#(_aes_128_driver + 0x0002)
      00036B E4               [12] 1793 	clr	a
      00036C 93               [24] 1794 	movc	a,@a+dptr
      00036D FD               [12] 1795 	mov	r5,a
      00036E A3               [24] 1796 	inc	dptr
      00036F E4               [12] 1797 	clr	a
      000370 93               [24] 1798 	movc	a,@a+dptr
      000371 FE               [12] 1799 	mov	r6,a
      000372 8F 02            [24] 1800 	mov	ar2,r7
      000374 7B 00            [12] 1801 	mov	r3,#0x00
      000376 7C 40            [12] 1802 	mov	r4,#0x40
      000378 C0 07            [24] 1803 	push	ar7
      00037A C0 06            [24] 1804 	push	ar6
      00037C C0 05            [24] 1805 	push	ar5
      00037E C0 03            [24] 1806 	push	ar3
      000380 12r03r85         [24] 1807 	lcall	00196$
      000383 80 0B            [24] 1808 	sjmp	00197$
      000385                       1809 00196$:
      000385 C0 05            [24] 1810 	push	ar5
      000387 C0 06            [24] 1811 	push	ar6
      000389 8A 82            [24] 1812 	mov	dpl,r2
      00038B 8B 83            [24] 1813 	mov	dph,r3
      00038D 8C F0            [24] 1814 	mov	b,r4
      00038F 22               [24] 1815 	ret
      000390                       1816 00197$:
      000390 D0 03            [24] 1817 	pop	ar3
      000392 D0 05            [24] 1818 	pop	ar5
      000394 D0 06            [24] 1819 	pop	ar6
      000396 D0 07            [24] 1820 	pop	ar7
      000398 D0 03            [24] 1821 	pop	ar3
      00039A 02r02rDD         [24] 1822 	ljmp	00103$
      00039D                       1823 00107$:
                                   1824 ;	/opt/contiki/core/lib/ccm-star.c:113: if(m_len) {
      00039D E5 81            [12] 1825 	mov	a,sp
      00039F 24 E2            [12] 1826 	add	a,#0xe2
      0003A1 F8               [12] 1827 	mov	r0,a
      0003A2 E6               [12] 1828 	mov	a,@r0
      0003A3 70 03            [24] 1829 	jnz	00198$
      0003A5 02r04r86         [24] 1830 	ljmp	00113$
      0003A8                       1831 00198$:
                                   1832 ;	/opt/contiki/core/lib/ccm-star.c:115: while(pos < m_len) {
      0003A8 8B 07            [24] 1833 	mov	ar7,r3
      0003AA A8 81            [24] 1834 	mov	r0,sp
      0003AC 18               [12] 1835 	dec	r0
      0003AD 76 00            [12] 1836 	mov	@r0,#0x00
      0003AF                       1837 00109$:
      0003AF A8 81            [24] 1838 	mov	r0,sp
      0003B1 18               [12] 1839 	dec	r0
      0003B2 E5 81            [12] 1840 	mov	a,sp
      0003B4 24 E2            [12] 1841 	add	a,#0xe2
      0003B6 F9               [12] 1842 	mov	r1,a
      0003B7 C3               [12] 1843 	clr	c
      0003B8 E6               [12] 1844 	mov	a,@r0
      0003B9 97               [12] 1845 	subb	a,@r1
      0003BA 40 03            [24] 1846 	jc	00199$
      0003BC 02r04r86         [24] 1847 	ljmp	00113$
      0003BF                       1848 00199$:
                                   1849 ;	/opt/contiki/core/lib/ccm-star.c:116: for(i = 0; (pos + i < m_len) && (i < AES_128_BLOCK_SIZE); i++) {
      0003BF A8 81            [24] 1850 	mov	r0,sp
      0003C1 76 00            [12] 1851 	mov	@r0,#0x00
      0003C3                       1852 00124$:
      0003C3 C0 07            [24] 1853 	push	ar7
      0003C5 A8 81            [24] 1854 	mov	r0,sp
      0003C7 18               [12] 1855 	dec	r0
      0003C8 18               [12] 1856 	dec	r0
      0003C9 86 02            [24] 1857 	mov	ar2,@r0
      0003CB 7C 00            [12] 1858 	mov	r4,#0x00
      0003CD A8 81            [24] 1859 	mov	r0,sp
      0003CF 18               [12] 1860 	dec	r0
      0003D0 E5 81            [12] 1861 	mov	a,sp
      0003D2 24 EC            [12] 1862 	add	a,#0xec
      0003D4 F9               [12] 1863 	mov	r1,a
      0003D5 E6               [12] 1864 	mov	a,@r0
      0003D6 F7               [12] 1865 	mov	@r1,a
      0003D7 09               [12] 1866 	inc	r1
      0003D8 77 00            [12] 1867 	mov	@r1,#0x00
      0003DA E5 81            [12] 1868 	mov	a,sp
      0003DC 24 EC            [12] 1869 	add	a,#0xec
      0003DE F8               [12] 1870 	mov	r0,a
      0003DF E5 81            [12] 1871 	mov	a,sp
      0003E1 24 EA            [12] 1872 	add	a,#0xea
      0003E3 F9               [12] 1873 	mov	r1,a
      0003E4 E6               [12] 1874 	mov	a,@r0
      0003E5 2A               [12] 1875 	add	a,r2
      0003E6 F7               [12] 1876 	mov	@r1,a
      0003E7 08               [12] 1877 	inc	r0
      0003E8 E6               [12] 1878 	mov	a,@r0
      0003E9 3C               [12] 1879 	addc	a,r4
      0003EA 09               [12] 1880 	inc	r1
      0003EB F7               [12] 1881 	mov	@r1,a
      0003EC E5 81            [12] 1882 	mov	a,sp
      0003EE 24 E1            [12] 1883 	add	a,#0xe1
      0003F0 F8               [12] 1884 	mov	r0,a
      0003F1 86 05            [24] 1885 	mov	ar5,@r0
      0003F3 7F 00            [12] 1886 	mov	r7,#0x00
      0003F5 E5 81            [12] 1887 	mov	a,sp
      0003F7 24 EA            [12] 1888 	add	a,#0xea
      0003F9 F8               [12] 1889 	mov	r0,a
      0003FA C3               [12] 1890 	clr	c
      0003FB E6               [12] 1891 	mov	a,@r0
      0003FC 9D               [12] 1892 	subb	a,r5
      0003FD 08               [12] 1893 	inc	r0
      0003FE E6               [12] 1894 	mov	a,@r0
      0003FF 64 80            [12] 1895 	xrl	a,#0x80
      000401 8F F0            [24] 1896 	mov	b,r7
      000403 63 F0 80         [24] 1897 	xrl	b,#0x80
      000406 95 F0            [12] 1898 	subb	a,b
      000408 D0 07            [24] 1899 	pop	ar7
      00040A 50 3B            [24] 1900 	jnc	00108$
      00040C A8 81            [24] 1901 	mov	r0,sp
      00040E B6 10 00         [24] 1902 	cjne	@r0,#0x10,00201$
      000411                       1903 00201$:
      000411 50 34            [24] 1904 	jnc	00108$
                                   1905 ;	/opt/contiki/core/lib/ccm-star.c:117: x[i] ^= m[pos + i];
      000413 A8 81            [24] 1906 	mov	r0,sp
      000415 E6               [12] 1907 	mov	a,@r0
      000416 2B               [12] 1908 	add	a,r3
      000417 F9               [12] 1909 	mov	r1,a
      000418 87 06            [24] 1910 	mov	ar6,@r1
      00041A E5 81            [12] 1911 	mov	a,sp
      00041C 24 ED            [12] 1912 	add	a,#0xed
      00041E F8               [12] 1913 	mov	r0,a
      00041F E6               [12] 1914 	mov	a,@r0
      000420 2A               [12] 1915 	add	a,r2
      000421 FA               [12] 1916 	mov	r2,a
      000422 08               [12] 1917 	inc	r0
      000423 E6               [12] 1918 	mov	a,@r0
      000424 3C               [12] 1919 	addc	a,r4
      000425 FC               [12] 1920 	mov	r4,a
      000426 E5 81            [12] 1921 	mov	a,sp
      000428 24 E3            [12] 1922 	add	a,#0xe3
      00042A F8               [12] 1923 	mov	r0,a
      00042B EA               [12] 1924 	mov	a,r2
      00042C 26               [12] 1925 	add	a,@r0
      00042D FA               [12] 1926 	mov	r2,a
      00042E EC               [12] 1927 	mov	a,r4
      00042F 08               [12] 1928 	inc	r0
      000430 36               [12] 1929 	addc	a,@r0
      000431 FC               [12] 1930 	mov	r4,a
      000432 08               [12] 1931 	inc	r0
      000433 86 05            [24] 1932 	mov	ar5,@r0
      000435 8A 82            [24] 1933 	mov	dpl,r2
      000437 8C 83            [24] 1934 	mov	dph,r4
      000439 8D F0            [24] 1935 	mov	b,r5
      00043B 12r00r00         [24] 1936 	lcall	__gptrget
      00043E FA               [12] 1937 	mov	r2,a
      00043F 6E               [12] 1938 	xrl	a,r6
      000440 F7               [12] 1939 	mov	@r1,a
                                   1940 ;	/opt/contiki/core/lib/ccm-star.c:116: for(i = 0; (pos + i < m_len) && (i < AES_128_BLOCK_SIZE); i++) {
      000441 A8 81            [24] 1941 	mov	r0,sp
      000443 06               [12] 1942 	inc	@r0
      000444 02r03rC3         [24] 1943 	ljmp	00124$
      000447                       1944 00108$:
                                   1945 ;	/opt/contiki/core/lib/ccm-star.c:119: pos += AES_128_BLOCK_SIZE;
      000447 C0 03            [24] 1946 	push	ar3
      000449 A8 81            [24] 1947 	mov	r0,sp
      00044B 18               [12] 1948 	dec	r0
      00044C 18               [12] 1949 	dec	r0
      00044D 74 10            [12] 1950 	mov	a,#0x10
      00044F 26               [12] 1951 	add	a,@r0
      000450 F6               [12] 1952 	mov	@r0,a
                                   1953 ;	/opt/contiki/core/lib/ccm-star.c:120: AES_128.encrypt(x);
      000451 90r00r02         [24] 1954 	mov	dptr,#(_aes_128_driver + 0x0002)
      000454 E4               [12] 1955 	clr	a
      000455 93               [24] 1956 	movc	a,@a+dptr
      000456 FD               [12] 1957 	mov	r5,a
      000457 A3               [24] 1958 	inc	dptr
      000458 E4               [12] 1959 	clr	a
      000459 93               [24] 1960 	movc	a,@a+dptr
      00045A FE               [12] 1961 	mov	r6,a
      00045B 8F 02            [24] 1962 	mov	ar2,r7
      00045D 7B 00            [12] 1963 	mov	r3,#0x00
      00045F 7C 40            [12] 1964 	mov	r4,#0x40
      000461 C0 07            [24] 1965 	push	ar7
      000463 C0 06            [24] 1966 	push	ar6
      000465 C0 05            [24] 1967 	push	ar5
      000467 C0 03            [24] 1968 	push	ar3
      000469 12r04r6E         [24] 1969 	lcall	00203$
      00046C 80 0B            [24] 1970 	sjmp	00204$
      00046E                       1971 00203$:
      00046E C0 05            [24] 1972 	push	ar5
      000470 C0 06            [24] 1973 	push	ar6
      000472 8A 82            [24] 1974 	mov	dpl,r2
      000474 8B 83            [24] 1975 	mov	dph,r3
      000476 8C F0            [24] 1976 	mov	b,r4
      000478 22               [24] 1977 	ret
      000479                       1978 00204$:
      000479 D0 03            [24] 1979 	pop	ar3
      00047B D0 05            [24] 1980 	pop	ar5
      00047D D0 06            [24] 1981 	pop	ar6
      00047F D0 07            [24] 1982 	pop	ar7
      000481 D0 03            [24] 1983 	pop	ar3
      000483 02r03rAF         [24] 1984 	ljmp	00109$
      000486                       1985 00113$:
                                   1986 ;	/opt/contiki/core/lib/ccm-star.c:124: ctr_step(nonce, 0, x, AES_128_BLOCK_SIZE, 0);
      000486 8B 07            [24] 1987 	mov	ar7,r3
      000488 7E 00            [12] 1988 	mov	r6,#0x00
      00048A 7D 40            [12] 1989 	mov	r5,#0x40
      00048C C0 03            [24] 1990 	push	ar3
      00048E E4               [12] 1991 	clr	a
      00048F C0 E0            [24] 1992 	push	acc
      000491 74 10            [12] 1993 	mov	a,#0x10
      000493 C0 E0            [24] 1994 	push	acc
      000495 C0 07            [24] 1995 	push	ar7
      000497 C0 06            [24] 1996 	push	ar6
      000499 C0 05            [24] 1997 	push	ar5
      00049B E4               [12] 1998 	clr	a
      00049C C0 E0            [24] 1999 	push	acc
      00049E E5 81            [12] 2000 	mov	a,sp
      0004A0 24 E1            [12] 2001 	add	a,#0xe1
      0004A2 F8               [12] 2002 	mov	r0,a
      0004A3 86 82            [24] 2003 	mov	dpl,@r0
      0004A5 08               [12] 2004 	inc	r0
      0004A6 86 83            [24] 2005 	mov	dph,@r0
      0004A8 08               [12] 2006 	inc	r0
      0004A9 86 F0            [24] 2007 	mov	b,@r0
      0004AB 12r00r91         [24] 2008 	lcall	_ctr_step
      0004AE E5 81            [12] 2009 	mov	a,sp
      0004B0 24 FA            [12] 2010 	add	a,#0xfa
      0004B2 F5 81            [12] 2011 	mov	sp,a
      0004B4 D0 03            [24] 2012 	pop	ar3
                                   2013 ;	/opt/contiki/core/lib/ccm-star.c:126: memcpy(result, x, mic_len);
      0004B6 E5 81            [12] 2014 	mov	a,sp
      0004B8 24 DA            [12] 2015 	add	a,#0xda
      0004BA F8               [12] 2016 	mov	r0,a
      0004BB E5 81            [12] 2017 	mov	a,sp
      0004BD 24 ED            [12] 2018 	add	a,#0xed
      0004BF F9               [12] 2019 	mov	r1,a
      0004C0 E6               [12] 2020 	mov	a,@r0
      0004C1 F7               [12] 2021 	mov	@r1,a
      0004C2 09               [12] 2022 	inc	r1
      0004C3 77 00            [12] 2023 	mov	@r1,#0x00
      0004C5 7D 00            [12] 2024 	mov	r5,#0x00
      0004C7 7C 40            [12] 2025 	mov	r4,#0x40
      0004C9 E5 81            [12] 2026 	mov	a,sp
      0004CB 24 DB            [12] 2027 	add	a,#0xdb
      0004CD F8               [12] 2028 	mov	r0,a
      0004CE 86 02            [24] 2029 	mov	ar2,@r0
      0004D0 08               [12] 2030 	inc	r0
      0004D1 86 06            [24] 2031 	mov	ar6,@r0
      0004D3 08               [12] 2032 	inc	r0
      0004D4 86 07            [24] 2033 	mov	ar7,@r0
      0004D6 E5 81            [12] 2034 	mov	a,sp
      0004D8 24 ED            [12] 2035 	add	a,#0xed
      0004DA F8               [12] 2036 	mov	r0,a
      0004DB E6               [12] 2037 	mov	a,@r0
      0004DC C0 E0            [24] 2038 	push	acc
      0004DE 08               [12] 2039 	inc	r0
      0004DF E6               [12] 2040 	mov	a,@r0
      0004E0 C0 E0            [24] 2041 	push	acc
      0004E2 C0 03            [24] 2042 	push	ar3
      0004E4 C0 05            [24] 2043 	push	ar5
      0004E6 C0 04            [24] 2044 	push	ar4
      0004E8 8A 82            [24] 2045 	mov	dpl,r2
      0004EA 8E 83            [24] 2046 	mov	dph,r6
      0004EC 8F F0            [24] 2047 	mov	b,r7
      0004EE 12r00r00         [24] 2048 	lcall	_memcpy
      0004F1 E5 81            [12] 2049 	mov	a,sp
      0004F3 24 FB            [12] 2050 	add	a,#0xfb
      0004F5 F5 81            [12] 2051 	mov	sp,a
      0004F7 E5 81            [12] 2052 	mov	a,sp
      0004F9 24 E7            [12] 2053 	add	a,#0xE7
      0004FB F5 81            [12] 2054 	mov	sp,a
      0004FD 22               [24] 2055 	ret
                                   2056 ;------------------------------------------------------------
                                   2057 ;Allocation info for local variables in function 'ctr'
                                   2058 ;------------------------------------------------------------
                                   2059 ;m                         Allocated to stack - sp -4
                                   2060 ;m_len                     Allocated to stack - sp -5
                                   2061 ;nonce                     Allocated to registers r5 r6 r7 
                                   2062 ;pos                       Allocated to registers r3 
                                   2063 ;counter                   Allocated to registers r4 
                                   2064 ;------------------------------------------------------------
                                   2065 ;	/opt/contiki/core/lib/ccm-star.c:130: ctr(const uint8_t *nonce, uint8_t *m, uint8_t m_len)
                                   2066 ;	-----------------------------------------
                                   2067 ;	 function ctr
                                   2068 ;	-----------------------------------------
      0004FE                       2069 _ctr:
      0004FE AD 82            [24] 2070 	mov	r5,dpl
      000500 AE 83            [24] 2071 	mov	r6,dph
      000502 AF F0            [24] 2072 	mov	r7,b
                                   2073 ;	/opt/contiki/core/lib/ccm-star.c:137: while(pos < m_len) {
      000504 7C 01            [12] 2074 	mov	r4,#0x01
      000506 7B 00            [12] 2075 	mov	r3,#0x00
      000508                       2076 00101$:
      000508 E5 81            [12] 2077 	mov	a,sp
      00050A 24 FB            [12] 2078 	add	a,#0xfb
      00050C F8               [12] 2079 	mov	r0,a
      00050D C3               [12] 2080 	clr	c
      00050E EB               [12] 2081 	mov	a,r3
      00050F 96               [12] 2082 	subb	a,@r0
      000510 50 48            [24] 2083 	jnc	00104$
                                   2084 ;	/opt/contiki/core/lib/ccm-star.c:138: ctr_step(nonce, pos, m, m_len, counter++);
      000512 8C 02            [24] 2085 	mov	ar2,r4
      000514 0C               [12] 2086 	inc	r4
      000515 C0 07            [24] 2087 	push	ar7
      000517 C0 06            [24] 2088 	push	ar6
      000519 C0 05            [24] 2089 	push	ar5
      00051B C0 04            [24] 2090 	push	ar4
      00051D C0 03            [24] 2091 	push	ar3
      00051F C0 02            [24] 2092 	push	ar2
      000521 E5 81            [12] 2093 	mov	a,sp
      000523 24 F5            [12] 2094 	add	a,#0xf5
      000525 F8               [12] 2095 	mov	r0,a
      000526 E6               [12] 2096 	mov	a,@r0
      000527 C0 E0            [24] 2097 	push	acc
      000529 E5 81            [12] 2098 	mov	a,sp
      00052B 24 F5            [12] 2099 	add	a,#0xf5
      00052D F8               [12] 2100 	mov	r0,a
      00052E E6               [12] 2101 	mov	a,@r0
      00052F C0 E0            [24] 2102 	push	acc
      000531 08               [12] 2103 	inc	r0
      000532 E6               [12] 2104 	mov	a,@r0
      000533 C0 E0            [24] 2105 	push	acc
      000535 08               [12] 2106 	inc	r0
      000536 E6               [12] 2107 	mov	a,@r0
      000537 C0 E0            [24] 2108 	push	acc
      000539 C0 03            [24] 2109 	push	ar3
      00053B 8D 82            [24] 2110 	mov	dpl,r5
      00053D 8E 83            [24] 2111 	mov	dph,r6
      00053F 8F F0            [24] 2112 	mov	b,r7
      000541 12r00r91         [24] 2113 	lcall	_ctr_step
      000544 E5 81            [12] 2114 	mov	a,sp
      000546 24 FA            [12] 2115 	add	a,#0xfa
      000548 F5 81            [12] 2116 	mov	sp,a
      00054A D0 03            [24] 2117 	pop	ar3
      00054C D0 04            [24] 2118 	pop	ar4
      00054E D0 05            [24] 2119 	pop	ar5
      000550 D0 06            [24] 2120 	pop	ar6
      000552 D0 07            [24] 2121 	pop	ar7
                                   2122 ;	/opt/contiki/core/lib/ccm-star.c:139: pos += AES_128_BLOCK_SIZE;
      000554 74 10            [12] 2123 	mov	a,#0x10
      000556 2B               [12] 2124 	add	a,r3
      000557 FB               [12] 2125 	mov	r3,a
      000558 80 AE            [24] 2126 	sjmp	00101$
      00055A                       2127 00104$:
      00055A 22               [24] 2128 	ret
                                   2129 ;------------------------------------------------------------
                                   2130 ;Allocation info for local variables in function 'set_key'
                                   2131 ;------------------------------------------------------------
                                   2132 ;key                       Allocated to registers r5 r6 r7 
                                   2133 ;------------------------------------------------------------
                                   2134 ;	/opt/contiki/core/lib/ccm-star.c:144: set_key(const uint8_t *key)
                                   2135 ;	-----------------------------------------
                                   2136 ;	 function set_key
                                   2137 ;	-----------------------------------------
      00055B                       2138 _set_key:
      00055B AD 82            [24] 2139 	mov	r5,dpl
      00055D AE 83            [24] 2140 	mov	r6,dph
      00055F AF F0            [24] 2141 	mov	r7,b
                                   2142 ;	/opt/contiki/core/lib/ccm-star.c:146: AES_128.set_key(key);
      000561 90r00r00         [24] 2143 	mov	dptr,#_aes_128_driver
      000564 E4               [12] 2144 	clr	a
      000565 93               [24] 2145 	movc	a,@a+dptr
      000566 FB               [12] 2146 	mov	r3,a
      000567 A3               [24] 2147 	inc	dptr
      000568 E4               [12] 2148 	clr	a
      000569 93               [24] 2149 	movc	a,@a+dptr
      00056A FC               [12] 2150 	mov	r4,a
      00056B C0 04            [24] 2151 	push	ar4
      00056D C0 03            [24] 2152 	push	ar3
      00056F 12r05r74         [24] 2153 	lcall	00103$
      000572 80 0B            [24] 2154 	sjmp	00104$
      000574                       2155 00103$:
      000574 C0 03            [24] 2156 	push	ar3
      000576 C0 04            [24] 2157 	push	ar4
      000578 8D 82            [24] 2158 	mov	dpl,r5
      00057A 8E 83            [24] 2159 	mov	dph,r6
      00057C 8F F0            [24] 2160 	mov	b,r7
      00057E 22               [24] 2161 	ret
      00057F                       2162 00104$:
      00057F D0 03            [24] 2163 	pop	ar3
      000581 D0 04            [24] 2164 	pop	ar4
      000583 22               [24] 2165 	ret
                                   2166 ;------------------------------------------------------------
                                   2167 ;Allocation info for local variables in function 'aead'
                                   2168 ;------------------------------------------------------------
                                   2169 ;m                         Allocated to stack - sp -4
                                   2170 ;m_len                     Allocated to stack - sp -5
                                   2171 ;a                         Allocated to stack - sp -8
                                   2172 ;a_len                     Allocated to stack - sp -9
                                   2173 ;result                    Allocated to stack - sp -12
                                   2174 ;mic_len                   Allocated to stack - sp -13
                                   2175 ;forward                   Allocated to stack - sp -15
                                   2176 ;nonce                     Allocated to registers r5 r6 r7 
                                   2177 ;------------------------------------------------------------
                                   2178 ;	/opt/contiki/core/lib/ccm-star.c:150: aead(const uint8_t* nonce,
                                   2179 ;	-----------------------------------------
                                   2180 ;	 function aead
                                   2181 ;	-----------------------------------------
      000584                       2182 _aead:
      000584 AD 82            [24] 2183 	mov	r5,dpl
      000586 AE 83            [24] 2184 	mov	r6,dph
      000588 AF F0            [24] 2185 	mov	r7,b
                                   2186 ;	/opt/contiki/core/lib/ccm-star.c:156: if(!forward) {
      00058A E5 81            [12] 2187 	mov	a,sp
      00058C 24 F1            [12] 2188 	add	a,#0xf1
      00058E F8               [12] 2189 	mov	r0,a
      00058F E6               [12] 2190 	mov	a,@r0
      000590 08               [12] 2191 	inc	r0
      000591 46               [12] 2192 	orl	a,@r0
      000592 70 33            [24] 2193 	jnz	00102$
                                   2194 ;	/opt/contiki/core/lib/ccm-star.c:158: ctr(nonce, m, m_len);
      000594 C0 07            [24] 2195 	push	ar7
      000596 C0 06            [24] 2196 	push	ar6
      000598 C0 05            [24] 2197 	push	ar5
      00059A E5 81            [12] 2198 	mov	a,sp
      00059C 24 F8            [12] 2199 	add	a,#0xf8
      00059E F8               [12] 2200 	mov	r0,a
      00059F E6               [12] 2201 	mov	a,@r0
      0005A0 C0 E0            [24] 2202 	push	acc
      0005A2 E5 81            [12] 2203 	mov	a,sp
      0005A4 24 F8            [12] 2204 	add	a,#0xf8
      0005A6 F8               [12] 2205 	mov	r0,a
      0005A7 E6               [12] 2206 	mov	a,@r0
      0005A8 C0 E0            [24] 2207 	push	acc
      0005AA 08               [12] 2208 	inc	r0
      0005AB E6               [12] 2209 	mov	a,@r0
      0005AC C0 E0            [24] 2210 	push	acc
      0005AE 08               [12] 2211 	inc	r0
      0005AF E6               [12] 2212 	mov	a,@r0
      0005B0 C0 E0            [24] 2213 	push	acc
      0005B2 8D 82            [24] 2214 	mov	dpl,r5
      0005B4 8E 83            [24] 2215 	mov	dph,r6
      0005B6 8F F0            [24] 2216 	mov	b,r7
      0005B8 12r04rFE         [24] 2217 	lcall	_ctr
      0005BB E5 81            [12] 2218 	mov	a,sp
      0005BD 24 FC            [12] 2219 	add	a,#0xfc
      0005BF F5 81            [12] 2220 	mov	sp,a
      0005C1 D0 05            [24] 2221 	pop	ar5
      0005C3 D0 06            [24] 2222 	pop	ar6
      0005C5 D0 07            [24] 2223 	pop	ar7
      0005C7                       2224 00102$:
                                   2225 ;	/opt/contiki/core/lib/ccm-star.c:161: mic(nonce,
      0005C7 C0 07            [24] 2226 	push	ar7
      0005C9 C0 06            [24] 2227 	push	ar6
      0005CB C0 05            [24] 2228 	push	ar5
      0005CD E5 81            [12] 2229 	mov	a,sp
      0005CF 24 F0            [12] 2230 	add	a,#0xf0
      0005D1 F8               [12] 2231 	mov	r0,a
      0005D2 E6               [12] 2232 	mov	a,@r0
      0005D3 C0 E0            [24] 2233 	push	acc
      0005D5 E5 81            [12] 2234 	mov	a,sp
      0005D7 24 F0            [12] 2235 	add	a,#0xf0
      0005D9 F8               [12] 2236 	mov	r0,a
      0005DA E6               [12] 2237 	mov	a,@r0
      0005DB C0 E0            [24] 2238 	push	acc
      0005DD 08               [12] 2239 	inc	r0
      0005DE E6               [12] 2240 	mov	a,@r0
      0005DF C0 E0            [24] 2241 	push	acc
      0005E1 08               [12] 2242 	inc	r0
      0005E2 E6               [12] 2243 	mov	a,@r0
      0005E3 C0 E0            [24] 2244 	push	acc
      0005E5 E5 81            [12] 2245 	mov	a,sp
      0005E7 24 F0            [12] 2246 	add	a,#0xf0
      0005E9 F8               [12] 2247 	mov	r0,a
      0005EA E6               [12] 2248 	mov	a,@r0
      0005EB C0 E0            [24] 2249 	push	acc
      0005ED E5 81            [12] 2250 	mov	a,sp
      0005EF 24 F0            [12] 2251 	add	a,#0xf0
      0005F1 F8               [12] 2252 	mov	r0,a
      0005F2 E6               [12] 2253 	mov	a,@r0
      0005F3 C0 E0            [24] 2254 	push	acc
      0005F5 08               [12] 2255 	inc	r0
      0005F6 E6               [12] 2256 	mov	a,@r0
      0005F7 C0 E0            [24] 2257 	push	acc
      0005F9 08               [12] 2258 	inc	r0
      0005FA E6               [12] 2259 	mov	a,@r0
      0005FB C0 E0            [24] 2260 	push	acc
      0005FD E5 81            [12] 2261 	mov	a,sp
      0005FF 24 F0            [12] 2262 	add	a,#0xf0
      000601 F8               [12] 2263 	mov	r0,a
      000602 E6               [12] 2264 	mov	a,@r0
      000603 C0 E0            [24] 2265 	push	acc
      000605 E5 81            [12] 2266 	mov	a,sp
      000607 24 F0            [12] 2267 	add	a,#0xf0
      000609 F8               [12] 2268 	mov	r0,a
      00060A E6               [12] 2269 	mov	a,@r0
      00060B C0 E0            [24] 2270 	push	acc
      00060D 08               [12] 2271 	inc	r0
      00060E E6               [12] 2272 	mov	a,@r0
      00060F C0 E0            [24] 2273 	push	acc
      000611 08               [12] 2274 	inc	r0
      000612 E6               [12] 2275 	mov	a,@r0
      000613 C0 E0            [24] 2276 	push	acc
      000615 8D 82            [24] 2277 	mov	dpl,r5
      000617 8E 83            [24] 2278 	mov	dph,r6
      000619 8F F0            [24] 2279 	mov	b,r7
      00061B 12r01r96         [24] 2280 	lcall	_mic
      00061E E5 81            [12] 2281 	mov	a,sp
      000620 24 F4            [12] 2282 	add	a,#0xf4
      000622 F5 81            [12] 2283 	mov	sp,a
      000624 D0 05            [24] 2284 	pop	ar5
      000626 D0 06            [24] 2285 	pop	ar6
      000628 D0 07            [24] 2286 	pop	ar7
                                   2287 ;	/opt/contiki/core/lib/ccm-star.c:167: if(forward) {
      00062A E5 81            [12] 2288 	mov	a,sp
      00062C 24 F1            [12] 2289 	add	a,#0xf1
      00062E F8               [12] 2290 	mov	r0,a
      00062F E6               [12] 2291 	mov	a,@r0
      000630 08               [12] 2292 	inc	r0
      000631 46               [12] 2293 	orl	a,@r0
      000632 60 27            [24] 2294 	jz	00105$
                                   2295 ;	/opt/contiki/core/lib/ccm-star.c:169: ctr(nonce, m, m_len);
      000634 E5 81            [12] 2296 	mov	a,sp
      000636 24 FB            [12] 2297 	add	a,#0xfb
      000638 F8               [12] 2298 	mov	r0,a
      000639 E6               [12] 2299 	mov	a,@r0
      00063A C0 E0            [24] 2300 	push	acc
      00063C E5 81            [12] 2301 	mov	a,sp
      00063E 24 FB            [12] 2302 	add	a,#0xfb
      000640 F8               [12] 2303 	mov	r0,a
      000641 E6               [12] 2304 	mov	a,@r0
      000642 C0 E0            [24] 2305 	push	acc
      000644 08               [12] 2306 	inc	r0
      000645 E6               [12] 2307 	mov	a,@r0
      000646 C0 E0            [24] 2308 	push	acc
      000648 08               [12] 2309 	inc	r0
      000649 E6               [12] 2310 	mov	a,@r0
      00064A C0 E0            [24] 2311 	push	acc
      00064C 8D 82            [24] 2312 	mov	dpl,r5
      00064E 8E 83            [24] 2313 	mov	dph,r6
      000650 8F F0            [24] 2314 	mov	b,r7
      000652 12r04rFE         [24] 2315 	lcall	_ctr
      000655 E5 81            [12] 2316 	mov	a,sp
      000657 24 FC            [12] 2317 	add	a,#0xfc
      000659 F5 81            [12] 2318 	mov	sp,a
      00065B                       2319 00105$:
      00065B 22               [24] 2320 	ret
                                   2321 	.area CSEG    (CODE)
                                   2322 	.area CONST   (CODE)
      000000                       2323 _ccm_star_driver:
      000000r5Bs05                 2324 	.byte _set_key, (_set_key >> 8)
      000002r84s05                 2325 	.byte _aead, (_aead >> 8)
                                   2326 	.area XINIT   (CODE)
                                   2327 	.area CABS    (ABS,CODE)
