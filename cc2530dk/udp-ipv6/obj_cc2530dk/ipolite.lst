                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.5 #9380 (Linux)
                                      4 ; This file was generated Wed Nov 18 02:57:28 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module ipolite
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _random_rand
                                     13 	.globl _queuebuf_datalen
                                     14 	.globl _queuebuf_dataptr
                                     15 	.globl _queuebuf_free
                                     16 	.globl _queuebuf_to_packetbuf
                                     17 	.globl _queuebuf_new_from_packetbuf
                                     18 	.globl _broadcast_send
                                     19 	.globl _broadcast_close
                                     20 	.globl _broadcast_open
                                     21 	.globl _packetbuf_datalen
                                     22 	.globl _packetbuf_dataptr
                                     23 	.globl _ctimer_stop
                                     24 	.globl _ctimer_set
                                     25 	.globl _memcmp
                                     26 	.globl _ACTIVE
                                     27 	.globl _TX_BYTE
                                     28 	.globl _RX_BYTE
                                     29 	.globl _ERR
                                     30 	.globl _FE
                                     31 	.globl _SLAVE
                                     32 	.globl _RE
                                     33 	.globl _MODE
                                     34 	.globl _T3OVFIF
                                     35 	.globl _T3CH0IF
                                     36 	.globl _T3CH1IF
                                     37 	.globl _T4OVFIF
                                     38 	.globl _T4CH0IF
                                     39 	.globl _T4CH1IF
                                     40 	.globl _OVFIM
                                     41 	.globl _B_0
                                     42 	.globl _B_1
                                     43 	.globl _B_2
                                     44 	.globl _B_3
                                     45 	.globl _B_4
                                     46 	.globl _B_5
                                     47 	.globl _B_6
                                     48 	.globl _B_7
                                     49 	.globl _P2IF
                                     50 	.globl _UTX0IF
                                     51 	.globl _UTX1IF
                                     52 	.globl _P1IF
                                     53 	.globl _WDTIF
                                     54 	.globl _ACC_0
                                     55 	.globl _ACC_1
                                     56 	.globl _ACC_2
                                     57 	.globl _ACC_3
                                     58 	.globl _ACC_4
                                     59 	.globl _ACC_5
                                     60 	.globl _ACC_6
                                     61 	.globl _ACC_7
                                     62 	.globl _P
                                     63 	.globl _F1
                                     64 	.globl _OV
                                     65 	.globl _RS0
                                     66 	.globl _RS1
                                     67 	.globl _F0
                                     68 	.globl _AC
                                     69 	.globl _CY
                                     70 	.globl _DMAIF
                                     71 	.globl _T1IF
                                     72 	.globl _T2IF
                                     73 	.globl _T3IF
                                     74 	.globl _T4IF
                                     75 	.globl _P0IF
                                     76 	.globl _STIF
                                     77 	.globl _DMAIE
                                     78 	.globl _T1IE
                                     79 	.globl _T2IE
                                     80 	.globl _T3IE
                                     81 	.globl _T4IE
                                     82 	.globl _P0IE
                                     83 	.globl _RFERRIE
                                     84 	.globl _ADCIE
                                     85 	.globl _URX0IE
                                     86 	.globl _URX1IE
                                     87 	.globl _ENCIE
                                     88 	.globl _STIE
                                     89 	.globl _EA
                                     90 	.globl _P2_0
                                     91 	.globl _P2_1
                                     92 	.globl _P2_2
                                     93 	.globl _P2_3
                                     94 	.globl _P2_4
                                     95 	.globl _P2_5
                                     96 	.globl _P2_6
                                     97 	.globl _P2_7
                                     98 	.globl _ENCIF_0
                                     99 	.globl _ENCIF_1
                                    100 	.globl _P1_0
                                    101 	.globl _P1_1
                                    102 	.globl _P1_2
                                    103 	.globl _P1_3
                                    104 	.globl _P1_4
                                    105 	.globl _P1_5
                                    106 	.globl _P1_6
                                    107 	.globl _P1_7
                                    108 	.globl _IT0
                                    109 	.globl _RFERRIF
                                    110 	.globl _IT1
                                    111 	.globl _URX0IF
                                    112 	.globl _ADCIF
                                    113 	.globl _URX1IF
                                    114 	.globl _P0_0
                                    115 	.globl _P0_1
                                    116 	.globl _P0_2
                                    117 	.globl _P0_3
                                    118 	.globl _P0_4
                                    119 	.globl _P0_5
                                    120 	.globl _P0_6
                                    121 	.globl _P0_7
                                    122 	.globl _WDCTL
                                    123 	.globl _U1GCR
                                    124 	.globl _U1UCR
                                    125 	.globl _U1BAUD
                                    126 	.globl _U1DBUF
                                    127 	.globl _U1CSR
                                    128 	.globl _U0GCR
                                    129 	.globl _U0UCR
                                    130 	.globl _U0BAUD
                                    131 	.globl _U0DBUF
                                    132 	.globl _U0CSR
                                    133 	.globl _TIMIF
                                    134 	.globl _T4CC1
                                    135 	.globl _T4CCTL1
                                    136 	.globl _T4CC0
                                    137 	.globl _T4CCTL0
                                    138 	.globl _T4CTL
                                    139 	.globl _T4CNT
                                    140 	.globl _T3CC1
                                    141 	.globl _T3CCTL1
                                    142 	.globl _T3CC0
                                    143 	.globl _T3CCTL0
                                    144 	.globl _T3CTL
                                    145 	.globl _T3CNT
                                    146 	.globl _T2MSEL
                                    147 	.globl _T2IRQM
                                    148 	.globl _T2MOVF2
                                    149 	.globl _T2MOVF1
                                    150 	.globl _T2MOVF0
                                    151 	.globl _T2M1
                                    152 	.globl _T2M0
                                    153 	.globl _T2IRQF
                                    154 	.globl _T2EVTCFG
                                    155 	.globl _T2CTRL
                                    156 	.globl _T1STAT
                                    157 	.globl _T1CCTL2
                                    158 	.globl _T1CCTL1
                                    159 	.globl _T1CCTL0
                                    160 	.globl _T1CTL
                                    161 	.globl _T1CNTH
                                    162 	.globl _T1CNTL
                                    163 	.globl _T1CC2H
                                    164 	.globl _T1CC2L
                                    165 	.globl _T1CC1H
                                    166 	.globl _T1CC1L
                                    167 	.globl _T1CC0H
                                    168 	.globl _T1CC0L
                                    169 	.globl _CLKCONSTA
                                    170 	.globl _CLKCONCMD
                                    171 	.globl _SLEEPSTA
                                    172 	.globl _SLEEPCMD
                                    173 	.globl _STLOAD
                                    174 	.globl _ST2
                                    175 	.globl _ST1
                                    176 	.globl _ST0
                                    177 	.globl _RFERRF
                                    178 	.globl _RFIRQF0
                                    179 	.globl _RFST
                                    180 	.globl _RFD
                                    181 	.globl _RFIRQF1
                                    182 	.globl _PSBANK
                                    183 	.globl _FMAP
                                    184 	.globl _MEMCTR
                                    185 	.globl __XPAGE
                                    186 	.globl _MPAGE
                                    187 	.globl _PMUX
                                    188 	.globl _P2DIR
                                    189 	.globl _P1DIR
                                    190 	.globl _P0DIR
                                    191 	.globl _P2INP
                                    192 	.globl _P1INP
                                    193 	.globl _P2SEL
                                    194 	.globl _P1SEL
                                    195 	.globl _P0SEL
                                    196 	.globl _APCFG
                                    197 	.globl _PERCFG
                                    198 	.globl _P0INP
                                    199 	.globl _P2IEN
                                    200 	.globl _P1IEN
                                    201 	.globl _P0IEN
                                    202 	.globl _PICTL
                                    203 	.globl _P2IFG
                                    204 	.globl _P1IFG
                                    205 	.globl _P0IFG
                                    206 	.globl _DMAREQ
                                    207 	.globl _DMAARM
                                    208 	.globl _DMA0CFGH
                                    209 	.globl _DMA0CFGL
                                    210 	.globl _DMA1CFGH
                                    211 	.globl _DMA1CFGL
                                    212 	.globl _DMAIRQ
                                    213 	.globl _ENCCS
                                    214 	.globl _ENCDO
                                    215 	.globl _ENCDI
                                    216 	.globl _RNDH
                                    217 	.globl _RNDL
                                    218 	.globl _ADCH
                                    219 	.globl _ADCL
                                    220 	.globl _ADCCON3
                                    221 	.globl _ADCCON2
                                    222 	.globl _ADCCON1
                                    223 	.globl _B
                                    224 	.globl _IRCON2
                                    225 	.globl _ACC
                                    226 	.globl _PSW
                                    227 	.globl _IRCON
                                    228 	.globl _IP1
                                    229 	.globl _IEN1
                                    230 	.globl _IP0
                                    231 	.globl _IEN0
                                    232 	.globl _P2
                                    233 	.globl _S1CON
                                    234 	.globl _IEN2
                                    235 	.globl _S0CON
                                    236 	.globl _DPS
                                    237 	.globl _P1
                                    238 	.globl _TCON
                                    239 	.globl _PCON
                                    240 	.globl _DPH1
                                    241 	.globl _DPL1
                                    242 	.globl _DPH0
                                    243 	.globl _DPL0
                                    244 	.globl _SP
                                    245 	.globl _P0
                                    246 	.globl _X_IEEE_ADDR
                                    247 	.globl _X_INFOPAGE
                                    248 	.globl _X_P2DIR
                                    249 	.globl _X_P1DIR
                                    250 	.globl _X_P0DIR
                                    251 	.globl _X_U1GCR
                                    252 	.globl _X_U1UCR
                                    253 	.globl _X_U1BAUD
                                    254 	.globl _X_U1DBUF
                                    255 	.globl _X_U1CSR
                                    256 	.globl _X_P2INP
                                    257 	.globl _X_P1INP
                                    258 	.globl _X_P2SEL
                                    259 	.globl _X_P1SEL
                                    260 	.globl _X_P0SEL
                                    261 	.globl _X_APCFG
                                    262 	.globl _X_PERCFG
                                    263 	.globl _X_T4CC1
                                    264 	.globl _X_T4CCTL1
                                    265 	.globl _X_T4CC0
                                    266 	.globl _X_T4CCTL0
                                    267 	.globl _X_T4CTL
                                    268 	.globl _X_T4CNT
                                    269 	.globl _X_RFIRQF0
                                    270 	.globl _X_T1CCTL2
                                    271 	.globl _X_T1CCTL1
                                    272 	.globl _X_T1CCTL0
                                    273 	.globl _X_T1CTL
                                    274 	.globl _X_T1CNTH
                                    275 	.globl _X_T1CNTL
                                    276 	.globl _X_RFST
                                    277 	.globl _X_T1CC2H
                                    278 	.globl _X_T1CC2L
                                    279 	.globl _X_T1CC1H
                                    280 	.globl _X_T1CC1L
                                    281 	.globl _X_T1CC0H
                                    282 	.globl _X_T1CC0L
                                    283 	.globl _X_RFD
                                    284 	.globl _X_TIMIF
                                    285 	.globl _X_DMAREQ
                                    286 	.globl _X_DMAARM
                                    287 	.globl _X_DMA0CFGH
                                    288 	.globl _X_DMA0CFGL
                                    289 	.globl _X_DMA1CFGH
                                    290 	.globl _X_DMA1CFGL
                                    291 	.globl _X_DMAIRQ
                                    292 	.globl _X_T3CC1
                                    293 	.globl _X_T3CCTL1
                                    294 	.globl _X_T3CC0
                                    295 	.globl _X_T3CCTL0
                                    296 	.globl _X_T3CTL
                                    297 	.globl _X_T3CNT
                                    298 	.globl _X_WDCTL
                                    299 	.globl _X_MEMCTR
                                    300 	.globl _X_CLKCONCMD
                                    301 	.globl _X_U0GCR
                                    302 	.globl _X_U0UCR
                                    303 	.globl _X_T2MSEL
                                    304 	.globl _X_U0BAUD
                                    305 	.globl _X_U0DBUF
                                    306 	.globl _X_RFERRF
                                    307 	.globl _X_SLEEPCMD
                                    308 	.globl _X_RNDH
                                    309 	.globl _X_RNDL
                                    310 	.globl _X_ADCH
                                    311 	.globl _X_ADCL
                                    312 	.globl _X_ADCCON3
                                    313 	.globl _X_ADCCON2
                                    314 	.globl _X_ADCCON1
                                    315 	.globl _X_ENCCS
                                    316 	.globl _X_ENCDO
                                    317 	.globl _X_ENCDI
                                    318 	.globl _X_T1STAT
                                    319 	.globl _X_PMUX
                                    320 	.globl _X_STLOAD
                                    321 	.globl _X_P2IEN
                                    322 	.globl _X_P0IEN
                                    323 	.globl _X_T2IRQM
                                    324 	.globl _X_T2MOVF2
                                    325 	.globl _X_T2MOVF1
                                    326 	.globl _X_T2MOVF0
                                    327 	.globl _X_T2M1
                                    328 	.globl _X_T2M0
                                    329 	.globl _X_T2IRQF
                                    330 	.globl _X_P2
                                    331 	.globl _X_PSBANK
                                    332 	.globl _X_FMAP
                                    333 	.globl _X_CLKCONSTA
                                    334 	.globl _X_SLEEPSTA
                                    335 	.globl _X_T2EVTCFG
                                    336 	.globl _X_ST2
                                    337 	.globl _X_ST1
                                    338 	.globl _X_ST0
                                    339 	.globl _X_T2CTRL
                                    340 	.globl _X__XPAGE
                                    341 	.globl _X_MPAGE
                                    342 	.globl _X_RFIRQF1
                                    343 	.globl _X_P1
                                    344 	.globl _X_P0INP
                                    345 	.globl _X_P1IEN
                                    346 	.globl _X_PICTL
                                    347 	.globl _X_P2IFG
                                    348 	.globl _X_P1IFG
                                    349 	.globl _X_P0IFG
                                    350 	.globl _X_U0CSR
                                    351 	.globl _X_P0
                                    352 	.globl _USBF5
                                    353 	.globl _USBF4
                                    354 	.globl _USBF3
                                    355 	.globl _USBF2
                                    356 	.globl _USBF1
                                    357 	.globl _USBF0
                                    358 	.globl _USBCNTH
                                    359 	.globl _USBCNTL
                                    360 	.globl _USBCNT0
                                    361 	.globl _USBCSOH
                                    362 	.globl _USBCSOL
                                    363 	.globl _USBMAXO
                                    364 	.globl _USBCSIH
                                    365 	.globl _USBCSIL
                                    366 	.globl _USBCS0
                                    367 	.globl _USBMAXI
                                    368 	.globl _USBCTRL
                                    369 	.globl _USBINDEX
                                    370 	.globl _USBFRMH
                                    371 	.globl _USBFRML
                                    372 	.globl _USBCIE
                                    373 	.globl _USBOIE
                                    374 	.globl _USBIIE
                                    375 	.globl _USBCIF
                                    376 	.globl _USBOIF
                                    377 	.globl _USBIIF
                                    378 	.globl _USBPOW
                                    379 	.globl _USBADDR
                                    380 	.globl _CSPT
                                    381 	.globl _CSPZ
                                    382 	.globl _CSPY
                                    383 	.globl _CSPX
                                    384 	.globl _CSPSTAT
                                    385 	.globl _CSPCTRL
                                    386 	.globl _CSPPROG23
                                    387 	.globl _CSPPROG22
                                    388 	.globl _CSPPROG21
                                    389 	.globl _CSPPROG20
                                    390 	.globl _CSPPROG19
                                    391 	.globl _CSPPROG18
                                    392 	.globl _CSPPROG17
                                    393 	.globl _CSPPROG16
                                    394 	.globl _CSPPROG15
                                    395 	.globl _CSPPROG14
                                    396 	.globl _CSPPROG13
                                    397 	.globl _CSPPROG12
                                    398 	.globl _CSPPROG11
                                    399 	.globl _CSPPROG10
                                    400 	.globl _CSPPROG9
                                    401 	.globl _CSPPROG8
                                    402 	.globl _CSPPROG7
                                    403 	.globl _CSPPROG6
                                    404 	.globl _CSPPROG5
                                    405 	.globl _CSPPROG4
                                    406 	.globl _CSPPROG3
                                    407 	.globl _CSPPROG2
                                    408 	.globl _CSPPROG1
                                    409 	.globl _CSPPROG0
                                    410 	.globl _RFC_OBS_CTRL2
                                    411 	.globl _RFC_OBS_CTRL1
                                    412 	.globl _RFC_OBS_CTRL0
                                    413 	.globl _TXFILTCFG
                                    414 	.globl _PTEST1
                                    415 	.globl _PTEST0
                                    416 	.globl _ATEST
                                    417 	.globl _DACTEST2
                                    418 	.globl _DACTEST1
                                    419 	.globl _DACTEST0
                                    420 	.globl _MDMTEST1
                                    421 	.globl _MDMTEST0
                                    422 	.globl _ADCTEST2
                                    423 	.globl _ADCTEST1
                                    424 	.globl _ADCTEST0
                                    425 	.globl _AGCCTRL3
                                    426 	.globl _AGCCTRL2
                                    427 	.globl _AGCCTRL1
                                    428 	.globl _AGCCTRL0
                                    429 	.globl _FSCAL3
                                    430 	.globl _FSCAL2
                                    431 	.globl _FSCAL1
                                    432 	.globl _FSCAL0
                                    433 	.globl _FSCTRL
                                    434 	.globl _RXCTRL
                                    435 	.globl _FREQEST
                                    436 	.globl _MDMCTRL1
                                    437 	.globl _MDMCTRL0
                                    438 	.globl _RFRND
                                    439 	.globl _RFERRM
                                    440 	.globl _RFIRQM1
                                    441 	.globl _RFIRQM0
                                    442 	.globl _TXLAST_PTR
                                    443 	.globl _TXFIRST_PTR
                                    444 	.globl _RXP1_PTR
                                    445 	.globl _RXLAST_PTR
                                    446 	.globl _RXFIRST_PTR
                                    447 	.globl _TXFIFOCNT
                                    448 	.globl _RXFIFOCNT
                                    449 	.globl _RXFIRST
                                    450 	.globl _RSSISTAT
                                    451 	.globl _RSSI
                                    452 	.globl _CCACTRL1
                                    453 	.globl _CCACTRL0
                                    454 	.globl _FSMCTRL
                                    455 	.globl _FIFOPCTRL
                                    456 	.globl _FSMSTAT1
                                    457 	.globl _FSMSTAT0
                                    458 	.globl _TXCTRL
                                    459 	.globl _TXPOWER
                                    460 	.globl _FREQCTRL
                                    461 	.globl _FREQTUNE
                                    462 	.globl _RXMASKCLR
                                    463 	.globl _RXMASKSET
                                    464 	.globl _RXENABLE
                                    465 	.globl _FRMCTRL1
                                    466 	.globl _FRMCTRL0
                                    467 	.globl _SRCEXTEN2
                                    468 	.globl _SRCEXTEN1
                                    469 	.globl _SRCEXTEN0
                                    470 	.globl _SRCSHORTEN2
                                    471 	.globl _SRCSHORTEN1
                                    472 	.globl _SRCSHORTEN0
                                    473 	.globl _SRCMATCH
                                    474 	.globl _FRMFILT1
                                    475 	.globl _FRMFILT0
                                    476 	.globl _SHORT_ADDR1
                                    477 	.globl _SHORT_ADDR0
                                    478 	.globl _PAN_ID1
                                    479 	.globl _PAN_ID0
                                    480 	.globl _EXT_ADDR7
                                    481 	.globl _EXT_ADDR6
                                    482 	.globl _EXT_ADDR5
                                    483 	.globl _EXT_ADDR4
                                    484 	.globl _EXT_ADDR3
                                    485 	.globl _EXT_ADDR2
                                    486 	.globl _EXT_ADDR1
                                    487 	.globl _EXT_ADDR0
                                    488 	.globl _SRCSHORTPENDEN2
                                    489 	.globl _SRCSHORTPENDEN1
                                    490 	.globl _SRCSHORTPENDEN0
                                    491 	.globl _SRCEXTPENDEN2
                                    492 	.globl _SRCEXTPENDEN1
                                    493 	.globl _SRCEXTPENDEN0
                                    494 	.globl _SRCRESINDEX
                                    495 	.globl _SRCRESMASK2
                                    496 	.globl _SRCRESMASK1
                                    497 	.globl _SRCRESMASK0
                                    498 	.globl _SRC_ADDR_TABLE
                                    499 	.globl _TXFIFO
                                    500 	.globl _RXFIFO
                                    501 	.globl _RFCORE_RAM
                                    502 	.globl _CMPCTL
                                    503 	.globl _OPAMPS
                                    504 	.globl _OPAMPC
                                    505 	.globl _STCV2
                                    506 	.globl _STCV1
                                    507 	.globl _STCV0
                                    508 	.globl _STCS
                                    509 	.globl _STCC
                                    510 	.globl _T1CC4H
                                    511 	.globl _T1CC4L
                                    512 	.globl _T1CC3H
                                    513 	.globl _T1CC3L
                                    514 	.globl _XX_T1CC2H
                                    515 	.globl _XX_T1CC2L
                                    516 	.globl _XX_T1CC1H
                                    517 	.globl _XX_T1CC1L
                                    518 	.globl _XX_T1CC0H
                                    519 	.globl _XX_T1CC0L
                                    520 	.globl _T1CCTL4
                                    521 	.globl _T1CCTL3
                                    522 	.globl _XX_T1CCTL2
                                    523 	.globl _XX_T1CCTL1
                                    524 	.globl _XX_T1CCTL0
                                    525 	.globl _CLD
                                    526 	.globl _IRCTL
                                    527 	.globl _CHIPINFO1
                                    528 	.globl _CHIPINFO0
                                    529 	.globl _FWDATA
                                    530 	.globl _FADDRH
                                    531 	.globl _FADDRL
                                    532 	.globl _FCTL
                                    533 	.globl _IVCTRL
                                    534 	.globl _BATTMON
                                    535 	.globl _SRCRC
                                    536 	.globl _DBGDATA
                                    537 	.globl _TESTREG0
                                    538 	.globl _CHIPID
                                    539 	.globl _CHVER
                                    540 	.globl _OBSSEL5
                                    541 	.globl _OBSSEL4
                                    542 	.globl _OBSSEL3
                                    543 	.globl _OBSSEL2
                                    544 	.globl _OBSSEL1
                                    545 	.globl _OBSSEL0
                                    546 	.globl _I2CIO
                                    547 	.globl _I2CWC
                                    548 	.globl _I2CADDR
                                    549 	.globl _I2CDATA
                                    550 	.globl _I2CSTAT
                                    551 	.globl _I2CCFG
                                    552 	.globl _OPAMPMC
                                    553 	.globl _MONMUX
                                    554 	.globl _ipolite_open
                                    555 	.globl _ipolite_close
                                    556 	.globl _ipolite_send
                                    557 	.globl _ipolite_cancel
                                    558 ;--------------------------------------------------------
                                    559 ; special function registers
                                    560 ;--------------------------------------------------------
                                    561 	.area RSEG    (ABS,DATA)
      000000                        562 	.org 0x0000
                           000080   563 _P0	=	0x0080
                           000081   564 _SP	=	0x0081
                           000082   565 _DPL0	=	0x0082
                           000083   566 _DPH0	=	0x0083
                           000084   567 _DPL1	=	0x0084
                           000085   568 _DPH1	=	0x0085
                           000087   569 _PCON	=	0x0087
                           000088   570 _TCON	=	0x0088
                           000090   571 _P1	=	0x0090
                           000092   572 _DPS	=	0x0092
                           000098   573 _S0CON	=	0x0098
                           00009A   574 _IEN2	=	0x009a
                           00009B   575 _S1CON	=	0x009b
                           0000A0   576 _P2	=	0x00a0
                           0000A8   577 _IEN0	=	0x00a8
                           0000A9   578 _IP0	=	0x00a9
                           0000B8   579 _IEN1	=	0x00b8
                           0000B9   580 _IP1	=	0x00b9
                           0000C0   581 _IRCON	=	0x00c0
                           0000D0   582 _PSW	=	0x00d0
                           0000E0   583 _ACC	=	0x00e0
                           0000E8   584 _IRCON2	=	0x00e8
                           0000F0   585 _B	=	0x00f0
                           0000B4   586 _ADCCON1	=	0x00b4
                           0000B5   587 _ADCCON2	=	0x00b5
                           0000B6   588 _ADCCON3	=	0x00b6
                           0000BA   589 _ADCL	=	0x00ba
                           0000BB   590 _ADCH	=	0x00bb
                           0000BC   591 _RNDL	=	0x00bc
                           0000BD   592 _RNDH	=	0x00bd
                           0000B1   593 _ENCDI	=	0x00b1
                           0000B2   594 _ENCDO	=	0x00b2
                           0000B3   595 _ENCCS	=	0x00b3
                           0000D1   596 _DMAIRQ	=	0x00d1
                           0000D2   597 _DMA1CFGL	=	0x00d2
                           0000D3   598 _DMA1CFGH	=	0x00d3
                           0000D4   599 _DMA0CFGL	=	0x00d4
                           0000D5   600 _DMA0CFGH	=	0x00d5
                           0000D6   601 _DMAARM	=	0x00d6
                           0000D7   602 _DMAREQ	=	0x00d7
                           000089   603 _P0IFG	=	0x0089
                           00008A   604 _P1IFG	=	0x008a
                           00008B   605 _P2IFG	=	0x008b
                           00008C   606 _PICTL	=	0x008c
                           0000AB   607 _P0IEN	=	0x00ab
                           00008D   608 _P1IEN	=	0x008d
                           0000AC   609 _P2IEN	=	0x00ac
                           00008F   610 _P0INP	=	0x008f
                           0000F1   611 _PERCFG	=	0x00f1
                           0000F2   612 _APCFG	=	0x00f2
                           0000F3   613 _P0SEL	=	0x00f3
                           0000F4   614 _P1SEL	=	0x00f4
                           0000F5   615 _P2SEL	=	0x00f5
                           0000F6   616 _P1INP	=	0x00f6
                           0000F7   617 _P2INP	=	0x00f7
                           0000FD   618 _P0DIR	=	0x00fd
                           0000FE   619 _P1DIR	=	0x00fe
                           0000FF   620 _P2DIR	=	0x00ff
                           0000AE   621 _PMUX	=	0x00ae
                           000093   622 _MPAGE	=	0x0093
                           000093   623 __XPAGE	=	0x0093
                           0000C7   624 _MEMCTR	=	0x00c7
                           00009F   625 _FMAP	=	0x009f
                           00009F   626 _PSBANK	=	0x009f
                           000091   627 _RFIRQF1	=	0x0091
                           0000D9   628 _RFD	=	0x00d9
                           0000E1   629 _RFST	=	0x00e1
                           0000E9   630 _RFIRQF0	=	0x00e9
                           0000BF   631 _RFERRF	=	0x00bf
                           000095   632 _ST0	=	0x0095
                           000096   633 _ST1	=	0x0096
                           000097   634 _ST2	=	0x0097
                           0000AD   635 _STLOAD	=	0x00ad
                           0000BE   636 _SLEEPCMD	=	0x00be
                           00009D   637 _SLEEPSTA	=	0x009d
                           0000C6   638 _CLKCONCMD	=	0x00c6
                           00009E   639 _CLKCONSTA	=	0x009e
                           0000DA   640 _T1CC0L	=	0x00da
                           0000DB   641 _T1CC0H	=	0x00db
                           0000DC   642 _T1CC1L	=	0x00dc
                           0000DD   643 _T1CC1H	=	0x00dd
                           0000DE   644 _T1CC2L	=	0x00de
                           0000DF   645 _T1CC2H	=	0x00df
                           0000E2   646 _T1CNTL	=	0x00e2
                           0000E3   647 _T1CNTH	=	0x00e3
                           0000E4   648 _T1CTL	=	0x00e4
                           0000E5   649 _T1CCTL0	=	0x00e5
                           0000E6   650 _T1CCTL1	=	0x00e6
                           0000E7   651 _T1CCTL2	=	0x00e7
                           0000AF   652 _T1STAT	=	0x00af
                           000094   653 _T2CTRL	=	0x0094
                           00009C   654 _T2EVTCFG	=	0x009c
                           0000A1   655 _T2IRQF	=	0x00a1
                           0000A2   656 _T2M0	=	0x00a2
                           0000A3   657 _T2M1	=	0x00a3
                           0000A4   658 _T2MOVF0	=	0x00a4
                           0000A5   659 _T2MOVF1	=	0x00a5
                           0000A6   660 _T2MOVF2	=	0x00a6
                           0000A7   661 _T2IRQM	=	0x00a7
                           0000C3   662 _T2MSEL	=	0x00c3
                           0000CA   663 _T3CNT	=	0x00ca
                           0000CB   664 _T3CTL	=	0x00cb
                           0000CC   665 _T3CCTL0	=	0x00cc
                           0000CD   666 _T3CC0	=	0x00cd
                           0000CE   667 _T3CCTL1	=	0x00ce
                           0000CF   668 _T3CC1	=	0x00cf
                           0000EA   669 _T4CNT	=	0x00ea
                           0000EB   670 _T4CTL	=	0x00eb
                           0000EC   671 _T4CCTL0	=	0x00ec
                           0000ED   672 _T4CC0	=	0x00ed
                           0000EE   673 _T4CCTL1	=	0x00ee
                           0000EF   674 _T4CC1	=	0x00ef
                           0000D8   675 _TIMIF	=	0x00d8
                           000086   676 _U0CSR	=	0x0086
                           0000C1   677 _U0DBUF	=	0x00c1
                           0000C2   678 _U0BAUD	=	0x00c2
                           0000C4   679 _U0UCR	=	0x00c4
                           0000C5   680 _U0GCR	=	0x00c5
                           0000F8   681 _U1CSR	=	0x00f8
                           0000F9   682 _U1DBUF	=	0x00f9
                           0000FA   683 _U1BAUD	=	0x00fa
                           0000FB   684 _U1UCR	=	0x00fb
                           0000FC   685 _U1GCR	=	0x00fc
                           0000C9   686 _WDCTL	=	0x00c9
                                    687 ;--------------------------------------------------------
                                    688 ; special function bits
                                    689 ;--------------------------------------------------------
                                    690 	.area RSEG    (ABS,DATA)
      000000                        691 	.org 0x0000
                           000087   692 _P0_7	=	0x0087
                           000086   693 _P0_6	=	0x0086
                           000085   694 _P0_5	=	0x0085
                           000084   695 _P0_4	=	0x0084
                           000083   696 _P0_3	=	0x0083
                           000082   697 _P0_2	=	0x0082
                           000081   698 _P0_1	=	0x0081
                           000080   699 _P0_0	=	0x0080
                           00008F   700 _URX1IF	=	0x008f
                           00008D   701 _ADCIF	=	0x008d
                           00008B   702 _URX0IF	=	0x008b
                           00008A   703 _IT1	=	0x008a
                           000089   704 _RFERRIF	=	0x0089
                           000088   705 _IT0	=	0x0088
                           000097   706 _P1_7	=	0x0097
                           000096   707 _P1_6	=	0x0096
                           000095   708 _P1_5	=	0x0095
                           000094   709 _P1_4	=	0x0094
                           000093   710 _P1_3	=	0x0093
                           000092   711 _P1_2	=	0x0092
                           000091   712 _P1_1	=	0x0091
                           000090   713 _P1_0	=	0x0090
                           000099   714 _ENCIF_1	=	0x0099
                           000098   715 _ENCIF_0	=	0x0098
                           0000A7   716 _P2_7	=	0x00a7
                           0000A6   717 _P2_6	=	0x00a6
                           0000A5   718 _P2_5	=	0x00a5
                           0000A4   719 _P2_4	=	0x00a4
                           0000A3   720 _P2_3	=	0x00a3
                           0000A2   721 _P2_2	=	0x00a2
                           0000A1   722 _P2_1	=	0x00a1
                           0000A0   723 _P2_0	=	0x00a0
                           0000AF   724 _EA	=	0x00af
                           0000AD   725 _STIE	=	0x00ad
                           0000AC   726 _ENCIE	=	0x00ac
                           0000AB   727 _URX1IE	=	0x00ab
                           0000AA   728 _URX0IE	=	0x00aa
                           0000A9   729 _ADCIE	=	0x00a9
                           0000A8   730 _RFERRIE	=	0x00a8
                           0000BD   731 _P0IE	=	0x00bd
                           0000BC   732 _T4IE	=	0x00bc
                           0000BB   733 _T3IE	=	0x00bb
                           0000BA   734 _T2IE	=	0x00ba
                           0000B9   735 _T1IE	=	0x00b9
                           0000B8   736 _DMAIE	=	0x00b8
                           0000C7   737 _STIF	=	0x00c7
                           0000C5   738 _P0IF	=	0x00c5
                           0000C4   739 _T4IF	=	0x00c4
                           0000C3   740 _T3IF	=	0x00c3
                           0000C2   741 _T2IF	=	0x00c2
                           0000C1   742 _T1IF	=	0x00c1
                           0000C0   743 _DMAIF	=	0x00c0
                           0000D7   744 _CY	=	0x00d7
                           0000D6   745 _AC	=	0x00d6
                           0000D5   746 _F0	=	0x00d5
                           0000D4   747 _RS1	=	0x00d4
                           0000D3   748 _RS0	=	0x00d3
                           0000D2   749 _OV	=	0x00d2
                           0000D1   750 _F1	=	0x00d1
                           0000D0   751 _P	=	0x00d0
                           0000E7   752 _ACC_7	=	0x00e7
                           0000E6   753 _ACC_6	=	0x00e6
                           0000E5   754 _ACC_5	=	0x00e5
                           0000E4   755 _ACC_4	=	0x00e4
                           0000E3   756 _ACC_3	=	0x00e3
                           0000E2   757 _ACC_2	=	0x00e2
                           0000E1   758 _ACC_1	=	0x00e1
                           0000E0   759 _ACC_0	=	0x00e0
                           0000EC   760 _WDTIF	=	0x00ec
                           0000EB   761 _P1IF	=	0x00eb
                           0000EA   762 _UTX1IF	=	0x00ea
                           0000E9   763 _UTX0IF	=	0x00e9
                           0000E8   764 _P2IF	=	0x00e8
                           0000F7   765 _B_7	=	0x00f7
                           0000F6   766 _B_6	=	0x00f6
                           0000F5   767 _B_5	=	0x00f5
                           0000F4   768 _B_4	=	0x00f4
                           0000F3   769 _B_3	=	0x00f3
                           0000F2   770 _B_2	=	0x00f2
                           0000F1   771 _B_1	=	0x00f1
                           0000F0   772 _B_0	=	0x00f0
                           0000DE   773 _OVFIM	=	0x00de
                           0000DD   774 _T4CH1IF	=	0x00dd
                           0000DC   775 _T4CH0IF	=	0x00dc
                           0000DB   776 _T4OVFIF	=	0x00db
                           0000DA   777 _T3CH1IF	=	0x00da
                           0000D9   778 _T3CH0IF	=	0x00d9
                           0000D8   779 _T3OVFIF	=	0x00d8
                           0000FF   780 _MODE	=	0x00ff
                           0000FE   781 _RE	=	0x00fe
                           0000FD   782 _SLAVE	=	0x00fd
                           0000FC   783 _FE	=	0x00fc
                           0000FB   784 _ERR	=	0x00fb
                           0000FA   785 _RX_BYTE	=	0x00fa
                           0000F9   786 _TX_BYTE	=	0x00f9
                           0000F8   787 _ACTIVE	=	0x00f8
                                    788 ;--------------------------------------------------------
                                    789 ; overlayable register banks
                                    790 ;--------------------------------------------------------
                                    791 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        792 	.ds 8
                                    793 ;--------------------------------------------------------
                                    794 ; internal ram data
                                    795 ;--------------------------------------------------------
                                    796 	.area DSEG    (DATA)
                                    797 ;--------------------------------------------------------
                                    798 ; overlayable items in internal ram 
                                    799 ;--------------------------------------------------------
                                    800 ;--------------------------------------------------------
                                    801 ; indirectly addressable internal ram data
                                    802 ;--------------------------------------------------------
                                    803 	.area ISEG    (DATA)
                                    804 ;--------------------------------------------------------
                                    805 ; absolute internal ram data
                                    806 ;--------------------------------------------------------
                                    807 	.area IABS    (ABS,DATA)
                                    808 	.area IABS    (ABS,DATA)
                                    809 ;--------------------------------------------------------
                                    810 ; bit data
                                    811 ;--------------------------------------------------------
                                    812 	.area BSEG    (BIT)
                                    813 ;--------------------------------------------------------
                                    814 ; paged external ram data
                                    815 ;--------------------------------------------------------
                                    816 	.area PSEG    (PAG,XDATA)
                                    817 ;--------------------------------------------------------
                                    818 ; external ram data
                                    819 ;--------------------------------------------------------
                                    820 	.area XSEG    (XDATA)
                           0061A6   821 _MONMUX	=	0x61a6
                           0061A6   822 _OPAMPMC	=	0x61a6
                           006230   823 _I2CCFG	=	0x6230
                           006231   824 _I2CSTAT	=	0x6231
                           006232   825 _I2CDATA	=	0x6232
                           006233   826 _I2CADDR	=	0x6233
                           006234   827 _I2CWC	=	0x6234
                           006235   828 _I2CIO	=	0x6235
                           006243   829 _OBSSEL0	=	0x6243
                           006244   830 _OBSSEL1	=	0x6244
                           006245   831 _OBSSEL2	=	0x6245
                           006246   832 _OBSSEL3	=	0x6246
                           006247   833 _OBSSEL4	=	0x6247
                           006248   834 _OBSSEL5	=	0x6248
                           006249   835 _CHVER	=	0x6249
                           00624A   836 _CHIPID	=	0x624a
                           00624B   837 _TESTREG0	=	0x624b
                           006260   838 _DBGDATA	=	0x6260
                           006262   839 _SRCRC	=	0x6262
                           006264   840 _BATTMON	=	0x6264
                           006265   841 _IVCTRL	=	0x6265
                           006270   842 _FCTL	=	0x6270
                           006271   843 _FADDRL	=	0x6271
                           006272   844 _FADDRH	=	0x6272
                           006273   845 _FWDATA	=	0x6273
                           006276   846 _CHIPINFO0	=	0x6276
                           006277   847 _CHIPINFO1	=	0x6277
                           006281   848 _IRCTL	=	0x6281
                           006290   849 _CLD	=	0x6290
                           0062A0   850 _XX_T1CCTL0	=	0x62a0
                           0062A1   851 _XX_T1CCTL1	=	0x62a1
                           0062A2   852 _XX_T1CCTL2	=	0x62a2
                           0062A3   853 _T1CCTL3	=	0x62a3
                           0062A4   854 _T1CCTL4	=	0x62a4
                           0062A6   855 _XX_T1CC0L	=	0x62a6
                           0062A7   856 _XX_T1CC0H	=	0x62a7
                           0062A8   857 _XX_T1CC1L	=	0x62a8
                           0062A9   858 _XX_T1CC1H	=	0x62a9
                           0062AA   859 _XX_T1CC2L	=	0x62aa
                           0062AB   860 _XX_T1CC2H	=	0x62ab
                           0062AC   861 _T1CC3L	=	0x62ac
                           0062AD   862 _T1CC3H	=	0x62ad
                           0062AE   863 _T1CC4L	=	0x62ae
                           0062AF   864 _T1CC4H	=	0x62af
                           0062B0   865 _STCC	=	0x62b0
                           0062B1   866 _STCS	=	0x62b1
                           0062B2   867 _STCV0	=	0x62b2
                           0062B3   868 _STCV1	=	0x62b3
                           0062B4   869 _STCV2	=	0x62b4
                           0062C0   870 _OPAMPC	=	0x62c0
                           0062C1   871 _OPAMPS	=	0x62c1
                           0062D0   872 _CMPCTL	=	0x62d0
                           006000   873 _RFCORE_RAM	=	0x6000
                           006000   874 _RXFIFO	=	0x6000
                           006080   875 _TXFIFO	=	0x6080
                           006100   876 _SRC_ADDR_TABLE	=	0x6100
                           006160   877 _SRCRESMASK0	=	0x6160
                           006161   878 _SRCRESMASK1	=	0x6161
                           006162   879 _SRCRESMASK2	=	0x6162
                           006163   880 _SRCRESINDEX	=	0x6163
                           006164   881 _SRCEXTPENDEN0	=	0x6164
                           006165   882 _SRCEXTPENDEN1	=	0x6165
                           006166   883 _SRCEXTPENDEN2	=	0x6166
                           006167   884 _SRCSHORTPENDEN0	=	0x6167
                           006168   885 _SRCSHORTPENDEN1	=	0x6168
                           006169   886 _SRCSHORTPENDEN2	=	0x6169
                           00616A   887 _EXT_ADDR0	=	0x616a
                           00616B   888 _EXT_ADDR1	=	0x616b
                           00616C   889 _EXT_ADDR2	=	0x616c
                           00616D   890 _EXT_ADDR3	=	0x616d
                           00616E   891 _EXT_ADDR4	=	0x616e
                           00616F   892 _EXT_ADDR5	=	0x616f
                           006170   893 _EXT_ADDR6	=	0x6170
                           006171   894 _EXT_ADDR7	=	0x6171
                           006172   895 _PAN_ID0	=	0x6172
                           006173   896 _PAN_ID1	=	0x6173
                           006174   897 _SHORT_ADDR0	=	0x6174
                           006175   898 _SHORT_ADDR1	=	0x6175
                           006180   899 _FRMFILT0	=	0x6180
                           006181   900 _FRMFILT1	=	0x6181
                           006182   901 _SRCMATCH	=	0x6182
                           006183   902 _SRCSHORTEN0	=	0x6183
                           006184   903 _SRCSHORTEN1	=	0x6184
                           006185   904 _SRCSHORTEN2	=	0x6185
                           006186   905 _SRCEXTEN0	=	0x6186
                           006187   906 _SRCEXTEN1	=	0x6187
                           006188   907 _SRCEXTEN2	=	0x6188
                           006189   908 _FRMCTRL0	=	0x6189
                           00618A   909 _FRMCTRL1	=	0x618a
                           00618B   910 _RXENABLE	=	0x618b
                           00618C   911 _RXMASKSET	=	0x618c
                           00618D   912 _RXMASKCLR	=	0x618d
                           00618E   913 _FREQTUNE	=	0x618e
                           00618F   914 _FREQCTRL	=	0x618f
                           006190   915 _TXPOWER	=	0x6190
                           006191   916 _TXCTRL	=	0x6191
                           006192   917 _FSMSTAT0	=	0x6192
                           006193   918 _FSMSTAT1	=	0x6193
                           006194   919 _FIFOPCTRL	=	0x6194
                           006195   920 _FSMCTRL	=	0x6195
                           006196   921 _CCACTRL0	=	0x6196
                           006197   922 _CCACTRL1	=	0x6197
                           006198   923 _RSSI	=	0x6198
                           006199   924 _RSSISTAT	=	0x6199
                           00619A   925 _RXFIRST	=	0x619a
                           00619B   926 _RXFIFOCNT	=	0x619b
                           00619C   927 _TXFIFOCNT	=	0x619c
                           00619D   928 _RXFIRST_PTR	=	0x619d
                           00619E   929 _RXLAST_PTR	=	0x619e
                           00619F   930 _RXP1_PTR	=	0x619f
                           0061A1   931 _TXFIRST_PTR	=	0x61a1
                           0061A2   932 _TXLAST_PTR	=	0x61a2
                           0061A3   933 _RFIRQM0	=	0x61a3
                           0061A4   934 _RFIRQM1	=	0x61a4
                           0061A5   935 _RFERRM	=	0x61a5
                           0061A7   936 _RFRND	=	0x61a7
                           0061A8   937 _MDMCTRL0	=	0x61a8
                           0061A9   938 _MDMCTRL1	=	0x61a9
                           0061AA   939 _FREQEST	=	0x61aa
                           0061AB   940 _RXCTRL	=	0x61ab
                           0061AC   941 _FSCTRL	=	0x61ac
                           0061AD   942 _FSCAL0	=	0x61ad
                           0061AE   943 _FSCAL1	=	0x61ae
                           0061AF   944 _FSCAL2	=	0x61af
                           0061B0   945 _FSCAL3	=	0x61b0
                           0061B1   946 _AGCCTRL0	=	0x61b1
                           0061B2   947 _AGCCTRL1	=	0x61b2
                           0061B3   948 _AGCCTRL2	=	0x61b3
                           0061B4   949 _AGCCTRL3	=	0x61b4
                           0061B5   950 _ADCTEST0	=	0x61b5
                           0061B6   951 _ADCTEST1	=	0x61b6
                           0061B7   952 _ADCTEST2	=	0x61b7
                           0061B8   953 _MDMTEST0	=	0x61b8
                           0061B9   954 _MDMTEST1	=	0x61b9
                           0061BA   955 _DACTEST0	=	0x61ba
                           0061BB   956 _DACTEST1	=	0x61bb
                           0061BC   957 _DACTEST2	=	0x61bc
                           0061BD   958 _ATEST	=	0x61bd
                           0061BE   959 _PTEST0	=	0x61be
                           0061BF   960 _PTEST1	=	0x61bf
                           0061FA   961 _TXFILTCFG	=	0x61fa
                           0061EB   962 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   963 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   964 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   965 _CSPPROG0	=	0x61c0
                           0061C1   966 _CSPPROG1	=	0x61c1
                           0061C2   967 _CSPPROG2	=	0x61c2
                           0061C3   968 _CSPPROG3	=	0x61c3
                           0061C4   969 _CSPPROG4	=	0x61c4
                           0061C5   970 _CSPPROG5	=	0x61c5
                           0061C6   971 _CSPPROG6	=	0x61c6
                           0061C7   972 _CSPPROG7	=	0x61c7
                           0061C8   973 _CSPPROG8	=	0x61c8
                           0061C9   974 _CSPPROG9	=	0x61c9
                           0061CA   975 _CSPPROG10	=	0x61ca
                           0061CB   976 _CSPPROG11	=	0x61cb
                           0061CC   977 _CSPPROG12	=	0x61cc
                           0061CD   978 _CSPPROG13	=	0x61cd
                           0061CE   979 _CSPPROG14	=	0x61ce
                           0061CF   980 _CSPPROG15	=	0x61cf
                           0061D0   981 _CSPPROG16	=	0x61d0
                           0061D1   982 _CSPPROG17	=	0x61d1
                           0061D2   983 _CSPPROG18	=	0x61d2
                           0061D3   984 _CSPPROG19	=	0x61d3
                           0061D4   985 _CSPPROG20	=	0x61d4
                           0061D5   986 _CSPPROG21	=	0x61d5
                           0061D6   987 _CSPPROG22	=	0x61d6
                           0061D7   988 _CSPPROG23	=	0x61d7
                           0061E0   989 _CSPCTRL	=	0x61e0
                           0061E1   990 _CSPSTAT	=	0x61e1
                           0061E2   991 _CSPX	=	0x61e2
                           0061E3   992 _CSPY	=	0x61e3
                           0061E4   993 _CSPZ	=	0x61e4
                           0061E5   994 _CSPT	=	0x61e5
                           006200   995 _USBADDR	=	0x6200
                           006201   996 _USBPOW	=	0x6201
                           006202   997 _USBIIF	=	0x6202
                           006204   998 _USBOIF	=	0x6204
                           006206   999 _USBCIF	=	0x6206
                           006207  1000 _USBIIE	=	0x6207
                           006209  1001 _USBOIE	=	0x6209
                           00620B  1002 _USBCIE	=	0x620b
                           00620C  1003 _USBFRML	=	0x620c
                           00620D  1004 _USBFRMH	=	0x620d
                           00620E  1005 _USBINDEX	=	0x620e
                           00620F  1006 _USBCTRL	=	0x620f
                           006210  1007 _USBMAXI	=	0x6210
                           006211  1008 _USBCS0	=	0x6211
                           006211  1009 _USBCSIL	=	0x6211
                           006212  1010 _USBCSIH	=	0x6212
                           006213  1011 _USBMAXO	=	0x6213
                           006214  1012 _USBCSOL	=	0x6214
                           006215  1013 _USBCSOH	=	0x6215
                           006216  1014 _USBCNT0	=	0x6216
                           006216  1015 _USBCNTL	=	0x6216
                           006217  1016 _USBCNTH	=	0x6217
                           006220  1017 _USBF0	=	0x6220
                           006222  1018 _USBF1	=	0x6222
                           006224  1019 _USBF2	=	0x6224
                           006226  1020 _USBF3	=	0x6226
                           006228  1021 _USBF4	=	0x6228
                           00622A  1022 _USBF5	=	0x622a
                           007080  1023 _X_P0	=	0x7080
                           007086  1024 _X_U0CSR	=	0x7086
                           007089  1025 _X_P0IFG	=	0x7089
                           00708A  1026 _X_P1IFG	=	0x708a
                           00708B  1027 _X_P2IFG	=	0x708b
                           00708C  1028 _X_PICTL	=	0x708c
                           00708D  1029 _X_P1IEN	=	0x708d
                           00708F  1030 _X_P0INP	=	0x708f
                           007090  1031 _X_P1	=	0x7090
                           007091  1032 _X_RFIRQF1	=	0x7091
                           007093  1033 _X_MPAGE	=	0x7093
                           007093  1034 _X__XPAGE	=	0x7093
                           007094  1035 _X_T2CTRL	=	0x7094
                           007095  1036 _X_ST0	=	0x7095
                           007096  1037 _X_ST1	=	0x7096
                           007097  1038 _X_ST2	=	0x7097
                           00709C  1039 _X_T2EVTCFG	=	0x709c
                           00709D  1040 _X_SLEEPSTA	=	0x709d
                           00709E  1041 _X_CLKCONSTA	=	0x709e
                           00709F  1042 _X_FMAP	=	0x709f
                           00709F  1043 _X_PSBANK	=	0x709f
                           0070A0  1044 _X_P2	=	0x70a0
                           0070A1  1045 _X_T2IRQF	=	0x70a1
                           0070A2  1046 _X_T2M0	=	0x70a2
                           0070A3  1047 _X_T2M1	=	0x70a3
                           0070A4  1048 _X_T2MOVF0	=	0x70a4
                           0070A5  1049 _X_T2MOVF1	=	0x70a5
                           0070A6  1050 _X_T2MOVF2	=	0x70a6
                           0070A7  1051 _X_T2IRQM	=	0x70a7
                           0070AB  1052 _X_P0IEN	=	0x70ab
                           0070AC  1053 _X_P2IEN	=	0x70ac
                           0070AD  1054 _X_STLOAD	=	0x70ad
                           0070AE  1055 _X_PMUX	=	0x70ae
                           0070AF  1056 _X_T1STAT	=	0x70af
                           0070B1  1057 _X_ENCDI	=	0x70b1
                           0070B2  1058 _X_ENCDO	=	0x70b2
                           0070B3  1059 _X_ENCCS	=	0x70b3
                           0070B4  1060 _X_ADCCON1	=	0x70b4
                           0070B5  1061 _X_ADCCON2	=	0x70b5
                           0070B6  1062 _X_ADCCON3	=	0x70b6
                           0070BA  1063 _X_ADCL	=	0x70ba
                           0070BB  1064 _X_ADCH	=	0x70bb
                           0070BC  1065 _X_RNDL	=	0x70bc
                           0070BD  1066 _X_RNDH	=	0x70bd
                           0070BE  1067 _X_SLEEPCMD	=	0x70be
                           0070BF  1068 _X_RFERRF	=	0x70bf
                           0070C1  1069 _X_U0DBUF	=	0x70c1
                           0070C2  1070 _X_U0BAUD	=	0x70c2
                           0070C3  1071 _X_T2MSEL	=	0x70c3
                           0070C4  1072 _X_U0UCR	=	0x70c4
                           0070C5  1073 _X_U0GCR	=	0x70c5
                           0070C6  1074 _X_CLKCONCMD	=	0x70c6
                           0070C7  1075 _X_MEMCTR	=	0x70c7
                           0070C9  1076 _X_WDCTL	=	0x70c9
                           0070CA  1077 _X_T3CNT	=	0x70ca
                           0070CB  1078 _X_T3CTL	=	0x70cb
                           0070CC  1079 _X_T3CCTL0	=	0x70cc
                           0070CD  1080 _X_T3CC0	=	0x70cd
                           0070CE  1081 _X_T3CCTL1	=	0x70ce
                           0070CF  1082 _X_T3CC1	=	0x70cf
                           0070D1  1083 _X_DMAIRQ	=	0x70d1
                           0070D2  1084 _X_DMA1CFGL	=	0x70d2
                           0070D3  1085 _X_DMA1CFGH	=	0x70d3
                           0070D4  1086 _X_DMA0CFGL	=	0x70d4
                           0070D5  1087 _X_DMA0CFGH	=	0x70d5
                           0070D6  1088 _X_DMAARM	=	0x70d6
                           0070D7  1089 _X_DMAREQ	=	0x70d7
                           0070D8  1090 _X_TIMIF	=	0x70d8
                           0070D9  1091 _X_RFD	=	0x70d9
                           0070DA  1092 _X_T1CC0L	=	0x70da
                           0070DB  1093 _X_T1CC0H	=	0x70db
                           0070DC  1094 _X_T1CC1L	=	0x70dc
                           0070DD  1095 _X_T1CC1H	=	0x70dd
                           0070DE  1096 _X_T1CC2L	=	0x70de
                           0070DF  1097 _X_T1CC2H	=	0x70df
                           0070E1  1098 _X_RFST	=	0x70e1
                           0070E2  1099 _X_T1CNTL	=	0x70e2
                           0070E3  1100 _X_T1CNTH	=	0x70e3
                           0070E4  1101 _X_T1CTL	=	0x70e4
                           0070E5  1102 _X_T1CCTL0	=	0x70e5
                           0070E6  1103 _X_T1CCTL1	=	0x70e6
                           0070E7  1104 _X_T1CCTL2	=	0x70e7
                           0070E9  1105 _X_RFIRQF0	=	0x70e9
                           0070EA  1106 _X_T4CNT	=	0x70ea
                           0070EB  1107 _X_T4CTL	=	0x70eb
                           0070EC  1108 _X_T4CCTL0	=	0x70ec
                           0070ED  1109 _X_T4CC0	=	0x70ed
                           0070EE  1110 _X_T4CCTL1	=	0x70ee
                           0070EF  1111 _X_T4CC1	=	0x70ef
                           0070F1  1112 _X_PERCFG	=	0x70f1
                           0070F2  1113 _X_APCFG	=	0x70f2
                           0070F3  1114 _X_P0SEL	=	0x70f3
                           0070F4  1115 _X_P1SEL	=	0x70f4
                           0070F5  1116 _X_P2SEL	=	0x70f5
                           0070F6  1117 _X_P1INP	=	0x70f6
                           0070F7  1118 _X_P2INP	=	0x70f7
                           0070F8  1119 _X_U1CSR	=	0x70f8
                           0070F9  1120 _X_U1DBUF	=	0x70f9
                           0070FA  1121 _X_U1BAUD	=	0x70fa
                           0070FB  1122 _X_U1UCR	=	0x70fb
                           0070FC  1123 _X_U1GCR	=	0x70fc
                           0070FD  1124 _X_P0DIR	=	0x70fd
                           0070FE  1125 _X_P1DIR	=	0x70fe
                           0070FF  1126 _X_P2DIR	=	0x70ff
                           007800  1127 _X_INFOPAGE	=	0x7800
                           00780C  1128 _X_IEEE_ADDR	=	0x780c
                                   1129 ;--------------------------------------------------------
                                   1130 ; absolute external ram data
                                   1131 ;--------------------------------------------------------
                                   1132 	.area XABS    (ABS,XDATA)
                                   1133 ;--------------------------------------------------------
                                   1134 ; external initialized ram data
                                   1135 ;--------------------------------------------------------
                                   1136 	.area XISEG   (XDATA)
                                   1137 	.area HOME    (CODE)
                                   1138 	.area GSINIT0 (CODE)
                                   1139 	.area GSINIT1 (CODE)
                                   1140 	.area GSINIT2 (CODE)
                                   1141 	.area GSINIT3 (CODE)
                                   1142 	.area GSINIT4 (CODE)
                                   1143 	.area GSINIT5 (CODE)
                                   1144 	.area GSINIT  (CODE)
                                   1145 	.area GSFINAL (CODE)
                                   1146 	.area CSEG    (CODE)
                                   1147 ;--------------------------------------------------------
                                   1148 ; global & static initialisations
                                   1149 ;--------------------------------------------------------
                                   1150 	.area HOME    (CODE)
                                   1151 	.area GSINIT  (CODE)
                                   1152 	.area GSFINAL (CODE)
                                   1153 	.area GSINIT  (CODE)
                                   1154 ;--------------------------------------------------------
                                   1155 ; Home
                                   1156 ;--------------------------------------------------------
                                   1157 	.area HOME    (CODE)
                                   1158 	.area HOME    (CODE)
                                   1159 ;--------------------------------------------------------
                                   1160 ; code
                                   1161 ;--------------------------------------------------------
                                   1162 	.area BANK1   (CODE)
                                   1163 ;------------------------------------------------------------
                                   1164 ;Allocation info for local variables in function 'recv'
                                   1165 ;------------------------------------------------------------
                                   1166 ;from                      Allocated to stack - sp -10
                                   1167 ;broadcast                 Allocated to registers r5 r6 r7 
                                   1168 ;c                         Allocated to stack - sp -2
                                   1169 ;sloc0                     Allocated to stack - sp -4
                                   1170 ;------------------------------------------------------------
                                   1171 ;	/opt/contiki/core/net/rime/ipolite.c:62: recv(struct broadcast_conn *broadcast, const linkaddr_t *from)
                                   1172 ;	-----------------------------------------
                                   1173 ;	 function recv
                                   1174 ;	-----------------------------------------
      000000                       1175 _recv:
                           000007  1176 	ar7 = 0x07
                           000006  1177 	ar6 = 0x06
                           000005  1178 	ar5 = 0x05
                           000004  1179 	ar4 = 0x04
                           000003  1180 	ar3 = 0x03
                           000002  1181 	ar2 = 0x02
                           000001  1182 	ar1 = 0x01
                           000000  1183 	ar0 = 0x00
      000000 E5 81            [12] 1184 	mov	a,sp
      000002 24 05            [12] 1185 	add	a,#0x05
      000004 F5 81            [12] 1186 	mov	sp,a
      000006 AD 82            [24] 1187 	mov	r5,dpl
      000008 AE 83            [24] 1188 	mov	r6,dph
      00000A AF F0            [24] 1189 	mov	r7,b
                                   1190 ;	/opt/contiki/core/net/rime/ipolite.c:64: struct ipolite_conn *c = (struct ipolite_conn *)broadcast;
      00000C A8 81            [24] 1191 	mov	r0,sp
      00000E 18               [12] 1192 	dec	r0
      00000F 18               [12] 1193 	dec	r0
      000010 A6 05            [24] 1194 	mov	@r0,ar5
      000012 08               [12] 1195 	inc	r0
      000013 A6 06            [24] 1196 	mov	@r0,ar6
      000015 08               [12] 1197 	inc	r0
      000016 A6 07            [24] 1198 	mov	@r0,ar7
                                   1199 ;	/opt/contiki/core/net/rime/ipolite.c:65: if(c->q != NULL &&
      000018 A8 81            [24] 1200 	mov	r0,sp
      00001A 18               [12] 1201 	dec	r0
      00001B 18               [12] 1202 	dec	r0
      00001C 74 28            [12] 1203 	mov	a,#0x28
      00001E 26               [12] 1204 	add	a,@r0
      00001F FA               [12] 1205 	mov	r2,a
      000020 E4               [12] 1206 	clr	a
      000021 08               [12] 1207 	inc	r0
      000022 36               [12] 1208 	addc	a,@r0
      000023 FB               [12] 1209 	mov	r3,a
      000024 08               [12] 1210 	inc	r0
      000025 86 04            [24] 1211 	mov	ar4,@r0
      000027 8A 82            [24] 1212 	mov	dpl,r2
      000029 8B 83            [24] 1213 	mov	dph,r3
      00002B 8C F0            [24] 1214 	mov	b,r4
      00002D 12r00r00         [24] 1215 	lcall	__gptrget
      000030 FD               [12] 1216 	mov	r5,a
      000031 A3               [24] 1217 	inc	dptr
      000032 12r00r00         [24] 1218 	lcall	__gptrget
      000035 FE               [12] 1219 	mov	r6,a
      000036 A3               [24] 1220 	inc	dptr
      000037 12r00r00         [24] 1221 	lcall	__gptrget
      00003A FF               [12] 1222 	mov	r7,a
      00003B ED               [12] 1223 	mov	a,r5
      00003C 4E               [12] 1224 	orl	a,r6
      00003D 70 03            [24] 1225 	jnz	00136$
      00003F 02r02rFE         [24] 1226 	ljmp	00106$
      000042                       1227 00136$:
                                   1228 ;	/opt/contiki/core/net/rime/ipolite.c:66: packetbuf_datalen() == queuebuf_datalen(c->q) &&
      000042 C0 04            [24] 1229 	push	ar4
      000044 C0 03            [24] 1230 	push	ar3
      000046 C0 02            [24] 1231 	push	ar2
      000048 78r00            [12] 1232 	mov	r0,#_packetbuf_datalen
      00004A 79s00            [12] 1233 	mov	r1,#(_packetbuf_datalen >> 8)
      00004C 7As00            [12] 1234 	mov	r2,#(_packetbuf_datalen >> 16)
      00004E 12r00r00         [24] 1235 	lcall	__sdcc_banked_call
      000051 C8               [12] 1236 	xch	a,r0
      000052 E5 81            [12] 1237 	mov	a,sp
      000054 24 F9            [12] 1238 	add	a,#0xf9
      000056 C8               [12] 1239 	xch	a,r0
      000057 A6 82            [24] 1240 	mov	@r0,dpl
      000059 08               [12] 1241 	inc	r0
      00005A A6 83            [24] 1242 	mov	@r0,dph
      00005C D0 02            [24] 1243 	pop	ar2
      00005E D0 03            [24] 1244 	pop	ar3
      000060 D0 04            [24] 1245 	pop	ar4
      000062 8A 82            [24] 1246 	mov	dpl,r2
      000064 8B 83            [24] 1247 	mov	dph,r3
      000066 8C F0            [24] 1248 	mov	b,r4
      000068 12r00r00         [24] 1249 	lcall	__gptrget
      00006B FD               [12] 1250 	mov	r5,a
      00006C A3               [24] 1251 	inc	dptr
      00006D 12r00r00         [24] 1252 	lcall	__gptrget
      000070 FE               [12] 1253 	mov	r6,a
      000071 A3               [24] 1254 	inc	dptr
      000072 12r00r00         [24] 1255 	lcall	__gptrget
      000075 FF               [12] 1256 	mov	r7,a
      000076 8D 82            [24] 1257 	mov	dpl,r5
      000078 8E 83            [24] 1258 	mov	dph,r6
      00007A 8F F0            [24] 1259 	mov	b,r7
      00007C C0 04            [24] 1260 	push	ar4
      00007E C0 03            [24] 1261 	push	ar3
      000080 C0 02            [24] 1262 	push	ar2
      000082 78r00            [12] 1263 	mov	r0,#_queuebuf_datalen
      000084 79s00            [12] 1264 	mov	r1,#(_queuebuf_datalen >> 8)
      000086 7As00            [12] 1265 	mov	r2,#(_queuebuf_datalen >> 16)
      000088 12r00r00         [24] 1266 	lcall	__sdcc_banked_call
      00008B AE 82            [24] 1267 	mov	r6,dpl
      00008D AF 83            [24] 1268 	mov	r7,dph
      00008F D0 02            [24] 1269 	pop	ar2
      000091 D0 03            [24] 1270 	pop	ar3
      000093 D0 04            [24] 1271 	pop	ar4
      000095 E5 81            [12] 1272 	mov	a,sp
      000097 24 FC            [12] 1273 	add	a,#0xfc
      000099 F8               [12] 1274 	mov	r0,a
      00009A E6               [12] 1275 	mov	a,@r0
      00009B B5 06 07         [24] 1276 	cjne	a,ar6,00137$
      00009E 08               [12] 1277 	inc	r0
      00009F E6               [12] 1278 	mov	a,@r0
      0000A0 B5 07 02         [24] 1279 	cjne	a,ar7,00137$
      0000A3 80 03            [24] 1280 	sjmp	00138$
      0000A5                       1281 00137$:
      0000A5 02r02rFE         [24] 1282 	ljmp	00106$
      0000A8                       1283 00138$:
                                   1284 ;	/opt/contiki/core/net/rime/ipolite.c:68: MIN(c->hdrsize, packetbuf_datalen())) == 0) {
      0000A8 C0 02            [24] 1285 	push	ar2
      0000AA C0 03            [24] 1286 	push	ar3
      0000AC C0 04            [24] 1287 	push	ar4
      0000AE E5 81            [12] 1288 	mov	a,sp
      0000B0 24 FB            [12] 1289 	add	a,#0xfb
      0000B2 F8               [12] 1290 	mov	r0,a
      0000B3 74 2B            [12] 1291 	mov	a,#0x2B
      0000B5 26               [12] 1292 	add	a,@r0
      0000B6 FD               [12] 1293 	mov	r5,a
      0000B7 E4               [12] 1294 	clr	a
      0000B8 08               [12] 1295 	inc	r0
      0000B9 36               [12] 1296 	addc	a,@r0
      0000BA FE               [12] 1297 	mov	r6,a
      0000BB 08               [12] 1298 	inc	r0
      0000BC 86 07            [24] 1299 	mov	ar7,@r0
      0000BE 8D 82            [24] 1300 	mov	dpl,r5
      0000C0 8E 83            [24] 1301 	mov	dph,r6
      0000C2 8F F0            [24] 1302 	mov	b,r7
      0000C4 12r00r00         [24] 1303 	lcall	__gptrget
      0000C7 FC               [12] 1304 	mov	r4,a
      0000C8 C0 07            [24] 1305 	push	ar7
      0000CA C0 06            [24] 1306 	push	ar6
      0000CC C0 05            [24] 1307 	push	ar5
      0000CE C0 04            [24] 1308 	push	ar4
      0000D0 C0 03            [24] 1309 	push	ar3
      0000D2 C0 02            [24] 1310 	push	ar2
      0000D4 78r00            [12] 1311 	mov	r0,#_packetbuf_datalen
      0000D6 79s00            [12] 1312 	mov	r1,#(_packetbuf_datalen >> 8)
      0000D8 7As00            [12] 1313 	mov	r2,#(_packetbuf_datalen >> 16)
      0000DA 12r00r00         [24] 1314 	lcall	__sdcc_banked_call
      0000DD C8               [12] 1315 	xch	a,r0
      0000DE E5 81            [12] 1316 	mov	a,sp
      0000E0 24 F3            [12] 1317 	add	a,#0xf3
      0000E2 C8               [12] 1318 	xch	a,r0
      0000E3 A6 82            [24] 1319 	mov	@r0,dpl
      0000E5 08               [12] 1320 	inc	r0
      0000E6 A6 83            [24] 1321 	mov	@r0,dph
      0000E8 D0 02            [24] 1322 	pop	ar2
      0000EA D0 03            [24] 1323 	pop	ar3
      0000EC D0 04            [24] 1324 	pop	ar4
      0000EE D0 05            [24] 1325 	pop	ar5
      0000F0 D0 06            [24] 1326 	pop	ar6
      0000F2 D0 07            [24] 1327 	pop	ar7
      0000F4 8C 03            [24] 1328 	mov	ar3,r4
      0000F6 7C 00            [12] 1329 	mov	r4,#0x00
      0000F8 E5 81            [12] 1330 	mov	a,sp
      0000FA 24 F9            [12] 1331 	add	a,#0xf9
      0000FC F8               [12] 1332 	mov	r0,a
      0000FD C3               [12] 1333 	clr	c
      0000FE EB               [12] 1334 	mov	a,r3
      0000FF 96               [12] 1335 	subb	a,@r0
      000100 EC               [12] 1336 	mov	a,r4
      000101 08               [12] 1337 	inc	r0
      000102 96               [12] 1338 	subb	a,@r0
      000103 D0 04            [24] 1339 	pop	ar4
      000105 D0 03            [24] 1340 	pop	ar3
      000107 D0 02            [24] 1341 	pop	ar2
      000109 50 16            [24] 1342 	jnc	00113$
      00010B 8D 82            [24] 1343 	mov	dpl,r5
      00010D 8E 83            [24] 1344 	mov	dph,r6
      00010F 8F F0            [24] 1345 	mov	b,r7
      000111 12r00r00         [24] 1346 	lcall	__gptrget
      000114 FD               [12] 1347 	mov	r5,a
      000115 E5 81            [12] 1348 	mov	a,sp
      000117 24 FC            [12] 1349 	add	a,#0xfc
      000119 F8               [12] 1350 	mov	r0,a
      00011A A6 05            [24] 1351 	mov	@r0,ar5
      00011C 08               [12] 1352 	inc	r0
      00011D 76 00            [12] 1353 	mov	@r0,#0x00
      00011F 80 20            [24] 1354 	sjmp	00114$
      000121                       1355 00113$:
      000121 C0 04            [24] 1356 	push	ar4
      000123 C0 03            [24] 1357 	push	ar3
      000125 C0 02            [24] 1358 	push	ar2
      000127 78r00            [12] 1359 	mov	r0,#_packetbuf_datalen
      000129 79s00            [12] 1360 	mov	r1,#(_packetbuf_datalen >> 8)
      00012B 7As00            [12] 1361 	mov	r2,#(_packetbuf_datalen >> 16)
      00012D 12r00r00         [24] 1362 	lcall	__sdcc_banked_call
      000130 C8               [12] 1363 	xch	a,r0
      000131 E5 81            [12] 1364 	mov	a,sp
      000133 24 F9            [12] 1365 	add	a,#0xf9
      000135 C8               [12] 1366 	xch	a,r0
      000136 A6 82            [24] 1367 	mov	@r0,dpl
      000138 08               [12] 1368 	inc	r0
      000139 A6 83            [24] 1369 	mov	@r0,dph
      00013B D0 02            [24] 1370 	pop	ar2
      00013D D0 03            [24] 1371 	pop	ar3
      00013F D0 04            [24] 1372 	pop	ar4
      000141                       1373 00114$:
                                   1374 ;	/opt/contiki/core/net/rime/ipolite.c:67: memcmp(packetbuf_dataptr(), queuebuf_dataptr(c->q),
      000141 8A 82            [24] 1375 	mov	dpl,r2
      000143 8B 83            [24] 1376 	mov	dph,r3
      000145 8C F0            [24] 1377 	mov	b,r4
      000147 12r00r00         [24] 1378 	lcall	__gptrget
      00014A FD               [12] 1379 	mov	r5,a
      00014B A3               [24] 1380 	inc	dptr
      00014C 12r00r00         [24] 1381 	lcall	__gptrget
      00014F FE               [12] 1382 	mov	r6,a
      000150 A3               [24] 1383 	inc	dptr
      000151 12r00r00         [24] 1384 	lcall	__gptrget
      000154 FF               [12] 1385 	mov	r7,a
      000155 8D 82            [24] 1386 	mov	dpl,r5
      000157 8E 83            [24] 1387 	mov	dph,r6
      000159 8F F0            [24] 1388 	mov	b,r7
      00015B C0 04            [24] 1389 	push	ar4
      00015D C0 03            [24] 1390 	push	ar3
      00015F C0 02            [24] 1391 	push	ar2
      000161 78r00            [12] 1392 	mov	r0,#_queuebuf_dataptr
      000163 79s00            [12] 1393 	mov	r1,#(_queuebuf_dataptr >> 8)
      000165 7As00            [12] 1394 	mov	r2,#(_queuebuf_dataptr >> 16)
      000167 12r00r00         [24] 1395 	lcall	__sdcc_banked_call
      00016A AD 82            [24] 1396 	mov	r5,dpl
      00016C AE 83            [24] 1397 	mov	r6,dph
      00016E AF F0            [24] 1398 	mov	r7,b
      000170 D0 02            [24] 1399 	pop	ar2
      000172 D0 03            [24] 1400 	pop	ar3
      000174 D0 04            [24] 1401 	pop	ar4
      000176 C0 02            [24] 1402 	push	ar2
      000178 C0 03            [24] 1403 	push	ar3
      00017A C0 04            [24] 1404 	push	ar4
      00017C C0 07            [24] 1405 	push	ar7
      00017E C0 06            [24] 1406 	push	ar6
      000180 C0 05            [24] 1407 	push	ar5
      000182 78r00            [12] 1408 	mov	r0,#_packetbuf_dataptr
      000184 79s00            [12] 1409 	mov	r1,#(_packetbuf_dataptr >> 8)
      000186 7As00            [12] 1410 	mov	r2,#(_packetbuf_dataptr >> 16)
      000188 12r00r00         [24] 1411 	lcall	__sdcc_banked_call
      00018B AA 82            [24] 1412 	mov	r2,dpl
      00018D AB 83            [24] 1413 	mov	r3,dph
      00018F AC F0            [24] 1414 	mov	r4,b
      000191 D0 05            [24] 1415 	pop	ar5
      000193 D0 06            [24] 1416 	pop	ar6
      000195 D0 07            [24] 1417 	pop	ar7
      000197 C0 04            [24] 1418 	push	ar4
      000199 C0 03            [24] 1419 	push	ar3
      00019B C0 02            [24] 1420 	push	ar2
      00019D E5 81            [12] 1421 	mov	a,sp
      00019F 24 F6            [12] 1422 	add	a,#0xf6
      0001A1 F8               [12] 1423 	mov	r0,a
      0001A2 E6               [12] 1424 	mov	a,@r0
      0001A3 C0 E0            [24] 1425 	push	acc
      0001A5 08               [12] 1426 	inc	r0
      0001A6 E6               [12] 1427 	mov	a,@r0
      0001A7 C0 E0            [24] 1428 	push	acc
      0001A9 C0 05            [24] 1429 	push	ar5
      0001AB C0 06            [24] 1430 	push	ar6
      0001AD C0 07            [24] 1431 	push	ar7
      0001AF 8A 82            [24] 1432 	mov	dpl,r2
      0001B1 8B 83            [24] 1433 	mov	dph,r3
      0001B3 8C F0            [24] 1434 	mov	b,r4
      0001B5 78r00            [12] 1435 	mov	r0,#_memcmp
      0001B7 79s00            [12] 1436 	mov	r1,#(_memcmp >> 8)
      0001B9 7As00            [12] 1437 	mov	r2,#(_memcmp >> 16)
      0001BB 12r00r00         [24] 1438 	lcall	__sdcc_banked_call
      0001BE AE 82            [24] 1439 	mov	r6,dpl
      0001C0 AF 83            [24] 1440 	mov	r7,dph
      0001C2 E5 81            [12] 1441 	mov	a,sp
      0001C4 24 FB            [12] 1442 	add	a,#0xfb
      0001C6 F5 81            [12] 1443 	mov	sp,a
      0001C8 D0 02            [24] 1444 	pop	ar2
      0001CA D0 03            [24] 1445 	pop	ar3
      0001CC D0 04            [24] 1446 	pop	ar4
      0001CE D0 04            [24] 1447 	pop	ar4
      0001D0 D0 03            [24] 1448 	pop	ar3
      0001D2 D0 02            [24] 1449 	pop	ar2
      0001D4 EE               [12] 1450 	mov	a,r6
      0001D5 4F               [12] 1451 	orl	a,r7
      0001D6 60 03            [24] 1452 	jz	00140$
      0001D8 02r02rFE         [24] 1453 	ljmp	00106$
      0001DB                       1454 00140$:
                                   1455 ;	/opt/contiki/core/net/rime/ipolite.c:72: c->dups++;
      0001DB C0 02            [24] 1456 	push	ar2
      0001DD C0 03            [24] 1457 	push	ar3
      0001DF C0 04            [24] 1458 	push	ar4
      0001E1 E5 81            [12] 1459 	mov	a,sp
      0001E3 24 FB            [12] 1460 	add	a,#0xfb
      0001E5 F8               [12] 1461 	mov	r0,a
      0001E6 74 2D            [12] 1462 	mov	a,#0x2D
      0001E8 26               [12] 1463 	add	a,@r0
      0001E9 FD               [12] 1464 	mov	r5,a
      0001EA E4               [12] 1465 	clr	a
      0001EB 08               [12] 1466 	inc	r0
      0001EC 36               [12] 1467 	addc	a,@r0
      0001ED FE               [12] 1468 	mov	r6,a
      0001EE 08               [12] 1469 	inc	r0
      0001EF 86 07            [24] 1470 	mov	ar7,@r0
      0001F1 8D 82            [24] 1471 	mov	dpl,r5
      0001F3 8E 83            [24] 1472 	mov	dph,r6
      0001F5 8F F0            [24] 1473 	mov	b,r7
      0001F7 12r00r00         [24] 1474 	lcall	__gptrget
      0001FA FC               [12] 1475 	mov	r4,a
      0001FB 0C               [12] 1476 	inc	r4
      0001FC 8D 82            [24] 1477 	mov	dpl,r5
      0001FE 8E 83            [24] 1478 	mov	dph,r6
      000200 8F F0            [24] 1479 	mov	b,r7
      000202 EC               [12] 1480 	mov	a,r4
      000203 12r00r00         [24] 1481 	lcall	__gptrput
                                   1482 ;	/opt/contiki/core/net/rime/ipolite.c:73: if(c->dups == c->maxdups) {
      000206 E5 81            [12] 1483 	mov	a,sp
      000208 24 FB            [12] 1484 	add	a,#0xfb
      00020A F8               [12] 1485 	mov	r0,a
      00020B 74 2C            [12] 1486 	mov	a,#0x2C
      00020D 26               [12] 1487 	add	a,@r0
      00020E FD               [12] 1488 	mov	r5,a
      00020F E4               [12] 1489 	clr	a
      000210 08               [12] 1490 	inc	r0
      000211 36               [12] 1491 	addc	a,@r0
      000212 FE               [12] 1492 	mov	r6,a
      000213 08               [12] 1493 	inc	r0
      000214 86 07            [24] 1494 	mov	ar7,@r0
      000216 8D 82            [24] 1495 	mov	dpl,r5
      000218 8E 83            [24] 1496 	mov	dph,r6
      00021A 8F F0            [24] 1497 	mov	b,r7
      00021C 12r00r00         [24] 1498 	lcall	__gptrget
      00021F FD               [12] 1499 	mov	r5,a
      000220 EC               [12] 1500 	mov	a,r4
      000221 B5 05 02         [24] 1501 	cjne	a,ar5,00141$
      000224 80 09            [24] 1502 	sjmp	00142$
      000226                       1503 00141$:
      000226 D0 04            [24] 1504 	pop	ar4
      000228 D0 03            [24] 1505 	pop	ar3
      00022A D0 02            [24] 1506 	pop	ar2
      00022C 02r02rFE         [24] 1507 	ljmp	00106$
      00022F                       1508 00142$:
      00022F D0 04            [24] 1509 	pop	ar4
      000231 D0 03            [24] 1510 	pop	ar3
      000233 D0 02            [24] 1511 	pop	ar2
                                   1512 ;	/opt/contiki/core/net/rime/ipolite.c:74: queuebuf_free(c->q);
      000235 8A 82            [24] 1513 	mov	dpl,r2
      000237 8B 83            [24] 1514 	mov	dph,r3
      000239 8C F0            [24] 1515 	mov	b,r4
      00023B 12r00r00         [24] 1516 	lcall	__gptrget
      00023E FD               [12] 1517 	mov	r5,a
      00023F A3               [24] 1518 	inc	dptr
      000240 12r00r00         [24] 1519 	lcall	__gptrget
      000243 FE               [12] 1520 	mov	r6,a
      000244 A3               [24] 1521 	inc	dptr
      000245 12r00r00         [24] 1522 	lcall	__gptrget
      000248 FF               [12] 1523 	mov	r7,a
      000249 8D 82            [24] 1524 	mov	dpl,r5
      00024B 8E 83            [24] 1525 	mov	dph,r6
      00024D 8F F0            [24] 1526 	mov	b,r7
      00024F C0 04            [24] 1527 	push	ar4
      000251 C0 03            [24] 1528 	push	ar3
      000253 C0 02            [24] 1529 	push	ar2
      000255 78r00            [12] 1530 	mov	r0,#_queuebuf_free
      000257 79s00            [12] 1531 	mov	r1,#(_queuebuf_free >> 8)
      000259 7As00            [12] 1532 	mov	r2,#(_queuebuf_free >> 16)
      00025B 12r00r00         [24] 1533 	lcall	__sdcc_banked_call
      00025E D0 02            [24] 1534 	pop	ar2
      000260 D0 03            [24] 1535 	pop	ar3
      000262 D0 04            [24] 1536 	pop	ar4
                                   1537 ;	/opt/contiki/core/net/rime/ipolite.c:75: c->q = NULL;
      000264 8A 82            [24] 1538 	mov	dpl,r2
      000266 8B 83            [24] 1539 	mov	dph,r3
      000268 8C F0            [24] 1540 	mov	b,r4
      00026A E4               [12] 1541 	clr	a
      00026B 12r00r00         [24] 1542 	lcall	__gptrput
      00026E A3               [24] 1543 	inc	dptr
      00026F 12r00r00         [24] 1544 	lcall	__gptrput
      000272 A3               [24] 1545 	inc	dptr
      000273 12r00r00         [24] 1546 	lcall	__gptrput
                                   1547 ;	/opt/contiki/core/net/rime/ipolite.c:76: ctimer_stop(&c->t);
      000276 A8 81            [24] 1548 	mov	r0,sp
      000278 18               [12] 1549 	dec	r0
      000279 18               [12] 1550 	dec	r0
      00027A 74 12            [12] 1551 	mov	a,#0x12
      00027C 26               [12] 1552 	add	a,@r0
      00027D FD               [12] 1553 	mov	r5,a
      00027E E4               [12] 1554 	clr	a
      00027F 08               [12] 1555 	inc	r0
      000280 36               [12] 1556 	addc	a,@r0
      000281 FE               [12] 1557 	mov	r6,a
      000282 08               [12] 1558 	inc	r0
      000283 86 07            [24] 1559 	mov	ar7,@r0
      000285 8D 82            [24] 1560 	mov	dpl,r5
      000287 8E 83            [24] 1561 	mov	dph,r6
      000289 8F F0            [24] 1562 	mov	b,r7
      00028B 78r00            [12] 1563 	mov	r0,#_ctimer_stop
      00028D 79s00            [12] 1564 	mov	r1,#(_ctimer_stop >> 8)
      00028F 7As00            [12] 1565 	mov	r2,#(_ctimer_stop >> 16)
      000291 12r00r00         [24] 1566 	lcall	__sdcc_banked_call
                                   1567 ;	/opt/contiki/core/net/rime/ipolite.c:77: if(c->cb->dropped) {
      000294 A8 81            [24] 1568 	mov	r0,sp
      000296 18               [12] 1569 	dec	r0
      000297 18               [12] 1570 	dec	r0
      000298 74 0F            [12] 1571 	mov	a,#0x0F
      00029A 26               [12] 1572 	add	a,@r0
      00029B FD               [12] 1573 	mov	r5,a
      00029C E4               [12] 1574 	clr	a
      00029D 08               [12] 1575 	inc	r0
      00029E 36               [12] 1576 	addc	a,@r0
      00029F FE               [12] 1577 	mov	r6,a
      0002A0 08               [12] 1578 	inc	r0
      0002A1 86 07            [24] 1579 	mov	ar7,@r0
      0002A3 8D 82            [24] 1580 	mov	dpl,r5
      0002A5 8E 83            [24] 1581 	mov	dph,r6
      0002A7 8F F0            [24] 1582 	mov	b,r7
      0002A9 12r00r00         [24] 1583 	lcall	__gptrget
      0002AC FD               [12] 1584 	mov	r5,a
      0002AD A3               [24] 1585 	inc	dptr
      0002AE 12r00r00         [24] 1586 	lcall	__gptrget
      0002B1 FE               [12] 1587 	mov	r6,a
      0002B2 A3               [24] 1588 	inc	dptr
      0002B3 12r00r00         [24] 1589 	lcall	__gptrget
      0002B6 FF               [12] 1590 	mov	r7,a
      0002B7 74 06            [12] 1591 	mov	a,#0x06
      0002B9 2D               [12] 1592 	add	a,r5
      0002BA FD               [12] 1593 	mov	r5,a
      0002BB E4               [12] 1594 	clr	a
      0002BC 3E               [12] 1595 	addc	a,r6
      0002BD FE               [12] 1596 	mov	r6,a
      0002BE 8D 82            [24] 1597 	mov	dpl,r5
      0002C0 8E 83            [24] 1598 	mov	dph,r6
      0002C2 8F F0            [24] 1599 	mov	b,r7
      0002C4 12r00r00         [24] 1600 	lcall	__gptrget
      0002C7 FD               [12] 1601 	mov	r5,a
      0002C8 A3               [24] 1602 	inc	dptr
      0002C9 12r00r00         [24] 1603 	lcall	__gptrget
      0002CC FE               [12] 1604 	mov	r6,a
      0002CD A3               [24] 1605 	inc	dptr
      0002CE 12r00r00         [24] 1606 	lcall	__gptrget
      0002D1 FF               [12] 1607 	mov	r7,a
      0002D2 ED               [12] 1608 	mov	a,r5
      0002D3 4E               [12] 1609 	orl	a,r6
      0002D4 60 28            [24] 1610 	jz	00106$
                                   1611 ;	/opt/contiki/core/net/rime/ipolite.c:78: c->cb->dropped(c);
      0002D6 C0 07            [24] 1612 	push	ar7
      0002D8 C0 06            [24] 1613 	push	ar6
      0002DA C0 05            [24] 1614 	push	ar5
      0002DC C0 05            [24] 1615 	push	ar5
      0002DE C0 06            [24] 1616 	push	ar6
      0002E0 C0 07            [24] 1617 	push	ar7
      0002E2 E5 81            [12] 1618 	mov	a,sp
      0002E4 24 F8            [12] 1619 	add	a,#0xf8
      0002E6 F8               [12] 1620 	mov	r0,a
      0002E7 86 82            [24] 1621 	mov	dpl,@r0
      0002E9 08               [12] 1622 	inc	r0
      0002EA 86 83            [24] 1623 	mov	dph,@r0
      0002EC 08               [12] 1624 	inc	r0
      0002ED 86 F0            [24] 1625 	mov	b,@r0
      0002EF D0 02            [24] 1626 	pop	ar2
      0002F1 D0 01            [24] 1627 	pop	ar1
      0002F3 D0 00            [24] 1628 	pop	ar0
      0002F5 12r00r00         [24] 1629 	lcall	__sdcc_banked_call
      0002F8 D0 05            [24] 1630 	pop	ar5
      0002FA D0 06            [24] 1631 	pop	ar6
      0002FC D0 07            [24] 1632 	pop	ar7
      0002FE                       1633 00106$:
                                   1634 ;	/opt/contiki/core/net/rime/ipolite.c:82: if(c->cb->recv) {
      0002FE A8 81            [24] 1635 	mov	r0,sp
      000300 18               [12] 1636 	dec	r0
      000301 18               [12] 1637 	dec	r0
      000302 74 0F            [12] 1638 	mov	a,#0x0F
      000304 26               [12] 1639 	add	a,@r0
      000305 FD               [12] 1640 	mov	r5,a
      000306 E4               [12] 1641 	clr	a
      000307 08               [12] 1642 	inc	r0
      000308 36               [12] 1643 	addc	a,@r0
      000309 FE               [12] 1644 	mov	r6,a
      00030A 08               [12] 1645 	inc	r0
      00030B 86 07            [24] 1646 	mov	ar7,@r0
      00030D 8D 82            [24] 1647 	mov	dpl,r5
      00030F 8E 83            [24] 1648 	mov	dph,r6
      000311 8F F0            [24] 1649 	mov	b,r7
      000313 12r00r00         [24] 1650 	lcall	__gptrget
      000316 FD               [12] 1651 	mov	r5,a
      000317 A3               [24] 1652 	inc	dptr
      000318 12r00r00         [24] 1653 	lcall	__gptrget
      00031B FE               [12] 1654 	mov	r6,a
      00031C A3               [24] 1655 	inc	dptr
      00031D 12r00r00         [24] 1656 	lcall	__gptrget
      000320 FF               [12] 1657 	mov	r7,a
      000321 8D 82            [24] 1658 	mov	dpl,r5
      000323 8E 83            [24] 1659 	mov	dph,r6
      000325 8F F0            [24] 1660 	mov	b,r7
      000327 12r00r00         [24] 1661 	lcall	__gptrget
      00032A FD               [12] 1662 	mov	r5,a
      00032B A3               [24] 1663 	inc	dptr
      00032C 12r00r00         [24] 1664 	lcall	__gptrget
      00032F FE               [12] 1665 	mov	r6,a
      000330 A3               [24] 1666 	inc	dptr
      000331 12r00r00         [24] 1667 	lcall	__gptrget
      000334 FF               [12] 1668 	mov	r7,a
      000335 ED               [12] 1669 	mov	a,r5
      000336 4E               [12] 1670 	orl	a,r6
      000337 60 3E            [24] 1671 	jz	00111$
                                   1672 ;	/opt/contiki/core/net/rime/ipolite.c:83: c->cb->recv(c, from);
      000339 C0 07            [24] 1673 	push	ar7
      00033B C0 06            [24] 1674 	push	ar6
      00033D C0 05            [24] 1675 	push	ar5
      00033F E5 81            [12] 1676 	mov	a,sp
      000341 24 F3            [12] 1677 	add	a,#0xf3
      000343 F8               [12] 1678 	mov	r0,a
      000344 E6               [12] 1679 	mov	a,@r0
      000345 C0 E0            [24] 1680 	push	acc
      000347 08               [12] 1681 	inc	r0
      000348 E6               [12] 1682 	mov	a,@r0
      000349 C0 E0            [24] 1683 	push	acc
      00034B 08               [12] 1684 	inc	r0
      00034C E6               [12] 1685 	mov	a,@r0
      00034D C0 E0            [24] 1686 	push	acc
      00034F C0 05            [24] 1687 	push	ar5
      000351 C0 06            [24] 1688 	push	ar6
      000353 C0 07            [24] 1689 	push	ar7
      000355 E5 81            [12] 1690 	mov	a,sp
      000357 24 F5            [12] 1691 	add	a,#0xf5
      000359 F8               [12] 1692 	mov	r0,a
      00035A 86 82            [24] 1693 	mov	dpl,@r0
      00035C 08               [12] 1694 	inc	r0
      00035D 86 83            [24] 1695 	mov	dph,@r0
      00035F 08               [12] 1696 	inc	r0
      000360 86 F0            [24] 1697 	mov	b,@r0
      000362 D0 02            [24] 1698 	pop	ar2
      000364 D0 01            [24] 1699 	pop	ar1
      000366 D0 00            [24] 1700 	pop	ar0
      000368 12r00r00         [24] 1701 	lcall	__sdcc_banked_call
      00036B 15 81            [12] 1702 	dec	sp
      00036D 15 81            [12] 1703 	dec	sp
      00036F 15 81            [12] 1704 	dec	sp
      000371 D0 05            [24] 1705 	pop	ar5
      000373 D0 06            [24] 1706 	pop	ar6
      000375 D0 07            [24] 1707 	pop	ar7
      000377                       1708 00111$:
      000377 E5 81            [12] 1709 	mov	a,sp
      000379 24 FB            [12] 1710 	add	a,#0xFB
      00037B F5 81            [12] 1711 	mov	sp,a
      00037D 02r00r00         [24] 1712 	ljmp	__sdcc_banked_ret
                                   1713 ;------------------------------------------------------------
                                   1714 ;Allocation info for local variables in function 'sent'
                                   1715 ;------------------------------------------------------------
                                   1716 ;status                    Allocated to stack - sp -4
                                   1717 ;num_tx                    Allocated to stack - sp -6
                                   1718 ;bc                        Allocated to registers 
                                   1719 ;------------------------------------------------------------
                                   1720 ;	/opt/contiki/core/net/rime/ipolite.c:88: sent(struct broadcast_conn *bc, int status, int num_tx)
                                   1721 ;	-----------------------------------------
                                   1722 ;	 function sent
                                   1723 ;	-----------------------------------------
      000380                       1724 _sent:
                                   1725 ;	/opt/contiki/core/net/rime/ipolite.c:91: }
      000380 02r00r00         [24] 1726 	ljmp	__sdcc_banked_ret
                                   1727 ;------------------------------------------------------------
                                   1728 ;Allocation info for local variables in function 'send'
                                   1729 ;------------------------------------------------------------
                                   1730 ;ptr                       Allocated to registers r5 r6 r7 
                                   1731 ;c                         Allocated to stack - sp -2
                                   1732 ;sloc0                     Allocated to stack - sp +4
                                   1733 ;------------------------------------------------------------
                                   1734 ;	/opt/contiki/core/net/rime/ipolite.c:94: send(void *ptr)
                                   1735 ;	-----------------------------------------
                                   1736 ;	 function send
                                   1737 ;	-----------------------------------------
      000383                       1738 _send:
      000383 05 81            [12] 1739 	inc	sp
      000385 05 81            [12] 1740 	inc	sp
      000387 05 81            [12] 1741 	inc	sp
      000389 AD 82            [24] 1742 	mov	r5,dpl
      00038B AE 83            [24] 1743 	mov	r6,dph
      00038D AF F0            [24] 1744 	mov	r7,b
                                   1745 ;	/opt/contiki/core/net/rime/ipolite.c:96: struct ipolite_conn *c = ptr;
      00038F A8 81            [24] 1746 	mov	r0,sp
      000391 18               [12] 1747 	dec	r0
      000392 18               [12] 1748 	dec	r0
      000393 A6 05            [24] 1749 	mov	@r0,ar5
      000395 08               [12] 1750 	inc	r0
      000396 A6 06            [24] 1751 	mov	@r0,ar6
      000398 08               [12] 1752 	inc	r0
      000399 A6 07            [24] 1753 	mov	@r0,ar7
                                   1754 ;	/opt/contiki/core/net/rime/ipolite.c:102: if(c->q != NULL) {
      00039B A8 81            [24] 1755 	mov	r0,sp
      00039D 18               [12] 1756 	dec	r0
      00039E 18               [12] 1757 	dec	r0
      00039F 74 28            [12] 1758 	mov	a,#0x28
      0003A1 26               [12] 1759 	add	a,@r0
      0003A2 FA               [12] 1760 	mov	r2,a
      0003A3 E4               [12] 1761 	clr	a
      0003A4 08               [12] 1762 	inc	r0
      0003A5 36               [12] 1763 	addc	a,@r0
      0003A6 FB               [12] 1764 	mov	r3,a
      0003A7 08               [12] 1765 	inc	r0
      0003A8 86 04            [24] 1766 	mov	ar4,@r0
      0003AA 8A 82            [24] 1767 	mov	dpl,r2
      0003AC 8B 83            [24] 1768 	mov	dph,r3
      0003AE 8C F0            [24] 1769 	mov	b,r4
      0003B0 12r00r00         [24] 1770 	lcall	__gptrget
      0003B3 FF               [12] 1771 	mov	r7,a
      0003B4 A3               [24] 1772 	inc	dptr
      0003B5 12r00r00         [24] 1773 	lcall	__gptrget
      0003B8 FE               [12] 1774 	mov	r6,a
      0003B9 A3               [24] 1775 	inc	dptr
      0003BA 12r00r00         [24] 1776 	lcall	__gptrget
      0003BD FD               [12] 1777 	mov	r5,a
      0003BE EF               [12] 1778 	mov	a,r7
      0003BF 4E               [12] 1779 	orl	a,r6
      0003C0 70 03            [24] 1780 	jnz	00113$
      0003C2 02r04rA0         [24] 1781 	ljmp	00105$
      0003C5                       1782 00113$:
                                   1783 ;	/opt/contiki/core/net/rime/ipolite.c:103: queuebuf_to_packetbuf(c->q);
      0003C5 8F 82            [24] 1784 	mov	dpl,r7
      0003C7 8E 83            [24] 1785 	mov	dph,r6
      0003C9 8D F0            [24] 1786 	mov	b,r5
      0003CB C0 04            [24] 1787 	push	ar4
      0003CD C0 03            [24] 1788 	push	ar3
      0003CF C0 02            [24] 1789 	push	ar2
      0003D1 78r00            [12] 1790 	mov	r0,#_queuebuf_to_packetbuf
      0003D3 79s00            [12] 1791 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      0003D5 7As00            [12] 1792 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      0003D7 12r00r00         [24] 1793 	lcall	__sdcc_banked_call
      0003DA D0 02            [24] 1794 	pop	ar2
      0003DC D0 03            [24] 1795 	pop	ar3
      0003DE D0 04            [24] 1796 	pop	ar4
                                   1797 ;	/opt/contiki/core/net/rime/ipolite.c:104: queuebuf_free(c->q);
      0003E0 8A 82            [24] 1798 	mov	dpl,r2
      0003E2 8B 83            [24] 1799 	mov	dph,r3
      0003E4 8C F0            [24] 1800 	mov	b,r4
      0003E6 12r00r00         [24] 1801 	lcall	__gptrget
      0003E9 FD               [12] 1802 	mov	r5,a
      0003EA A3               [24] 1803 	inc	dptr
      0003EB 12r00r00         [24] 1804 	lcall	__gptrget
      0003EE FE               [12] 1805 	mov	r6,a
      0003EF A3               [24] 1806 	inc	dptr
      0003F0 12r00r00         [24] 1807 	lcall	__gptrget
      0003F3 FF               [12] 1808 	mov	r7,a
      0003F4 8D 82            [24] 1809 	mov	dpl,r5
      0003F6 8E 83            [24] 1810 	mov	dph,r6
      0003F8 8F F0            [24] 1811 	mov	b,r7
      0003FA C0 04            [24] 1812 	push	ar4
      0003FC C0 03            [24] 1813 	push	ar3
      0003FE C0 02            [24] 1814 	push	ar2
      000400 78r00            [12] 1815 	mov	r0,#_queuebuf_free
      000402 79s00            [12] 1816 	mov	r1,#(_queuebuf_free >> 8)
      000404 7As00            [12] 1817 	mov	r2,#(_queuebuf_free >> 16)
      000406 12r00r00         [24] 1818 	lcall	__sdcc_banked_call
      000409 D0 02            [24] 1819 	pop	ar2
      00040B D0 03            [24] 1820 	pop	ar3
      00040D D0 04            [24] 1821 	pop	ar4
                                   1822 ;	/opt/contiki/core/net/rime/ipolite.c:105: c->q = NULL;
      00040F 8A 82            [24] 1823 	mov	dpl,r2
      000411 8B 83            [24] 1824 	mov	dph,r3
      000413 8C F0            [24] 1825 	mov	b,r4
      000415 E4               [12] 1826 	clr	a
      000416 12r00r00         [24] 1827 	lcall	__gptrput
      000419 A3               [24] 1828 	inc	dptr
      00041A 12r00r00         [24] 1829 	lcall	__gptrput
      00041D A3               [24] 1830 	inc	dptr
      00041E 12r00r00         [24] 1831 	lcall	__gptrput
                                   1832 ;	/opt/contiki/core/net/rime/ipolite.c:106: broadcast_send(&c->c);
      000421 A8 81            [24] 1833 	mov	r0,sp
      000423 18               [12] 1834 	dec	r0
      000424 18               [12] 1835 	dec	r0
      000425 86 82            [24] 1836 	mov	dpl,@r0
      000427 08               [12] 1837 	inc	r0
      000428 86 83            [24] 1838 	mov	dph,@r0
      00042A 08               [12] 1839 	inc	r0
      00042B 86 F0            [24] 1840 	mov	b,@r0
      00042D 78r00            [12] 1841 	mov	r0,#_broadcast_send
      00042F 79s00            [12] 1842 	mov	r1,#(_broadcast_send >> 8)
      000431 7As00            [12] 1843 	mov	r2,#(_broadcast_send >> 16)
      000433 12r00r00         [24] 1844 	lcall	__sdcc_banked_call
                                   1845 ;	/opt/contiki/core/net/rime/ipolite.c:107: if(c->cb->sent) {
      000436 A8 81            [24] 1846 	mov	r0,sp
      000438 18               [12] 1847 	dec	r0
      000439 18               [12] 1848 	dec	r0
      00043A 74 0F            [12] 1849 	mov	a,#0x0F
      00043C 26               [12] 1850 	add	a,@r0
      00043D FD               [12] 1851 	mov	r5,a
      00043E E4               [12] 1852 	clr	a
      00043F 08               [12] 1853 	inc	r0
      000440 36               [12] 1854 	addc	a,@r0
      000441 FE               [12] 1855 	mov	r6,a
      000442 08               [12] 1856 	inc	r0
      000443 86 07            [24] 1857 	mov	ar7,@r0
      000445 8D 82            [24] 1858 	mov	dpl,r5
      000447 8E 83            [24] 1859 	mov	dph,r6
      000449 8F F0            [24] 1860 	mov	b,r7
      00044B 12r00r00         [24] 1861 	lcall	__gptrget
      00044E FD               [12] 1862 	mov	r5,a
      00044F A3               [24] 1863 	inc	dptr
      000450 12r00r00         [24] 1864 	lcall	__gptrget
      000453 FE               [12] 1865 	mov	r6,a
      000454 A3               [24] 1866 	inc	dptr
      000455 12r00r00         [24] 1867 	lcall	__gptrget
      000458 FF               [12] 1868 	mov	r7,a
      000459 74 03            [12] 1869 	mov	a,#0x03
      00045B 2D               [12] 1870 	add	a,r5
      00045C FD               [12] 1871 	mov	r5,a
      00045D E4               [12] 1872 	clr	a
      00045E 3E               [12] 1873 	addc	a,r6
      00045F FE               [12] 1874 	mov	r6,a
      000460 8D 82            [24] 1875 	mov	dpl,r5
      000462 8E 83            [24] 1876 	mov	dph,r6
      000464 8F F0            [24] 1877 	mov	b,r7
      000466 12r00r00         [24] 1878 	lcall	__gptrget
      000469 FD               [12] 1879 	mov	r5,a
      00046A A3               [24] 1880 	inc	dptr
      00046B 12r00r00         [24] 1881 	lcall	__gptrget
      00046E FE               [12] 1882 	mov	r6,a
      00046F A3               [24] 1883 	inc	dptr
      000470 12r00r00         [24] 1884 	lcall	__gptrget
      000473 FF               [12] 1885 	mov	r7,a
      000474 ED               [12] 1886 	mov	a,r5
      000475 4E               [12] 1887 	orl	a,r6
      000476 60 28            [24] 1888 	jz	00105$
                                   1889 ;	/opt/contiki/core/net/rime/ipolite.c:108: c->cb->sent(c);
      000478 C0 07            [24] 1890 	push	ar7
      00047A C0 06            [24] 1891 	push	ar6
      00047C C0 05            [24] 1892 	push	ar5
      00047E C0 05            [24] 1893 	push	ar5
      000480 C0 06            [24] 1894 	push	ar6
      000482 C0 07            [24] 1895 	push	ar7
      000484 E5 81            [12] 1896 	mov	a,sp
      000486 24 F8            [12] 1897 	add	a,#0xf8
      000488 F8               [12] 1898 	mov	r0,a
      000489 86 82            [24] 1899 	mov	dpl,@r0
      00048B 08               [12] 1900 	inc	r0
      00048C 86 83            [24] 1901 	mov	dph,@r0
      00048E 08               [12] 1902 	inc	r0
      00048F 86 F0            [24] 1903 	mov	b,@r0
      000491 D0 02            [24] 1904 	pop	ar2
      000493 D0 01            [24] 1905 	pop	ar1
      000495 D0 00            [24] 1906 	pop	ar0
      000497 12r00r00         [24] 1907 	lcall	__sdcc_banked_call
      00049A D0 05            [24] 1908 	pop	ar5
      00049C D0 06            [24] 1909 	pop	ar6
      00049E D0 07            [24] 1910 	pop	ar7
      0004A0                       1911 00105$:
      0004A0 15 81            [12] 1912 	dec	sp
      0004A2 15 81            [12] 1913 	dec	sp
      0004A4 15 81            [12] 1914 	dec	sp
      0004A6 02r00r00         [24] 1915 	ljmp	__sdcc_banked_ret
                                   1916 ;------------------------------------------------------------
                                   1917 ;Allocation info for local variables in function 'ipolite_open'
                                   1918 ;------------------------------------------------------------
                                   1919 ;channel                   Allocated to stack - sp -4
                                   1920 ;dups                      Allocated to stack - sp -5
                                   1921 ;cb                        Allocated to stack - sp -8
                                   1922 ;c                         Allocated to registers r5 r6 r7 
                                   1923 ;------------------------------------------------------------
                                   1924 ;	/opt/contiki/core/net/rime/ipolite.c:116: ipolite_open(struct ipolite_conn *c, uint16_t channel, uint8_t dups,
                                   1925 ;	-----------------------------------------
                                   1926 ;	 function ipolite_open
                                   1927 ;	-----------------------------------------
      0004A9                       1928 _ipolite_open:
      0004A9 AD 82            [24] 1929 	mov	r5,dpl
      0004AB AE 83            [24] 1930 	mov	r6,dph
      0004AD AF F0            [24] 1931 	mov	r7,b
                                   1932 ;	/opt/contiki/core/net/rime/ipolite.c:119: broadcast_open(&c->c, channel, &broadcast);
      0004AF C0 07            [24] 1933 	push	ar7
      0004B1 C0 06            [24] 1934 	push	ar6
      0004B3 C0 05            [24] 1935 	push	ar5
      0004B5 74r00            [12] 1936 	mov	a,#_broadcast
      0004B7 C0 E0            [24] 1937 	push	acc
      0004B9 74s00            [12] 1938 	mov	a,#(_broadcast >> 8)
      0004BB C0 E0            [24] 1939 	push	acc
      0004BD 74 80            [12] 1940 	mov	a,#0x80
      0004BF C0 E0            [24] 1941 	push	acc
      0004C1 E5 81            [12] 1942 	mov	a,sp
      0004C3 24 F6            [12] 1943 	add	a,#0xf6
      0004C5 F8               [12] 1944 	mov	r0,a
      0004C6 E6               [12] 1945 	mov	a,@r0
      0004C7 C0 E0            [24] 1946 	push	acc
      0004C9 08               [12] 1947 	inc	r0
      0004CA E6               [12] 1948 	mov	a,@r0
      0004CB C0 E0            [24] 1949 	push	acc
      0004CD 8D 82            [24] 1950 	mov	dpl,r5
      0004CF 8E 83            [24] 1951 	mov	dph,r6
      0004D1 8F F0            [24] 1952 	mov	b,r7
      0004D3 78r00            [12] 1953 	mov	r0,#_broadcast_open
      0004D5 79s00            [12] 1954 	mov	r1,#(_broadcast_open >> 8)
      0004D7 7As00            [12] 1955 	mov	r2,#(_broadcast_open >> 16)
      0004D9 12r00r00         [24] 1956 	lcall	__sdcc_banked_call
      0004DC E5 81            [12] 1957 	mov	a,sp
      0004DE 24 FB            [12] 1958 	add	a,#0xfb
      0004E0 F5 81            [12] 1959 	mov	sp,a
      0004E2 D0 05            [24] 1960 	pop	ar5
      0004E4 D0 06            [24] 1961 	pop	ar6
      0004E6 D0 07            [24] 1962 	pop	ar7
                                   1963 ;	/opt/contiki/core/net/rime/ipolite.c:120: c->cb = cb;
      0004E8 74 0F            [12] 1964 	mov	a,#0x0F
      0004EA 2D               [12] 1965 	add	a,r5
      0004EB FA               [12] 1966 	mov	r2,a
      0004EC E4               [12] 1967 	clr	a
      0004ED 3E               [12] 1968 	addc	a,r6
      0004EE FB               [12] 1969 	mov	r3,a
      0004EF 8F 04            [24] 1970 	mov	ar4,r7
      0004F1 8A 82            [24] 1971 	mov	dpl,r2
      0004F3 8B 83            [24] 1972 	mov	dph,r3
      0004F5 8C F0            [24] 1973 	mov	b,r4
      0004F7 E5 81            [12] 1974 	mov	a,sp
      0004F9 24 F8            [12] 1975 	add	a,#0xf8
      0004FB F8               [12] 1976 	mov	r0,a
      0004FC E6               [12] 1977 	mov	a,@r0
      0004FD 12r00r00         [24] 1978 	lcall	__gptrput
      000500 A3               [24] 1979 	inc	dptr
      000501 08               [12] 1980 	inc	r0
      000502 E6               [12] 1981 	mov	a,@r0
      000503 12r00r00         [24] 1982 	lcall	__gptrput
      000506 A3               [24] 1983 	inc	dptr
      000507 08               [12] 1984 	inc	r0
      000508 E6               [12] 1985 	mov	a,@r0
      000509 12r00r00         [24] 1986 	lcall	__gptrput
                                   1987 ;	/opt/contiki/core/net/rime/ipolite.c:121: c->maxdups = dups;
      00050C 74 2C            [12] 1988 	mov	a,#0x2C
      00050E 2D               [12] 1989 	add	a,r5
      00050F FD               [12] 1990 	mov	r5,a
      000510 E4               [12] 1991 	clr	a
      000511 3E               [12] 1992 	addc	a,r6
      000512 FE               [12] 1993 	mov	r6,a
      000513 8D 82            [24] 1994 	mov	dpl,r5
      000515 8E 83            [24] 1995 	mov	dph,r6
      000517 8F F0            [24] 1996 	mov	b,r7
      000519 E5 81            [12] 1997 	mov	a,sp
      00051B 24 FB            [12] 1998 	add	a,#0xfb
      00051D F8               [12] 1999 	mov	r0,a
      00051E E6               [12] 2000 	mov	a,@r0
      00051F 12r00r00         [24] 2001 	lcall	__gptrput
      000522 02r00r00         [24] 2002 	ljmp	__sdcc_banked_ret
                                   2003 ;------------------------------------------------------------
                                   2004 ;Allocation info for local variables in function 'ipolite_close'
                                   2005 ;------------------------------------------------------------
                                   2006 ;c                         Allocated to registers r5 r6 r7 
                                   2007 ;------------------------------------------------------------
                                   2008 ;	/opt/contiki/core/net/rime/ipolite.c:126: ipolite_close(struct ipolite_conn *c)
                                   2009 ;	-----------------------------------------
                                   2010 ;	 function ipolite_close
                                   2011 ;	-----------------------------------------
      000525                       2012 _ipolite_close:
                                   2013 ;	/opt/contiki/core/net/rime/ipolite.c:128: broadcast_close(&c->c);
      000525 AD 82            [24] 2014 	mov	r5,dpl
      000527 AE 83            [24] 2015 	mov	r6,dph
      000529 AF F0            [24] 2016 	mov	r7,b
      00052B C0 07            [24] 2017 	push	ar7
      00052D C0 06            [24] 2018 	push	ar6
      00052F C0 05            [24] 2019 	push	ar5
      000531 78r00            [12] 2020 	mov	r0,#_broadcast_close
      000533 79s00            [12] 2021 	mov	r1,#(_broadcast_close >> 8)
      000535 7As00            [12] 2022 	mov	r2,#(_broadcast_close >> 16)
      000537 12r00r00         [24] 2023 	lcall	__sdcc_banked_call
      00053A D0 05            [24] 2024 	pop	ar5
      00053C D0 06            [24] 2025 	pop	ar6
      00053E D0 07            [24] 2026 	pop	ar7
                                   2027 ;	/opt/contiki/core/net/rime/ipolite.c:129: ctimer_stop(&c->t);
      000540 74 12            [12] 2028 	mov	a,#0x12
      000542 2D               [12] 2029 	add	a,r5
      000543 FA               [12] 2030 	mov	r2,a
      000544 E4               [12] 2031 	clr	a
      000545 3E               [12] 2032 	addc	a,r6
      000546 FB               [12] 2033 	mov	r3,a
      000547 8F 04            [24] 2034 	mov	ar4,r7
      000549 8A 82            [24] 2035 	mov	dpl,r2
      00054B 8B 83            [24] 2036 	mov	dph,r3
      00054D 8C F0            [24] 2037 	mov	b,r4
      00054F C0 07            [24] 2038 	push	ar7
      000551 C0 06            [24] 2039 	push	ar6
      000553 C0 05            [24] 2040 	push	ar5
      000555 78r00            [12] 2041 	mov	r0,#_ctimer_stop
      000557 79s00            [12] 2042 	mov	r1,#(_ctimer_stop >> 8)
      000559 7As00            [12] 2043 	mov	r2,#(_ctimer_stop >> 16)
      00055B 12r00r00         [24] 2044 	lcall	__sdcc_banked_call
      00055E D0 05            [24] 2045 	pop	ar5
      000560 D0 06            [24] 2046 	pop	ar6
      000562 D0 07            [24] 2047 	pop	ar7
                                   2048 ;	/opt/contiki/core/net/rime/ipolite.c:130: if(c->q != NULL) {
      000564 74 28            [12] 2049 	mov	a,#0x28
      000566 2D               [12] 2050 	add	a,r5
      000567 FD               [12] 2051 	mov	r5,a
      000568 E4               [12] 2052 	clr	a
      000569 3E               [12] 2053 	addc	a,r6
      00056A FE               [12] 2054 	mov	r6,a
      00056B 8D 82            [24] 2055 	mov	dpl,r5
      00056D 8E 83            [24] 2056 	mov	dph,r6
      00056F 8F F0            [24] 2057 	mov	b,r7
      000571 12r00r00         [24] 2058 	lcall	__gptrget
      000574 FA               [12] 2059 	mov	r2,a
      000575 A3               [24] 2060 	inc	dptr
      000576 12r00r00         [24] 2061 	lcall	__gptrget
      000579 FB               [12] 2062 	mov	r3,a
      00057A A3               [24] 2063 	inc	dptr
      00057B 12r00r00         [24] 2064 	lcall	__gptrget
      00057E FC               [12] 2065 	mov	r4,a
      00057F EA               [12] 2066 	mov	a,r2
      000580 4B               [12] 2067 	orl	a,r3
      000581 60 2D            [24] 2068 	jz	00103$
                                   2069 ;	/opt/contiki/core/net/rime/ipolite.c:131: queuebuf_free(c->q);
      000583 8A 82            [24] 2070 	mov	dpl,r2
      000585 8B 83            [24] 2071 	mov	dph,r3
      000587 8C F0            [24] 2072 	mov	b,r4
      000589 C0 07            [24] 2073 	push	ar7
      00058B C0 06            [24] 2074 	push	ar6
      00058D C0 05            [24] 2075 	push	ar5
      00058F 78r00            [12] 2076 	mov	r0,#_queuebuf_free
      000591 79s00            [12] 2077 	mov	r1,#(_queuebuf_free >> 8)
      000593 7As00            [12] 2078 	mov	r2,#(_queuebuf_free >> 16)
      000595 12r00r00         [24] 2079 	lcall	__sdcc_banked_call
      000598 D0 05            [24] 2080 	pop	ar5
      00059A D0 06            [24] 2081 	pop	ar6
      00059C D0 07            [24] 2082 	pop	ar7
                                   2083 ;	/opt/contiki/core/net/rime/ipolite.c:132: c->q = NULL;
      00059E 8D 82            [24] 2084 	mov	dpl,r5
      0005A0 8E 83            [24] 2085 	mov	dph,r6
      0005A2 8F F0            [24] 2086 	mov	b,r7
      0005A4 E4               [12] 2087 	clr	a
      0005A5 12r00r00         [24] 2088 	lcall	__gptrput
      0005A8 A3               [24] 2089 	inc	dptr
      0005A9 12r00r00         [24] 2090 	lcall	__gptrput
      0005AC A3               [24] 2091 	inc	dptr
      0005AD 12r00r00         [24] 2092 	lcall	__gptrput
      0005B0                       2093 00103$:
      0005B0 02r00r00         [24] 2094 	ljmp	__sdcc_banked_ret
                                   2095 ;------------------------------------------------------------
                                   2096 ;Allocation info for local variables in function 'ipolite_send'
                                   2097 ;------------------------------------------------------------
                                   2098 ;interval                  Allocated to stack - sp -10
                                   2099 ;hdrsize                   Allocated to stack - sp -11
                                   2100 ;c                         Allocated to stack - sp -5
                                   2101 ;sloc0                     Allocated to stack - sp -2
                                   2102 ;------------------------------------------------------------
                                   2103 ;	/opt/contiki/core/net/rime/ipolite.c:137: ipolite_send(struct ipolite_conn *c, clock_time_t interval, uint8_t hdrsize)
                                   2104 ;	-----------------------------------------
                                   2105 ;	 function ipolite_send
                                   2106 ;	-----------------------------------------
      0005B3                       2107 _ipolite_send:
      0005B3 C0 82            [24] 2108 	push	dpl
      0005B5 C0 83            [24] 2109 	push	dph
      0005B7 C0 F0            [24] 2110 	push	b
      0005B9 05 81            [12] 2111 	inc	sp
      0005BB 05 81            [12] 2112 	inc	sp
      0005BD 05 81            [12] 2113 	inc	sp
                                   2114 ;	/opt/contiki/core/net/rime/ipolite.c:139: if(c->q != NULL) {
      0005BF E5 81            [12] 2115 	mov	a,sp
      0005C1 24 FB            [12] 2116 	add	a,#0xfb
      0005C3 F8               [12] 2117 	mov	r0,a
      0005C4 74 28            [12] 2118 	mov	a,#0x28
      0005C6 26               [12] 2119 	add	a,@r0
      0005C7 FA               [12] 2120 	mov	r2,a
      0005C8 E4               [12] 2121 	clr	a
      0005C9 08               [12] 2122 	inc	r0
      0005CA 36               [12] 2123 	addc	a,@r0
      0005CB FB               [12] 2124 	mov	r3,a
      0005CC 08               [12] 2125 	inc	r0
      0005CD 86 04            [24] 2126 	mov	ar4,@r0
      0005CF 8A 82            [24] 2127 	mov	dpl,r2
      0005D1 8B 83            [24] 2128 	mov	dph,r3
      0005D3 8C F0            [24] 2129 	mov	b,r4
      0005D5 12r00r00         [24] 2130 	lcall	__gptrget
      0005D8 FF               [12] 2131 	mov	r7,a
      0005D9 A3               [24] 2132 	inc	dptr
      0005DA 12r00r00         [24] 2133 	lcall	__gptrget
      0005DD FE               [12] 2134 	mov	r6,a
      0005DE A3               [24] 2135 	inc	dptr
      0005DF 12r00r00         [24] 2136 	lcall	__gptrget
      0005E2 FD               [12] 2137 	mov	r5,a
      0005E3 EF               [12] 2138 	mov	a,r7
      0005E4 4E               [12] 2139 	orl	a,r6
      0005E5 60 64            [24] 2140 	jz	00102$
                                   2141 ;	/opt/contiki/core/net/rime/ipolite.c:143: queuebuf_free(c->q);
      0005E7 8F 82            [24] 2142 	mov	dpl,r7
      0005E9 8E 83            [24] 2143 	mov	dph,r6
      0005EB 8D F0            [24] 2144 	mov	b,r5
      0005ED C0 04            [24] 2145 	push	ar4
      0005EF C0 03            [24] 2146 	push	ar3
      0005F1 C0 02            [24] 2147 	push	ar2
      0005F3 78r00            [12] 2148 	mov	r0,#_queuebuf_free
      0005F5 79s00            [12] 2149 	mov	r1,#(_queuebuf_free >> 8)
      0005F7 7As00            [12] 2150 	mov	r2,#(_queuebuf_free >> 16)
      0005F9 12r00r00         [24] 2151 	lcall	__sdcc_banked_call
      0005FC D0 02            [24] 2152 	pop	ar2
      0005FE D0 03            [24] 2153 	pop	ar3
      000600 D0 04            [24] 2154 	pop	ar4
                                   2155 ;	/opt/contiki/core/net/rime/ipolite.c:144: c->q = NULL;
      000602 8A 82            [24] 2156 	mov	dpl,r2
      000604 8B 83            [24] 2157 	mov	dph,r3
      000606 8C F0            [24] 2158 	mov	b,r4
      000608 E4               [12] 2159 	clr	a
      000609 12r00r00         [24] 2160 	lcall	__gptrput
      00060C A3               [24] 2161 	inc	dptr
      00060D 12r00r00         [24] 2162 	lcall	__gptrput
      000610 A3               [24] 2163 	inc	dptr
      000611 12r00r00         [24] 2164 	lcall	__gptrput
                                   2165 ;	/opt/contiki/core/net/rime/ipolite.c:145: ctimer_stop(&c->t);
      000614 C0 02            [24] 2166 	push	ar2
      000616 C0 03            [24] 2167 	push	ar3
      000618 C0 04            [24] 2168 	push	ar4
      00061A E5 81            [12] 2169 	mov	a,sp
      00061C 24 F8            [12] 2170 	add	a,#0xf8
      00061E F8               [12] 2171 	mov	r0,a
      00061F 74 12            [12] 2172 	mov	a,#0x12
      000621 26               [12] 2173 	add	a,@r0
      000622 FA               [12] 2174 	mov	r2,a
      000623 E4               [12] 2175 	clr	a
      000624 08               [12] 2176 	inc	r0
      000625 36               [12] 2177 	addc	a,@r0
      000626 FB               [12] 2178 	mov	r3,a
      000627 08               [12] 2179 	inc	r0
      000628 86 04            [24] 2180 	mov	ar4,@r0
      00062A 8A 82            [24] 2181 	mov	dpl,r2
      00062C 8B 83            [24] 2182 	mov	dph,r3
      00062E 8C F0            [24] 2183 	mov	b,r4
      000630 C0 04            [24] 2184 	push	ar4
      000632 C0 03            [24] 2185 	push	ar3
      000634 C0 02            [24] 2186 	push	ar2
      000636 78r00            [12] 2187 	mov	r0,#_ctimer_stop
      000638 79s00            [12] 2188 	mov	r1,#(_ctimer_stop >> 8)
      00063A 7As00            [12] 2189 	mov	r2,#(_ctimer_stop >> 16)
      00063C 12r00r00         [24] 2190 	lcall	__sdcc_banked_call
      00063F D0 02            [24] 2191 	pop	ar2
      000641 D0 03            [24] 2192 	pop	ar3
      000643 D0 04            [24] 2193 	pop	ar4
                                   2194 ;	/opt/contiki/core/net/rime/ipolite.c:170: return 0;
      000645 D0 04            [24] 2195 	pop	ar4
      000647 D0 03            [24] 2196 	pop	ar3
      000649 D0 02            [24] 2197 	pop	ar2
                                   2198 ;	/opt/contiki/core/net/rime/ipolite.c:145: ctimer_stop(&c->t);
      00064B                       2199 00102$:
                                   2200 ;	/opt/contiki/core/net/rime/ipolite.c:147: c->dups = 0;
      00064B C0 02            [24] 2201 	push	ar2
      00064D C0 03            [24] 2202 	push	ar3
      00064F C0 04            [24] 2203 	push	ar4
      000651 E5 81            [12] 2204 	mov	a,sp
      000653 24 F8            [12] 2205 	add	a,#0xf8
      000655 F8               [12] 2206 	mov	r0,a
      000656 74 2D            [12] 2207 	mov	a,#0x2D
      000658 26               [12] 2208 	add	a,@r0
      000659 FA               [12] 2209 	mov	r2,a
      00065A E4               [12] 2210 	clr	a
      00065B 08               [12] 2211 	inc	r0
      00065C 36               [12] 2212 	addc	a,@r0
      00065D FB               [12] 2213 	mov	r3,a
      00065E 08               [12] 2214 	inc	r0
      00065F 86 04            [24] 2215 	mov	ar4,@r0
      000661 8A 82            [24] 2216 	mov	dpl,r2
      000663 8B 83            [24] 2217 	mov	dph,r3
      000665 8C F0            [24] 2218 	mov	b,r4
      000667 E4               [12] 2219 	clr	a
      000668 12r00r00         [24] 2220 	lcall	__gptrput
                                   2221 ;	/opt/contiki/core/net/rime/ipolite.c:148: c->hdrsize = hdrsize;
      00066B E5 81            [12] 2222 	mov	a,sp
      00066D 24 F8            [12] 2223 	add	a,#0xf8
      00066F F8               [12] 2224 	mov	r0,a
      000670 74 2B            [12] 2225 	mov	a,#0x2B
      000672 26               [12] 2226 	add	a,@r0
      000673 FA               [12] 2227 	mov	r2,a
      000674 E4               [12] 2228 	clr	a
      000675 08               [12] 2229 	inc	r0
      000676 36               [12] 2230 	addc	a,@r0
      000677 FB               [12] 2231 	mov	r3,a
      000678 08               [12] 2232 	inc	r0
      000679 86 04            [24] 2233 	mov	ar4,@r0
      00067B 8A 82            [24] 2234 	mov	dpl,r2
      00067D 8B 83            [24] 2235 	mov	dph,r3
      00067F 8C F0            [24] 2236 	mov	b,r4
      000681 E5 81            [12] 2237 	mov	a,sp
      000683 24 F2            [12] 2238 	add	a,#0xf2
      000685 F8               [12] 2239 	mov	r0,a
      000686 E6               [12] 2240 	mov	a,@r0
      000687 12r00r00         [24] 2241 	lcall	__gptrput
                                   2242 ;	/opt/contiki/core/net/rime/ipolite.c:149: if(interval == 0) {
      00068A D0 04            [24] 2243 	pop	ar4
      00068C D0 03            [24] 2244 	pop	ar3
      00068E D0 02            [24] 2245 	pop	ar2
      000690 E5 81            [12] 2246 	mov	a,sp
      000692 24 F6            [12] 2247 	add	a,#0xf6
      000694 F8               [12] 2248 	mov	r0,a
      000695 E6               [12] 2249 	mov	a,@r0
      000696 08               [12] 2250 	inc	r0
      000697 46               [12] 2251 	orl	a,@r0
      000698 60 03            [24] 2252 	jz	00130$
      00069A 02r07r30         [24] 2253 	ljmp	00110$
      00069D                       2254 00130$:
                                   2255 ;	/opt/contiki/core/net/rime/ipolite.c:152: if(broadcast_send(&c->c)) {
      00069D E5 81            [12] 2256 	mov	a,sp
      00069F 24 FB            [12] 2257 	add	a,#0xfb
      0006A1 F8               [12] 2258 	mov	r0,a
      0006A2 86 82            [24] 2259 	mov	dpl,@r0
      0006A4 08               [12] 2260 	inc	r0
      0006A5 86 83            [24] 2261 	mov	dph,@r0
      0006A7 08               [12] 2262 	inc	r0
      0006A8 86 F0            [24] 2263 	mov	b,@r0
      0006AA 78r00            [12] 2264 	mov	r0,#_broadcast_send
      0006AC 79s00            [12] 2265 	mov	r1,#(_broadcast_send >> 8)
      0006AE 7As00            [12] 2266 	mov	r2,#(_broadcast_send >> 16)
      0006B0 12r00r00         [24] 2267 	lcall	__sdcc_banked_call
      0006B3 E5 82            [12] 2268 	mov	a,dpl
      0006B5 85 83 F0         [24] 2269 	mov	b,dph
      0006B8 45 F0            [12] 2270 	orl	a,b
      0006BA 70 03            [24] 2271 	jnz	00131$
      0006BC 02r08r07         [24] 2272 	ljmp	00111$
      0006BF                       2273 00131$:
                                   2274 ;	/opt/contiki/core/net/rime/ipolite.c:153: if(c->cb->sent) {
      0006BF E5 81            [12] 2275 	mov	a,sp
      0006C1 24 FB            [12] 2276 	add	a,#0xfb
      0006C3 F8               [12] 2277 	mov	r0,a
      0006C4 74 0F            [12] 2278 	mov	a,#0x0F
      0006C6 26               [12] 2279 	add	a,@r0
      0006C7 FD               [12] 2280 	mov	r5,a
      0006C8 E4               [12] 2281 	clr	a
      0006C9 08               [12] 2282 	inc	r0
      0006CA 36               [12] 2283 	addc	a,@r0
      0006CB FE               [12] 2284 	mov	r6,a
      0006CC 08               [12] 2285 	inc	r0
      0006CD 86 07            [24] 2286 	mov	ar7,@r0
      0006CF 8D 82            [24] 2287 	mov	dpl,r5
      0006D1 8E 83            [24] 2288 	mov	dph,r6
      0006D3 8F F0            [24] 2289 	mov	b,r7
      0006D5 12r00r00         [24] 2290 	lcall	__gptrget
      0006D8 FD               [12] 2291 	mov	r5,a
      0006D9 A3               [24] 2292 	inc	dptr
      0006DA 12r00r00         [24] 2293 	lcall	__gptrget
      0006DD FE               [12] 2294 	mov	r6,a
      0006DE A3               [24] 2295 	inc	dptr
      0006DF 12r00r00         [24] 2296 	lcall	__gptrget
      0006E2 FF               [12] 2297 	mov	r7,a
      0006E3 74 03            [12] 2298 	mov	a,#0x03
      0006E5 2D               [12] 2299 	add	a,r5
      0006E6 FD               [12] 2300 	mov	r5,a
      0006E7 E4               [12] 2301 	clr	a
      0006E8 3E               [12] 2302 	addc	a,r6
      0006E9 FE               [12] 2303 	mov	r6,a
      0006EA 8D 82            [24] 2304 	mov	dpl,r5
      0006EC 8E 83            [24] 2305 	mov	dph,r6
      0006EE 8F F0            [24] 2306 	mov	b,r7
      0006F0 12r00r00         [24] 2307 	lcall	__gptrget
      0006F3 FD               [12] 2308 	mov	r5,a
      0006F4 A3               [24] 2309 	inc	dptr
      0006F5 12r00r00         [24] 2310 	lcall	__gptrget
      0006F8 FE               [12] 2311 	mov	r6,a
      0006F9 A3               [24] 2312 	inc	dptr
      0006FA 12r00r00         [24] 2313 	lcall	__gptrget
      0006FD FF               [12] 2314 	mov	r7,a
      0006FE ED               [12] 2315 	mov	a,r5
      0006FF 4E               [12] 2316 	orl	a,r6
      000700 60 28            [24] 2317 	jz	00104$
                                   2318 ;	/opt/contiki/core/net/rime/ipolite.c:154: c->cb->sent(c);
      000702 C0 07            [24] 2319 	push	ar7
      000704 C0 06            [24] 2320 	push	ar6
      000706 C0 05            [24] 2321 	push	ar5
      000708 C0 05            [24] 2322 	push	ar5
      00070A C0 06            [24] 2323 	push	ar6
      00070C C0 07            [24] 2324 	push	ar7
      00070E E5 81            [12] 2325 	mov	a,sp
      000710 24 F5            [12] 2326 	add	a,#0xf5
      000712 F8               [12] 2327 	mov	r0,a
      000713 86 82            [24] 2328 	mov	dpl,@r0
      000715 08               [12] 2329 	inc	r0
      000716 86 83            [24] 2330 	mov	dph,@r0
      000718 08               [12] 2331 	inc	r0
      000719 86 F0            [24] 2332 	mov	b,@r0
      00071B D0 02            [24] 2333 	pop	ar2
      00071D D0 01            [24] 2334 	pop	ar1
      00071F D0 00            [24] 2335 	pop	ar0
      000721 12r00r00         [24] 2336 	lcall	__sdcc_banked_call
      000724 D0 05            [24] 2337 	pop	ar5
      000726 D0 06            [24] 2338 	pop	ar6
      000728 D0 07            [24] 2339 	pop	ar7
      00072A                       2340 00104$:
                                   2341 ;	/opt/contiki/core/net/rime/ipolite.c:156: return 1;
      00072A 90 00 01         [24] 2342 	mov	dptr,#0x0001
      00072D 02r08r0A         [24] 2343 	ljmp	00112$
      000730                       2344 00110$:
                                   2345 ;	/opt/contiki/core/net/rime/ipolite.c:160: c->q = queuebuf_new_from_packetbuf();
      000730 C0 04            [24] 2346 	push	ar4
      000732 C0 03            [24] 2347 	push	ar3
      000734 C0 02            [24] 2348 	push	ar2
      000736 78r00            [12] 2349 	mov	r0,#_queuebuf_new_from_packetbuf
      000738 79s00            [12] 2350 	mov	r1,#(_queuebuf_new_from_packetbuf >> 8)
      00073A 7As00            [12] 2351 	mov	r2,#(_queuebuf_new_from_packetbuf >> 16)
      00073C 12r00r00         [24] 2352 	lcall	__sdcc_banked_call
      00073F AD 82            [24] 2353 	mov	r5,dpl
      000741 AE 83            [24] 2354 	mov	r6,dph
      000743 AF F0            [24] 2355 	mov	r7,b
      000745 D0 02            [24] 2356 	pop	ar2
      000747 D0 03            [24] 2357 	pop	ar3
      000749 D0 04            [24] 2358 	pop	ar4
      00074B 8A 82            [24] 2359 	mov	dpl,r2
      00074D 8B 83            [24] 2360 	mov	dph,r3
      00074F 8C F0            [24] 2361 	mov	b,r4
      000751 ED               [12] 2362 	mov	a,r5
      000752 12r00r00         [24] 2363 	lcall	__gptrput
      000755 A3               [24] 2364 	inc	dptr
      000756 EE               [12] 2365 	mov	a,r6
      000757 12r00r00         [24] 2366 	lcall	__gptrput
      00075A A3               [24] 2367 	inc	dptr
      00075B EF               [12] 2368 	mov	a,r7
      00075C 12r00r00         [24] 2369 	lcall	__gptrput
                                   2370 ;	/opt/contiki/core/net/rime/ipolite.c:161: if(c->q != NULL) {
      00075F ED               [12] 2371 	mov	a,r5
      000760 4E               [12] 2372 	orl	a,r6
      000761 70 03            [24] 2373 	jnz	00133$
      000763 02r08r07         [24] 2374 	ljmp	00111$
      000766                       2375 00133$:
                                   2376 ;	/opt/contiki/core/net/rime/ipolite.c:164: send, c);
      000766 E5 81            [12] 2377 	mov	a,sp
      000768 24 FB            [12] 2378 	add	a,#0xfb
      00076A F8               [12] 2379 	mov	r0,a
      00076B A9 81            [24] 2380 	mov	r1,sp
      00076D 19               [12] 2381 	dec	r1
      00076E 19               [12] 2382 	dec	r1
      00076F E6               [12] 2383 	mov	a,@r0
      000770 F7               [12] 2384 	mov	@r1,a
      000771 08               [12] 2385 	inc	r0
      000772 09               [12] 2386 	inc	r1
      000773 E6               [12] 2387 	mov	a,@r0
      000774 F7               [12] 2388 	mov	@r1,a
      000775 08               [12] 2389 	inc	r0
      000776 09               [12] 2390 	inc	r1
      000777 E6               [12] 2391 	mov	a,@r0
      000778 F7               [12] 2392 	mov	@r1,a
                                   2393 ;	/opt/contiki/core/net/rime/ipolite.c:163: interval / 2 + (random_rand() % (interval / 2)),
      000779 E5 81            [12] 2394 	mov	a,sp
      00077B 24 F6            [12] 2395 	add	a,#0xf6
      00077D F8               [12] 2396 	mov	r0,a
      00077E 86 03            [24] 2397 	mov	ar3,@r0
      000780 08               [12] 2398 	inc	r0
      000781 E6               [12] 2399 	mov	a,@r0
      000782 C3               [12] 2400 	clr	c
      000783 13               [12] 2401 	rrc	a
      000784 CB               [12] 2402 	xch	a,r3
      000785 13               [12] 2403 	rrc	a
      000786 CB               [12] 2404 	xch	a,r3
      000787 FC               [12] 2405 	mov	r4,a
      000788 C0 04            [24] 2406 	push	ar4
      00078A C0 03            [24] 2407 	push	ar3
      00078C 78r00            [12] 2408 	mov	r0,#_random_rand
      00078E 79s00            [12] 2409 	mov	r1,#(_random_rand >> 8)
      000790 7As00            [12] 2410 	mov	r2,#(_random_rand >> 16)
      000792 12r00r00         [24] 2411 	lcall	__sdcc_banked_call
      000795 AA 82            [24] 2412 	mov	r2,dpl
      000797 AF 83            [24] 2413 	mov	r7,dph
      000799 D0 03            [24] 2414 	pop	ar3
      00079B D0 04            [24] 2415 	pop	ar4
      00079D C0 04            [24] 2416 	push	ar4
      00079F C0 03            [24] 2417 	push	ar3
      0007A1 C0 03            [24] 2418 	push	ar3
      0007A3 C0 04            [24] 2419 	push	ar4
      0007A5 8A 82            [24] 2420 	mov	dpl,r2
      0007A7 8F 83            [24] 2421 	mov	dph,r7
      0007A9 12r00r00         [24] 2422 	lcall	__moduint
      0007AC AE 82            [24] 2423 	mov	r6,dpl
      0007AE AF 83            [24] 2424 	mov	r7,dph
      0007B0 15 81            [12] 2425 	dec	sp
      0007B2 15 81            [12] 2426 	dec	sp
      0007B4 D0 03            [24] 2427 	pop	ar3
      0007B6 D0 04            [24] 2428 	pop	ar4
      0007B8 EE               [12] 2429 	mov	a,r6
      0007B9 2B               [12] 2430 	add	a,r3
      0007BA FB               [12] 2431 	mov	r3,a
      0007BB EF               [12] 2432 	mov	a,r7
      0007BC 3C               [12] 2433 	addc	a,r4
      0007BD FC               [12] 2434 	mov	r4,a
                                   2435 ;	/opt/contiki/core/net/rime/ipolite.c:162: ctimer_set(&c->t,
      0007BE E5 81            [12] 2436 	mov	a,sp
      0007C0 24 FB            [12] 2437 	add	a,#0xfb
      0007C2 F8               [12] 2438 	mov	r0,a
      0007C3 74 12            [12] 2439 	mov	a,#0x12
      0007C5 26               [12] 2440 	add	a,@r0
      0007C6 FD               [12] 2441 	mov	r5,a
      0007C7 E4               [12] 2442 	clr	a
      0007C8 08               [12] 2443 	inc	r0
      0007C9 36               [12] 2444 	addc	a,@r0
      0007CA FE               [12] 2445 	mov	r6,a
      0007CB 08               [12] 2446 	inc	r0
      0007CC 86 07            [24] 2447 	mov	ar7,@r0
      0007CE A8 81            [24] 2448 	mov	r0,sp
      0007D0 18               [12] 2449 	dec	r0
      0007D1 18               [12] 2450 	dec	r0
      0007D2 E6               [12] 2451 	mov	a,@r0
      0007D3 C0 E0            [24] 2452 	push	acc
      0007D5 08               [12] 2453 	inc	r0
      0007D6 E6               [12] 2454 	mov	a,@r0
      0007D7 C0 E0            [24] 2455 	push	acc
      0007D9 08               [12] 2456 	inc	r0
      0007DA E6               [12] 2457 	mov	a,@r0
      0007DB C0 E0            [24] 2458 	push	acc
      0007DD 74r83            [12] 2459 	mov	a,#_send
      0007DF C0 E0            [24] 2460 	push	acc
      0007E1 74s03            [12] 2461 	mov	a,#(_send >> 8)
      0007E3 C0 E0            [24] 2462 	push	acc
      0007E5 74s00            [12] 2463 	mov	a,#(_send >> 16)
      0007E7 C0 E0            [24] 2464 	push	acc
      0007E9 C0 03            [24] 2465 	push	ar3
      0007EB C0 04            [24] 2466 	push	ar4
      0007ED 8D 82            [24] 2467 	mov	dpl,r5
      0007EF 8E 83            [24] 2468 	mov	dph,r6
      0007F1 8F F0            [24] 2469 	mov	b,r7
      0007F3 78r00            [12] 2470 	mov	r0,#_ctimer_set
      0007F5 79s00            [12] 2471 	mov	r1,#(_ctimer_set >> 8)
      0007F7 7As00            [12] 2472 	mov	r2,#(_ctimer_set >> 16)
      0007F9 12r00r00         [24] 2473 	lcall	__sdcc_banked_call
      0007FC E5 81            [12] 2474 	mov	a,sp
      0007FE 24 F8            [12] 2475 	add	a,#0xf8
      000800 F5 81            [12] 2476 	mov	sp,a
                                   2477 ;	/opt/contiki/core/net/rime/ipolite.c:165: return 1;
      000802 90 00 01         [24] 2478 	mov	dptr,#0x0001
      000805 80 03            [24] 2479 	sjmp	00112$
      000807                       2480 00111$:
                                   2481 ;	/opt/contiki/core/net/rime/ipolite.c:170: return 0;
      000807 90 00 00         [24] 2482 	mov	dptr,#0x0000
      00080A                       2483 00112$:
      00080A E5 81            [12] 2484 	mov	a,sp
      00080C 24 FA            [12] 2485 	add	a,#0xFA
      00080E F5 81            [12] 2486 	mov	sp,a
      000810 02r00r00         [24] 2487 	ljmp	__sdcc_banked_ret
                                   2488 ;------------------------------------------------------------
                                   2489 ;Allocation info for local variables in function 'ipolite_cancel'
                                   2490 ;------------------------------------------------------------
                                   2491 ;c                         Allocated to registers r5 r6 r7 
                                   2492 ;------------------------------------------------------------
                                   2493 ;	/opt/contiki/core/net/rime/ipolite.c:174: ipolite_cancel(struct ipolite_conn *c)
                                   2494 ;	-----------------------------------------
                                   2495 ;	 function ipolite_cancel
                                   2496 ;	-----------------------------------------
      000813                       2497 _ipolite_cancel:
      000813 AD 82            [24] 2498 	mov	r5,dpl
      000815 AE 83            [24] 2499 	mov	r6,dph
      000817 AF F0            [24] 2500 	mov	r7,b
                                   2501 ;	/opt/contiki/core/net/rime/ipolite.c:176: ctimer_stop(&c->t);
      000819 74 12            [12] 2502 	mov	a,#0x12
      00081B 2D               [12] 2503 	add	a,r5
      00081C FA               [12] 2504 	mov	r2,a
      00081D E4               [12] 2505 	clr	a
      00081E 3E               [12] 2506 	addc	a,r6
      00081F FB               [12] 2507 	mov	r3,a
      000820 8F 04            [24] 2508 	mov	ar4,r7
      000822 8A 82            [24] 2509 	mov	dpl,r2
      000824 8B 83            [24] 2510 	mov	dph,r3
      000826 8C F0            [24] 2511 	mov	b,r4
      000828 C0 07            [24] 2512 	push	ar7
      00082A C0 06            [24] 2513 	push	ar6
      00082C C0 05            [24] 2514 	push	ar5
      00082E 78r00            [12] 2515 	mov	r0,#_ctimer_stop
      000830 79s00            [12] 2516 	mov	r1,#(_ctimer_stop >> 8)
      000832 7As00            [12] 2517 	mov	r2,#(_ctimer_stop >> 16)
      000834 12r00r00         [24] 2518 	lcall	__sdcc_banked_call
      000837 D0 05            [24] 2519 	pop	ar5
      000839 D0 06            [24] 2520 	pop	ar6
      00083B D0 07            [24] 2521 	pop	ar7
                                   2522 ;	/opt/contiki/core/net/rime/ipolite.c:177: if(c->q != NULL) {
      00083D 74 28            [12] 2523 	mov	a,#0x28
      00083F 2D               [12] 2524 	add	a,r5
      000840 FD               [12] 2525 	mov	r5,a
      000841 E4               [12] 2526 	clr	a
      000842 3E               [12] 2527 	addc	a,r6
      000843 FE               [12] 2528 	mov	r6,a
      000844 8D 82            [24] 2529 	mov	dpl,r5
      000846 8E 83            [24] 2530 	mov	dph,r6
      000848 8F F0            [24] 2531 	mov	b,r7
      00084A 12r00r00         [24] 2532 	lcall	__gptrget
      00084D FA               [12] 2533 	mov	r2,a
      00084E A3               [24] 2534 	inc	dptr
      00084F 12r00r00         [24] 2535 	lcall	__gptrget
      000852 FB               [12] 2536 	mov	r3,a
      000853 A3               [24] 2537 	inc	dptr
      000854 12r00r00         [24] 2538 	lcall	__gptrget
      000857 FC               [12] 2539 	mov	r4,a
      000858 EA               [12] 2540 	mov	a,r2
      000859 4B               [12] 2541 	orl	a,r3
      00085A 60 2D            [24] 2542 	jz	00103$
                                   2543 ;	/opt/contiki/core/net/rime/ipolite.c:178: queuebuf_free(c->q);
      00085C 8A 82            [24] 2544 	mov	dpl,r2
      00085E 8B 83            [24] 2545 	mov	dph,r3
      000860 8C F0            [24] 2546 	mov	b,r4
      000862 C0 07            [24] 2547 	push	ar7
      000864 C0 06            [24] 2548 	push	ar6
      000866 C0 05            [24] 2549 	push	ar5
      000868 78r00            [12] 2550 	mov	r0,#_queuebuf_free
      00086A 79s00            [12] 2551 	mov	r1,#(_queuebuf_free >> 8)
      00086C 7As00            [12] 2552 	mov	r2,#(_queuebuf_free >> 16)
      00086E 12r00r00         [24] 2553 	lcall	__sdcc_banked_call
      000871 D0 05            [24] 2554 	pop	ar5
      000873 D0 06            [24] 2555 	pop	ar6
      000875 D0 07            [24] 2556 	pop	ar7
                                   2557 ;	/opt/contiki/core/net/rime/ipolite.c:179: c->q = NULL;
      000877 8D 82            [24] 2558 	mov	dpl,r5
      000879 8E 83            [24] 2559 	mov	dph,r6
      00087B 8F F0            [24] 2560 	mov	b,r7
      00087D E4               [12] 2561 	clr	a
      00087E 12r00r00         [24] 2562 	lcall	__gptrput
      000881 A3               [24] 2563 	inc	dptr
      000882 12r00r00         [24] 2564 	lcall	__gptrput
      000885 A3               [24] 2565 	inc	dptr
      000886 12r00r00         [24] 2566 	lcall	__gptrput
      000889                       2567 00103$:
      000889 02r00r00         [24] 2568 	ljmp	__sdcc_banked_ret
                                   2569 	.area CSEG    (CODE)
                                   2570 	.area CONST   (CODE)
      000000                       2571 _broadcast:
      000000r00s00s00              2572 	.byte _recv, (_recv >> 8), (_recv >> 16)
      000003r80s03s00              2573 	.byte _sent, (_sent >> 8), (_sent >> 16)
                                   2574 	.area XINIT   (CODE)
                                   2575 	.area CABS    (ABS,CODE)
