                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.5 #9380 (Linux)
                                      4 ; This file was generated Wed Nov 18 02:57:36 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module nbr_table
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _linkaddr_cmp
                                     13 	.globl _linkaddr_copy
                                     14 	.globl _list_item_next
                                     15 	.globl _list_remove
                                     16 	.globl _list_add
                                     17 	.globl _list_head
                                     18 	.globl _memb_alloc
                                     19 	.globl _memset
                                     20 	.globl _ACTIVE
                                     21 	.globl _TX_BYTE
                                     22 	.globl _RX_BYTE
                                     23 	.globl _ERR
                                     24 	.globl _FE
                                     25 	.globl _SLAVE
                                     26 	.globl _RE
                                     27 	.globl _MODE
                                     28 	.globl _T3OVFIF
                                     29 	.globl _T3CH0IF
                                     30 	.globl _T3CH1IF
                                     31 	.globl _T4OVFIF
                                     32 	.globl _T4CH0IF
                                     33 	.globl _T4CH1IF
                                     34 	.globl _OVFIM
                                     35 	.globl _B_0
                                     36 	.globl _B_1
                                     37 	.globl _B_2
                                     38 	.globl _B_3
                                     39 	.globl _B_4
                                     40 	.globl _B_5
                                     41 	.globl _B_6
                                     42 	.globl _B_7
                                     43 	.globl _P2IF
                                     44 	.globl _UTX0IF
                                     45 	.globl _UTX1IF
                                     46 	.globl _P1IF
                                     47 	.globl _WDTIF
                                     48 	.globl _ACC_0
                                     49 	.globl _ACC_1
                                     50 	.globl _ACC_2
                                     51 	.globl _ACC_3
                                     52 	.globl _ACC_4
                                     53 	.globl _ACC_5
                                     54 	.globl _ACC_6
                                     55 	.globl _ACC_7
                                     56 	.globl _P
                                     57 	.globl _F1
                                     58 	.globl _OV
                                     59 	.globl _RS0
                                     60 	.globl _RS1
                                     61 	.globl _F0
                                     62 	.globl _AC
                                     63 	.globl _CY
                                     64 	.globl _DMAIF
                                     65 	.globl _T1IF
                                     66 	.globl _T2IF
                                     67 	.globl _T3IF
                                     68 	.globl _T4IF
                                     69 	.globl _P0IF
                                     70 	.globl _STIF
                                     71 	.globl _DMAIE
                                     72 	.globl _T1IE
                                     73 	.globl _T2IE
                                     74 	.globl _T3IE
                                     75 	.globl _T4IE
                                     76 	.globl _P0IE
                                     77 	.globl _RFERRIE
                                     78 	.globl _ADCIE
                                     79 	.globl _URX0IE
                                     80 	.globl _URX1IE
                                     81 	.globl _ENCIE
                                     82 	.globl _STIE
                                     83 	.globl _EA
                                     84 	.globl _P2_0
                                     85 	.globl _P2_1
                                     86 	.globl _P2_2
                                     87 	.globl _P2_3
                                     88 	.globl _P2_4
                                     89 	.globl _P2_5
                                     90 	.globl _P2_6
                                     91 	.globl _P2_7
                                     92 	.globl _ENCIF_0
                                     93 	.globl _ENCIF_1
                                     94 	.globl _P1_0
                                     95 	.globl _P1_1
                                     96 	.globl _P1_2
                                     97 	.globl _P1_3
                                     98 	.globl _P1_4
                                     99 	.globl _P1_5
                                    100 	.globl _P1_6
                                    101 	.globl _P1_7
                                    102 	.globl _IT0
                                    103 	.globl _RFERRIF
                                    104 	.globl _IT1
                                    105 	.globl _URX0IF
                                    106 	.globl _ADCIF
                                    107 	.globl _URX1IF
                                    108 	.globl _P0_0
                                    109 	.globl _P0_1
                                    110 	.globl _P0_2
                                    111 	.globl _P0_3
                                    112 	.globl _P0_4
                                    113 	.globl _P0_5
                                    114 	.globl _P0_6
                                    115 	.globl _P0_7
                                    116 	.globl _WDCTL
                                    117 	.globl _U1GCR
                                    118 	.globl _U1UCR
                                    119 	.globl _U1BAUD
                                    120 	.globl _U1DBUF
                                    121 	.globl _U1CSR
                                    122 	.globl _U0GCR
                                    123 	.globl _U0UCR
                                    124 	.globl _U0BAUD
                                    125 	.globl _U0DBUF
                                    126 	.globl _U0CSR
                                    127 	.globl _TIMIF
                                    128 	.globl _T4CC1
                                    129 	.globl _T4CCTL1
                                    130 	.globl _T4CC0
                                    131 	.globl _T4CCTL0
                                    132 	.globl _T4CTL
                                    133 	.globl _T4CNT
                                    134 	.globl _T3CC1
                                    135 	.globl _T3CCTL1
                                    136 	.globl _T3CC0
                                    137 	.globl _T3CCTL0
                                    138 	.globl _T3CTL
                                    139 	.globl _T3CNT
                                    140 	.globl _T2MSEL
                                    141 	.globl _T2IRQM
                                    142 	.globl _T2MOVF2
                                    143 	.globl _T2MOVF1
                                    144 	.globl _T2MOVF0
                                    145 	.globl _T2M1
                                    146 	.globl _T2M0
                                    147 	.globl _T2IRQF
                                    148 	.globl _T2EVTCFG
                                    149 	.globl _T2CTRL
                                    150 	.globl _T1STAT
                                    151 	.globl _T1CCTL2
                                    152 	.globl _T1CCTL1
                                    153 	.globl _T1CCTL0
                                    154 	.globl _T1CTL
                                    155 	.globl _T1CNTH
                                    156 	.globl _T1CNTL
                                    157 	.globl _T1CC2H
                                    158 	.globl _T1CC2L
                                    159 	.globl _T1CC1H
                                    160 	.globl _T1CC1L
                                    161 	.globl _T1CC0H
                                    162 	.globl _T1CC0L
                                    163 	.globl _CLKCONSTA
                                    164 	.globl _CLKCONCMD
                                    165 	.globl _SLEEPSTA
                                    166 	.globl _SLEEPCMD
                                    167 	.globl _STLOAD
                                    168 	.globl _ST2
                                    169 	.globl _ST1
                                    170 	.globl _ST0
                                    171 	.globl _RFERRF
                                    172 	.globl _RFIRQF0
                                    173 	.globl _RFST
                                    174 	.globl _RFD
                                    175 	.globl _RFIRQF1
                                    176 	.globl _PSBANK
                                    177 	.globl _FMAP
                                    178 	.globl _MEMCTR
                                    179 	.globl __XPAGE
                                    180 	.globl _MPAGE
                                    181 	.globl _PMUX
                                    182 	.globl _P2DIR
                                    183 	.globl _P1DIR
                                    184 	.globl _P0DIR
                                    185 	.globl _P2INP
                                    186 	.globl _P1INP
                                    187 	.globl _P2SEL
                                    188 	.globl _P1SEL
                                    189 	.globl _P0SEL
                                    190 	.globl _APCFG
                                    191 	.globl _PERCFG
                                    192 	.globl _P0INP
                                    193 	.globl _P2IEN
                                    194 	.globl _P1IEN
                                    195 	.globl _P0IEN
                                    196 	.globl _PICTL
                                    197 	.globl _P2IFG
                                    198 	.globl _P1IFG
                                    199 	.globl _P0IFG
                                    200 	.globl _DMAREQ
                                    201 	.globl _DMAARM
                                    202 	.globl _DMA0CFGH
                                    203 	.globl _DMA0CFGL
                                    204 	.globl _DMA1CFGH
                                    205 	.globl _DMA1CFGL
                                    206 	.globl _DMAIRQ
                                    207 	.globl _ENCCS
                                    208 	.globl _ENCDO
                                    209 	.globl _ENCDI
                                    210 	.globl _RNDH
                                    211 	.globl _RNDL
                                    212 	.globl _ADCH
                                    213 	.globl _ADCL
                                    214 	.globl _ADCCON3
                                    215 	.globl _ADCCON2
                                    216 	.globl _ADCCON1
                                    217 	.globl _B
                                    218 	.globl _IRCON2
                                    219 	.globl _ACC
                                    220 	.globl _PSW
                                    221 	.globl _IRCON
                                    222 	.globl _IP1
                                    223 	.globl _IEN1
                                    224 	.globl _IP0
                                    225 	.globl _IEN0
                                    226 	.globl _P2
                                    227 	.globl _S1CON
                                    228 	.globl _IEN2
                                    229 	.globl _S0CON
                                    230 	.globl _DPS
                                    231 	.globl _P1
                                    232 	.globl _TCON
                                    233 	.globl _PCON
                                    234 	.globl _DPH1
                                    235 	.globl _DPL1
                                    236 	.globl _DPH0
                                    237 	.globl _DPL0
                                    238 	.globl _SP
                                    239 	.globl _P0
                                    240 	.globl _X_IEEE_ADDR
                                    241 	.globl _X_INFOPAGE
                                    242 	.globl _X_P2DIR
                                    243 	.globl _X_P1DIR
                                    244 	.globl _X_P0DIR
                                    245 	.globl _X_U1GCR
                                    246 	.globl _X_U1UCR
                                    247 	.globl _X_U1BAUD
                                    248 	.globl _X_U1DBUF
                                    249 	.globl _X_U1CSR
                                    250 	.globl _X_P2INP
                                    251 	.globl _X_P1INP
                                    252 	.globl _X_P2SEL
                                    253 	.globl _X_P1SEL
                                    254 	.globl _X_P0SEL
                                    255 	.globl _X_APCFG
                                    256 	.globl _X_PERCFG
                                    257 	.globl _X_T4CC1
                                    258 	.globl _X_T4CCTL1
                                    259 	.globl _X_T4CC0
                                    260 	.globl _X_T4CCTL0
                                    261 	.globl _X_T4CTL
                                    262 	.globl _X_T4CNT
                                    263 	.globl _X_RFIRQF0
                                    264 	.globl _X_T1CCTL2
                                    265 	.globl _X_T1CCTL1
                                    266 	.globl _X_T1CCTL0
                                    267 	.globl _X_T1CTL
                                    268 	.globl _X_T1CNTH
                                    269 	.globl _X_T1CNTL
                                    270 	.globl _X_RFST
                                    271 	.globl _X_T1CC2H
                                    272 	.globl _X_T1CC2L
                                    273 	.globl _X_T1CC1H
                                    274 	.globl _X_T1CC1L
                                    275 	.globl _X_T1CC0H
                                    276 	.globl _X_T1CC0L
                                    277 	.globl _X_RFD
                                    278 	.globl _X_TIMIF
                                    279 	.globl _X_DMAREQ
                                    280 	.globl _X_DMAARM
                                    281 	.globl _X_DMA0CFGH
                                    282 	.globl _X_DMA0CFGL
                                    283 	.globl _X_DMA1CFGH
                                    284 	.globl _X_DMA1CFGL
                                    285 	.globl _X_DMAIRQ
                                    286 	.globl _X_T3CC1
                                    287 	.globl _X_T3CCTL1
                                    288 	.globl _X_T3CC0
                                    289 	.globl _X_T3CCTL0
                                    290 	.globl _X_T3CTL
                                    291 	.globl _X_T3CNT
                                    292 	.globl _X_WDCTL
                                    293 	.globl _X_MEMCTR
                                    294 	.globl _X_CLKCONCMD
                                    295 	.globl _X_U0GCR
                                    296 	.globl _X_U0UCR
                                    297 	.globl _X_T2MSEL
                                    298 	.globl _X_U0BAUD
                                    299 	.globl _X_U0DBUF
                                    300 	.globl _X_RFERRF
                                    301 	.globl _X_SLEEPCMD
                                    302 	.globl _X_RNDH
                                    303 	.globl _X_RNDL
                                    304 	.globl _X_ADCH
                                    305 	.globl _X_ADCL
                                    306 	.globl _X_ADCCON3
                                    307 	.globl _X_ADCCON2
                                    308 	.globl _X_ADCCON1
                                    309 	.globl _X_ENCCS
                                    310 	.globl _X_ENCDO
                                    311 	.globl _X_ENCDI
                                    312 	.globl _X_T1STAT
                                    313 	.globl _X_PMUX
                                    314 	.globl _X_STLOAD
                                    315 	.globl _X_P2IEN
                                    316 	.globl _X_P0IEN
                                    317 	.globl _X_T2IRQM
                                    318 	.globl _X_T2MOVF2
                                    319 	.globl _X_T2MOVF1
                                    320 	.globl _X_T2MOVF0
                                    321 	.globl _X_T2M1
                                    322 	.globl _X_T2M0
                                    323 	.globl _X_T2IRQF
                                    324 	.globl _X_P2
                                    325 	.globl _X_PSBANK
                                    326 	.globl _X_FMAP
                                    327 	.globl _X_CLKCONSTA
                                    328 	.globl _X_SLEEPSTA
                                    329 	.globl _X_T2EVTCFG
                                    330 	.globl _X_ST2
                                    331 	.globl _X_ST1
                                    332 	.globl _X_ST0
                                    333 	.globl _X_T2CTRL
                                    334 	.globl _X__XPAGE
                                    335 	.globl _X_MPAGE
                                    336 	.globl _X_RFIRQF1
                                    337 	.globl _X_P1
                                    338 	.globl _X_P0INP
                                    339 	.globl _X_P1IEN
                                    340 	.globl _X_PICTL
                                    341 	.globl _X_P2IFG
                                    342 	.globl _X_P1IFG
                                    343 	.globl _X_P0IFG
                                    344 	.globl _X_U0CSR
                                    345 	.globl _X_P0
                                    346 	.globl _USBF5
                                    347 	.globl _USBF4
                                    348 	.globl _USBF3
                                    349 	.globl _USBF2
                                    350 	.globl _USBF1
                                    351 	.globl _USBF0
                                    352 	.globl _USBCNTH
                                    353 	.globl _USBCNTL
                                    354 	.globl _USBCNT0
                                    355 	.globl _USBCSOH
                                    356 	.globl _USBCSOL
                                    357 	.globl _USBMAXO
                                    358 	.globl _USBCSIH
                                    359 	.globl _USBCSIL
                                    360 	.globl _USBCS0
                                    361 	.globl _USBMAXI
                                    362 	.globl _USBCTRL
                                    363 	.globl _USBINDEX
                                    364 	.globl _USBFRMH
                                    365 	.globl _USBFRML
                                    366 	.globl _USBCIE
                                    367 	.globl _USBOIE
                                    368 	.globl _USBIIE
                                    369 	.globl _USBCIF
                                    370 	.globl _USBOIF
                                    371 	.globl _USBIIF
                                    372 	.globl _USBPOW
                                    373 	.globl _USBADDR
                                    374 	.globl _CSPT
                                    375 	.globl _CSPZ
                                    376 	.globl _CSPY
                                    377 	.globl _CSPX
                                    378 	.globl _CSPSTAT
                                    379 	.globl _CSPCTRL
                                    380 	.globl _CSPPROG23
                                    381 	.globl _CSPPROG22
                                    382 	.globl _CSPPROG21
                                    383 	.globl _CSPPROG20
                                    384 	.globl _CSPPROG19
                                    385 	.globl _CSPPROG18
                                    386 	.globl _CSPPROG17
                                    387 	.globl _CSPPROG16
                                    388 	.globl _CSPPROG15
                                    389 	.globl _CSPPROG14
                                    390 	.globl _CSPPROG13
                                    391 	.globl _CSPPROG12
                                    392 	.globl _CSPPROG11
                                    393 	.globl _CSPPROG10
                                    394 	.globl _CSPPROG9
                                    395 	.globl _CSPPROG8
                                    396 	.globl _CSPPROG7
                                    397 	.globl _CSPPROG6
                                    398 	.globl _CSPPROG5
                                    399 	.globl _CSPPROG4
                                    400 	.globl _CSPPROG3
                                    401 	.globl _CSPPROG2
                                    402 	.globl _CSPPROG1
                                    403 	.globl _CSPPROG0
                                    404 	.globl _RFC_OBS_CTRL2
                                    405 	.globl _RFC_OBS_CTRL1
                                    406 	.globl _RFC_OBS_CTRL0
                                    407 	.globl _TXFILTCFG
                                    408 	.globl _PTEST1
                                    409 	.globl _PTEST0
                                    410 	.globl _ATEST
                                    411 	.globl _DACTEST2
                                    412 	.globl _DACTEST1
                                    413 	.globl _DACTEST0
                                    414 	.globl _MDMTEST1
                                    415 	.globl _MDMTEST0
                                    416 	.globl _ADCTEST2
                                    417 	.globl _ADCTEST1
                                    418 	.globl _ADCTEST0
                                    419 	.globl _AGCCTRL3
                                    420 	.globl _AGCCTRL2
                                    421 	.globl _AGCCTRL1
                                    422 	.globl _AGCCTRL0
                                    423 	.globl _FSCAL3
                                    424 	.globl _FSCAL2
                                    425 	.globl _FSCAL1
                                    426 	.globl _FSCAL0
                                    427 	.globl _FSCTRL
                                    428 	.globl _RXCTRL
                                    429 	.globl _FREQEST
                                    430 	.globl _MDMCTRL1
                                    431 	.globl _MDMCTRL0
                                    432 	.globl _RFRND
                                    433 	.globl _RFERRM
                                    434 	.globl _RFIRQM1
                                    435 	.globl _RFIRQM0
                                    436 	.globl _TXLAST_PTR
                                    437 	.globl _TXFIRST_PTR
                                    438 	.globl _RXP1_PTR
                                    439 	.globl _RXLAST_PTR
                                    440 	.globl _RXFIRST_PTR
                                    441 	.globl _TXFIFOCNT
                                    442 	.globl _RXFIFOCNT
                                    443 	.globl _RXFIRST
                                    444 	.globl _RSSISTAT
                                    445 	.globl _RSSI
                                    446 	.globl _CCACTRL1
                                    447 	.globl _CCACTRL0
                                    448 	.globl _FSMCTRL
                                    449 	.globl _FIFOPCTRL
                                    450 	.globl _FSMSTAT1
                                    451 	.globl _FSMSTAT0
                                    452 	.globl _TXCTRL
                                    453 	.globl _TXPOWER
                                    454 	.globl _FREQCTRL
                                    455 	.globl _FREQTUNE
                                    456 	.globl _RXMASKCLR
                                    457 	.globl _RXMASKSET
                                    458 	.globl _RXENABLE
                                    459 	.globl _FRMCTRL1
                                    460 	.globl _FRMCTRL0
                                    461 	.globl _SRCEXTEN2
                                    462 	.globl _SRCEXTEN1
                                    463 	.globl _SRCEXTEN0
                                    464 	.globl _SRCSHORTEN2
                                    465 	.globl _SRCSHORTEN1
                                    466 	.globl _SRCSHORTEN0
                                    467 	.globl _SRCMATCH
                                    468 	.globl _FRMFILT1
                                    469 	.globl _FRMFILT0
                                    470 	.globl _SHORT_ADDR1
                                    471 	.globl _SHORT_ADDR0
                                    472 	.globl _PAN_ID1
                                    473 	.globl _PAN_ID0
                                    474 	.globl _EXT_ADDR7
                                    475 	.globl _EXT_ADDR6
                                    476 	.globl _EXT_ADDR5
                                    477 	.globl _EXT_ADDR4
                                    478 	.globl _EXT_ADDR3
                                    479 	.globl _EXT_ADDR2
                                    480 	.globl _EXT_ADDR1
                                    481 	.globl _EXT_ADDR0
                                    482 	.globl _SRCSHORTPENDEN2
                                    483 	.globl _SRCSHORTPENDEN1
                                    484 	.globl _SRCSHORTPENDEN0
                                    485 	.globl _SRCEXTPENDEN2
                                    486 	.globl _SRCEXTPENDEN1
                                    487 	.globl _SRCEXTPENDEN0
                                    488 	.globl _SRCRESINDEX
                                    489 	.globl _SRCRESMASK2
                                    490 	.globl _SRCRESMASK1
                                    491 	.globl _SRCRESMASK0
                                    492 	.globl _SRC_ADDR_TABLE
                                    493 	.globl _TXFIFO
                                    494 	.globl _RXFIFO
                                    495 	.globl _RFCORE_RAM
                                    496 	.globl _CMPCTL
                                    497 	.globl _OPAMPS
                                    498 	.globl _OPAMPC
                                    499 	.globl _STCV2
                                    500 	.globl _STCV1
                                    501 	.globl _STCV0
                                    502 	.globl _STCS
                                    503 	.globl _STCC
                                    504 	.globl _T1CC4H
                                    505 	.globl _T1CC4L
                                    506 	.globl _T1CC3H
                                    507 	.globl _T1CC3L
                                    508 	.globl _XX_T1CC2H
                                    509 	.globl _XX_T1CC2L
                                    510 	.globl _XX_T1CC1H
                                    511 	.globl _XX_T1CC1L
                                    512 	.globl _XX_T1CC0H
                                    513 	.globl _XX_T1CC0L
                                    514 	.globl _T1CCTL4
                                    515 	.globl _T1CCTL3
                                    516 	.globl _XX_T1CCTL2
                                    517 	.globl _XX_T1CCTL1
                                    518 	.globl _XX_T1CCTL0
                                    519 	.globl _CLD
                                    520 	.globl _IRCTL
                                    521 	.globl _CHIPINFO1
                                    522 	.globl _CHIPINFO0
                                    523 	.globl _FWDATA
                                    524 	.globl _FADDRH
                                    525 	.globl _FADDRL
                                    526 	.globl _FCTL
                                    527 	.globl _IVCTRL
                                    528 	.globl _BATTMON
                                    529 	.globl _SRCRC
                                    530 	.globl _DBGDATA
                                    531 	.globl _TESTREG0
                                    532 	.globl _CHIPID
                                    533 	.globl _CHVER
                                    534 	.globl _OBSSEL5
                                    535 	.globl _OBSSEL4
                                    536 	.globl _OBSSEL3
                                    537 	.globl _OBSSEL2
                                    538 	.globl _OBSSEL1
                                    539 	.globl _OBSSEL0
                                    540 	.globl _I2CIO
                                    541 	.globl _I2CWC
                                    542 	.globl _I2CADDR
                                    543 	.globl _I2CDATA
                                    544 	.globl _I2CSTAT
                                    545 	.globl _I2CCFG
                                    546 	.globl _OPAMPMC
                                    547 	.globl _MONMUX
                                    548 	.globl _nbr_table_register
                                    549 	.globl _nbr_table_head
                                    550 	.globl _nbr_table_next
                                    551 	.globl _nbr_table_add_lladdr
                                    552 	.globl _nbr_table_get_from_lladdr
                                    553 	.globl _nbr_table_remove
                                    554 	.globl _nbr_table_lock
                                    555 	.globl _nbr_table_unlock
                                    556 	.globl _nbr_table_get_lladdr
                                    557 ;--------------------------------------------------------
                                    558 ; special function registers
                                    559 ;--------------------------------------------------------
                                    560 	.area RSEG    (ABS,DATA)
      000000                        561 	.org 0x0000
                           000080   562 _P0	=	0x0080
                           000081   563 _SP	=	0x0081
                           000082   564 _DPL0	=	0x0082
                           000083   565 _DPH0	=	0x0083
                           000084   566 _DPL1	=	0x0084
                           000085   567 _DPH1	=	0x0085
                           000087   568 _PCON	=	0x0087
                           000088   569 _TCON	=	0x0088
                           000090   570 _P1	=	0x0090
                           000092   571 _DPS	=	0x0092
                           000098   572 _S0CON	=	0x0098
                           00009A   573 _IEN2	=	0x009a
                           00009B   574 _S1CON	=	0x009b
                           0000A0   575 _P2	=	0x00a0
                           0000A8   576 _IEN0	=	0x00a8
                           0000A9   577 _IP0	=	0x00a9
                           0000B8   578 _IEN1	=	0x00b8
                           0000B9   579 _IP1	=	0x00b9
                           0000C0   580 _IRCON	=	0x00c0
                           0000D0   581 _PSW	=	0x00d0
                           0000E0   582 _ACC	=	0x00e0
                           0000E8   583 _IRCON2	=	0x00e8
                           0000F0   584 _B	=	0x00f0
                           0000B4   585 _ADCCON1	=	0x00b4
                           0000B5   586 _ADCCON2	=	0x00b5
                           0000B6   587 _ADCCON3	=	0x00b6
                           0000BA   588 _ADCL	=	0x00ba
                           0000BB   589 _ADCH	=	0x00bb
                           0000BC   590 _RNDL	=	0x00bc
                           0000BD   591 _RNDH	=	0x00bd
                           0000B1   592 _ENCDI	=	0x00b1
                           0000B2   593 _ENCDO	=	0x00b2
                           0000B3   594 _ENCCS	=	0x00b3
                           0000D1   595 _DMAIRQ	=	0x00d1
                           0000D2   596 _DMA1CFGL	=	0x00d2
                           0000D3   597 _DMA1CFGH	=	0x00d3
                           0000D4   598 _DMA0CFGL	=	0x00d4
                           0000D5   599 _DMA0CFGH	=	0x00d5
                           0000D6   600 _DMAARM	=	0x00d6
                           0000D7   601 _DMAREQ	=	0x00d7
                           000089   602 _P0IFG	=	0x0089
                           00008A   603 _P1IFG	=	0x008a
                           00008B   604 _P2IFG	=	0x008b
                           00008C   605 _PICTL	=	0x008c
                           0000AB   606 _P0IEN	=	0x00ab
                           00008D   607 _P1IEN	=	0x008d
                           0000AC   608 _P2IEN	=	0x00ac
                           00008F   609 _P0INP	=	0x008f
                           0000F1   610 _PERCFG	=	0x00f1
                           0000F2   611 _APCFG	=	0x00f2
                           0000F3   612 _P0SEL	=	0x00f3
                           0000F4   613 _P1SEL	=	0x00f4
                           0000F5   614 _P2SEL	=	0x00f5
                           0000F6   615 _P1INP	=	0x00f6
                           0000F7   616 _P2INP	=	0x00f7
                           0000FD   617 _P0DIR	=	0x00fd
                           0000FE   618 _P1DIR	=	0x00fe
                           0000FF   619 _P2DIR	=	0x00ff
                           0000AE   620 _PMUX	=	0x00ae
                           000093   621 _MPAGE	=	0x0093
                           000093   622 __XPAGE	=	0x0093
                           0000C7   623 _MEMCTR	=	0x00c7
                           00009F   624 _FMAP	=	0x009f
                           00009F   625 _PSBANK	=	0x009f
                           000091   626 _RFIRQF1	=	0x0091
                           0000D9   627 _RFD	=	0x00d9
                           0000E1   628 _RFST	=	0x00e1
                           0000E9   629 _RFIRQF0	=	0x00e9
                           0000BF   630 _RFERRF	=	0x00bf
                           000095   631 _ST0	=	0x0095
                           000096   632 _ST1	=	0x0096
                           000097   633 _ST2	=	0x0097
                           0000AD   634 _STLOAD	=	0x00ad
                           0000BE   635 _SLEEPCMD	=	0x00be
                           00009D   636 _SLEEPSTA	=	0x009d
                           0000C6   637 _CLKCONCMD	=	0x00c6
                           00009E   638 _CLKCONSTA	=	0x009e
                           0000DA   639 _T1CC0L	=	0x00da
                           0000DB   640 _T1CC0H	=	0x00db
                           0000DC   641 _T1CC1L	=	0x00dc
                           0000DD   642 _T1CC1H	=	0x00dd
                           0000DE   643 _T1CC2L	=	0x00de
                           0000DF   644 _T1CC2H	=	0x00df
                           0000E2   645 _T1CNTL	=	0x00e2
                           0000E3   646 _T1CNTH	=	0x00e3
                           0000E4   647 _T1CTL	=	0x00e4
                           0000E5   648 _T1CCTL0	=	0x00e5
                           0000E6   649 _T1CCTL1	=	0x00e6
                           0000E7   650 _T1CCTL2	=	0x00e7
                           0000AF   651 _T1STAT	=	0x00af
                           000094   652 _T2CTRL	=	0x0094
                           00009C   653 _T2EVTCFG	=	0x009c
                           0000A1   654 _T2IRQF	=	0x00a1
                           0000A2   655 _T2M0	=	0x00a2
                           0000A3   656 _T2M1	=	0x00a3
                           0000A4   657 _T2MOVF0	=	0x00a4
                           0000A5   658 _T2MOVF1	=	0x00a5
                           0000A6   659 _T2MOVF2	=	0x00a6
                           0000A7   660 _T2IRQM	=	0x00a7
                           0000C3   661 _T2MSEL	=	0x00c3
                           0000CA   662 _T3CNT	=	0x00ca
                           0000CB   663 _T3CTL	=	0x00cb
                           0000CC   664 _T3CCTL0	=	0x00cc
                           0000CD   665 _T3CC0	=	0x00cd
                           0000CE   666 _T3CCTL1	=	0x00ce
                           0000CF   667 _T3CC1	=	0x00cf
                           0000EA   668 _T4CNT	=	0x00ea
                           0000EB   669 _T4CTL	=	0x00eb
                           0000EC   670 _T4CCTL0	=	0x00ec
                           0000ED   671 _T4CC0	=	0x00ed
                           0000EE   672 _T4CCTL1	=	0x00ee
                           0000EF   673 _T4CC1	=	0x00ef
                           0000D8   674 _TIMIF	=	0x00d8
                           000086   675 _U0CSR	=	0x0086
                           0000C1   676 _U0DBUF	=	0x00c1
                           0000C2   677 _U0BAUD	=	0x00c2
                           0000C4   678 _U0UCR	=	0x00c4
                           0000C5   679 _U0GCR	=	0x00c5
                           0000F8   680 _U1CSR	=	0x00f8
                           0000F9   681 _U1DBUF	=	0x00f9
                           0000FA   682 _U1BAUD	=	0x00fa
                           0000FB   683 _U1UCR	=	0x00fb
                           0000FC   684 _U1GCR	=	0x00fc
                           0000C9   685 _WDCTL	=	0x00c9
                                    686 ;--------------------------------------------------------
                                    687 ; special function bits
                                    688 ;--------------------------------------------------------
                                    689 	.area RSEG    (ABS,DATA)
      000000                        690 	.org 0x0000
                           000087   691 _P0_7	=	0x0087
                           000086   692 _P0_6	=	0x0086
                           000085   693 _P0_5	=	0x0085
                           000084   694 _P0_4	=	0x0084
                           000083   695 _P0_3	=	0x0083
                           000082   696 _P0_2	=	0x0082
                           000081   697 _P0_1	=	0x0081
                           000080   698 _P0_0	=	0x0080
                           00008F   699 _URX1IF	=	0x008f
                           00008D   700 _ADCIF	=	0x008d
                           00008B   701 _URX0IF	=	0x008b
                           00008A   702 _IT1	=	0x008a
                           000089   703 _RFERRIF	=	0x0089
                           000088   704 _IT0	=	0x0088
                           000097   705 _P1_7	=	0x0097
                           000096   706 _P1_6	=	0x0096
                           000095   707 _P1_5	=	0x0095
                           000094   708 _P1_4	=	0x0094
                           000093   709 _P1_3	=	0x0093
                           000092   710 _P1_2	=	0x0092
                           000091   711 _P1_1	=	0x0091
                           000090   712 _P1_0	=	0x0090
                           000099   713 _ENCIF_1	=	0x0099
                           000098   714 _ENCIF_0	=	0x0098
                           0000A7   715 _P2_7	=	0x00a7
                           0000A6   716 _P2_6	=	0x00a6
                           0000A5   717 _P2_5	=	0x00a5
                           0000A4   718 _P2_4	=	0x00a4
                           0000A3   719 _P2_3	=	0x00a3
                           0000A2   720 _P2_2	=	0x00a2
                           0000A1   721 _P2_1	=	0x00a1
                           0000A0   722 _P2_0	=	0x00a0
                           0000AF   723 _EA	=	0x00af
                           0000AD   724 _STIE	=	0x00ad
                           0000AC   725 _ENCIE	=	0x00ac
                           0000AB   726 _URX1IE	=	0x00ab
                           0000AA   727 _URX0IE	=	0x00aa
                           0000A9   728 _ADCIE	=	0x00a9
                           0000A8   729 _RFERRIE	=	0x00a8
                           0000BD   730 _P0IE	=	0x00bd
                           0000BC   731 _T4IE	=	0x00bc
                           0000BB   732 _T3IE	=	0x00bb
                           0000BA   733 _T2IE	=	0x00ba
                           0000B9   734 _T1IE	=	0x00b9
                           0000B8   735 _DMAIE	=	0x00b8
                           0000C7   736 _STIF	=	0x00c7
                           0000C5   737 _P0IF	=	0x00c5
                           0000C4   738 _T4IF	=	0x00c4
                           0000C3   739 _T3IF	=	0x00c3
                           0000C2   740 _T2IF	=	0x00c2
                           0000C1   741 _T1IF	=	0x00c1
                           0000C0   742 _DMAIF	=	0x00c0
                           0000D7   743 _CY	=	0x00d7
                           0000D6   744 _AC	=	0x00d6
                           0000D5   745 _F0	=	0x00d5
                           0000D4   746 _RS1	=	0x00d4
                           0000D3   747 _RS0	=	0x00d3
                           0000D2   748 _OV	=	0x00d2
                           0000D1   749 _F1	=	0x00d1
                           0000D0   750 _P	=	0x00d0
                           0000E7   751 _ACC_7	=	0x00e7
                           0000E6   752 _ACC_6	=	0x00e6
                           0000E5   753 _ACC_5	=	0x00e5
                           0000E4   754 _ACC_4	=	0x00e4
                           0000E3   755 _ACC_3	=	0x00e3
                           0000E2   756 _ACC_2	=	0x00e2
                           0000E1   757 _ACC_1	=	0x00e1
                           0000E0   758 _ACC_0	=	0x00e0
                           0000EC   759 _WDTIF	=	0x00ec
                           0000EB   760 _P1IF	=	0x00eb
                           0000EA   761 _UTX1IF	=	0x00ea
                           0000E9   762 _UTX0IF	=	0x00e9
                           0000E8   763 _P2IF	=	0x00e8
                           0000F7   764 _B_7	=	0x00f7
                           0000F6   765 _B_6	=	0x00f6
                           0000F5   766 _B_5	=	0x00f5
                           0000F4   767 _B_4	=	0x00f4
                           0000F3   768 _B_3	=	0x00f3
                           0000F2   769 _B_2	=	0x00f2
                           0000F1   770 _B_1	=	0x00f1
                           0000F0   771 _B_0	=	0x00f0
                           0000DE   772 _OVFIM	=	0x00de
                           0000DD   773 _T4CH1IF	=	0x00dd
                           0000DC   774 _T4CH0IF	=	0x00dc
                           0000DB   775 _T4OVFIF	=	0x00db
                           0000DA   776 _T3CH1IF	=	0x00da
                           0000D9   777 _T3CH0IF	=	0x00d9
                           0000D8   778 _T3OVFIF	=	0x00d8
                           0000FF   779 _MODE	=	0x00ff
                           0000FE   780 _RE	=	0x00fe
                           0000FD   781 _SLAVE	=	0x00fd
                           0000FC   782 _FE	=	0x00fc
                           0000FB   783 _ERR	=	0x00fb
                           0000FA   784 _RX_BYTE	=	0x00fa
                           0000F9   785 _TX_BYTE	=	0x00f9
                           0000F8   786 _ACTIVE	=	0x00f8
                                    787 ;--------------------------------------------------------
                                    788 ; overlayable register banks
                                    789 ;--------------------------------------------------------
                                    790 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        791 	.ds 8
                                    792 ;--------------------------------------------------------
                                    793 ; internal ram data
                                    794 ;--------------------------------------------------------
                                    795 	.area DSEG    (DATA)
                                    796 ;--------------------------------------------------------
                                    797 ; overlayable items in internal ram 
                                    798 ;--------------------------------------------------------
                                    799 ;--------------------------------------------------------
                                    800 ; indirectly addressable internal ram data
                                    801 ;--------------------------------------------------------
                                    802 	.area ISEG    (DATA)
                                    803 ;--------------------------------------------------------
                                    804 ; absolute internal ram data
                                    805 ;--------------------------------------------------------
                                    806 	.area IABS    (ABS,DATA)
                                    807 	.area IABS    (ABS,DATA)
                                    808 ;--------------------------------------------------------
                                    809 ; bit data
                                    810 ;--------------------------------------------------------
                                    811 	.area BSEG    (BIT)
                                    812 ;--------------------------------------------------------
                                    813 ; paged external ram data
                                    814 ;--------------------------------------------------------
                                    815 	.area PSEG    (PAG,XDATA)
                                    816 ;--------------------------------------------------------
                                    817 ; external ram data
                                    818 ;--------------------------------------------------------
                                    819 	.area XSEG    (XDATA)
                           0061A6   820 _MONMUX	=	0x61a6
                           0061A6   821 _OPAMPMC	=	0x61a6
                           006230   822 _I2CCFG	=	0x6230
                           006231   823 _I2CSTAT	=	0x6231
                           006232   824 _I2CDATA	=	0x6232
                           006233   825 _I2CADDR	=	0x6233
                           006234   826 _I2CWC	=	0x6234
                           006235   827 _I2CIO	=	0x6235
                           006243   828 _OBSSEL0	=	0x6243
                           006244   829 _OBSSEL1	=	0x6244
                           006245   830 _OBSSEL2	=	0x6245
                           006246   831 _OBSSEL3	=	0x6246
                           006247   832 _OBSSEL4	=	0x6247
                           006248   833 _OBSSEL5	=	0x6248
                           006249   834 _CHVER	=	0x6249
                           00624A   835 _CHIPID	=	0x624a
                           00624B   836 _TESTREG0	=	0x624b
                           006260   837 _DBGDATA	=	0x6260
                           006262   838 _SRCRC	=	0x6262
                           006264   839 _BATTMON	=	0x6264
                           006265   840 _IVCTRL	=	0x6265
                           006270   841 _FCTL	=	0x6270
                           006271   842 _FADDRL	=	0x6271
                           006272   843 _FADDRH	=	0x6272
                           006273   844 _FWDATA	=	0x6273
                           006276   845 _CHIPINFO0	=	0x6276
                           006277   846 _CHIPINFO1	=	0x6277
                           006281   847 _IRCTL	=	0x6281
                           006290   848 _CLD	=	0x6290
                           0062A0   849 _XX_T1CCTL0	=	0x62a0
                           0062A1   850 _XX_T1CCTL1	=	0x62a1
                           0062A2   851 _XX_T1CCTL2	=	0x62a2
                           0062A3   852 _T1CCTL3	=	0x62a3
                           0062A4   853 _T1CCTL4	=	0x62a4
                           0062A6   854 _XX_T1CC0L	=	0x62a6
                           0062A7   855 _XX_T1CC0H	=	0x62a7
                           0062A8   856 _XX_T1CC1L	=	0x62a8
                           0062A9   857 _XX_T1CC1H	=	0x62a9
                           0062AA   858 _XX_T1CC2L	=	0x62aa
                           0062AB   859 _XX_T1CC2H	=	0x62ab
                           0062AC   860 _T1CC3L	=	0x62ac
                           0062AD   861 _T1CC3H	=	0x62ad
                           0062AE   862 _T1CC4L	=	0x62ae
                           0062AF   863 _T1CC4H	=	0x62af
                           0062B0   864 _STCC	=	0x62b0
                           0062B1   865 _STCS	=	0x62b1
                           0062B2   866 _STCV0	=	0x62b2
                           0062B3   867 _STCV1	=	0x62b3
                           0062B4   868 _STCV2	=	0x62b4
                           0062C0   869 _OPAMPC	=	0x62c0
                           0062C1   870 _OPAMPS	=	0x62c1
                           0062D0   871 _CMPCTL	=	0x62d0
                           006000   872 _RFCORE_RAM	=	0x6000
                           006000   873 _RXFIFO	=	0x6000
                           006080   874 _TXFIFO	=	0x6080
                           006100   875 _SRC_ADDR_TABLE	=	0x6100
                           006160   876 _SRCRESMASK0	=	0x6160
                           006161   877 _SRCRESMASK1	=	0x6161
                           006162   878 _SRCRESMASK2	=	0x6162
                           006163   879 _SRCRESINDEX	=	0x6163
                           006164   880 _SRCEXTPENDEN0	=	0x6164
                           006165   881 _SRCEXTPENDEN1	=	0x6165
                           006166   882 _SRCEXTPENDEN2	=	0x6166
                           006167   883 _SRCSHORTPENDEN0	=	0x6167
                           006168   884 _SRCSHORTPENDEN1	=	0x6168
                           006169   885 _SRCSHORTPENDEN2	=	0x6169
                           00616A   886 _EXT_ADDR0	=	0x616a
                           00616B   887 _EXT_ADDR1	=	0x616b
                           00616C   888 _EXT_ADDR2	=	0x616c
                           00616D   889 _EXT_ADDR3	=	0x616d
                           00616E   890 _EXT_ADDR4	=	0x616e
                           00616F   891 _EXT_ADDR5	=	0x616f
                           006170   892 _EXT_ADDR6	=	0x6170
                           006171   893 _EXT_ADDR7	=	0x6171
                           006172   894 _PAN_ID0	=	0x6172
                           006173   895 _PAN_ID1	=	0x6173
                           006174   896 _SHORT_ADDR0	=	0x6174
                           006175   897 _SHORT_ADDR1	=	0x6175
                           006180   898 _FRMFILT0	=	0x6180
                           006181   899 _FRMFILT1	=	0x6181
                           006182   900 _SRCMATCH	=	0x6182
                           006183   901 _SRCSHORTEN0	=	0x6183
                           006184   902 _SRCSHORTEN1	=	0x6184
                           006185   903 _SRCSHORTEN2	=	0x6185
                           006186   904 _SRCEXTEN0	=	0x6186
                           006187   905 _SRCEXTEN1	=	0x6187
                           006188   906 _SRCEXTEN2	=	0x6188
                           006189   907 _FRMCTRL0	=	0x6189
                           00618A   908 _FRMCTRL1	=	0x618a
                           00618B   909 _RXENABLE	=	0x618b
                           00618C   910 _RXMASKSET	=	0x618c
                           00618D   911 _RXMASKCLR	=	0x618d
                           00618E   912 _FREQTUNE	=	0x618e
                           00618F   913 _FREQCTRL	=	0x618f
                           006190   914 _TXPOWER	=	0x6190
                           006191   915 _TXCTRL	=	0x6191
                           006192   916 _FSMSTAT0	=	0x6192
                           006193   917 _FSMSTAT1	=	0x6193
                           006194   918 _FIFOPCTRL	=	0x6194
                           006195   919 _FSMCTRL	=	0x6195
                           006196   920 _CCACTRL0	=	0x6196
                           006197   921 _CCACTRL1	=	0x6197
                           006198   922 _RSSI	=	0x6198
                           006199   923 _RSSISTAT	=	0x6199
                           00619A   924 _RXFIRST	=	0x619a
                           00619B   925 _RXFIFOCNT	=	0x619b
                           00619C   926 _TXFIFOCNT	=	0x619c
                           00619D   927 _RXFIRST_PTR	=	0x619d
                           00619E   928 _RXLAST_PTR	=	0x619e
                           00619F   929 _RXP1_PTR	=	0x619f
                           0061A1   930 _TXFIRST_PTR	=	0x61a1
                           0061A2   931 _TXLAST_PTR	=	0x61a2
                           0061A3   932 _RFIRQM0	=	0x61a3
                           0061A4   933 _RFIRQM1	=	0x61a4
                           0061A5   934 _RFERRM	=	0x61a5
                           0061A7   935 _RFRND	=	0x61a7
                           0061A8   936 _MDMCTRL0	=	0x61a8
                           0061A9   937 _MDMCTRL1	=	0x61a9
                           0061AA   938 _FREQEST	=	0x61aa
                           0061AB   939 _RXCTRL	=	0x61ab
                           0061AC   940 _FSCTRL	=	0x61ac
                           0061AD   941 _FSCAL0	=	0x61ad
                           0061AE   942 _FSCAL1	=	0x61ae
                           0061AF   943 _FSCAL2	=	0x61af
                           0061B0   944 _FSCAL3	=	0x61b0
                           0061B1   945 _AGCCTRL0	=	0x61b1
                           0061B2   946 _AGCCTRL1	=	0x61b2
                           0061B3   947 _AGCCTRL2	=	0x61b3
                           0061B4   948 _AGCCTRL3	=	0x61b4
                           0061B5   949 _ADCTEST0	=	0x61b5
                           0061B6   950 _ADCTEST1	=	0x61b6
                           0061B7   951 _ADCTEST2	=	0x61b7
                           0061B8   952 _MDMTEST0	=	0x61b8
                           0061B9   953 _MDMTEST1	=	0x61b9
                           0061BA   954 _DACTEST0	=	0x61ba
                           0061BB   955 _DACTEST1	=	0x61bb
                           0061BC   956 _DACTEST2	=	0x61bc
                           0061BD   957 _ATEST	=	0x61bd
                           0061BE   958 _PTEST0	=	0x61be
                           0061BF   959 _PTEST1	=	0x61bf
                           0061FA   960 _TXFILTCFG	=	0x61fa
                           0061EB   961 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   962 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   963 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   964 _CSPPROG0	=	0x61c0
                           0061C1   965 _CSPPROG1	=	0x61c1
                           0061C2   966 _CSPPROG2	=	0x61c2
                           0061C3   967 _CSPPROG3	=	0x61c3
                           0061C4   968 _CSPPROG4	=	0x61c4
                           0061C5   969 _CSPPROG5	=	0x61c5
                           0061C6   970 _CSPPROG6	=	0x61c6
                           0061C7   971 _CSPPROG7	=	0x61c7
                           0061C8   972 _CSPPROG8	=	0x61c8
                           0061C9   973 _CSPPROG9	=	0x61c9
                           0061CA   974 _CSPPROG10	=	0x61ca
                           0061CB   975 _CSPPROG11	=	0x61cb
                           0061CC   976 _CSPPROG12	=	0x61cc
                           0061CD   977 _CSPPROG13	=	0x61cd
                           0061CE   978 _CSPPROG14	=	0x61ce
                           0061CF   979 _CSPPROG15	=	0x61cf
                           0061D0   980 _CSPPROG16	=	0x61d0
                           0061D1   981 _CSPPROG17	=	0x61d1
                           0061D2   982 _CSPPROG18	=	0x61d2
                           0061D3   983 _CSPPROG19	=	0x61d3
                           0061D4   984 _CSPPROG20	=	0x61d4
                           0061D5   985 _CSPPROG21	=	0x61d5
                           0061D6   986 _CSPPROG22	=	0x61d6
                           0061D7   987 _CSPPROG23	=	0x61d7
                           0061E0   988 _CSPCTRL	=	0x61e0
                           0061E1   989 _CSPSTAT	=	0x61e1
                           0061E2   990 _CSPX	=	0x61e2
                           0061E3   991 _CSPY	=	0x61e3
                           0061E4   992 _CSPZ	=	0x61e4
                           0061E5   993 _CSPT	=	0x61e5
                           006200   994 _USBADDR	=	0x6200
                           006201   995 _USBPOW	=	0x6201
                           006202   996 _USBIIF	=	0x6202
                           006204   997 _USBOIF	=	0x6204
                           006206   998 _USBCIF	=	0x6206
                           006207   999 _USBIIE	=	0x6207
                           006209  1000 _USBOIE	=	0x6209
                           00620B  1001 _USBCIE	=	0x620b
                           00620C  1002 _USBFRML	=	0x620c
                           00620D  1003 _USBFRMH	=	0x620d
                           00620E  1004 _USBINDEX	=	0x620e
                           00620F  1005 _USBCTRL	=	0x620f
                           006210  1006 _USBMAXI	=	0x6210
                           006211  1007 _USBCS0	=	0x6211
                           006211  1008 _USBCSIL	=	0x6211
                           006212  1009 _USBCSIH	=	0x6212
                           006213  1010 _USBMAXO	=	0x6213
                           006214  1011 _USBCSOL	=	0x6214
                           006215  1012 _USBCSOH	=	0x6215
                           006216  1013 _USBCNT0	=	0x6216
                           006216  1014 _USBCNTL	=	0x6216
                           006217  1015 _USBCNTH	=	0x6217
                           006220  1016 _USBF0	=	0x6220
                           006222  1017 _USBF1	=	0x6222
                           006224  1018 _USBF2	=	0x6224
                           006226  1019 _USBF3	=	0x6226
                           006228  1020 _USBF4	=	0x6228
                           00622A  1021 _USBF5	=	0x622a
                           007080  1022 _X_P0	=	0x7080
                           007086  1023 _X_U0CSR	=	0x7086
                           007089  1024 _X_P0IFG	=	0x7089
                           00708A  1025 _X_P1IFG	=	0x708a
                           00708B  1026 _X_P2IFG	=	0x708b
                           00708C  1027 _X_PICTL	=	0x708c
                           00708D  1028 _X_P1IEN	=	0x708d
                           00708F  1029 _X_P0INP	=	0x708f
                           007090  1030 _X_P1	=	0x7090
                           007091  1031 _X_RFIRQF1	=	0x7091
                           007093  1032 _X_MPAGE	=	0x7093
                           007093  1033 _X__XPAGE	=	0x7093
                           007094  1034 _X_T2CTRL	=	0x7094
                           007095  1035 _X_ST0	=	0x7095
                           007096  1036 _X_ST1	=	0x7096
                           007097  1037 _X_ST2	=	0x7097
                           00709C  1038 _X_T2EVTCFG	=	0x709c
                           00709D  1039 _X_SLEEPSTA	=	0x709d
                           00709E  1040 _X_CLKCONSTA	=	0x709e
                           00709F  1041 _X_FMAP	=	0x709f
                           00709F  1042 _X_PSBANK	=	0x709f
                           0070A0  1043 _X_P2	=	0x70a0
                           0070A1  1044 _X_T2IRQF	=	0x70a1
                           0070A2  1045 _X_T2M0	=	0x70a2
                           0070A3  1046 _X_T2M1	=	0x70a3
                           0070A4  1047 _X_T2MOVF0	=	0x70a4
                           0070A5  1048 _X_T2MOVF1	=	0x70a5
                           0070A6  1049 _X_T2MOVF2	=	0x70a6
                           0070A7  1050 _X_T2IRQM	=	0x70a7
                           0070AB  1051 _X_P0IEN	=	0x70ab
                           0070AC  1052 _X_P2IEN	=	0x70ac
                           0070AD  1053 _X_STLOAD	=	0x70ad
                           0070AE  1054 _X_PMUX	=	0x70ae
                           0070AF  1055 _X_T1STAT	=	0x70af
                           0070B1  1056 _X_ENCDI	=	0x70b1
                           0070B2  1057 _X_ENCDO	=	0x70b2
                           0070B3  1058 _X_ENCCS	=	0x70b3
                           0070B4  1059 _X_ADCCON1	=	0x70b4
                           0070B5  1060 _X_ADCCON2	=	0x70b5
                           0070B6  1061 _X_ADCCON3	=	0x70b6
                           0070BA  1062 _X_ADCL	=	0x70ba
                           0070BB  1063 _X_ADCH	=	0x70bb
                           0070BC  1064 _X_RNDL	=	0x70bc
                           0070BD  1065 _X_RNDH	=	0x70bd
                           0070BE  1066 _X_SLEEPCMD	=	0x70be
                           0070BF  1067 _X_RFERRF	=	0x70bf
                           0070C1  1068 _X_U0DBUF	=	0x70c1
                           0070C2  1069 _X_U0BAUD	=	0x70c2
                           0070C3  1070 _X_T2MSEL	=	0x70c3
                           0070C4  1071 _X_U0UCR	=	0x70c4
                           0070C5  1072 _X_U0GCR	=	0x70c5
                           0070C6  1073 _X_CLKCONCMD	=	0x70c6
                           0070C7  1074 _X_MEMCTR	=	0x70c7
                           0070C9  1075 _X_WDCTL	=	0x70c9
                           0070CA  1076 _X_T3CNT	=	0x70ca
                           0070CB  1077 _X_T3CTL	=	0x70cb
                           0070CC  1078 _X_T3CCTL0	=	0x70cc
                           0070CD  1079 _X_T3CC0	=	0x70cd
                           0070CE  1080 _X_T3CCTL1	=	0x70ce
                           0070CF  1081 _X_T3CC1	=	0x70cf
                           0070D1  1082 _X_DMAIRQ	=	0x70d1
                           0070D2  1083 _X_DMA1CFGL	=	0x70d2
                           0070D3  1084 _X_DMA1CFGH	=	0x70d3
                           0070D4  1085 _X_DMA0CFGL	=	0x70d4
                           0070D5  1086 _X_DMA0CFGH	=	0x70d5
                           0070D6  1087 _X_DMAARM	=	0x70d6
                           0070D7  1088 _X_DMAREQ	=	0x70d7
                           0070D8  1089 _X_TIMIF	=	0x70d8
                           0070D9  1090 _X_RFD	=	0x70d9
                           0070DA  1091 _X_T1CC0L	=	0x70da
                           0070DB  1092 _X_T1CC0H	=	0x70db
                           0070DC  1093 _X_T1CC1L	=	0x70dc
                           0070DD  1094 _X_T1CC1H	=	0x70dd
                           0070DE  1095 _X_T1CC2L	=	0x70de
                           0070DF  1096 _X_T1CC2H	=	0x70df
                           0070E1  1097 _X_RFST	=	0x70e1
                           0070E2  1098 _X_T1CNTL	=	0x70e2
                           0070E3  1099 _X_T1CNTH	=	0x70e3
                           0070E4  1100 _X_T1CTL	=	0x70e4
                           0070E5  1101 _X_T1CCTL0	=	0x70e5
                           0070E6  1102 _X_T1CCTL1	=	0x70e6
                           0070E7  1103 _X_T1CCTL2	=	0x70e7
                           0070E9  1104 _X_RFIRQF0	=	0x70e9
                           0070EA  1105 _X_T4CNT	=	0x70ea
                           0070EB  1106 _X_T4CTL	=	0x70eb
                           0070EC  1107 _X_T4CCTL0	=	0x70ec
                           0070ED  1108 _X_T4CC0	=	0x70ed
                           0070EE  1109 _X_T4CCTL1	=	0x70ee
                           0070EF  1110 _X_T4CC1	=	0x70ef
                           0070F1  1111 _X_PERCFG	=	0x70f1
                           0070F2  1112 _X_APCFG	=	0x70f2
                           0070F3  1113 _X_P0SEL	=	0x70f3
                           0070F4  1114 _X_P1SEL	=	0x70f4
                           0070F5  1115 _X_P2SEL	=	0x70f5
                           0070F6  1116 _X_P1INP	=	0x70f6
                           0070F7  1117 _X_P2INP	=	0x70f7
                           0070F8  1118 _X_U1CSR	=	0x70f8
                           0070F9  1119 _X_U1DBUF	=	0x70f9
                           0070FA  1120 _X_U1BAUD	=	0x70fa
                           0070FB  1121 _X_U1UCR	=	0x70fb
                           0070FC  1122 _X_U1GCR	=	0x70fc
                           0070FD  1123 _X_P0DIR	=	0x70fd
                           0070FE  1124 _X_P1DIR	=	0x70fe
                           0070FF  1125 _X_P2DIR	=	0x70ff
                           007800  1126 _X_INFOPAGE	=	0x7800
                           00780C  1127 _X_IEEE_ADDR	=	0x780c
      000000                       1128 _used_map:
      000000                       1129 	.ds 4
      000004                       1130 _locked_map:
      000004                       1131 	.ds 4
      000008                       1132 _all_tables:
      000008                       1133 	.ds 24
      000020                       1134 _num_tables:
      000020                       1135 	.ds 2
      000022                       1136 _neighbor_addr_mem_memb_count:
      000022                       1137 	.ds 4
      000026                       1138 _neighbor_addr_mem_memb_mem:
      000026                       1139 	.ds 44
                                   1140 ;--------------------------------------------------------
                                   1141 ; absolute external ram data
                                   1142 ;--------------------------------------------------------
                                   1143 	.area XABS    (ABS,XDATA)
                                   1144 ;--------------------------------------------------------
                                   1145 ; external initialized ram data
                                   1146 ;--------------------------------------------------------
                                   1147 	.area XISEG   (XDATA)
      000000                       1148 _neighbor_addr_mem:
      000000                       1149 	.ds 10
      00000A                       1150 _nbr_table_keys_list:
      00000A                       1151 	.ds 3
      00000D                       1152 _nbr_table_keys:
      00000D                       1153 	.ds 3
                                   1154 	.area HOME    (CODE)
                                   1155 	.area GSINIT0 (CODE)
                                   1156 	.area GSINIT1 (CODE)
                                   1157 	.area GSINIT2 (CODE)
                                   1158 	.area GSINIT3 (CODE)
                                   1159 	.area GSINIT4 (CODE)
                                   1160 	.area GSINIT5 (CODE)
                                   1161 	.area GSINIT  (CODE)
                                   1162 	.area GSFINAL (CODE)
                                   1163 	.area CSEG    (CODE)
                                   1164 ;--------------------------------------------------------
                                   1165 ; global & static initialisations
                                   1166 ;--------------------------------------------------------
                                   1167 	.area HOME    (CODE)
                                   1168 	.area GSINIT  (CODE)
                                   1169 	.area GSFINAL (CODE)
                                   1170 	.area GSINIT  (CODE)
                                   1171 ;--------------------------------------------------------
                                   1172 ; Home
                                   1173 ;--------------------------------------------------------
                                   1174 	.area HOME    (CODE)
                                   1175 	.area HOME    (CODE)
                                   1176 ;--------------------------------------------------------
                                   1177 ; code
                                   1178 ;--------------------------------------------------------
                                   1179 	.area BANK1   (CODE)
                                   1180 ;------------------------------------------------------------
                                   1181 ;Allocation info for local variables in function 'key_from_index'
                                   1182 ;------------------------------------------------------------
                                   1183 ;index                     Allocated to registers r6 r7 
                                   1184 ;------------------------------------------------------------
                                   1185 ;	/opt/contiki/core/net/nbr-table.c:80: key_from_index(int index)
                                   1186 ;	-----------------------------------------
                                   1187 ;	 function key_from_index
                                   1188 ;	-----------------------------------------
      000000                       1189 _key_from_index:
                           000007  1190 	ar7 = 0x07
                           000006  1191 	ar6 = 0x06
                           000005  1192 	ar5 = 0x05
                           000004  1193 	ar4 = 0x04
                           000003  1194 	ar3 = 0x03
                           000002  1195 	ar2 = 0x02
                           000001  1196 	ar1 = 0x01
                           000000  1197 	ar0 = 0x00
      000000 AE 82            [24] 1198 	mov	r6,dpl
      000002 AF 83            [24] 1199 	mov	r7,dph
                                   1200 ;	/opt/contiki/core/net/nbr-table.c:82: return index != -1 ? &((nbr_table_key_t *)neighbor_addr_mem.mem)[index] : NULL;
      000004 E4               [12] 1201 	clr	a
      000005 BE FF 04         [24] 1202 	cjne	r6,#0xFF,00108$
      000008 BF FF 01         [24] 1203 	cjne	r7,#0xFF,00108$
      00000B 04               [12] 1204 	inc	a
      00000C                       1205 00108$:
      00000C 70 2C            [24] 1206 	jnz	00103$
      00000E 90r00r07         [24] 1207 	mov	dptr,#(_neighbor_addr_mem + 0x0007)
      000011 E0               [24] 1208 	movx	a,@dptr
      000012 FB               [12] 1209 	mov	r3,a
      000013 A3               [24] 1210 	inc	dptr
      000014 E0               [24] 1211 	movx	a,@dptr
      000015 FC               [12] 1212 	mov	r4,a
      000016 A3               [24] 1213 	inc	dptr
      000017 E0               [24] 1214 	movx	a,@dptr
      000018 FD               [12] 1215 	mov	r5,a
      000019 C0 05            [24] 1216 	push	ar5
      00001B C0 04            [24] 1217 	push	ar4
      00001D C0 03            [24] 1218 	push	ar3
      00001F C0 06            [24] 1219 	push	ar6
      000021 C0 07            [24] 1220 	push	ar7
      000023 90 00 0B         [24] 1221 	mov	dptr,#0x000B
      000026 12r00r00         [24] 1222 	lcall	__mulint
      000029 AE 82            [24] 1223 	mov	r6,dpl
      00002B 15 81            [12] 1224 	dec	sp
      00002D 15 81            [12] 1225 	dec	sp
      00002F D0 03            [24] 1226 	pop	ar3
      000031 D0 04            [24] 1227 	pop	ar4
      000033 D0 05            [24] 1228 	pop	ar5
      000035 EE               [12] 1229 	mov	a,r6
      000036 2B               [12] 1230 	add	a,r3
      000037 FF               [12] 1231 	mov	r7,a
      000038 80 02            [24] 1232 	sjmp	00104$
      00003A                       1233 00103$:
      00003A 7F 00            [12] 1234 	mov	r7,#0x00
      00003C                       1235 00104$:
      00003C 7E 00            [12] 1236 	mov	r6,#0x00
      00003E 7D 40            [12] 1237 	mov	r5,#0x40
      000040 8F 82            [24] 1238 	mov	dpl,r7
      000042 8E 83            [24] 1239 	mov	dph,r6
      000044 8D F0            [24] 1240 	mov	b,r5
      000046 02r00r00         [24] 1241 	ljmp	__sdcc_banked_ret
                                   1242 ;------------------------------------------------------------
                                   1243 ;Allocation info for local variables in function 'item_from_index'
                                   1244 ;------------------------------------------------------------
                                   1245 ;index                     Allocated to stack - sp -4
                                   1246 ;table                     Allocated to registers r5 r6 r7 
                                   1247 ;------------------------------------------------------------
                                   1248 ;	/opt/contiki/core/net/nbr-table.c:87: item_from_index(nbr_table_t *table, int index)
                                   1249 ;	-----------------------------------------
                                   1250 ;	 function item_from_index
                                   1251 ;	-----------------------------------------
      000049                       1252 _item_from_index:
      000049 AD 82            [24] 1253 	mov	r5,dpl
      00004B AE 83            [24] 1254 	mov	r6,dph
      00004D AF F0            [24] 1255 	mov	r7,b
                                   1256 ;	/opt/contiki/core/net/nbr-table.c:89: return table != NULL && index != -1 ? (char *)table->data + index * table->item_size : NULL;
      00004F ED               [12] 1257 	mov	a,r5
      000050 4E               [12] 1258 	orl	a,r6
      000051 60 72            [24] 1259 	jz	00103$
      000053 E5 81            [12] 1260 	mov	a,sp
      000055 24 FC            [12] 1261 	add	a,#0xfc
      000057 F8               [12] 1262 	mov	r0,a
      000058 E4               [12] 1263 	clr	a
      000059 B6 FF 05         [24] 1264 	cjne	@r0,#0xFF,00114$
      00005C 08               [12] 1265 	inc	r0
      00005D B6 FF 01         [24] 1266 	cjne	@r0,#0xFF,00114$
      000060 04               [12] 1267 	inc	a
      000061                       1268 00114$:
      000061 70 62            [24] 1269 	jnz	00103$
      000063 74 07            [12] 1270 	mov	a,#0x07
      000065 2D               [12] 1271 	add	a,r5
      000066 FA               [12] 1272 	mov	r2,a
      000067 E4               [12] 1273 	clr	a
      000068 3E               [12] 1274 	addc	a,r6
      000069 FB               [12] 1275 	mov	r3,a
      00006A 8F 04            [24] 1276 	mov	ar4,r7
      00006C 8A 82            [24] 1277 	mov	dpl,r2
      00006E 8B 83            [24] 1278 	mov	dph,r3
      000070 8C F0            [24] 1279 	mov	b,r4
      000072 12r00r00         [24] 1280 	lcall	__gptrget
      000075 FA               [12] 1281 	mov	r2,a
      000076 A3               [24] 1282 	inc	dptr
      000077 12r00r00         [24] 1283 	lcall	__gptrget
      00007A FB               [12] 1284 	mov	r3,a
      00007B A3               [24] 1285 	inc	dptr
      00007C 12r00r00         [24] 1286 	lcall	__gptrget
      00007F FC               [12] 1287 	mov	r4,a
      000080 74 02            [12] 1288 	mov	a,#0x02
      000082 2D               [12] 1289 	add	a,r5
      000083 FD               [12] 1290 	mov	r5,a
      000084 E4               [12] 1291 	clr	a
      000085 3E               [12] 1292 	addc	a,r6
      000086 FE               [12] 1293 	mov	r6,a
      000087 8D 82            [24] 1294 	mov	dpl,r5
      000089 8E 83            [24] 1295 	mov	dph,r6
      00008B 8F F0            [24] 1296 	mov	b,r7
      00008D 12r00r00         [24] 1297 	lcall	__gptrget
      000090 FD               [12] 1298 	mov	r5,a
      000091 A3               [24] 1299 	inc	dptr
      000092 12r00r00         [24] 1300 	lcall	__gptrget
      000095 FE               [12] 1301 	mov	r6,a
      000096 C0 04            [24] 1302 	push	ar4
      000098 C0 03            [24] 1303 	push	ar3
      00009A C0 02            [24] 1304 	push	ar2
      00009C C0 05            [24] 1305 	push	ar5
      00009E C0 06            [24] 1306 	push	ar6
      0000A0 E5 81            [12] 1307 	mov	a,sp
      0000A2 24 F7            [12] 1308 	add	a,#0xf7
      0000A4 F8               [12] 1309 	mov	r0,a
      0000A5 86 82            [24] 1310 	mov	dpl,@r0
      0000A7 08               [12] 1311 	inc	r0
      0000A8 86 83            [24] 1312 	mov	dph,@r0
      0000AA 12r00r00         [24] 1313 	lcall	__mulint
      0000AD AE 82            [24] 1314 	mov	r6,dpl
      0000AF AF 83            [24] 1315 	mov	r7,dph
      0000B1 15 81            [12] 1316 	dec	sp
      0000B3 15 81            [12] 1317 	dec	sp
      0000B5 D0 02            [24] 1318 	pop	ar2
      0000B7 D0 03            [24] 1319 	pop	ar3
      0000B9 D0 04            [24] 1320 	pop	ar4
      0000BB EE               [12] 1321 	mov	a,r6
      0000BC 2A               [12] 1322 	add	a,r2
      0000BD FE               [12] 1323 	mov	r6,a
      0000BE EF               [12] 1324 	mov	a,r7
      0000BF 3B               [12] 1325 	addc	a,r3
      0000C0 FD               [12] 1326 	mov	r5,a
      0000C1 8C 07            [24] 1327 	mov	ar7,r4
      0000C3 80 06            [24] 1328 	sjmp	00104$
      0000C5                       1329 00103$:
      0000C5 7E 00            [12] 1330 	mov	r6,#0x00
      0000C7 7D 00            [12] 1331 	mov	r5,#0x00
      0000C9 7F 00            [12] 1332 	mov	r7,#0x00
      0000CB                       1333 00104$:
      0000CB 8E 82            [24] 1334 	mov	dpl,r6
      0000CD 8D 83            [24] 1335 	mov	dph,r5
      0000CF 8F F0            [24] 1336 	mov	b,r7
      0000D1 02r00r00         [24] 1337 	ljmp	__sdcc_banked_ret
                                   1338 ;------------------------------------------------------------
                                   1339 ;Allocation info for local variables in function 'index_from_key'
                                   1340 ;------------------------------------------------------------
                                   1341 ;key                       Allocated to registers r5 r6 r7 
                                   1342 ;------------------------------------------------------------
                                   1343 ;	/opt/contiki/core/net/nbr-table.c:94: index_from_key(nbr_table_key_t *key)
                                   1344 ;	-----------------------------------------
                                   1345 ;	 function index_from_key
                                   1346 ;	-----------------------------------------
      0000D4                       1347 _index_from_key:
      0000D4 AD 82            [24] 1348 	mov	r5,dpl
      0000D6 AE 83            [24] 1349 	mov	r6,dph
      0000D8 AF F0            [24] 1350 	mov	r7,b
                                   1351 ;	/opt/contiki/core/net/nbr-table.c:96: return key != NULL ? key - (nbr_table_key_t *)neighbor_addr_mem.mem : -1;
      0000DA ED               [12] 1352 	mov	a,r5
      0000DB 4E               [12] 1353 	orl	a,r6
      0000DC 60 29            [24] 1354 	jz	00103$
      0000DE 90r00r07         [24] 1355 	mov	dptr,#(_neighbor_addr_mem + 0x0007)
      0000E1 E0               [24] 1356 	movx	a,@dptr
      0000E2 FA               [12] 1357 	mov	r2,a
      0000E3 A3               [24] 1358 	inc	dptr
      0000E4 E0               [24] 1359 	movx	a,@dptr
      0000E5 FB               [12] 1360 	mov	r3,a
      0000E6 A3               [24] 1361 	inc	dptr
      0000E7 E0               [24] 1362 	movx	a,@dptr
      0000E8 ED               [12] 1363 	mov	a,r5
      0000E9 C3               [12] 1364 	clr	c
      0000EA 9A               [12] 1365 	subb	a,r2
      0000EB FD               [12] 1366 	mov	r5,a
      0000EC EE               [12] 1367 	mov	a,r6
      0000ED 9B               [12] 1368 	subb	a,r3
      0000EE FE               [12] 1369 	mov	r6,a
      0000EF 74 0B            [12] 1370 	mov	a,#0x0B
      0000F1 C0 E0            [24] 1371 	push	acc
      0000F3 E4               [12] 1372 	clr	a
      0000F4 C0 E0            [24] 1373 	push	acc
      0000F6 8D 82            [24] 1374 	mov	dpl,r5
      0000F8 8E 83            [24] 1375 	mov	dph,r6
      0000FA 12r00r00         [24] 1376 	lcall	__divsint
      0000FD AE 82            [24] 1377 	mov	r6,dpl
      0000FF AF 83            [24] 1378 	mov	r7,dph
      000101 15 81            [12] 1379 	dec	sp
      000103 15 81            [12] 1380 	dec	sp
      000105 80 04            [24] 1381 	sjmp	00104$
      000107                       1382 00103$:
      000107 7E FF            [12] 1383 	mov	r6,#0xFF
      000109 7F FF            [12] 1384 	mov	r7,#0xFF
      00010B                       1385 00104$:
      00010B 8E 82            [24] 1386 	mov	dpl,r6
      00010D 8F 83            [24] 1387 	mov	dph,r7
      00010F 02r00r00         [24] 1388 	ljmp	__sdcc_banked_ret
                                   1389 ;------------------------------------------------------------
                                   1390 ;Allocation info for local variables in function 'index_from_item'
                                   1391 ;------------------------------------------------------------
                                   1392 ;item                      Allocated to stack - sp -8
                                   1393 ;table                     Allocated to stack - sp -2
                                   1394 ;------------------------------------------------------------
                                   1395 ;	/opt/contiki/core/net/nbr-table.c:101: index_from_item(nbr_table_t *table, const nbr_table_item_t *item)
                                   1396 ;	-----------------------------------------
                                   1397 ;	 function index_from_item
                                   1398 ;	-----------------------------------------
      000112                       1399 _index_from_item:
      000112 C0 82            [24] 1400 	push	dpl
      000114 C0 83            [24] 1401 	push	dph
      000116 C0 F0            [24] 1402 	push	b
                                   1403 ;	/opt/contiki/core/net/nbr-table.c:103: return table != NULL && item != NULL ? ((int)((char *)item - (char *)table->data)) / table->item_size : -1;
      000118 A8 81            [24] 1404 	mov	r0,sp
      00011A 18               [12] 1405 	dec	r0
      00011B 18               [12] 1406 	dec	r0
      00011C E6               [12] 1407 	mov	a,@r0
      00011D 08               [12] 1408 	inc	r0
      00011E 46               [12] 1409 	orl	a,@r0
      00011F 60 73            [24] 1410 	jz	00103$
      000121 E5 81            [12] 1411 	mov	a,sp
      000123 24 F8            [12] 1412 	add	a,#0xf8
      000125 F8               [12] 1413 	mov	r0,a
      000126 E6               [12] 1414 	mov	a,@r0
      000127 08               [12] 1415 	inc	r0
      000128 46               [12] 1416 	orl	a,@r0
      000129 60 69            [24] 1417 	jz	00103$
      00012B E5 81            [12] 1418 	mov	a,sp
      00012D 24 F8            [12] 1419 	add	a,#0xf8
      00012F F8               [12] 1420 	mov	r0,a
      000130 86 02            [24] 1421 	mov	ar2,@r0
      000132 08               [12] 1422 	inc	r0
      000133 86 03            [24] 1423 	mov	ar3,@r0
      000135 08               [12] 1424 	inc	r0
      000136 86 04            [24] 1425 	mov	ar4,@r0
      000138 A8 81            [24] 1426 	mov	r0,sp
      00013A 18               [12] 1427 	dec	r0
      00013B 18               [12] 1428 	dec	r0
      00013C 74 07            [12] 1429 	mov	a,#0x07
      00013E 26               [12] 1430 	add	a,@r0
      00013F FD               [12] 1431 	mov	r5,a
      000140 E4               [12] 1432 	clr	a
      000141 08               [12] 1433 	inc	r0
      000142 36               [12] 1434 	addc	a,@r0
      000143 FE               [12] 1435 	mov	r6,a
      000144 08               [12] 1436 	inc	r0
      000145 86 07            [24] 1437 	mov	ar7,@r0
      000147 8D 82            [24] 1438 	mov	dpl,r5
      000149 8E 83            [24] 1439 	mov	dph,r6
      00014B 8F F0            [24] 1440 	mov	b,r7
      00014D 12r00r00         [24] 1441 	lcall	__gptrget
      000150 FD               [12] 1442 	mov	r5,a
      000151 A3               [24] 1443 	inc	dptr
      000152 12r00r00         [24] 1444 	lcall	__gptrget
      000155 FE               [12] 1445 	mov	r6,a
      000156 A3               [24] 1446 	inc	dptr
      000157 12r00r00         [24] 1447 	lcall	__gptrget
      00015A EA               [12] 1448 	mov	a,r2
      00015B C3               [12] 1449 	clr	c
      00015C 9D               [12] 1450 	subb	a,r5
      00015D FA               [12] 1451 	mov	r2,a
      00015E EB               [12] 1452 	mov	a,r3
      00015F 9E               [12] 1453 	subb	a,r6
      000160 FB               [12] 1454 	mov	r3,a
      000161 A8 81            [24] 1455 	mov	r0,sp
      000163 18               [12] 1456 	dec	r0
      000164 18               [12] 1457 	dec	r0
      000165 74 02            [12] 1458 	mov	a,#0x02
      000167 26               [12] 1459 	add	a,@r0
      000168 FD               [12] 1460 	mov	r5,a
      000169 E4               [12] 1461 	clr	a
      00016A 08               [12] 1462 	inc	r0
      00016B 36               [12] 1463 	addc	a,@r0
      00016C FE               [12] 1464 	mov	r6,a
      00016D 08               [12] 1465 	inc	r0
      00016E 86 07            [24] 1466 	mov	ar7,@r0
      000170 8D 82            [24] 1467 	mov	dpl,r5
      000172 8E 83            [24] 1468 	mov	dph,r6
      000174 8F F0            [24] 1469 	mov	b,r7
      000176 12r00r00         [24] 1470 	lcall	__gptrget
      000179 FD               [12] 1471 	mov	r5,a
      00017A A3               [24] 1472 	inc	dptr
      00017B 12r00r00         [24] 1473 	lcall	__gptrget
      00017E FE               [12] 1474 	mov	r6,a
      00017F C0 05            [24] 1475 	push	ar5
      000181 C0 06            [24] 1476 	push	ar6
      000183 8A 82            [24] 1477 	mov	dpl,r2
      000185 8B 83            [24] 1478 	mov	dph,r3
      000187 12r00r00         [24] 1479 	lcall	__divsint
      00018A AE 82            [24] 1480 	mov	r6,dpl
      00018C AF 83            [24] 1481 	mov	r7,dph
      00018E 15 81            [12] 1482 	dec	sp
      000190 15 81            [12] 1483 	dec	sp
      000192 80 04            [24] 1484 	sjmp	00104$
      000194                       1485 00103$:
      000194 7E FF            [12] 1486 	mov	r6,#0xFF
      000196 7F FF            [12] 1487 	mov	r7,#0xFF
      000198                       1488 00104$:
      000198 8E 82            [24] 1489 	mov	dpl,r6
      00019A 8F 83            [24] 1490 	mov	dph,r7
      00019C 15 81            [12] 1491 	dec	sp
      00019E 15 81            [12] 1492 	dec	sp
      0001A0 15 81            [12] 1493 	dec	sp
      0001A2 02r00r00         [24] 1494 	ljmp	__sdcc_banked_ret
                                   1495 ;------------------------------------------------------------
                                   1496 ;Allocation info for local variables in function 'item_from_key'
                                   1497 ;------------------------------------------------------------
                                   1498 ;key                       Allocated to stack - sp -5
                                   1499 ;table                     Allocated to registers r5 r6 r7 
                                   1500 ;------------------------------------------------------------
                                   1501 ;	/opt/contiki/core/net/nbr-table.c:108: item_from_key(nbr_table_t *table, nbr_table_key_t *key)
                                   1502 ;	-----------------------------------------
                                   1503 ;	 function item_from_key
                                   1504 ;	-----------------------------------------
      0001A5                       1505 _item_from_key:
      0001A5 AD 82            [24] 1506 	mov	r5,dpl
      0001A7 AE 83            [24] 1507 	mov	r6,dph
      0001A9 AF F0            [24] 1508 	mov	r7,b
                                   1509 ;	/opt/contiki/core/net/nbr-table.c:110: return item_from_index(table, index_from_key(key));
      0001AB E5 81            [12] 1510 	mov	a,sp
      0001AD 24 FB            [12] 1511 	add	a,#0xfb
      0001AF F8               [12] 1512 	mov	r0,a
      0001B0 86 82            [24] 1513 	mov	dpl,@r0
      0001B2 08               [12] 1514 	inc	r0
      0001B3 86 83            [24] 1515 	mov	dph,@r0
      0001B5 08               [12] 1516 	inc	r0
      0001B6 86 F0            [24] 1517 	mov	b,@r0
      0001B8 C0 07            [24] 1518 	push	ar7
      0001BA C0 06            [24] 1519 	push	ar6
      0001BC C0 05            [24] 1520 	push	ar5
      0001BE 78rD4            [12] 1521 	mov	r0,#_index_from_key
      0001C0 79s00            [12] 1522 	mov	r1,#(_index_from_key >> 8)
      0001C2 7As00            [12] 1523 	mov	r2,#(_index_from_key >> 16)
      0001C4 12r00r00         [24] 1524 	lcall	__sdcc_banked_call
      0001C7 AB 82            [24] 1525 	mov	r3,dpl
      0001C9 AC 83            [24] 1526 	mov	r4,dph
      0001CB D0 05            [24] 1527 	pop	ar5
      0001CD D0 06            [24] 1528 	pop	ar6
      0001CF D0 07            [24] 1529 	pop	ar7
      0001D1 C0 03            [24] 1530 	push	ar3
      0001D3 C0 04            [24] 1531 	push	ar4
      0001D5 8D 82            [24] 1532 	mov	dpl,r5
      0001D7 8E 83            [24] 1533 	mov	dph,r6
      0001D9 8F F0            [24] 1534 	mov	b,r7
      0001DB 78r49            [12] 1535 	mov	r0,#_item_from_index
      0001DD 79s00            [12] 1536 	mov	r1,#(_item_from_index >> 8)
      0001DF 7As00            [12] 1537 	mov	r2,#(_item_from_index >> 16)
      0001E1 12r00r00         [24] 1538 	lcall	__sdcc_banked_call
      0001E4 AD 82            [24] 1539 	mov	r5,dpl
      0001E6 AE 83            [24] 1540 	mov	r6,dph
      0001E8 AF F0            [24] 1541 	mov	r7,b
      0001EA 15 81            [12] 1542 	dec	sp
      0001EC 15 81            [12] 1543 	dec	sp
      0001EE 8D 82            [24] 1544 	mov	dpl,r5
      0001F0 8E 83            [24] 1545 	mov	dph,r6
      0001F2 8F F0            [24] 1546 	mov	b,r7
      0001F4 02r00r00         [24] 1547 	ljmp	__sdcc_banked_ret
                                   1548 ;------------------------------------------------------------
                                   1549 ;Allocation info for local variables in function 'key_from_item'
                                   1550 ;------------------------------------------------------------
                                   1551 ;item                      Allocated to stack - sp -5
                                   1552 ;table                     Allocated to registers r5 r6 r7 
                                   1553 ;------------------------------------------------------------
                                   1554 ;	/opt/contiki/core/net/nbr-table.c:115: key_from_item(nbr_table_t *table, const nbr_table_item_t *item)
                                   1555 ;	-----------------------------------------
                                   1556 ;	 function key_from_item
                                   1557 ;	-----------------------------------------
      0001F7                       1558 _key_from_item:
      0001F7 AD 82            [24] 1559 	mov	r5,dpl
      0001F9 AE 83            [24] 1560 	mov	r6,dph
      0001FB AF F0            [24] 1561 	mov	r7,b
                                   1562 ;	/opt/contiki/core/net/nbr-table.c:117: return key_from_index(index_from_item(table, item));
      0001FD E5 81            [12] 1563 	mov	a,sp
      0001FF 24 FB            [12] 1564 	add	a,#0xfb
      000201 F8               [12] 1565 	mov	r0,a
      000202 E6               [12] 1566 	mov	a,@r0
      000203 C0 E0            [24] 1567 	push	acc
      000205 08               [12] 1568 	inc	r0
      000206 E6               [12] 1569 	mov	a,@r0
      000207 C0 E0            [24] 1570 	push	acc
      000209 08               [12] 1571 	inc	r0
      00020A E6               [12] 1572 	mov	a,@r0
      00020B C0 E0            [24] 1573 	push	acc
      00020D 8D 82            [24] 1574 	mov	dpl,r5
      00020F 8E 83            [24] 1575 	mov	dph,r6
      000211 8F F0            [24] 1576 	mov	b,r7
      000213 78r12            [12] 1577 	mov	r0,#_index_from_item
      000215 79s01            [12] 1578 	mov	r1,#(_index_from_item >> 8)
      000217 7As00            [12] 1579 	mov	r2,#(_index_from_item >> 16)
      000219 12r00r00         [24] 1580 	lcall	__sdcc_banked_call
      00021C AE 82            [24] 1581 	mov	r6,dpl
      00021E AF 83            [24] 1582 	mov	r7,dph
      000220 15 81            [12] 1583 	dec	sp
      000222 15 81            [12] 1584 	dec	sp
      000224 15 81            [12] 1585 	dec	sp
      000226 8E 82            [24] 1586 	mov	dpl,r6
      000228 8F 83            [24] 1587 	mov	dph,r7
      00022A 78r00            [12] 1588 	mov	r0,#_key_from_index
      00022C 79s00            [12] 1589 	mov	r1,#(_key_from_index >> 8)
      00022E 7As00            [12] 1590 	mov	r2,#(_key_from_index >> 16)
      000230 12r00r00         [24] 1591 	lcall	__sdcc_banked_call
      000233 AD 82            [24] 1592 	mov	r5,dpl
      000235 AE 83            [24] 1593 	mov	r6,dph
      000237 AF F0            [24] 1594 	mov	r7,b
      000239 02r00r00         [24] 1595 	ljmp	__sdcc_banked_ret
                                   1596 ;------------------------------------------------------------
                                   1597 ;Allocation info for local variables in function 'index_from_lladdr'
                                   1598 ;------------------------------------------------------------
                                   1599 ;lladdr                    Allocated to stack - sp -2
                                   1600 ;key                       Allocated to registers r2 r3 r4 
                                   1601 ;------------------------------------------------------------
                                   1602 ;	/opt/contiki/core/net/nbr-table.c:122: index_from_lladdr(const linkaddr_t *lladdr)
                                   1603 ;	-----------------------------------------
                                   1604 ;	 function index_from_lladdr
                                   1605 ;	-----------------------------------------
      00023C                       1606 _index_from_lladdr:
      00023C C0 82            [24] 1607 	push	dpl
      00023E C0 83            [24] 1608 	push	dph
      000240 C0 F0            [24] 1609 	push	b
                                   1610 ;	/opt/contiki/core/net/nbr-table.c:127: if(lladdr == NULL) {
      000242 A8 81            [24] 1611 	mov	r0,sp
      000244 18               [12] 1612 	dec	r0
      000245 18               [12] 1613 	dec	r0
      000246 E6               [12] 1614 	mov	a,@r0
      000247 08               [12] 1615 	inc	r0
      000248 46               [12] 1616 	orl	a,@r0
      000249 70 0C            [24] 1617 	jnz	00102$
                                   1618 ;	/opt/contiki/core/net/nbr-table.c:128: lladdr = &linkaddr_null;
      00024B A8 81            [24] 1619 	mov	r0,sp
      00024D 18               [12] 1620 	dec	r0
      00024E 18               [12] 1621 	dec	r0
      00024F 76r00            [12] 1622 	mov	@r0,#_linkaddr_null
      000251 08               [12] 1623 	inc	r0
      000252 76s00            [12] 1624 	mov	@r0,#(_linkaddr_null >> 8)
      000254 08               [12] 1625 	inc	r0
      000255 76 80            [12] 1626 	mov	@r0,#0x80
      000257                       1627 00102$:
                                   1628 ;	/opt/contiki/core/net/nbr-table.c:130: key = list_head(nbr_table_keys);
      000257 90r00r0D         [24] 1629 	mov	dptr,#_nbr_table_keys
      00025A E0               [24] 1630 	movx	a,@dptr
      00025B FA               [12] 1631 	mov	r2,a
      00025C A3               [24] 1632 	inc	dptr
      00025D E0               [24] 1633 	movx	a,@dptr
      00025E FB               [12] 1634 	mov	r3,a
      00025F A3               [24] 1635 	inc	dptr
      000260 E0               [24] 1636 	movx	a,@dptr
      000261 FC               [12] 1637 	mov	r4,a
      000262 8A 82            [24] 1638 	mov	dpl,r2
      000264 8B 83            [24] 1639 	mov	dph,r3
      000266 8C F0            [24] 1640 	mov	b,r4
      000268 78r00            [12] 1641 	mov	r0,#_list_head
      00026A 79s00            [12] 1642 	mov	r1,#(_list_head >> 8)
      00026C 7As00            [12] 1643 	mov	r2,#(_list_head >> 16)
      00026E 12r00r00         [24] 1644 	lcall	__sdcc_banked_call
      000271 AA 82            [24] 1645 	mov	r2,dpl
      000273 AB 83            [24] 1646 	mov	r3,dph
      000275 AC F0            [24] 1647 	mov	r4,b
                                   1648 ;	/opt/contiki/core/net/nbr-table.c:131: while(key != NULL) {
      000277                       1649 00106$:
      000277 EA               [12] 1650 	mov	a,r2
      000278 4B               [12] 1651 	orl	a,r3
      000279 70 03            [24] 1652 	jnz	00127$
      00027B 02r02rFF         [24] 1653 	ljmp	00108$
      00027E                       1654 00127$:
                                   1655 ;	/opt/contiki/core/net/nbr-table.c:132: if(lladdr && linkaddr_cmp(lladdr, &key->lladdr)) {
      00027E A8 81            [24] 1656 	mov	r0,sp
      000280 18               [12] 1657 	dec	r0
      000281 18               [12] 1658 	dec	r0
      000282 E6               [12] 1659 	mov	a,@r0
      000283 08               [12] 1660 	inc	r0
      000284 46               [12] 1661 	orl	a,@r0
      000285 60 54            [24] 1662 	jz	00104$
      000287 74 03            [12] 1663 	mov	a,#0x03
      000289 2A               [12] 1664 	add	a,r2
      00028A FD               [12] 1665 	mov	r5,a
      00028B E4               [12] 1666 	clr	a
      00028C 3B               [12] 1667 	addc	a,r3
      00028D FE               [12] 1668 	mov	r6,a
      00028E 8C 07            [24] 1669 	mov	ar7,r4
      000290 C0 04            [24] 1670 	push	ar4
      000292 C0 03            [24] 1671 	push	ar3
      000294 C0 02            [24] 1672 	push	ar2
      000296 C0 05            [24] 1673 	push	ar5
      000298 C0 06            [24] 1674 	push	ar6
      00029A C0 07            [24] 1675 	push	ar7
      00029C E5 81            [12] 1676 	mov	a,sp
      00029E 24 F8            [12] 1677 	add	a,#0xf8
      0002A0 F8               [12] 1678 	mov	r0,a
      0002A1 86 82            [24] 1679 	mov	dpl,@r0
      0002A3 08               [12] 1680 	inc	r0
      0002A4 86 83            [24] 1681 	mov	dph,@r0
      0002A6 08               [12] 1682 	inc	r0
      0002A7 86 F0            [24] 1683 	mov	b,@r0
      0002A9 78r00            [12] 1684 	mov	r0,#_linkaddr_cmp
      0002AB 79s00            [12] 1685 	mov	r1,#(_linkaddr_cmp >> 8)
      0002AD 7As00            [12] 1686 	mov	r2,#(_linkaddr_cmp >> 16)
      0002AF 12r00r00         [24] 1687 	lcall	__sdcc_banked_call
      0002B2 AE 82            [24] 1688 	mov	r6,dpl
      0002B4 AF 83            [24] 1689 	mov	r7,dph
      0002B6 15 81            [12] 1690 	dec	sp
      0002B8 15 81            [12] 1691 	dec	sp
      0002BA 15 81            [12] 1692 	dec	sp
      0002BC D0 02            [24] 1693 	pop	ar2
      0002BE D0 03            [24] 1694 	pop	ar3
      0002C0 D0 04            [24] 1695 	pop	ar4
      0002C2 EE               [12] 1696 	mov	a,r6
      0002C3 4F               [12] 1697 	orl	a,r7
      0002C4 60 15            [24] 1698 	jz	00104$
                                   1699 ;	/opt/contiki/core/net/nbr-table.c:133: return index_from_key(key);
      0002C6 8A 82            [24] 1700 	mov	dpl,r2
      0002C8 8B 83            [24] 1701 	mov	dph,r3
      0002CA 8C F0            [24] 1702 	mov	b,r4
      0002CC 78rD4            [12] 1703 	mov	r0,#_index_from_key
      0002CE 79s00            [12] 1704 	mov	r1,#(_index_from_key >> 8)
      0002D0 7As00            [12] 1705 	mov	r2,#(_index_from_key >> 16)
      0002D2 12r00r00         [24] 1706 	lcall	__sdcc_banked_call
      0002D5 AE 82            [24] 1707 	mov	r6,dpl
      0002D7 AF 83            [24] 1708 	mov  r7,dph
      0002D9 80 27            [24] 1709 	sjmp	00109$
      0002DB                       1710 00104$:
                                   1711 ;	/opt/contiki/core/net/nbr-table.c:135: key = list_item_next(key);
      0002DB 8A 05            [24] 1712 	mov	ar5,r2
      0002DD 8B 06            [24] 1713 	mov	ar6,r3
      0002DF 8C 07            [24] 1714 	mov	ar7,r4
      0002E1 8D 82            [24] 1715 	mov	dpl,r5
      0002E3 8E 83            [24] 1716 	mov	dph,r6
      0002E5 8F F0            [24] 1717 	mov	b,r7
      0002E7 78r00            [12] 1718 	mov	r0,#_list_item_next
      0002E9 79s00            [12] 1719 	mov	r1,#(_list_item_next >> 8)
      0002EB 7As00            [12] 1720 	mov	r2,#(_list_item_next >> 16)
      0002ED 12r00r00         [24] 1721 	lcall	__sdcc_banked_call
      0002F0 AD 82            [24] 1722 	mov	r5,dpl
      0002F2 AE 83            [24] 1723 	mov	r6,dph
      0002F4 AF F0            [24] 1724 	mov	r7,b
      0002F6 8D 02            [24] 1725 	mov	ar2,r5
      0002F8 8E 03            [24] 1726 	mov	ar3,r6
      0002FA 8F 04            [24] 1727 	mov	ar4,r7
      0002FC 02r02r77         [24] 1728 	ljmp	00106$
      0002FF                       1729 00108$:
                                   1730 ;	/opt/contiki/core/net/nbr-table.c:137: return -1;
      0002FF 90 FF FF         [24] 1731 	mov	dptr,#0xFFFF
      000302                       1732 00109$:
      000302 15 81            [12] 1733 	dec	sp
      000304 15 81            [12] 1734 	dec	sp
      000306 15 81            [12] 1735 	dec	sp
      000308 02r00r00         [24] 1736 	ljmp	__sdcc_banked_ret
                                   1737 ;------------------------------------------------------------
                                   1738 ;Allocation info for local variables in function 'nbr_get_bit'
                                   1739 ;------------------------------------------------------------
                                   1740 ;table                     Allocated to stack - sp -5
                                   1741 ;item                      Allocated to stack - sp -8
                                   1742 ;bitmap                    Allocated to registers r5 r6 r7 
                                   1743 ;item_index                Allocated to registers r3 r4 
                                   1744 ;------------------------------------------------------------
                                   1745 ;	/opt/contiki/core/net/nbr-table.c:142: nbr_get_bit(uint8_t *bitmap, nbr_table_t *table, nbr_table_item_t *item)
                                   1746 ;	-----------------------------------------
                                   1747 ;	 function nbr_get_bit
                                   1748 ;	-----------------------------------------
      00030B                       1749 _nbr_get_bit:
      00030B AD 82            [24] 1750 	mov	r5,dpl
      00030D AE 83            [24] 1751 	mov	r6,dph
      00030F AF F0            [24] 1752 	mov	r7,b
                                   1753 ;	/opt/contiki/core/net/nbr-table.c:144: int item_index = index_from_item(table, item);
      000311 C0 07            [24] 1754 	push	ar7
      000313 C0 06            [24] 1755 	push	ar6
      000315 C0 05            [24] 1756 	push	ar5
      000317 E5 81            [12] 1757 	mov	a,sp
      000319 24 F5            [12] 1758 	add	a,#0xf5
      00031B F8               [12] 1759 	mov	r0,a
      00031C E6               [12] 1760 	mov	a,@r0
      00031D C0 E0            [24] 1761 	push	acc
      00031F 08               [12] 1762 	inc	r0
      000320 E6               [12] 1763 	mov	a,@r0
      000321 C0 E0            [24] 1764 	push	acc
      000323 08               [12] 1765 	inc	r0
      000324 E6               [12] 1766 	mov	a,@r0
      000325 C0 E0            [24] 1767 	push	acc
      000327 E5 81            [12] 1768 	mov	a,sp
      000329 24 F5            [12] 1769 	add	a,#0xf5
      00032B F8               [12] 1770 	mov	r0,a
      00032C 86 82            [24] 1771 	mov	dpl,@r0
      00032E 08               [12] 1772 	inc	r0
      00032F 86 83            [24] 1773 	mov	dph,@r0
      000331 08               [12] 1774 	inc	r0
      000332 86 F0            [24] 1775 	mov	b,@r0
      000334 78r12            [12] 1776 	mov	r0,#_index_from_item
      000336 79s01            [12] 1777 	mov	r1,#(_index_from_item >> 8)
      000338 7As00            [12] 1778 	mov	r2,#(_index_from_item >> 16)
      00033A 12r00r00         [24] 1779 	lcall	__sdcc_banked_call
      00033D AB 82            [24] 1780 	mov	r3,dpl
      00033F AC 83            [24] 1781 	mov	r4,dph
      000341 15 81            [12] 1782 	dec	sp
      000343 15 81            [12] 1783 	dec	sp
      000345 15 81            [12] 1784 	dec	sp
      000347 D0 05            [24] 1785 	pop	ar5
      000349 D0 06            [24] 1786 	pop	ar6
      00034B D0 07            [24] 1787 	pop	ar7
                                   1788 ;	/opt/contiki/core/net/nbr-table.c:145: if(table != NULL && item_index != -1) {
      00034D E5 81            [12] 1789 	mov	a,sp
      00034F 24 FB            [12] 1790 	add	a,#0xfb
      000351 F8               [12] 1791 	mov	r0,a
      000352 E6               [12] 1792 	mov	a,@r0
      000353 08               [12] 1793 	inc	r0
      000354 46               [12] 1794 	orl	a,@r0
      000355 60 67            [24] 1795 	jz	00102$
      000357 BB FF 05         [24] 1796 	cjne	r3,#0xFF,00114$
      00035A BC FF 02         [24] 1797 	cjne	r4,#0xFF,00114$
      00035D 80 5F            [24] 1798 	sjmp	00102$
      00035F                       1799 00114$:
                                   1800 ;	/opt/contiki/core/net/nbr-table.c:146: return (bitmap[item_index] & (1 << table->index)) != 0;
      00035F EB               [12] 1801 	mov	a,r3
      000360 2D               [12] 1802 	add	a,r5
      000361 FD               [12] 1803 	mov	r5,a
      000362 EC               [12] 1804 	mov	a,r4
      000363 3E               [12] 1805 	addc	a,r6
      000364 FE               [12] 1806 	mov	r6,a
      000365 8D 82            [24] 1807 	mov	dpl,r5
      000367 8E 83            [24] 1808 	mov	dph,r6
      000369 8F F0            [24] 1809 	mov	b,r7
      00036B 12r00r00         [24] 1810 	lcall	__gptrget
      00036E FD               [12] 1811 	mov	r5,a
      00036F E5 81            [12] 1812 	mov	a,sp
      000371 24 FB            [12] 1813 	add	a,#0xfb
      000373 F8               [12] 1814 	mov	r0,a
      000374 86 04            [24] 1815 	mov	ar4,@r0
      000376 08               [12] 1816 	inc	r0
      000377 86 06            [24] 1817 	mov	ar6,@r0
      000379 08               [12] 1818 	inc	r0
      00037A 86 07            [24] 1819 	mov	ar7,@r0
      00037C 8C 82            [24] 1820 	mov	dpl,r4
      00037E 8E 83            [24] 1821 	mov	dph,r6
      000380 8F F0            [24] 1822 	mov	b,r7
      000382 12r00r00         [24] 1823 	lcall	__gptrget
      000385 FC               [12] 1824 	mov	r4,a
      000386 A3               [24] 1825 	inc	dptr
      000387 12r00r00         [24] 1826 	lcall	__gptrget
      00038A 8C F0            [24] 1827 	mov	b,r4
      00038C 05 F0            [12] 1828 	inc	b
      00038E 7C 01            [12] 1829 	mov	r4,#0x01
      000390 7E 00            [12] 1830 	mov	r6,#0x00
      000392 80 06            [24] 1831 	sjmp	00116$
      000394                       1832 00115$:
      000394 EC               [12] 1833 	mov	a,r4
      000395 2C               [12] 1834 	add	a,r4
      000396 FC               [12] 1835 	mov	r4,a
      000397 EE               [12] 1836 	mov	a,r6
      000398 33               [12] 1837 	rlc	a
      000399 FE               [12] 1838 	mov	r6,a
      00039A                       1839 00116$:
      00039A D5 F0 F7         [24] 1840 	djnz	b,00115$
      00039D 7F 00            [12] 1841 	mov	r7,#0x00
      00039F ED               [12] 1842 	mov	a,r5
      0003A0 52 04            [12] 1843 	anl	ar4,a
      0003A2 EF               [12] 1844 	mov	a,r7
      0003A3 52 06            [12] 1845 	anl	ar6,a
      0003A5 E4               [12] 1846 	clr	a
      0003A6 BC 00 04         [24] 1847 	cjne	r4,#0x00,00117$
      0003A9 BE 00 01         [24] 1848 	cjne	r6,#0x00,00117$
      0003AC 04               [12] 1849 	inc	a
      0003AD                       1850 00117$:
      0003AD FC               [12] 1851 	mov	r4,a
      0003AE B4 01 00         [24] 1852 	cjne	a,#0x01,00119$
      0003B1                       1853 00119$:
      0003B1 E4               [12] 1854 	clr	a
      0003B2 33               [12] 1855 	rlc	a
      0003B3 FC               [12] 1856 	mov	r4,a
      0003B4 33               [12] 1857 	rlc	a
      0003B5 95 E0            [12] 1858 	subb	a,acc
      0003B7 FF               [12] 1859 	mov	r7,a
      0003B8 8C 82            [24] 1860 	mov	dpl,r4
      0003BA 8F 83            [24] 1861 	mov	dph,r7
      0003BC 80 03            [24] 1862 	sjmp	00105$
      0003BE                       1863 00102$:
                                   1864 ;	/opt/contiki/core/net/nbr-table.c:148: return 0;
      0003BE 90 00 00         [24] 1865 	mov	dptr,#0x0000
                                   1866 ;	/opt/contiki/core/net/nbr-table.c:150: return 0;
      0003C1                       1867 00105$:
      0003C1 02r00r00         [24] 1868 	ljmp	__sdcc_banked_ret
                                   1869 ;------------------------------------------------------------
                                   1870 ;Allocation info for local variables in function 'nbr_set_bit'
                                   1871 ;------------------------------------------------------------
                                   1872 ;table                     Allocated to stack - sp -8
                                   1873 ;item                      Allocated to stack - sp -11
                                   1874 ;value                     Allocated to stack - sp -13
                                   1875 ;bitmap                    Allocated to registers r5 r6 r7 
                                   1876 ;item_index                Allocated to registers r3 r4 
                                   1877 ;sloc0                     Allocated to stack - sp +3
                                   1878 ;sloc1                     Allocated to stack - sp -2
                                   1879 ;------------------------------------------------------------
                                   1880 ;	/opt/contiki/core/net/nbr-table.c:155: nbr_set_bit(uint8_t *bitmap, nbr_table_t *table, nbr_table_item_t *item, int value)
                                   1881 ;	-----------------------------------------
                                   1882 ;	 function nbr_set_bit
                                   1883 ;	-----------------------------------------
      0003C4                       1884 _nbr_set_bit:
      0003C4 05 81            [12] 1885 	inc	sp
      0003C6 05 81            [12] 1886 	inc	sp
      0003C8 05 81            [12] 1887 	inc	sp
      0003CA AD 82            [24] 1888 	mov	r5,dpl
      0003CC AE 83            [24] 1889 	mov	r6,dph
      0003CE AF F0            [24] 1890 	mov	r7,b
                                   1891 ;	/opt/contiki/core/net/nbr-table.c:157: int item_index = index_from_item(table, item);
      0003D0 C0 07            [24] 1892 	push	ar7
      0003D2 C0 06            [24] 1893 	push	ar6
      0003D4 C0 05            [24] 1894 	push	ar5
      0003D6 E5 81            [12] 1895 	mov	a,sp
      0003D8 24 F2            [12] 1896 	add	a,#0xf2
      0003DA F8               [12] 1897 	mov	r0,a
      0003DB E6               [12] 1898 	mov	a,@r0
      0003DC C0 E0            [24] 1899 	push	acc
      0003DE 08               [12] 1900 	inc	r0
      0003DF E6               [12] 1901 	mov	a,@r0
      0003E0 C0 E0            [24] 1902 	push	acc
      0003E2 08               [12] 1903 	inc	r0
      0003E3 E6               [12] 1904 	mov	a,@r0
      0003E4 C0 E0            [24] 1905 	push	acc
      0003E6 E5 81            [12] 1906 	mov	a,sp
      0003E8 24 F2            [12] 1907 	add	a,#0xf2
      0003EA F8               [12] 1908 	mov	r0,a
      0003EB 86 82            [24] 1909 	mov	dpl,@r0
      0003ED 08               [12] 1910 	inc	r0
      0003EE 86 83            [24] 1911 	mov	dph,@r0
      0003F0 08               [12] 1912 	inc	r0
      0003F1 86 F0            [24] 1913 	mov	b,@r0
      0003F3 78r12            [12] 1914 	mov	r0,#_index_from_item
      0003F5 79s01            [12] 1915 	mov	r1,#(_index_from_item >> 8)
      0003F7 7As00            [12] 1916 	mov	r2,#(_index_from_item >> 16)
      0003F9 12r00r00         [24] 1917 	lcall	__sdcc_banked_call
      0003FC AB 82            [24] 1918 	mov	r3,dpl
      0003FE AC 83            [24] 1919 	mov	r4,dph
      000400 15 81            [12] 1920 	dec	sp
      000402 15 81            [12] 1921 	dec	sp
      000404 15 81            [12] 1922 	dec	sp
      000406 D0 05            [24] 1923 	pop	ar5
      000408 D0 06            [24] 1924 	pop	ar6
      00040A D0 07            [24] 1925 	pop	ar7
                                   1926 ;	/opt/contiki/core/net/nbr-table.c:159: if(table != NULL && item_index != -1) {
      00040C E5 81            [12] 1927 	mov	a,sp
      00040E 24 F8            [12] 1928 	add	a,#0xf8
      000410 F8               [12] 1929 	mov	r0,a
      000411 E6               [12] 1930 	mov	a,@r0
      000412 08               [12] 1931 	inc	r0
      000413 46               [12] 1932 	orl	a,@r0
      000414 70 03            [24] 1933 	jnz	00119$
      000416 02r04rE8         [24] 1934 	ljmp	00105$
      000419                       1935 00119$:
      000419 BB FF 06         [24] 1936 	cjne	r3,#0xFF,00120$
      00041C BC FF 03         [24] 1937 	cjne	r4,#0xFF,00120$
      00041F 02r04rE8         [24] 1938 	ljmp	00105$
      000422                       1939 00120$:
                                   1940 ;	/opt/contiki/core/net/nbr-table.c:160: if(value) {
      000422 E5 81            [12] 1941 	mov	a,sp
      000424 24 F3            [12] 1942 	add	a,#0xf3
      000426 F8               [12] 1943 	mov	r0,a
      000427 E6               [12] 1944 	mov	a,@r0
      000428 08               [12] 1945 	inc	r0
      000429 46               [12] 1946 	orl	a,@r0
      00042A 60 61            [24] 1947 	jz	00102$
                                   1948 ;	/opt/contiki/core/net/nbr-table.c:161: bitmap[item_index] |= 1 << table->index;
      00042C A8 81            [24] 1949 	mov	r0,sp
      00042E 18               [12] 1950 	dec	r0
      00042F 18               [12] 1951 	dec	r0
      000430 EB               [12] 1952 	mov	a,r3
      000431 2D               [12] 1953 	add	a,r5
      000432 F6               [12] 1954 	mov	@r0,a
      000433 EC               [12] 1955 	mov	a,r4
      000434 3E               [12] 1956 	addc	a,r6
      000435 08               [12] 1957 	inc	r0
      000436 F6               [12] 1958 	mov	@r0,a
      000437 08               [12] 1959 	inc	r0
      000438 A6 07            [24] 1960 	mov	@r0,ar7
      00043A A8 81            [24] 1961 	mov	r0,sp
      00043C 18               [12] 1962 	dec	r0
      00043D 18               [12] 1963 	dec	r0
      00043E 86 82            [24] 1964 	mov	dpl,@r0
      000440 08               [12] 1965 	inc	r0
      000441 86 83            [24] 1966 	mov	dph,@r0
      000443 08               [12] 1967 	inc	r0
      000444 86 F0            [24] 1968 	mov	b,@r0
      000446 12r00r00         [24] 1969 	lcall	__gptrget
      000449 FC               [12] 1970 	mov	r4,a
      00044A E5 81            [12] 1971 	mov	a,sp
      00044C 24 F8            [12] 1972 	add	a,#0xf8
      00044E F8               [12] 1973 	mov	r0,a
      00044F 86 05            [24] 1974 	mov	ar5,@r0
      000451 08               [12] 1975 	inc	r0
      000452 86 06            [24] 1976 	mov	ar6,@r0
      000454 08               [12] 1977 	inc	r0
      000455 86 07            [24] 1978 	mov	ar7,@r0
      000457 8D 82            [24] 1979 	mov	dpl,r5
      000459 8E 83            [24] 1980 	mov	dph,r6
      00045B 8F F0            [24] 1981 	mov	b,r7
      00045D 12r00r00         [24] 1982 	lcall	__gptrget
      000460 FD               [12] 1983 	mov	r5,a
      000461 A3               [24] 1984 	inc	dptr
      000462 12r00r00         [24] 1985 	lcall	__gptrget
      000465 8D F0            [24] 1986 	mov	b,r5
      000467 05 F0            [12] 1987 	inc	b
      000469 7D 01            [12] 1988 	mov	r5,#0x01
      00046B 7E 00            [12] 1989 	mov	r6,#0x00
      00046D 80 06            [24] 1990 	sjmp	00123$
      00046F                       1991 00122$:
      00046F ED               [12] 1992 	mov	a,r5
      000470 2D               [12] 1993 	add	a,r5
      000471 FD               [12] 1994 	mov	r5,a
      000472 EE               [12] 1995 	mov	a,r6
      000473 33               [12] 1996 	rlc	a
      000474 FE               [12] 1997 	mov	r6,a
      000475                       1998 00123$:
      000475 D5 F0 F7         [24] 1999 	djnz	b,00122$
      000478 EC               [12] 2000 	mov	a,r4
      000479 42 05            [12] 2001 	orl	ar5,a
      00047B A8 81            [24] 2002 	mov	r0,sp
      00047D 18               [12] 2003 	dec	r0
      00047E 18               [12] 2004 	dec	r0
      00047F 86 82            [24] 2005 	mov	dpl,@r0
      000481 08               [12] 2006 	inc	r0
      000482 86 83            [24] 2007 	mov	dph,@r0
      000484 08               [12] 2008 	inc	r0
      000485 86 F0            [24] 2009 	mov	b,@r0
      000487 ED               [12] 2010 	mov	a,r5
      000488 12r00r00         [24] 2011 	lcall	__gptrput
      00048B 80 56            [24] 2012 	sjmp	00103$
      00048D                       2013 00102$:
                                   2014 ;	/opt/contiki/core/net/nbr-table.c:163: bitmap[item_index] &= ~(1 << table->index);
      00048D EB               [12] 2015 	mov	a,r3
      00048E 2D               [12] 2016 	add	a,r5
      00048F FB               [12] 2017 	mov	r3,a
      000490 EC               [12] 2018 	mov	a,r4
      000491 3E               [12] 2019 	addc	a,r6
      000492 FC               [12] 2020 	mov	r4,a
      000493 8B 82            [24] 2021 	mov	dpl,r3
      000495 8C 83            [24] 2022 	mov	dph,r4
      000497 8F F0            [24] 2023 	mov	b,r7
      000499 A8 81            [24] 2024 	mov	r0,sp
      00049B 18               [12] 2025 	dec	r0
      00049C 18               [12] 2026 	dec	r0
      00049D 12r00r00         [24] 2027 	lcall	__gptrget
      0004A0 F6               [12] 2028 	mov	@r0,a
      0004A1 E5 81            [12] 2029 	mov	a,sp
      0004A3 24 F8            [12] 2030 	add	a,#0xf8
      0004A5 F8               [12] 2031 	mov	r0,a
      0004A6 86 02            [24] 2032 	mov	ar2,@r0
      0004A8 08               [12] 2033 	inc	r0
      0004A9 86 05            [24] 2034 	mov	ar5,@r0
      0004AB 08               [12] 2035 	inc	r0
      0004AC 86 06            [24] 2036 	mov	ar6,@r0
      0004AE 8A 82            [24] 2037 	mov	dpl,r2
      0004B0 8D 83            [24] 2038 	mov	dph,r5
      0004B2 8E F0            [24] 2039 	mov	b,r6
      0004B4 12r00r00         [24] 2040 	lcall	__gptrget
      0004B7 FA               [12] 2041 	mov	r2,a
      0004B8 A3               [24] 2042 	inc	dptr
      0004B9 12r00r00         [24] 2043 	lcall	__gptrget
      0004BC 8A F0            [24] 2044 	mov	b,r2
      0004BE 05 F0            [12] 2045 	inc	b
      0004C0 7A 01            [12] 2046 	mov	r2,#0x01
      0004C2 7D 00            [12] 2047 	mov	r5,#0x00
      0004C4 80 06            [24] 2048 	sjmp	00125$
      0004C6                       2049 00124$:
      0004C6 EA               [12] 2050 	mov	a,r2
      0004C7 2A               [12] 2051 	add	a,r2
      0004C8 FA               [12] 2052 	mov	r2,a
      0004C9 ED               [12] 2053 	mov	a,r5
      0004CA 33               [12] 2054 	rlc	a
      0004CB FD               [12] 2055 	mov	r5,a
      0004CC                       2056 00125$:
      0004CC D5 F0 F7         [24] 2057 	djnz	b,00124$
      0004CF EA               [12] 2058 	mov	a,r2
      0004D0 F4               [12] 2059 	cpl	a
      0004D1 FA               [12] 2060 	mov	r2,a
      0004D2 A8 81            [24] 2061 	mov	r0,sp
      0004D4 18               [12] 2062 	dec	r0
      0004D5 18               [12] 2063 	dec	r0
      0004D6 E6               [12] 2064 	mov	a,@r0
      0004D7 52 02            [12] 2065 	anl	ar2,a
      0004D9 8B 82            [24] 2066 	mov	dpl,r3
      0004DB 8C 83            [24] 2067 	mov	dph,r4
      0004DD 8F F0            [24] 2068 	mov	b,r7
      0004DF EA               [12] 2069 	mov	a,r2
      0004E0 12r00r00         [24] 2070 	lcall	__gptrput
      0004E3                       2071 00103$:
                                   2072 ;	/opt/contiki/core/net/nbr-table.c:165: return 1;
      0004E3 90 00 01         [24] 2073 	mov	dptr,#0x0001
      0004E6 80 03            [24] 2074 	sjmp	00108$
      0004E8                       2075 00105$:
                                   2076 ;	/opt/contiki/core/net/nbr-table.c:167: return 0;
      0004E8 90 00 00         [24] 2077 	mov	dptr,#0x0000
                                   2078 ;	/opt/contiki/core/net/nbr-table.c:169: return 0;
      0004EB                       2079 00108$:
      0004EB 15 81            [12] 2080 	dec	sp
      0004ED 15 81            [12] 2081 	dec	sp
      0004EF 15 81            [12] 2082 	dec	sp
      0004F1 02r00r00         [24] 2083 	ljmp	__sdcc_banked_ret
                                   2084 ;------------------------------------------------------------
                                   2085 ;Allocation info for local variables in function 'nbr_table_allocate'
                                   2086 ;------------------------------------------------------------
                                   2087 ;key                       Allocated to registers r2 r6 r7 
                                   2088 ;least_used_count          Allocated to stack - sp -7
                                   2089 ;least_used_key            Allocated to stack - sp -10
                                   2090 ;item_index                Allocated to stack - sp -5
                                   2091 ;locked                    Allocated to registers 
                                   2092 ;used                      Allocated to stack - sp -3
                                   2093 ;used_count                Allocated to stack - sp -1
                                   2094 ;i                         Allocated to stack - sp -5
                                   2095 ;removed_item              Allocated to stack - sp -3
                                   2096 ;sloc0                     Allocated to stack - sp -15
                                   2097 ;sloc1                     Allocated to stack - sp -12
                                   2098 ;------------------------------------------------------------
                                   2099 ;	/opt/contiki/core/net/nbr-table.c:173: nbr_table_allocate(void)
                                   2100 ;	-----------------------------------------
                                   2101 ;	 function nbr_table_allocate
                                   2102 ;	-----------------------------------------
      0004F4                       2103 _nbr_table_allocate:
      0004F4 E5 81            [12] 2104 	mov	a,sp
      0004F6 24 10            [12] 2105 	add	a,#0x10
                                   2106 ;	/opt/contiki/core/net/nbr-table.c:176: int least_used_count = 0;
      0004F8 F5 81            [12] 2107 	mov	sp,a
      0004FA 24 F9            [12] 2108 	add	a,#0xf9
      0004FC F8               [12] 2109 	mov	r0,a
      0004FD E4               [12] 2110 	clr	a
      0004FE F6               [12] 2111 	mov	@r0,a
      0004FF 08               [12] 2112 	inc	r0
      000500 F6               [12] 2113 	mov	@r0,a
                                   2114 ;	/opt/contiki/core/net/nbr-table.c:177: nbr_table_key_t *least_used_key = NULL;
      000501 E5 81            [12] 2115 	mov	a,sp
      000503 24 F6            [12] 2116 	add	a,#0xf6
      000505 F8               [12] 2117 	mov	r0,a
      000506 E4               [12] 2118 	clr	a
      000507 F6               [12] 2119 	mov	@r0,a
      000508 08               [12] 2120 	inc	r0
      000509 F6               [12] 2121 	mov	@r0,a
      00050A 08               [12] 2122 	inc	r0
      00050B 76 00            [12] 2123 	mov	@r0,#0x00
                                   2124 ;	/opt/contiki/core/net/nbr-table.c:179: key = memb_alloc(&neighbor_addr_mem);
      00050D 90r00r00         [24] 2125 	mov	dptr,#_neighbor_addr_mem
      000510 75 F0 00         [24] 2126 	mov	b,#0x00
      000513 78r00            [12] 2127 	mov	r0,#_memb_alloc
      000515 79s00            [12] 2128 	mov	r1,#(_memb_alloc >> 8)
      000517 7As00            [12] 2129 	mov	r2,#(_memb_alloc >> 16)
      000519 12r00r00         [24] 2130 	lcall	__sdcc_banked_call
      00051C AA 82            [24] 2131 	mov	r2,dpl
      00051E AE 83            [24] 2132 	mov	r6,dph
      000520 AF F0            [24] 2133 	mov	r7,b
                                   2134 ;	/opt/contiki/core/net/nbr-table.c:180: if(key != NULL) {
      000522 EA               [12] 2135 	mov	a,r2
      000523 4E               [12] 2136 	orl	a,r6
      000524 60 09            [24] 2137 	jz	00126$
                                   2138 ;	/opt/contiki/core/net/nbr-table.c:181: return key;
      000526 8A 82            [24] 2139 	mov	dpl,r2
      000528 8E 83            [24] 2140 	mov	dph,r6
      00052A 8F F0            [24] 2141 	mov	b,r7
      00052C 02r08r4E         [24] 2142 	ljmp	00130$
      00052F                       2143 00126$:
                                   2144 ;	/opt/contiki/core/net/nbr-table.c:189: key = list_head(nbr_table_keys);
      00052F 90r00r0D         [24] 2145 	mov	dptr,#_nbr_table_keys
      000532 E0               [24] 2146 	movx	a,@dptr
      000533 FB               [12] 2147 	mov	r3,a
      000534 A3               [24] 2148 	inc	dptr
      000535 E0               [24] 2149 	movx	a,@dptr
      000536 FC               [12] 2150 	mov	r4,a
      000537 A3               [24] 2151 	inc	dptr
      000538 E0               [24] 2152 	movx	a,@dptr
      000539 FD               [12] 2153 	mov	r5,a
      00053A 8B 82            [24] 2154 	mov	dpl,r3
      00053C 8C 83            [24] 2155 	mov	dph,r4
      00053E 8D F0            [24] 2156 	mov	b,r5
      000540 78r00            [12] 2157 	mov	r0,#_list_head
      000542 79s00            [12] 2158 	mov	r1,#(_list_head >> 8)
      000544 7As00            [12] 2159 	mov	r2,#(_list_head >> 16)
      000546 12r00r00         [24] 2160 	lcall	__sdcc_banked_call
      000549 AB 82            [24] 2161 	mov	r3,dpl
      00054B AC 83            [24] 2162 	mov	r4,dph
      00054D AD F0            [24] 2163 	mov	r5,b
      00054F 8B 02            [24] 2164 	mov	ar2,r3
      000551 8C 06            [24] 2165 	mov	ar6,r4
      000553 8D 07            [24] 2166 	mov	ar7,r5
                                   2167 ;	/opt/contiki/core/net/nbr-table.c:190: while(key != NULL) {
                                   2168 ;	/opt/contiki/core/net/nbr-table.c:235: return least_used_key;
                                   2169 ;	/opt/contiki/core/net/nbr-table.c:190: while(key != NULL) {
      000555                       2170 00113$:
      000555 EA               [12] 2171 	mov	a,r2
      000556 4E               [12] 2172 	orl	a,r6
      000557 70 03            [24] 2173 	jnz	00177$
      000559 02r06r60         [24] 2174 	ljmp	00115$
      00055C                       2175 00177$:
                                   2176 ;	/opt/contiki/core/net/nbr-table.c:191: int item_index = index_from_key(key);
      00055C 8A 82            [24] 2177 	mov	dpl,r2
      00055E 8E 83            [24] 2178 	mov	dph,r6
      000560 8F F0            [24] 2179 	mov	b,r7
      000562 C0 07            [24] 2180 	push	ar7
      000564 C0 06            [24] 2181 	push	ar6
      000566 C0 02            [24] 2182 	push	ar2
      000568 78rD4            [12] 2183 	mov	r0,#_index_from_key
      00056A 79s00            [12] 2184 	mov	r1,#(_index_from_key >> 8)
      00056C 7As00            [12] 2185 	mov	r2,#(_index_from_key >> 16)
      00056E 12r00r00         [24] 2186 	lcall	__sdcc_banked_call
      000571 AD 82            [24] 2187 	mov	r5,dpl
      000573 AC 83            [24] 2188 	mov	r4,dph
      000575 D0 02            [24] 2189 	pop	ar2
      000577 D0 06            [24] 2190 	pop	ar6
      000579 D0 07            [24] 2191 	pop	ar7
      00057B E5 81            [12] 2192 	mov	a,sp
      00057D 24 FB            [12] 2193 	add	a,#0xfb
      00057F F8               [12] 2194 	mov	r0,a
      000580 A6 05            [24] 2195 	mov	@r0,ar5
      000582 08               [12] 2196 	inc	r0
      000583 A6 04            [24] 2197 	mov	@r0,ar4
                                   2198 ;	/opt/contiki/core/net/nbr-table.c:192: int locked = locked_map[item_index];
      000585 E5 81            [12] 2199 	mov	a,sp
      000587 24 FB            [12] 2200 	add	a,#0xfb
      000589 F8               [12] 2201 	mov	r0,a
      00058A E6               [12] 2202 	mov	a,@r0
      00058B 24r04            [12] 2203 	add	a,#_locked_map
      00058D FC               [12] 2204 	mov	r4,a
      00058E 08               [12] 2205 	inc	r0
      00058F E6               [12] 2206 	mov	a,@r0
      000590 34s00            [12] 2207 	addc	a,#(_locked_map >> 8)
      000592 FD               [12] 2208 	mov	r5,a
      000593 8C 82            [24] 2209 	mov	dpl,r4
      000595 8D 83            [24] 2210 	mov	dph,r5
      000597 E0               [24] 2211 	movx	a,@dptr
      000598 60 03            [24] 2212 	jz	00178$
      00059A 02r06r3C         [24] 2213 	ljmp	00112$
      00059D                       2214 00178$:
                                   2215 ;	/opt/contiki/core/net/nbr-table.c:194: if(!locked) {
                                   2216 ;	/opt/contiki/core/net/nbr-table.c:195: int used = used_map[item_index];
      00059D E5 81            [12] 2217 	mov	a,sp
      00059F 24 FB            [12] 2218 	add	a,#0xfb
      0005A1 F8               [12] 2219 	mov	r0,a
      0005A2 E6               [12] 2220 	mov	a,@r0
      0005A3 24r00            [12] 2221 	add	a,#_used_map
      0005A5 F5 82            [12] 2222 	mov	dpl,a
      0005A7 08               [12] 2223 	inc	r0
      0005A8 E6               [12] 2224 	mov	a,@r0
      0005A9 34s00            [12] 2225 	addc	a,#(_used_map >> 8)
      0005AB F5 83            [12] 2226 	mov	dph,a
      0005AD E0               [24] 2227 	movx	a,@dptr
      0005AE FD               [12] 2228 	mov	r5,a
      0005AF E5 81            [12] 2229 	mov	a,sp
      0005B1 24 FD            [12] 2230 	add	a,#0xfd
      0005B3 F8               [12] 2231 	mov	r0,a
      0005B4 A6 05            [24] 2232 	mov	@r0,ar5
      0005B6 08               [12] 2233 	inc	r0
      0005B7 76 00            [12] 2234 	mov	@r0,#0x00
                                   2235 ;	/opt/contiki/core/net/nbr-table.c:198: while(used != 0) {
      0005B9 A8 81            [24] 2236 	mov	r0,sp
      0005BB 18               [12] 2237 	dec	r0
      0005BC E4               [12] 2238 	clr	a
      0005BD F6               [12] 2239 	mov	@r0,a
      0005BE 08               [12] 2240 	inc	r0
      0005BF F6               [12] 2241 	mov	@r0,a
                                   2242 ;	/opt/contiki/core/net/nbr-table.c:235: return least_used_key;
                                   2243 ;	/opt/contiki/core/net/nbr-table.c:198: while(used != 0) {
      0005C0                       2244 00103$:
      0005C0 E5 81            [12] 2245 	mov	a,sp
      0005C2 24 FD            [12] 2246 	add	a,#0xfd
      0005C4 F8               [12] 2247 	mov	r0,a
      0005C5 E6               [12] 2248 	mov	a,@r0
      0005C6 08               [12] 2249 	inc	r0
      0005C7 46               [12] 2250 	orl	a,@r0
      0005C8 60 2C            [24] 2251 	jz	00146$
                                   2252 ;	/opt/contiki/core/net/nbr-table.c:199: if((used & 1) == 1) {
      0005CA E5 81            [12] 2253 	mov	a,sp
      0005CC 24 FD            [12] 2254 	add	a,#0xfd
      0005CE F8               [12] 2255 	mov	r0,a
      0005CF 74 01            [12] 2256 	mov	a,#0x01
      0005D1 56               [12] 2257 	anl	a,@r0
      0005D2 FC               [12] 2258 	mov	r4,a
      0005D3 7D 00            [12] 2259 	mov	r5,#0x00
      0005D5 BC 01 0C         [24] 2260 	cjne	r4,#0x01,00102$
      0005D8 BD 00 09         [24] 2261 	cjne	r5,#0x00,00102$
                                   2262 ;	/opt/contiki/core/net/nbr-table.c:200: used_count++;
      0005DB A8 81            [24] 2263 	mov	r0,sp
      0005DD 18               [12] 2264 	dec	r0
      0005DE 06               [12] 2265 	inc	@r0
      0005DF B6 00 02         [24] 2266 	cjne	@r0,#0x00,00182$
      0005E2 08               [12] 2267 	inc	r0
      0005E3 06               [12] 2268 	inc	@r0
      0005E4                       2269 00182$:
      0005E4                       2270 00102$:
                                   2271 ;	/opt/contiki/core/net/nbr-table.c:202: used >>= 1;
      0005E4 E5 81            [12] 2272 	mov	a,sp
      0005E6 24 FD            [12] 2273 	add	a,#0xfd
      0005E8 F8               [12] 2274 	mov	r0,a
      0005E9 08               [12] 2275 	inc	r0
      0005EA E6               [12] 2276 	mov	a,@r0
      0005EB 18               [12] 2277 	dec	r0
      0005EC A2 E7            [12] 2278 	mov	c,acc.7
      0005EE 13               [12] 2279 	rrc	a
      0005EF C6               [12] 2280 	xch	a,@r0
      0005F0 13               [12] 2281 	rrc	a
      0005F1 C6               [12] 2282 	xch	a,@r0
      0005F2 08               [12] 2283 	inc	r0
      0005F3 F6               [12] 2284 	mov	@r0,a
      0005F4 80 CA            [24] 2285 	sjmp	00103$
      0005F6                       2286 00146$:
      0005F6 A8 81            [24] 2287 	mov	r0,sp
      0005F8 18               [12] 2288 	dec	r0
      0005F9 86 04            [24] 2289 	mov	ar4,@r0
      0005FB 08               [12] 2290 	inc	r0
      0005FC 86 05            [24] 2291 	mov	ar5,@r0
                                   2292 ;	/opt/contiki/core/net/nbr-table.c:205: if(least_used_key == NULL || used_count < least_used_count) {
      0005FE E5 81            [12] 2293 	mov	a,sp
      000600 24 F6            [12] 2294 	add	a,#0xf6
      000602 F8               [12] 2295 	mov	r0,a
      000603 E6               [12] 2296 	mov	a,@r0
      000604 08               [12] 2297 	inc	r0
      000605 46               [12] 2298 	orl	a,@r0
      000606 60 19            [24] 2299 	jz	00108$
      000608 A8 81            [24] 2300 	mov	r0,sp
      00060A 18               [12] 2301 	dec	r0
      00060B E5 81            [12] 2302 	mov	a,sp
      00060D 24 F9            [12] 2303 	add	a,#0xf9
      00060F F9               [12] 2304 	mov	r1,a
      000610 C3               [12] 2305 	clr	c
      000611 E6               [12] 2306 	mov	a,@r0
      000612 97               [12] 2307 	subb	a,@r1
      000613 08               [12] 2308 	inc	r0
      000614 E6               [12] 2309 	mov	a,@r0
      000615 64 80            [12] 2310 	xrl	a,#0x80
      000617 09               [12] 2311 	inc	r1
      000618 87 F0            [24] 2312 	mov	b,@r1
      00061A 63 F0 80         [24] 2313 	xrl	b,#0x80
      00061D 95 F0            [12] 2314 	subb	a,b
      00061F 50 1B            [24] 2315 	jnc	00112$
      000621                       2316 00108$:
                                   2317 ;	/opt/contiki/core/net/nbr-table.c:206: least_used_key = key;
      000621 E5 81            [12] 2318 	mov	a,sp
      000623 24 F6            [12] 2319 	add	a,#0xf6
      000625 F8               [12] 2320 	mov	r0,a
      000626 A6 02            [24] 2321 	mov	@r0,ar2
      000628 08               [12] 2322 	inc	r0
      000629 A6 06            [24] 2323 	mov	@r0,ar6
      00062B 08               [12] 2324 	inc	r0
      00062C A6 07            [24] 2325 	mov	@r0,ar7
                                   2326 ;	/opt/contiki/core/net/nbr-table.c:207: least_used_count = used_count;
      00062E E5 81            [12] 2327 	mov	a,sp
      000630 24 F9            [12] 2328 	add	a,#0xf9
      000632 F8               [12] 2329 	mov	r0,a
      000633 A6 04            [24] 2330 	mov	@r0,ar4
      000635 08               [12] 2331 	inc	r0
      000636 A6 05            [24] 2332 	mov	@r0,ar5
                                   2333 ;	/opt/contiki/core/net/nbr-table.c:208: if(used_count == 0) { /* We won't find any least used item */
      000638 EC               [12] 2334 	mov	a,r4
      000639 4D               [12] 2335 	orl	a,r5
      00063A 60 24            [24] 2336 	jz	00115$
                                   2337 ;	/opt/contiki/core/net/nbr-table.c:209: break;
      00063C                       2338 00112$:
                                   2339 ;	/opt/contiki/core/net/nbr-table.c:213: key = list_item_next(key);
      00063C 8A 03            [24] 2340 	mov	ar3,r2
      00063E 8E 04            [24] 2341 	mov	ar4,r6
      000640 8F 05            [24] 2342 	mov	ar5,r7
      000642 8B 82            [24] 2343 	mov	dpl,r3
      000644 8C 83            [24] 2344 	mov	dph,r4
      000646 8D F0            [24] 2345 	mov	b,r5
      000648 78r00            [12] 2346 	mov	r0,#_list_item_next
      00064A 79s00            [12] 2347 	mov	r1,#(_list_item_next >> 8)
      00064C 7As00            [12] 2348 	mov	r2,#(_list_item_next >> 16)
      00064E 12r00r00         [24] 2349 	lcall	__sdcc_banked_call
      000651 AB 82            [24] 2350 	mov	r3,dpl
      000653 AC 83            [24] 2351 	mov	r4,dph
      000655 AD F0            [24] 2352 	mov	r5,b
      000657 8B 02            [24] 2353 	mov	ar2,r3
      000659 8C 06            [24] 2354 	mov	ar6,r4
      00065B 8D 07            [24] 2355 	mov	ar7,r5
      00065D 02r05r55         [24] 2356 	ljmp	00113$
      000660                       2357 00115$:
                                   2358 ;	/opt/contiki/core/net/nbr-table.c:215: if(least_used_key == NULL) {
      000660 E5 81            [12] 2359 	mov	a,sp
      000662 24 F6            [12] 2360 	add	a,#0xf6
      000664 F8               [12] 2361 	mov	r0,a
      000665 E6               [12] 2362 	mov	a,@r0
      000666 08               [12] 2363 	inc	r0
      000667 46               [12] 2364 	orl	a,@r0
                                   2365 ;	/opt/contiki/core/net/nbr-table.c:217: return NULL;
      000668 70 08            [24] 2366 	jnz	00144$
      00066A 90 00 00         [24] 2367 	mov	dptr,#0x0000
      00066D F5 F0            [12] 2368 	mov	b,a
      00066F 02r08r4E         [24] 2369 	ljmp	00130$
                                   2370 ;	/opt/contiki/core/net/nbr-table.c:221: for(i = 0; i<MAX_NUM_TABLES; i++) {
      000672                       2371 00144$:
      000672 E5 81            [12] 2372 	mov	a,sp
      000674 24 FB            [12] 2373 	add	a,#0xfb
      000676 F8               [12] 2374 	mov	r0,a
      000677 E4               [12] 2375 	clr	a
      000678 F6               [12] 2376 	mov	@r0,a
      000679 08               [12] 2377 	inc	r0
      00067A F6               [12] 2378 	mov	@r0,a
      00067B E5 81            [12] 2379 	mov	a,sp
      00067D 24 F4            [12] 2380 	add	a,#0xf4
      00067F F8               [12] 2381 	mov	r0,a
      000680 E4               [12] 2382 	clr	a
      000681 F6               [12] 2383 	mov	@r0,a
      000682 08               [12] 2384 	inc	r0
      000683 F6               [12] 2385 	mov	@r0,a
      000684                       2386 00128$:
                                   2387 ;	/opt/contiki/core/net/nbr-table.c:222: if(all_tables[i] != NULL && all_tables[i]->callback != NULL) {
      000684 E5 81            [12] 2388 	mov	a,sp
      000686 24 F4            [12] 2389 	add	a,#0xf4
      000688 F8               [12] 2390 	mov	r0,a
      000689 E6               [12] 2391 	mov	a,@r0
      00068A 24r08            [12] 2392 	add	a,#_all_tables
      00068C FA               [12] 2393 	mov	r2,a
      00068D 08               [12] 2394 	inc	r0
      00068E E6               [12] 2395 	mov	a,@r0
      00068F 34s00            [12] 2396 	addc	a,#(_all_tables >> 8)
      000691 FB               [12] 2397 	mov	r3,a
      000692 8A 82            [24] 2398 	mov	dpl,r2
      000694 8B 83            [24] 2399 	mov	dph,r3
      000696 E5 81            [12] 2400 	mov	a,sp
      000698 24 F1            [12] 2401 	add	a,#0xf1
      00069A F8               [12] 2402 	mov	r0,a
      00069B E0               [24] 2403 	movx	a,@dptr
      00069C F6               [12] 2404 	mov	@r0,a
      00069D A3               [24] 2405 	inc	dptr
      00069E E0               [24] 2406 	movx	a,@dptr
      00069F 08               [12] 2407 	inc	r0
      0006A0 F6               [12] 2408 	mov	@r0,a
      0006A1 A3               [24] 2409 	inc	dptr
      0006A2 E0               [24] 2410 	movx	a,@dptr
      0006A3 08               [12] 2411 	inc	r0
      0006A4 F6               [12] 2412 	mov	@r0,a
      0006A5 E5 81            [12] 2413 	mov	a,sp
      0006A7 24 F1            [12] 2414 	add	a,#0xf1
      0006A9 F8               [12] 2415 	mov	r0,a
      0006AA E6               [12] 2416 	mov	a,@r0
      0006AB 08               [12] 2417 	inc	r0
      0006AC 46               [12] 2418 	orl	a,@r0
      0006AD 70 03            [24] 2419 	jnz	00187$
      0006AF 02r07rBC         [24] 2420 	ljmp	00129$
      0006B2                       2421 00187$:
      0006B2 E5 81            [12] 2422 	mov	a,sp
      0006B4 24 F1            [12] 2423 	add	a,#0xf1
      0006B6 F8               [12] 2424 	mov	r0,a
      0006B7 74 04            [12] 2425 	mov	a,#0x04
      0006B9 26               [12] 2426 	add	a,@r0
      0006BA FD               [12] 2427 	mov	r5,a
      0006BB E4               [12] 2428 	clr	a
      0006BC 08               [12] 2429 	inc	r0
      0006BD 36               [12] 2430 	addc	a,@r0
      0006BE FE               [12] 2431 	mov	r6,a
      0006BF 08               [12] 2432 	inc	r0
      0006C0 86 07            [24] 2433 	mov	ar7,@r0
      0006C2 8D 82            [24] 2434 	mov	dpl,r5
      0006C4 8E 83            [24] 2435 	mov	dph,r6
      0006C6 8F F0            [24] 2436 	mov	b,r7
      0006C8 12r00r00         [24] 2437 	lcall	__gptrget
      0006CB FD               [12] 2438 	mov	r5,a
      0006CC A3               [24] 2439 	inc	dptr
      0006CD 12r00r00         [24] 2440 	lcall	__gptrget
      0006D0 FE               [12] 2441 	mov	r6,a
      0006D1 A3               [24] 2442 	inc	dptr
      0006D2 12r00r00         [24] 2443 	lcall	__gptrget
      0006D5 FF               [12] 2444 	mov	r7,a
      0006D6 ED               [12] 2445 	mov	a,r5
      0006D7 4E               [12] 2446 	orl	a,r6
      0006D8 70 03            [24] 2447 	jnz	00188$
      0006DA 02r07rBC         [24] 2448 	ljmp	00129$
      0006DD                       2449 00188$:
                                   2450 ;	/opt/contiki/core/net/nbr-table.c:224: nbr_table_item_t *removed_item = item_from_key(all_tables[i], least_used_key);
      0006DD C0 03            [24] 2451 	push	ar3
      0006DF C0 02            [24] 2452 	push	ar2
      0006E1 E5 81            [12] 2453 	mov	a,sp
      0006E3 24 F4            [12] 2454 	add	a,#0xf4
      0006E5 F8               [12] 2455 	mov	r0,a
      0006E6 E6               [12] 2456 	mov	a,@r0
      0006E7 C0 E0            [24] 2457 	push	acc
      0006E9 08               [12] 2458 	inc	r0
      0006EA E6               [12] 2459 	mov	a,@r0
      0006EB C0 E0            [24] 2460 	push	acc
      0006ED 08               [12] 2461 	inc	r0
      0006EE E6               [12] 2462 	mov	a,@r0
      0006EF C0 E0            [24] 2463 	push	acc
      0006F1 E5 81            [12] 2464 	mov	a,sp
      0006F3 24 EC            [12] 2465 	add	a,#0xec
      0006F5 F8               [12] 2466 	mov	r0,a
      0006F6 86 82            [24] 2467 	mov	dpl,@r0
      0006F8 08               [12] 2468 	inc	r0
      0006F9 86 83            [24] 2469 	mov	dph,@r0
      0006FB 08               [12] 2470 	inc	r0
      0006FC 86 F0            [24] 2471 	mov	b,@r0
      0006FE 78rA5            [12] 2472 	mov	r0,#_item_from_key
      000700 79s01            [12] 2473 	mov	r1,#(_item_from_key >> 8)
      000702 7As00            [12] 2474 	mov	r2,#(_item_from_key >> 16)
      000704 12r00r00         [24] 2475 	lcall	__sdcc_banked_call
      000707 AF 82            [24] 2476 	mov	r7,dpl
      000709 AE 83            [24] 2477 	mov	r6,dph
      00070B AD F0            [24] 2478 	mov	r5,b
      00070D 15 81            [12] 2479 	dec	sp
      00070F 15 81            [12] 2480 	dec	sp
      000711 15 81            [12] 2481 	dec	sp
      000713 D0 02            [24] 2482 	pop	ar2
      000715 D0 03            [24] 2483 	pop	ar3
      000717 E5 81            [12] 2484 	mov	a,sp
      000719 24 FD            [12] 2485 	add	a,#0xfd
      00071B F8               [12] 2486 	mov	r0,a
      00071C A6 07            [24] 2487 	mov	@r0,ar7
      00071E 08               [12] 2488 	inc	r0
      00071F A6 06            [24] 2489 	mov	@r0,ar6
      000721 08               [12] 2490 	inc	r0
      000722 A6 05            [24] 2491 	mov	@r0,ar5
                                   2492 ;	/opt/contiki/core/net/nbr-table.c:225: if(nbr_get_bit(used_map, all_tables[i], removed_item) == 1) {
      000724 8A 82            [24] 2493 	mov	dpl,r2
      000726 8B 83            [24] 2494 	mov	dph,r3
      000728 E0               [24] 2495 	movx	a,@dptr
      000729 FD               [12] 2496 	mov	r5,a
      00072A A3               [24] 2497 	inc	dptr
      00072B E0               [24] 2498 	movx	a,@dptr
      00072C FE               [12] 2499 	mov	r6,a
      00072D A3               [24] 2500 	inc	dptr
      00072E E0               [24] 2501 	movx	a,@dptr
      00072F FF               [12] 2502 	mov	r7,a
      000730 C0 03            [24] 2503 	push	ar3
      000732 C0 02            [24] 2504 	push	ar2
      000734 E5 81            [12] 2505 	mov	a,sp
      000736 24 FB            [12] 2506 	add	a,#0xfb
      000738 F8               [12] 2507 	mov	r0,a
      000739 E6               [12] 2508 	mov	a,@r0
      00073A C0 E0            [24] 2509 	push	acc
      00073C 08               [12] 2510 	inc	r0
      00073D E6               [12] 2511 	mov	a,@r0
      00073E C0 E0            [24] 2512 	push	acc
      000740 08               [12] 2513 	inc	r0
      000741 E6               [12] 2514 	mov	a,@r0
      000742 C0 E0            [24] 2515 	push	acc
      000744 C0 05            [24] 2516 	push	ar5
      000746 C0 06            [24] 2517 	push	ar6
      000748 C0 07            [24] 2518 	push	ar7
      00074A 90r00r00         [24] 2519 	mov	dptr,#_used_map
      00074D 75 F0 00         [24] 2520 	mov	b,#0x00
      000750 78r0B            [12] 2521 	mov	r0,#_nbr_get_bit
      000752 79s03            [12] 2522 	mov	r1,#(_nbr_get_bit >> 8)
      000754 7As00            [12] 2523 	mov	r2,#(_nbr_get_bit >> 16)
      000756 12r00r00         [24] 2524 	lcall	__sdcc_banked_call
      000759 AE 82            [24] 2525 	mov	r6,dpl
      00075B AF 83            [24] 2526 	mov	r7,dph
      00075D E5 81            [12] 2527 	mov	a,sp
      00075F 24 FA            [12] 2528 	add	a,#0xfa
      000761 F5 81            [12] 2529 	mov	sp,a
      000763 D0 02            [24] 2530 	pop	ar2
      000765 D0 03            [24] 2531 	pop	ar3
      000767 BE 01 52         [24] 2532 	cjne	r6,#0x01,00129$
      00076A BF 00 4F         [24] 2533 	cjne	r7,#0x00,00129$
                                   2534 ;	/opt/contiki/core/net/nbr-table.c:226: all_tables[i]->callback(removed_item);
      00076D 8A 82            [24] 2535 	mov	dpl,r2
      00076F 8B 83            [24] 2536 	mov	dph,r3
      000771 E0               [24] 2537 	movx	a,@dptr
      000772 FA               [12] 2538 	mov	r2,a
      000773 A3               [24] 2539 	inc	dptr
      000774 E0               [24] 2540 	movx	a,@dptr
      000775 FB               [12] 2541 	mov	r3,a
      000776 A3               [24] 2542 	inc	dptr
      000777 E0               [24] 2543 	movx	a,@dptr
      000778 FF               [12] 2544 	mov	r7,a
      000779 74 04            [12] 2545 	mov	a,#0x04
      00077B 2A               [12] 2546 	add	a,r2
      00077C FA               [12] 2547 	mov	r2,a
      00077D E4               [12] 2548 	clr	a
      00077E 3B               [12] 2549 	addc	a,r3
      00077F FB               [12] 2550 	mov	r3,a
      000780 8A 82            [24] 2551 	mov	dpl,r2
      000782 8B 83            [24] 2552 	mov	dph,r3
      000784 8F F0            [24] 2553 	mov	b,r7
      000786 12r00r00         [24] 2554 	lcall	__gptrget
      000789 FA               [12] 2555 	mov	r2,a
      00078A A3               [24] 2556 	inc	dptr
      00078B 12r00r00         [24] 2557 	lcall	__gptrget
      00078E FB               [12] 2558 	mov	r3,a
      00078F A3               [24] 2559 	inc	dptr
      000790 12r00r00         [24] 2560 	lcall	__gptrget
      000793 FF               [12] 2561 	mov	r7,a
      000794 C0 07            [24] 2562 	push	ar7
      000796 C0 03            [24] 2563 	push	ar3
      000798 C0 02            [24] 2564 	push	ar2
      00079A C0 02            [24] 2565 	push	ar2
      00079C C0 03            [24] 2566 	push	ar3
      00079E C0 07            [24] 2567 	push	ar7
      0007A0 E5 81            [12] 2568 	mov	a,sp
      0007A2 24 F7            [12] 2569 	add	a,#0xf7
      0007A4 F8               [12] 2570 	mov	r0,a
      0007A5 86 82            [24] 2571 	mov	dpl,@r0
      0007A7 08               [12] 2572 	inc	r0
      0007A8 86 83            [24] 2573 	mov	dph,@r0
      0007AA 08               [12] 2574 	inc	r0
      0007AB 86 F0            [24] 2575 	mov	b,@r0
      0007AD D0 02            [24] 2576 	pop	ar2
      0007AF D0 01            [24] 2577 	pop	ar1
      0007B1 D0 00            [24] 2578 	pop	ar0
      0007B3 12r00r00         [24] 2579 	lcall	__sdcc_banked_call
      0007B6 D0 02            [24] 2580 	pop	ar2
      0007B8 D0 03            [24] 2581 	pop	ar3
      0007BA D0 07            [24] 2582 	pop	ar7
      0007BC                       2583 00129$:
                                   2584 ;	/opt/contiki/core/net/nbr-table.c:221: for(i = 0; i<MAX_NUM_TABLES; i++) {
      0007BC E5 81            [12] 2585 	mov	a,sp
      0007BE 24 F4            [12] 2586 	add	a,#0xf4
      0007C0 F8               [12] 2587 	mov	r0,a
      0007C1 74 03            [12] 2588 	mov	a,#0x03
      0007C3 26               [12] 2589 	add	a,@r0
      0007C4 F6               [12] 2590 	mov	@r0,a
      0007C5 E4               [12] 2591 	clr	a
      0007C6 08               [12] 2592 	inc	r0
      0007C7 36               [12] 2593 	addc	a,@r0
      0007C8 F6               [12] 2594 	mov	@r0,a
      0007C9 E5 81            [12] 2595 	mov	a,sp
      0007CB 24 FB            [12] 2596 	add	a,#0xfb
      0007CD F8               [12] 2597 	mov	r0,a
      0007CE 06               [12] 2598 	inc	@r0
      0007CF B6 00 02         [24] 2599 	cjne	@r0,#0x00,00191$
      0007D2 08               [12] 2600 	inc	r0
      0007D3 06               [12] 2601 	inc	@r0
      0007D4                       2602 00191$:
      0007D4 E5 81            [12] 2603 	mov	a,sp
      0007D6 24 FB            [12] 2604 	add	a,#0xfb
      0007D8 F8               [12] 2605 	mov	r0,a
      0007D9 C3               [12] 2606 	clr	c
      0007DA E6               [12] 2607 	mov	a,@r0
      0007DB 94 08            [12] 2608 	subb	a,#0x08
      0007DD 08               [12] 2609 	inc	r0
      0007DE E6               [12] 2610 	mov	a,@r0
      0007DF 64 80            [12] 2611 	xrl	a,#0x80
      0007E1 94 80            [12] 2612 	subb	a,#0x80
      0007E3 50 03            [24] 2613 	jnc	00192$
      0007E5 02r06r84         [24] 2614 	ljmp	00128$
      0007E8                       2615 00192$:
                                   2616 ;	/opt/contiki/core/net/nbr-table.c:231: used_map[index_from_key(least_used_key)] = 0;
      0007E8 E5 81            [12] 2617 	mov	a,sp
      0007EA 24 F6            [12] 2618 	add	a,#0xf6
      0007EC F8               [12] 2619 	mov	r0,a
      0007ED 86 82            [24] 2620 	mov	dpl,@r0
      0007EF 08               [12] 2621 	inc	r0
      0007F0 86 83            [24] 2622 	mov	dph,@r0
      0007F2 08               [12] 2623 	inc	r0
      0007F3 86 F0            [24] 2624 	mov	b,@r0
      0007F5 78rD4            [12] 2625 	mov	r0,#_index_from_key
      0007F7 79s00            [12] 2626 	mov	r1,#(_index_from_key >> 8)
      0007F9 7As00            [12] 2627 	mov	r2,#(_index_from_key >> 16)
      0007FB 12r00r00         [24] 2628 	lcall	__sdcc_banked_call
      0007FE AE 82            [24] 2629 	mov	r6,dpl
      000800 AF 83            [24] 2630 	mov	r7,dph
      000802 EE               [12] 2631 	mov	a,r6
      000803 24r00            [12] 2632 	add	a,#_used_map
      000805 F5 82            [12] 2633 	mov	dpl,a
      000807 EF               [12] 2634 	mov	a,r7
      000808 34s00            [12] 2635 	addc	a,#(_used_map >> 8)
      00080A F5 83            [12] 2636 	mov	dph,a
      00080C E4               [12] 2637 	clr	a
      00080D F0               [24] 2638 	movx	@dptr,a
                                   2639 ;	/opt/contiki/core/net/nbr-table.c:233: list_remove(nbr_table_keys, least_used_key);
      00080E E5 81            [12] 2640 	mov	a,sp
      000810 24 F6            [12] 2641 	add	a,#0xf6
      000812 F8               [12] 2642 	mov	r0,a
      000813 86 03            [24] 2643 	mov	ar3,@r0
      000815 08               [12] 2644 	inc	r0
      000816 86 04            [24] 2645 	mov	ar4,@r0
      000818 08               [12] 2646 	inc	r0
      000819 86 05            [24] 2647 	mov	ar5,@r0
      00081B 90r00r0D         [24] 2648 	mov	dptr,#_nbr_table_keys
      00081E E0               [24] 2649 	movx	a,@dptr
      00081F FA               [12] 2650 	mov	r2,a
      000820 A3               [24] 2651 	inc	dptr
      000821 E0               [24] 2652 	movx	a,@dptr
      000822 FE               [12] 2653 	mov	r6,a
      000823 A3               [24] 2654 	inc	dptr
      000824 E0               [24] 2655 	movx	a,@dptr
      000825 FF               [12] 2656 	mov	r7,a
      000826 C0 03            [24] 2657 	push	ar3
      000828 C0 04            [24] 2658 	push	ar4
      00082A C0 05            [24] 2659 	push	ar5
      00082C 8A 82            [24] 2660 	mov	dpl,r2
      00082E 8E 83            [24] 2661 	mov	dph,r6
      000830 8F F0            [24] 2662 	mov	b,r7
      000832 78r00            [12] 2663 	mov	r0,#_list_remove
      000834 79s00            [12] 2664 	mov	r1,#(_list_remove >> 8)
      000836 7As00            [12] 2665 	mov	r2,#(_list_remove >> 16)
      000838 12r00r00         [24] 2666 	lcall	__sdcc_banked_call
      00083B 15 81            [12] 2667 	dec	sp
      00083D 15 81            [12] 2668 	dec	sp
      00083F 15 81            [12] 2669 	dec	sp
                                   2670 ;	/opt/contiki/core/net/nbr-table.c:235: return least_used_key;
      000841 E5 81            [12] 2671 	mov	a,sp
      000843 24 F6            [12] 2672 	add	a,#0xf6
      000845 F8               [12] 2673 	mov	r0,a
      000846 86 82            [24] 2674 	mov	dpl,@r0
      000848 08               [12] 2675 	inc	r0
      000849 86 83            [24] 2676 	mov	dph,@r0
      00084B 08               [12] 2677 	inc	r0
      00084C 86 F0            [24] 2678 	mov	b,@r0
      00084E                       2679 00130$:
      00084E C8               [12] 2680 	xch	a,r0
      00084F E5 81            [12] 2681 	mov	a,sp
      000851 24 F0            [12] 2682 	add	a,#0xF0
      000853 F5 81            [12] 2683 	mov	sp,a
      000855 C8               [12] 2684 	xch	a,r0
      000856 02r00r00         [24] 2685 	ljmp	__sdcc_banked_ret
                                   2686 ;------------------------------------------------------------
                                   2687 ;Allocation info for local variables in function 'nbr_table_register'
                                   2688 ;------------------------------------------------------------
                                   2689 ;callback                  Allocated to stack - sp -8
                                   2690 ;table                     Allocated to stack - sp -2
                                   2691 ;------------------------------------------------------------
                                   2692 ;	/opt/contiki/core/net/nbr-table.c:243: nbr_table_register(nbr_table_t *table, nbr_table_callback *callback)
                                   2693 ;	-----------------------------------------
                                   2694 ;	 function nbr_table_register
                                   2695 ;	-----------------------------------------
      000859                       2696 _nbr_table_register:
      000859 C0 82            [24] 2697 	push	dpl
      00085B C0 83            [24] 2698 	push	dph
      00085D C0 F0            [24] 2699 	push	b
                                   2700 ;	/opt/contiki/core/net/nbr-table.c:252: if(num_tables < MAX_NUM_TABLES) {
      00085F 90r00r20         [24] 2701 	mov	dptr,#_num_tables
      000862 E0               [24] 2702 	movx	a,@dptr
      000863 FB               [12] 2703 	mov	r3,a
      000864 A3               [24] 2704 	inc	dptr
      000865 E0               [24] 2705 	movx	a,@dptr
      000866 FC               [12] 2706 	mov	r4,a
      000867 C3               [12] 2707 	clr	c
      000868 EB               [12] 2708 	mov	a,r3
      000869 94 08            [12] 2709 	subb	a,#0x08
      00086B EC               [12] 2710 	mov	a,r4
      00086C 94 00            [12] 2711 	subb	a,#0x00
      00086E 40 03            [24] 2712 	jc	00109$
      000870 02r09r05         [24] 2713 	ljmp	00102$
      000873                       2714 00109$:
                                   2715 ;	/opt/contiki/core/net/nbr-table.c:253: table->index = num_tables++;
      000873 8B 02            [24] 2716 	mov	ar2,r3
      000875 8C 07            [24] 2717 	mov	ar7,r4
      000877 90r00r20         [24] 2718 	mov	dptr,#_num_tables
      00087A 74 01            [12] 2719 	mov	a,#0x01
      00087C 2B               [12] 2720 	add	a,r3
      00087D F0               [24] 2721 	movx	@dptr,a
      00087E E4               [12] 2722 	clr	a
      00087F 3C               [12] 2723 	addc	a,r4
      000880 A3               [24] 2724 	inc	dptr
      000881 F0               [24] 2725 	movx	@dptr,a
      000882 A8 81            [24] 2726 	mov	r0,sp
      000884 18               [12] 2727 	dec	r0
      000885 18               [12] 2728 	dec	r0
      000886 86 82            [24] 2729 	mov	dpl,@r0
      000888 08               [12] 2730 	inc	r0
      000889 86 83            [24] 2731 	mov	dph,@r0
      00088B 08               [12] 2732 	inc	r0
      00088C 86 F0            [24] 2733 	mov	b,@r0
      00088E EA               [12] 2734 	mov	a,r2
      00088F 12r00r00         [24] 2735 	lcall	__gptrput
      000892 A3               [24] 2736 	inc	dptr
      000893 EF               [12] 2737 	mov	a,r7
      000894 12r00r00         [24] 2738 	lcall	__gptrput
                                   2739 ;	/opt/contiki/core/net/nbr-table.c:254: table->callback = callback;
      000897 A8 81            [24] 2740 	mov	r0,sp
      000899 18               [12] 2741 	dec	r0
      00089A 18               [12] 2742 	dec	r0
      00089B 74 04            [12] 2743 	mov	a,#0x04
      00089D 26               [12] 2744 	add	a,@r0
      00089E FD               [12] 2745 	mov	r5,a
      00089F E4               [12] 2746 	clr	a
      0008A0 08               [12] 2747 	inc	r0
      0008A1 36               [12] 2748 	addc	a,@r0
      0008A2 FE               [12] 2749 	mov	r6,a
      0008A3 08               [12] 2750 	inc	r0
      0008A4 86 07            [24] 2751 	mov	ar7,@r0
      0008A6 8D 82            [24] 2752 	mov	dpl,r5
      0008A8 8E 83            [24] 2753 	mov	dph,r6
      0008AA 8F F0            [24] 2754 	mov	b,r7
      0008AC E5 81            [12] 2755 	mov	a,sp
      0008AE 24 F8            [12] 2756 	add	a,#0xf8
      0008B0 F8               [12] 2757 	mov	r0,a
      0008B1 E6               [12] 2758 	mov	a,@r0
      0008B2 12r00r00         [24] 2759 	lcall	__gptrput
      0008B5 A3               [24] 2760 	inc	dptr
      0008B6 08               [12] 2761 	inc	r0
      0008B7 E6               [12] 2762 	mov	a,@r0
      0008B8 12r00r00         [24] 2763 	lcall	__gptrput
      0008BB A3               [24] 2764 	inc	dptr
      0008BC 08               [12] 2765 	inc	r0
      0008BD E6               [12] 2766 	mov	a,@r0
      0008BE 12r00r00         [24] 2767 	lcall	__gptrput
                                   2768 ;	/opt/contiki/core/net/nbr-table.c:255: all_tables[table->index] = table;
      0008C1 A8 81            [24] 2769 	mov	r0,sp
      0008C3 18               [12] 2770 	dec	r0
      0008C4 18               [12] 2771 	dec	r0
      0008C5 86 82            [24] 2772 	mov	dpl,@r0
      0008C7 08               [12] 2773 	inc	r0
      0008C8 86 83            [24] 2774 	mov	dph,@r0
      0008CA 08               [12] 2775 	inc	r0
      0008CB 86 F0            [24] 2776 	mov	b,@r0
      0008CD 12r00r00         [24] 2777 	lcall	__gptrget
      0008D0 FE               [12] 2778 	mov	r6,a
      0008D1 A3               [24] 2779 	inc	dptr
      0008D2 12r00r00         [24] 2780 	lcall	__gptrget
      0008D5 FF               [12] 2781 	mov	r7,a
      0008D6 C0 06            [24] 2782 	push	ar6
      0008D8 C0 07            [24] 2783 	push	ar7
      0008DA 90 00 03         [24] 2784 	mov	dptr,#0x0003
      0008DD 12r00r00         [24] 2785 	lcall	__mulint
      0008E0 AE 82            [24] 2786 	mov	r6,dpl
      0008E2 AF 83            [24] 2787 	mov	r7,dph
      0008E4 15 81            [12] 2788 	dec	sp
      0008E6 15 81            [12] 2789 	dec	sp
      0008E8 EE               [12] 2790 	mov	a,r6
      0008E9 24r08            [12] 2791 	add	a,#_all_tables
      0008EB F5 82            [12] 2792 	mov	dpl,a
      0008ED EF               [12] 2793 	mov	a,r7
      0008EE 34s00            [12] 2794 	addc	a,#(_all_tables >> 8)
      0008F0 F5 83            [12] 2795 	mov	dph,a
      0008F2 A8 81            [24] 2796 	mov	r0,sp
      0008F4 18               [12] 2797 	dec	r0
      0008F5 18               [12] 2798 	dec	r0
      0008F6 E6               [12] 2799 	mov	a,@r0
      0008F7 F0               [24] 2800 	movx	@dptr,a
      0008F8 08               [12] 2801 	inc	r0
      0008F9 E6               [12] 2802 	mov	a,@r0
      0008FA A3               [24] 2803 	inc	dptr
      0008FB F0               [24] 2804 	movx	@dptr,a
      0008FC 08               [12] 2805 	inc	r0
      0008FD E6               [12] 2806 	mov	a,@r0
      0008FE A3               [24] 2807 	inc	dptr
      0008FF F0               [24] 2808 	movx	@dptr,a
                                   2809 ;	/opt/contiki/core/net/nbr-table.c:256: return 1;
      000900 90 00 01         [24] 2810 	mov	dptr,#0x0001
      000903 80 03            [24] 2811 	sjmp	00104$
      000905                       2812 00102$:
                                   2813 ;	/opt/contiki/core/net/nbr-table.c:259: return 0;
      000905 90 00 00         [24] 2814 	mov	dptr,#0x0000
      000908                       2815 00104$:
      000908 15 81            [12] 2816 	dec	sp
      00090A 15 81            [12] 2817 	dec	sp
      00090C 15 81            [12] 2818 	dec	sp
      00090E 02r00r00         [24] 2819 	ljmp	__sdcc_banked_ret
                                   2820 ;------------------------------------------------------------
                                   2821 ;Allocation info for local variables in function 'nbr_table_head'
                                   2822 ;------------------------------------------------------------
                                   2823 ;table                     Allocated to registers r5 r6 r7 
                                   2824 ;item                      Allocated to stack - sp -2
                                   2825 ;------------------------------------------------------------
                                   2826 ;	/opt/contiki/core/net/nbr-table.c:265: nbr_table_head(nbr_table_t *table)
                                   2827 ;	-----------------------------------------
                                   2828 ;	 function nbr_table_head
                                   2829 ;	-----------------------------------------
      000911                       2830 _nbr_table_head:
      000911 05 81            [12] 2831 	inc	sp
      000913 05 81            [12] 2832 	inc	sp
      000915 05 81            [12] 2833 	inc	sp
      000917 AD 82            [24] 2834 	mov	r5,dpl
      000919 AE 83            [24] 2835 	mov	r6,dph
      00091B AF F0            [24] 2836 	mov	r7,b
                                   2837 ;	/opt/contiki/core/net/nbr-table.c:268: nbr_table_item_t *item = item_from_key(table, list_head(nbr_table_keys));
      00091D 90r00r0D         [24] 2838 	mov	dptr,#_nbr_table_keys
      000920 E0               [24] 2839 	movx	a,@dptr
      000921 FA               [12] 2840 	mov	r2,a
      000922 A3               [24] 2841 	inc	dptr
      000923 E0               [24] 2842 	movx	a,@dptr
      000924 FB               [12] 2843 	mov	r3,a
      000925 A3               [24] 2844 	inc	dptr
      000926 E0               [24] 2845 	movx	a,@dptr
      000927 FC               [12] 2846 	mov	r4,a
      000928 8A 82            [24] 2847 	mov	dpl,r2
      00092A 8B 83            [24] 2848 	mov	dph,r3
      00092C 8C F0            [24] 2849 	mov	b,r4
      00092E C0 07            [24] 2850 	push	ar7
      000930 C0 06            [24] 2851 	push	ar6
      000932 C0 05            [24] 2852 	push	ar5
      000934 78r00            [12] 2853 	mov	r0,#_list_head
      000936 79s00            [12] 2854 	mov	r1,#(_list_head >> 8)
      000938 7As00            [12] 2855 	mov	r2,#(_list_head >> 16)
      00093A 12r00r00         [24] 2856 	lcall	__sdcc_banked_call
      00093D AA 82            [24] 2857 	mov	r2,dpl
      00093F AB 83            [24] 2858 	mov	r3,dph
      000941 AC F0            [24] 2859 	mov	r4,b
      000943 D0 05            [24] 2860 	pop	ar5
      000945 D0 06            [24] 2861 	pop	ar6
      000947 D0 07            [24] 2862 	pop	ar7
      000949 C0 07            [24] 2863 	push	ar7
      00094B C0 06            [24] 2864 	push	ar6
      00094D C0 05            [24] 2865 	push	ar5
      00094F C0 02            [24] 2866 	push	ar2
      000951 C0 03            [24] 2867 	push	ar3
      000953 C0 04            [24] 2868 	push	ar4
      000955 8D 82            [24] 2869 	mov	dpl,r5
      000957 8E 83            [24] 2870 	mov	dph,r6
      000959 8F F0            [24] 2871 	mov	b,r7
      00095B 78rA5            [12] 2872 	mov	r0,#_item_from_key
      00095D 79s01            [12] 2873 	mov	r1,#(_item_from_key >> 8)
      00095F 7As00            [12] 2874 	mov	r2,#(_item_from_key >> 16)
      000961 12r00r00         [24] 2875 	lcall	__sdcc_banked_call
      000964 AA 82            [24] 2876 	mov	r2,dpl
      000966 AB 83            [24] 2877 	mov	r3,dph
      000968 AC F0            [24] 2878 	mov	r4,b
      00096A 15 81            [12] 2879 	dec	sp
      00096C 15 81            [12] 2880 	dec	sp
      00096E 15 81            [12] 2881 	dec	sp
      000970 D0 05            [24] 2882 	pop	ar5
      000972 D0 06            [24] 2883 	pop	ar6
      000974 D0 07            [24] 2884 	pop	ar7
      000976 A8 81            [24] 2885 	mov	r0,sp
      000978 18               [12] 2886 	dec	r0
      000979 18               [12] 2887 	dec	r0
      00097A A6 02            [24] 2888 	mov	@r0,ar2
      00097C 08               [12] 2889 	inc	r0
      00097D A6 03            [24] 2890 	mov	@r0,ar3
      00097F 08               [12] 2891 	inc	r0
      000980 A6 04            [24] 2892 	mov	@r0,ar4
                                   2893 ;	/opt/contiki/core/net/nbr-table.c:270: if(nbr_get_bit(used_map, table, item)) {
      000982 C0 07            [24] 2894 	push	ar7
      000984 C0 06            [24] 2895 	push	ar6
      000986 C0 05            [24] 2896 	push	ar5
      000988 E5 81            [12] 2897 	mov	a,sp
      00098A 24 FB            [12] 2898 	add	a,#0xfb
      00098C F8               [12] 2899 	mov	r0,a
      00098D E6               [12] 2900 	mov	a,@r0
      00098E C0 E0            [24] 2901 	push	acc
      000990 08               [12] 2902 	inc	r0
      000991 E6               [12] 2903 	mov	a,@r0
      000992 C0 E0            [24] 2904 	push	acc
      000994 08               [12] 2905 	inc	r0
      000995 E6               [12] 2906 	mov	a,@r0
      000996 C0 E0            [24] 2907 	push	acc
      000998 C0 05            [24] 2908 	push	ar5
      00099A C0 06            [24] 2909 	push	ar6
      00099C C0 07            [24] 2910 	push	ar7
      00099E 90r00r00         [24] 2911 	mov	dptr,#_used_map
      0009A1 75 F0 00         [24] 2912 	mov	b,#0x00
      0009A4 78r0B            [12] 2913 	mov	r0,#_nbr_get_bit
      0009A6 79s03            [12] 2914 	mov	r1,#(_nbr_get_bit >> 8)
      0009A8 7As00            [12] 2915 	mov	r2,#(_nbr_get_bit >> 16)
      0009AA 12r00r00         [24] 2916 	lcall	__sdcc_banked_call
      0009AD AB 82            [24] 2917 	mov	r3,dpl
      0009AF AC 83            [24] 2918 	mov	r4,dph
      0009B1 E5 81            [12] 2919 	mov	a,sp
      0009B3 24 FA            [12] 2920 	add	a,#0xfa
      0009B5 F5 81            [12] 2921 	mov	sp,a
      0009B7 D0 05            [24] 2922 	pop	ar5
      0009B9 D0 06            [24] 2923 	pop	ar6
      0009BB D0 07            [24] 2924 	pop	ar7
      0009BD EB               [12] 2925 	mov	a,r3
      0009BE 4C               [12] 2926 	orl	a,r4
      0009BF 60 0E            [24] 2927 	jz	00102$
                                   2928 ;	/opt/contiki/core/net/nbr-table.c:271: return item;
      0009C1 A8 81            [24] 2929 	mov	r0,sp
      0009C3 18               [12] 2930 	dec	r0
      0009C4 18               [12] 2931 	dec	r0
      0009C5 86 82            [24] 2932 	mov	dpl,@r0
      0009C7 08               [12] 2933 	inc	r0
      0009C8 86 83            [24] 2934 	mov	dph,@r0
      0009CA 08               [12] 2935 	inc	r0
      0009CB 86 F0            [24] 2936 	mov	b,@r0
      0009CD 80 30            [24] 2937 	sjmp	00104$
      0009CF                       2938 00102$:
                                   2939 ;	/opt/contiki/core/net/nbr-table.c:273: return nbr_table_next(table, item);
      0009CF A8 81            [24] 2940 	mov	r0,sp
      0009D1 18               [12] 2941 	dec	r0
      0009D2 18               [12] 2942 	dec	r0
      0009D3 E6               [12] 2943 	mov	a,@r0
      0009D4 C0 E0            [24] 2944 	push	acc
      0009D6 08               [12] 2945 	inc	r0
      0009D7 E6               [12] 2946 	mov	a,@r0
      0009D8 C0 E0            [24] 2947 	push	acc
      0009DA 08               [12] 2948 	inc	r0
      0009DB E6               [12] 2949 	mov	a,@r0
      0009DC C0 E0            [24] 2950 	push	acc
      0009DE 8D 82            [24] 2951 	mov	dpl,r5
      0009E0 8E 83            [24] 2952 	mov	dph,r6
      0009E2 8F F0            [24] 2953 	mov	b,r7
      0009E4 78r08            [12] 2954 	mov	r0,#_nbr_table_next
      0009E6 79s0A            [12] 2955 	mov	r1,#(_nbr_table_next >> 8)
      0009E8 7As00            [12] 2956 	mov	r2,#(_nbr_table_next >> 16)
      0009EA 12r00r00         [24] 2957 	lcall	__sdcc_banked_call
      0009ED AD 82            [24] 2958 	mov	r5,dpl
      0009EF AE 83            [24] 2959 	mov	r6,dph
      0009F1 AF F0            [24] 2960 	mov	r7,b
      0009F3 15 81            [12] 2961 	dec	sp
      0009F5 15 81            [12] 2962 	dec	sp
      0009F7 15 81            [12] 2963 	dec	sp
      0009F9 8D 82            [24] 2964 	mov	dpl,r5
      0009FB 8E 83            [24] 2965 	mov	dph,r6
      0009FD 8F F0            [24] 2966 	mov	b,r7
      0009FF                       2967 00104$:
      0009FF 15 81            [12] 2968 	dec	sp
      000A01 15 81            [12] 2969 	dec	sp
      000A03 15 81            [12] 2970 	dec	sp
      000A05 02r00r00         [24] 2971 	ljmp	__sdcc_banked_ret
                                   2972 ;------------------------------------------------------------
                                   2973 ;Allocation info for local variables in function 'nbr_table_next'
                                   2974 ;------------------------------------------------------------
                                   2975 ;item                      Allocated to stack - sp -8
                                   2976 ;table                     Allocated to stack - sp -2
                                   2977 ;key                       Allocated to registers r2 r3 r4 
                                   2978 ;------------------------------------------------------------
                                   2979 ;	/opt/contiki/core/net/nbr-table.c:279: nbr_table_next(nbr_table_t *table, nbr_table_item_t *item)
                                   2980 ;	-----------------------------------------
                                   2981 ;	 function nbr_table_next
                                   2982 ;	-----------------------------------------
      000A08                       2983 _nbr_table_next:
      000A08 C0 82            [24] 2984 	push	dpl
      000A0A C0 83            [24] 2985 	push	dph
      000A0C C0 F0            [24] 2986 	push	b
                                   2987 ;	/opt/contiki/core/net/nbr-table.c:281: do {
      000A0E                       2988 00102$:
                                   2989 ;	/opt/contiki/core/net/nbr-table.c:282: void *key = key_from_item(table, item);
      000A0E E5 81            [12] 2990 	mov	a,sp
      000A10 24 F8            [12] 2991 	add	a,#0xf8
      000A12 F8               [12] 2992 	mov	r0,a
      000A13 E6               [12] 2993 	mov	a,@r0
      000A14 C0 E0            [24] 2994 	push	acc
      000A16 08               [12] 2995 	inc	r0
      000A17 E6               [12] 2996 	mov	a,@r0
      000A18 C0 E0            [24] 2997 	push	acc
      000A1A 08               [12] 2998 	inc	r0
      000A1B E6               [12] 2999 	mov	a,@r0
      000A1C C0 E0            [24] 3000 	push	acc
      000A1E E5 81            [12] 3001 	mov	a,sp
      000A20 24 FB            [12] 3002 	add	a,#0xfb
      000A22 F8               [12] 3003 	mov	r0,a
      000A23 86 82            [24] 3004 	mov	dpl,@r0
      000A25 08               [12] 3005 	inc	r0
      000A26 86 83            [24] 3006 	mov	dph,@r0
      000A28 08               [12] 3007 	inc	r0
      000A29 86 F0            [24] 3008 	mov	b,@r0
      000A2B 78rF7            [12] 3009 	mov	r0,#_key_from_item
      000A2D 79s01            [12] 3010 	mov	r1,#(_key_from_item >> 8)
      000A2F 7As00            [12] 3011 	mov	r2,#(_key_from_item >> 16)
      000A31 12r00r00         [24] 3012 	lcall	__sdcc_banked_call
      000A34 AA 82            [24] 3013 	mov	r2,dpl
      000A36 AB 83            [24] 3014 	mov	r3,dph
      000A38 AC F0            [24] 3015 	mov	r4,b
      000A3A 15 81            [12] 3016 	dec	sp
      000A3C 15 81            [12] 3017 	dec	sp
      000A3E 15 81            [12] 3018 	dec	sp
                                   3019 ;	/opt/contiki/core/net/nbr-table.c:283: key = list_item_next(key);
      000A40 8A 82            [24] 3020 	mov	dpl,r2
      000A42 8B 83            [24] 3021 	mov	dph,r3
      000A44 8C F0            [24] 3022 	mov	b,r4
      000A46 78r00            [12] 3023 	mov	r0,#_list_item_next
      000A48 79s00            [12] 3024 	mov	r1,#(_list_item_next >> 8)
      000A4A 7As00            [12] 3025 	mov	r2,#(_list_item_next >> 16)
      000A4C 12r00r00         [24] 3026 	lcall	__sdcc_banked_call
      000A4F AD 82            [24] 3027 	mov	r5,dpl
      000A51 AE 83            [24] 3028 	mov	r6,dph
      000A53 AF F0            [24] 3029 	mov	r7,b
      000A55 8D 02            [24] 3030 	mov	ar2,r5
      000A57 8E 03            [24] 3031 	mov	ar3,r6
      000A59 8F 04            [24] 3032 	mov	ar4,r7
                                   3033 ;	/opt/contiki/core/net/nbr-table.c:285: item = item_from_key(table, key);
      000A5B C0 02            [24] 3034 	push	ar2
      000A5D C0 03            [24] 3035 	push	ar3
      000A5F C0 04            [24] 3036 	push	ar4
      000A61 E5 81            [12] 3037 	mov	a,sp
      000A63 24 FB            [12] 3038 	add	a,#0xfb
      000A65 F8               [12] 3039 	mov	r0,a
      000A66 86 82            [24] 3040 	mov	dpl,@r0
      000A68 08               [12] 3041 	inc	r0
      000A69 86 83            [24] 3042 	mov	dph,@r0
      000A6B 08               [12] 3043 	inc	r0
      000A6C 86 F0            [24] 3044 	mov	b,@r0
      000A6E 78rA5            [12] 3045 	mov	r0,#_item_from_key
      000A70 79s01            [12] 3046 	mov	r1,#(_item_from_key >> 8)
      000A72 7As00            [12] 3047 	mov	r2,#(_item_from_key >> 16)
      000A74 12r00r00         [24] 3048 	lcall	__sdcc_banked_call
      000A77 AD 82            [24] 3049 	mov	r5,dpl
      000A79 AE 83            [24] 3050 	mov	r6,dph
      000A7B AF F0            [24] 3051 	mov	r7,b
      000A7D 15 81            [12] 3052 	dec	sp
      000A7F 15 81            [12] 3053 	dec	sp
      000A81 15 81            [12] 3054 	dec	sp
      000A83 E5 81            [12] 3055 	mov	a,sp
      000A85 24 F8            [12] 3056 	add	a,#0xf8
      000A87 F8               [12] 3057 	mov	r0,a
      000A88 A6 05            [24] 3058 	mov	@r0,ar5
      000A8A 08               [12] 3059 	inc	r0
      000A8B A6 06            [24] 3060 	mov	@r0,ar6
      000A8D 08               [12] 3061 	inc	r0
      000A8E A6 07            [24] 3062 	mov	@r0,ar7
                                   3063 ;	/opt/contiki/core/net/nbr-table.c:286: } while(item && !nbr_get_bit(used_map, table, item));
      000A90 ED               [12] 3064 	mov	a,r5
      000A91 4E               [12] 3065 	orl	a,r6
      000A92 60 42            [24] 3066 	jz	00104$
      000A94 C0 07            [24] 3067 	push	ar7
      000A96 C0 06            [24] 3068 	push	ar6
      000A98 C0 05            [24] 3069 	push	ar5
      000A9A C0 05            [24] 3070 	push	ar5
      000A9C C0 06            [24] 3071 	push	ar6
      000A9E C0 07            [24] 3072 	push	ar7
      000AA0 E5 81            [12] 3073 	mov	a,sp
      000AA2 24 F8            [12] 3074 	add	a,#0xf8
      000AA4 F8               [12] 3075 	mov	r0,a
      000AA5 E6               [12] 3076 	mov	a,@r0
      000AA6 C0 E0            [24] 3077 	push	acc
      000AA8 08               [12] 3078 	inc	r0
      000AA9 E6               [12] 3079 	mov	a,@r0
      000AAA C0 E0            [24] 3080 	push	acc
      000AAC 08               [12] 3081 	inc	r0
      000AAD E6               [12] 3082 	mov	a,@r0
      000AAE C0 E0            [24] 3083 	push	acc
      000AB0 90r00r00         [24] 3084 	mov	dptr,#_used_map
      000AB3 75 F0 00         [24] 3085 	mov	b,#0x00
      000AB6 78r0B            [12] 3086 	mov	r0,#_nbr_get_bit
      000AB8 79s03            [12] 3087 	mov	r1,#(_nbr_get_bit >> 8)
      000ABA 7As00            [12] 3088 	mov	r2,#(_nbr_get_bit >> 16)
      000ABC 12r00r00         [24] 3089 	lcall	__sdcc_banked_call
      000ABF AB 82            [24] 3090 	mov	r3,dpl
      000AC1 AC 83            [24] 3091 	mov	r4,dph
      000AC3 E5 81            [12] 3092 	mov	a,sp
      000AC5 24 FA            [12] 3093 	add	a,#0xfa
      000AC7 F5 81            [12] 3094 	mov	sp,a
      000AC9 D0 05            [24] 3095 	pop	ar5
      000ACB D0 06            [24] 3096 	pop	ar6
      000ACD D0 07            [24] 3097 	pop	ar7
      000ACF EB               [12] 3098 	mov	a,r3
      000AD0 4C               [12] 3099 	orl	a,r4
      000AD1 70 03            [24] 3100 	jnz	00114$
      000AD3 02r0Ar0E         [24] 3101 	ljmp	00102$
      000AD6                       3102 00114$:
      000AD6                       3103 00104$:
                                   3104 ;	/opt/contiki/core/net/nbr-table.c:287: return item;
      000AD6 8D 82            [24] 3105 	mov	dpl,r5
      000AD8 8E 83            [24] 3106 	mov	dph,r6
      000ADA 8F F0            [24] 3107 	mov	b,r7
      000ADC 15 81            [12] 3108 	dec	sp
      000ADE 15 81            [12] 3109 	dec	sp
      000AE0 15 81            [12] 3110 	dec	sp
      000AE2 02r00r00         [24] 3111 	ljmp	__sdcc_banked_ret
                                   3112 ;------------------------------------------------------------
                                   3113 ;Allocation info for local variables in function 'nbr_table_add_lladdr'
                                   3114 ;------------------------------------------------------------
                                   3115 ;lladdr                    Allocated to stack - sp -11
                                   3116 ;table                     Allocated to stack - sp -5
                                   3117 ;index                     Allocated to registers r2 r4 
                                   3118 ;item                      Allocated to registers r5 r6 r7 
                                   3119 ;key                       Allocated to stack - sp -2
                                   3120 ;sloc0                     Allocated to stack - sp +6
                                   3121 ;------------------------------------------------------------
                                   3122 ;	/opt/contiki/core/net/nbr-table.c:292: nbr_table_add_lladdr(nbr_table_t *table, const linkaddr_t *lladdr)
                                   3123 ;	-----------------------------------------
                                   3124 ;	 function nbr_table_add_lladdr
                                   3125 ;	-----------------------------------------
      000AE5                       3126 _nbr_table_add_lladdr:
      000AE5 C0 82            [24] 3127 	push	dpl
      000AE7 C0 83            [24] 3128 	push	dph
      000AE9 C0 F0            [24] 3129 	push	b
      000AEB 05 81            [12] 3130 	inc	sp
      000AED 05 81            [12] 3131 	inc	sp
      000AEF 05 81            [12] 3132 	inc	sp
                                   3133 ;	/opt/contiki/core/net/nbr-table.c:300: if(lladdr == NULL) {
      000AF1 E5 81            [12] 3134 	mov	a,sp
      000AF3 24 F5            [12] 3135 	add	a,#0xf5
      000AF5 F8               [12] 3136 	mov	r0,a
      000AF6 E6               [12] 3137 	mov	a,@r0
      000AF7 08               [12] 3138 	inc	r0
      000AF8 46               [12] 3139 	orl	a,@r0
      000AF9 70 0D            [24] 3140 	jnz	00102$
                                   3141 ;	/opt/contiki/core/net/nbr-table.c:301: lladdr = &linkaddr_null;
      000AFB E5 81            [12] 3142 	mov	a,sp
      000AFD 24 F5            [12] 3143 	add	a,#0xf5
      000AFF F8               [12] 3144 	mov	r0,a
      000B00 76r00            [12] 3145 	mov	@r0,#_linkaddr_null
      000B02 08               [12] 3146 	inc	r0
      000B03 76s00            [12] 3147 	mov	@r0,#(_linkaddr_null >> 8)
      000B05 08               [12] 3148 	inc	r0
      000B06 76 80            [12] 3149 	mov	@r0,#0x80
      000B08                       3150 00102$:
                                   3151 ;	/opt/contiki/core/net/nbr-table.c:304: if((index = index_from_lladdr(lladdr)) == -1) {
      000B08 E5 81            [12] 3152 	mov	a,sp
      000B0A 24 F5            [12] 3153 	add	a,#0xf5
      000B0C F8               [12] 3154 	mov	r0,a
      000B0D 86 82            [24] 3155 	mov	dpl,@r0
      000B0F 08               [12] 3156 	inc	r0
      000B10 86 83            [24] 3157 	mov	dph,@r0
      000B12 08               [12] 3158 	inc	r0
      000B13 86 F0            [24] 3159 	mov	b,@r0
      000B15 78r3C            [12] 3160 	mov	r0,#_index_from_lladdr
      000B17 79s02            [12] 3161 	mov	r1,#(_index_from_lladdr >> 8)
      000B19 7As00            [12] 3162 	mov	r2,#(_index_from_lladdr >> 16)
      000B1B 12r00r00         [24] 3163 	lcall	__sdcc_banked_call
      000B1E AF 82            [24] 3164 	mov	r7,dpl
      000B20 AE 83            [24] 3165 	mov	r6,dph
      000B22 8F 02            [24] 3166 	mov	ar2,r7
      000B24 8E 04            [24] 3167 	mov	ar4,r6
      000B26 BF FF 05         [24] 3168 	cjne	r7,#0xFF,00119$
      000B29 BE FF 02         [24] 3169 	cjne	r6,#0xFF,00119$
      000B2C 80 03            [24] 3170 	sjmp	00120$
      000B2E                       3171 00119$:
      000B2E 02r0BrE8         [24] 3172 	ljmp	00106$
      000B31                       3173 00120$:
                                   3174 ;	/opt/contiki/core/net/nbr-table.c:306: key = nbr_table_allocate();
      000B31 78rF4            [12] 3175 	mov	r0,#_nbr_table_allocate
      000B33 79s04            [12] 3176 	mov	r1,#(_nbr_table_allocate >> 8)
      000B35 7As00            [12] 3177 	mov	r2,#(_nbr_table_allocate >> 16)
      000B37 12r00r00         [24] 3178 	lcall	__sdcc_banked_call
      000B3A AF 82            [24] 3179 	mov	r7,dpl
      000B3C AE 83            [24] 3180 	mov	r6,dph
      000B3E AD F0            [24] 3181 	mov	r5,b
      000B40 A8 81            [24] 3182 	mov	r0,sp
      000B42 18               [12] 3183 	dec	r0
      000B43 18               [12] 3184 	dec	r0
      000B44 A6 07            [24] 3185 	mov	@r0,ar7
      000B46 08               [12] 3186 	inc	r0
      000B47 A6 06            [24] 3187 	mov	@r0,ar6
      000B49 08               [12] 3188 	inc	r0
      000B4A A6 05            [24] 3189 	mov	@r0,ar5
                                   3190 ;	/opt/contiki/core/net/nbr-table.c:309: if(key == NULL) {
      000B4C A8 81            [24] 3191 	mov	r0,sp
      000B4E 18               [12] 3192 	dec	r0
      000B4F 18               [12] 3193 	dec	r0
      000B50 E6               [12] 3194 	mov	a,@r0
      000B51 08               [12] 3195 	inc	r0
      000B52 46               [12] 3196 	orl	a,@r0
                                   3197 ;	/opt/contiki/core/net/nbr-table.c:310: return NULL;
      000B53 70 08            [24] 3198 	jnz	00104$
      000B55 90 00 00         [24] 3199 	mov	dptr,#0x0000
      000B58 F5 F0            [12] 3200 	mov	b,a
      000B5A 02r0Cr97         [24] 3201 	ljmp	00107$
      000B5D                       3202 00104$:
                                   3203 ;	/opt/contiki/core/net/nbr-table.c:314: list_add(nbr_table_keys, key);
      000B5D A8 81            [24] 3204 	mov	r0,sp
      000B5F 18               [12] 3205 	dec	r0
      000B60 18               [12] 3206 	dec	r0
      000B61 86 05            [24] 3207 	mov	ar5,@r0
      000B63 08               [12] 3208 	inc	r0
      000B64 86 04            [24] 3209 	mov	ar4,@r0
      000B66 08               [12] 3210 	inc	r0
      000B67 86 02            [24] 3211 	mov	ar2,@r0
      000B69 90r00r0D         [24] 3212 	mov	dptr,#_nbr_table_keys
      000B6C E0               [24] 3213 	movx	a,@dptr
      000B6D FB               [12] 3214 	mov	r3,a
      000B6E A3               [24] 3215 	inc	dptr
      000B6F E0               [24] 3216 	movx	a,@dptr
      000B70 FE               [12] 3217 	mov	r6,a
      000B71 A3               [24] 3218 	inc	dptr
      000B72 E0               [24] 3219 	movx	a,@dptr
      000B73 FF               [12] 3220 	mov	r7,a
      000B74 C0 05            [24] 3221 	push	ar5
      000B76 C0 04            [24] 3222 	push	ar4
      000B78 C0 02            [24] 3223 	push	ar2
      000B7A 8B 82            [24] 3224 	mov	dpl,r3
      000B7C 8E 83            [24] 3225 	mov	dph,r6
      000B7E 8F F0            [24] 3226 	mov	b,r7
      000B80 78r00            [12] 3227 	mov	r0,#_list_add
      000B82 79s00            [12] 3228 	mov	r1,#(_list_add >> 8)
      000B84 7As00            [12] 3229 	mov	r2,#(_list_add >> 16)
      000B86 12r00r00         [24] 3230 	lcall	__sdcc_banked_call
      000B89 15 81            [12] 3231 	dec	sp
      000B8B 15 81            [12] 3232 	dec	sp
      000B8D 15 81            [12] 3233 	dec	sp
                                   3234 ;	/opt/contiki/core/net/nbr-table.c:317: index = index_from_key(key);
      000B8F A8 81            [24] 3235 	mov	r0,sp
      000B91 18               [12] 3236 	dec	r0
      000B92 18               [12] 3237 	dec	r0
      000B93 86 82            [24] 3238 	mov	dpl,@r0
      000B95 08               [12] 3239 	inc	r0
      000B96 86 83            [24] 3240 	mov	dph,@r0
      000B98 08               [12] 3241 	inc	r0
      000B99 86 F0            [24] 3242 	mov	b,@r0
      000B9B 78rD4            [12] 3243 	mov	r0,#_index_from_key
      000B9D 79s00            [12] 3244 	mov	r1,#(_index_from_key >> 8)
      000B9F 7As00            [12] 3245 	mov	r2,#(_index_from_key >> 16)
      000BA1 12r00r00         [24] 3246 	lcall	__sdcc_banked_call
      000BA4 AE 82            [24] 3247 	mov	r6,dpl
      000BA6 AF 83            [24] 3248 	mov	r7,dph
      000BA8 8E 02            [24] 3249 	mov	ar2,r6
      000BAA 8F 04            [24] 3250 	mov	ar4,r7
                                   3251 ;	/opt/contiki/core/net/nbr-table.c:320: linkaddr_copy(&key->lladdr, lladdr);
      000BAC A8 81            [24] 3252 	mov	r0,sp
      000BAE 18               [12] 3253 	dec	r0
      000BAF 18               [12] 3254 	dec	r0
      000BB0 74 03            [12] 3255 	mov	a,#0x03
      000BB2 26               [12] 3256 	add	a,@r0
      000BB3 FD               [12] 3257 	mov	r5,a
      000BB4 E4               [12] 3258 	clr	a
      000BB5 08               [12] 3259 	inc	r0
      000BB6 36               [12] 3260 	addc	a,@r0
      000BB7 FE               [12] 3261 	mov	r6,a
      000BB8 08               [12] 3262 	inc	r0
      000BB9 86 07            [24] 3263 	mov	ar7,@r0
      000BBB C0 04            [24] 3264 	push	ar4
      000BBD C0 02            [24] 3265 	push	ar2
      000BBF E5 81            [12] 3266 	mov	a,sp
      000BC1 24 F3            [12] 3267 	add	a,#0xf3
      000BC3 F8               [12] 3268 	mov	r0,a
      000BC4 E6               [12] 3269 	mov	a,@r0
      000BC5 C0 E0            [24] 3270 	push	acc
      000BC7 08               [12] 3271 	inc	r0
      000BC8 E6               [12] 3272 	mov	a,@r0
      000BC9 C0 E0            [24] 3273 	push	acc
      000BCB 08               [12] 3274 	inc	r0
      000BCC E6               [12] 3275 	mov	a,@r0
      000BCD C0 E0            [24] 3276 	push	acc
      000BCF 8D 82            [24] 3277 	mov	dpl,r5
      000BD1 8E 83            [24] 3278 	mov	dph,r6
      000BD3 8F F0            [24] 3279 	mov	b,r7
      000BD5 78r00            [12] 3280 	mov	r0,#_linkaddr_copy
      000BD7 79s00            [12] 3281 	mov	r1,#(_linkaddr_copy >> 8)
      000BD9 7As00            [12] 3282 	mov	r2,#(_linkaddr_copy >> 16)
      000BDB 12r00r00         [24] 3283 	lcall	__sdcc_banked_call
      000BDE 15 81            [12] 3284 	dec	sp
      000BE0 15 81            [12] 3285 	dec	sp
      000BE2 15 81            [12] 3286 	dec	sp
      000BE4 D0 02            [24] 3287 	pop	ar2
      000BE6 D0 04            [24] 3288 	pop	ar4
      000BE8                       3289 00106$:
                                   3290 ;	/opt/contiki/core/net/nbr-table.c:324: item = item_from_index(table, index);
      000BE8 C0 02            [24] 3291 	push	ar2
      000BEA C0 04            [24] 3292 	push	ar4
      000BEC E5 81            [12] 3293 	mov	a,sp
      000BEE 24 F9            [12] 3294 	add	a,#0xf9
      000BF0 F8               [12] 3295 	mov	r0,a
      000BF1 86 82            [24] 3296 	mov	dpl,@r0
      000BF3 08               [12] 3297 	inc	r0
      000BF4 86 83            [24] 3298 	mov	dph,@r0
      000BF6 08               [12] 3299 	inc	r0
      000BF7 86 F0            [24] 3300 	mov	b,@r0
      000BF9 78r49            [12] 3301 	mov	r0,#_item_from_index
      000BFB 79s00            [12] 3302 	mov	r1,#(_item_from_index >> 8)
      000BFD 7As00            [12] 3303 	mov	r2,#(_item_from_index >> 16)
      000BFF 12r00r00         [24] 3304 	lcall	__sdcc_banked_call
      000C02 AD 82            [24] 3305 	mov	r5,dpl
      000C04 AE 83            [24] 3306 	mov	r6,dph
      000C06 AF F0            [24] 3307 	mov	r7,b
      000C08 15 81            [12] 3308 	dec	sp
      000C0A 15 81            [12] 3309 	dec	sp
                                   3310 ;	/opt/contiki/core/net/nbr-table.c:327: memset(item, 0, table->item_size);
      000C0C E5 81            [12] 3311 	mov	a,sp
      000C0E 24 FB            [12] 3312 	add	a,#0xfb
      000C10 F8               [12] 3313 	mov	r0,a
      000C11 74 02            [12] 3314 	mov	a,#0x02
      000C13 26               [12] 3315 	add	a,@r0
      000C14 FA               [12] 3316 	mov	r2,a
      000C15 E4               [12] 3317 	clr	a
      000C16 08               [12] 3318 	inc	r0
      000C17 36               [12] 3319 	addc	a,@r0
      000C18 FB               [12] 3320 	mov	r3,a
      000C19 08               [12] 3321 	inc	r0
      000C1A 86 04            [24] 3322 	mov	ar4,@r0
      000C1C 8A 82            [24] 3323 	mov	dpl,r2
      000C1E 8B 83            [24] 3324 	mov	dph,r3
      000C20 8C F0            [24] 3325 	mov	b,r4
      000C22 12r00r00         [24] 3326 	lcall	__gptrget
      000C25 FA               [12] 3327 	mov	r2,a
      000C26 A3               [24] 3328 	inc	dptr
      000C27 12r00r00         [24] 3329 	lcall	__gptrget
      000C2A FB               [12] 3330 	mov	r3,a
      000C2B C0 07            [24] 3331 	push	ar7
      000C2D C0 06            [24] 3332 	push	ar6
      000C2F C0 05            [24] 3333 	push	ar5
      000C31 C0 02            [24] 3334 	push	ar2
      000C33 C0 03            [24] 3335 	push	ar3
      000C35 E4               [12] 3336 	clr	a
      000C36 C0 E0            [24] 3337 	push	acc
      000C38 8D 82            [24] 3338 	mov	dpl,r5
      000C3A 8E 83            [24] 3339 	mov	dph,r6
      000C3C 8F F0            [24] 3340 	mov	b,r7
      000C3E 78r00            [12] 3341 	mov	r0,#_memset
      000C40 79s00            [12] 3342 	mov	r1,#(_memset >> 8)
      000C42 7As00            [12] 3343 	mov	r2,#(_memset >> 16)
      000C44 12r00r00         [24] 3344 	lcall	__sdcc_banked_call
      000C47 15 81            [12] 3345 	dec	sp
      000C49 15 81            [12] 3346 	dec	sp
      000C4B 15 81            [12] 3347 	dec	sp
      000C4D D0 05            [24] 3348 	pop	ar5
      000C4F D0 06            [24] 3349 	pop	ar6
      000C51 D0 07            [24] 3350 	pop	ar7
                                   3351 ;	/opt/contiki/core/net/nbr-table.c:328: nbr_set_bit(used_map, table, item, 1);
      000C53 C0 07            [24] 3352 	push	ar7
      000C55 C0 06            [24] 3353 	push	ar6
      000C57 C0 05            [24] 3354 	push	ar5
      000C59 74 01            [12] 3355 	mov	a,#0x01
      000C5B C0 E0            [24] 3356 	push	acc
      000C5D E4               [12] 3357 	clr	a
      000C5E C0 E0            [24] 3358 	push	acc
      000C60 C0 05            [24] 3359 	push	ar5
      000C62 C0 06            [24] 3360 	push	ar6
      000C64 C0 07            [24] 3361 	push	ar7
      000C66 E5 81            [12] 3362 	mov	a,sp
      000C68 24 F3            [12] 3363 	add	a,#0xf3
      000C6A F8               [12] 3364 	mov	r0,a
      000C6B E6               [12] 3365 	mov	a,@r0
      000C6C C0 E0            [24] 3366 	push	acc
      000C6E 08               [12] 3367 	inc	r0
      000C6F E6               [12] 3368 	mov	a,@r0
      000C70 C0 E0            [24] 3369 	push	acc
      000C72 08               [12] 3370 	inc	r0
      000C73 E6               [12] 3371 	mov	a,@r0
      000C74 C0 E0            [24] 3372 	push	acc
      000C76 90r00r00         [24] 3373 	mov	dptr,#_used_map
      000C79 75 F0 00         [24] 3374 	mov	b,#0x00
      000C7C 78rC4            [12] 3375 	mov	r0,#_nbr_set_bit
      000C7E 79s03            [12] 3376 	mov	r1,#(_nbr_set_bit >> 8)
      000C80 7As00            [12] 3377 	mov	r2,#(_nbr_set_bit >> 16)
      000C82 12r00r00         [24] 3378 	lcall	__sdcc_banked_call
      000C85 E5 81            [12] 3379 	mov	a,sp
      000C87 24 F8            [12] 3380 	add	a,#0xf8
      000C89 F5 81            [12] 3381 	mov	sp,a
      000C8B D0 05            [24] 3382 	pop	ar5
      000C8D D0 06            [24] 3383 	pop	ar6
      000C8F D0 07            [24] 3384 	pop	ar7
                                   3385 ;	/opt/contiki/core/net/nbr-table.c:330: return item;
      000C91 8D 82            [24] 3386 	mov	dpl,r5
      000C93 8E 83            [24] 3387 	mov	dph,r6
      000C95 8F F0            [24] 3388 	mov	b,r7
      000C97                       3389 00107$:
      000C97 E5 81            [12] 3390 	mov	a,sp
      000C99 24 FA            [12] 3391 	add	a,#0xFA
      000C9B F5 81            [12] 3392 	mov	sp,a
      000C9D 02r00r00         [24] 3393 	ljmp	__sdcc_banked_ret
                                   3394 ;------------------------------------------------------------
                                   3395 ;Allocation info for local variables in function 'nbr_table_get_from_lladdr'
                                   3396 ;------------------------------------------------------------
                                   3397 ;lladdr                    Allocated to stack - sp -5
                                   3398 ;table                     Allocated to registers r5 r6 r7 
                                   3399 ;item                      Allocated to registers r2 r3 r4 
                                   3400 ;------------------------------------------------------------
                                   3401 ;	/opt/contiki/core/net/nbr-table.c:335: nbr_table_get_from_lladdr(nbr_table_t *table, const linkaddr_t *lladdr)
                                   3402 ;	-----------------------------------------
                                   3403 ;	 function nbr_table_get_from_lladdr
                                   3404 ;	-----------------------------------------
      000CA0                       3405 _nbr_table_get_from_lladdr:
      000CA0 AD 82            [24] 3406 	mov	r5,dpl
      000CA2 AE 83            [24] 3407 	mov	r6,dph
      000CA4 AF F0            [24] 3408 	mov	r7,b
                                   3409 ;	/opt/contiki/core/net/nbr-table.c:337: void *item = item_from_index(table, index_from_lladdr(lladdr));
      000CA6 E5 81            [12] 3410 	mov	a,sp
      000CA8 24 FB            [12] 3411 	add	a,#0xfb
      000CAA F8               [12] 3412 	mov	r0,a
      000CAB 86 82            [24] 3413 	mov	dpl,@r0
      000CAD 08               [12] 3414 	inc	r0
      000CAE 86 83            [24] 3415 	mov	dph,@r0
      000CB0 08               [12] 3416 	inc	r0
      000CB1 86 F0            [24] 3417 	mov	b,@r0
      000CB3 C0 07            [24] 3418 	push	ar7
      000CB5 C0 06            [24] 3419 	push	ar6
      000CB7 C0 05            [24] 3420 	push	ar5
      000CB9 78r3C            [12] 3421 	mov	r0,#_index_from_lladdr
      000CBB 79s02            [12] 3422 	mov	r1,#(_index_from_lladdr >> 8)
      000CBD 7As00            [12] 3423 	mov	r2,#(_index_from_lladdr >> 16)
      000CBF 12r00r00         [24] 3424 	lcall	__sdcc_banked_call
      000CC2 AB 82            [24] 3425 	mov	r3,dpl
      000CC4 AC 83            [24] 3426 	mov	r4,dph
      000CC6 D0 05            [24] 3427 	pop	ar5
      000CC8 D0 06            [24] 3428 	pop	ar6
      000CCA D0 07            [24] 3429 	pop	ar7
      000CCC C0 07            [24] 3430 	push	ar7
      000CCE C0 06            [24] 3431 	push	ar6
      000CD0 C0 05            [24] 3432 	push	ar5
      000CD2 C0 03            [24] 3433 	push	ar3
      000CD4 C0 04            [24] 3434 	push	ar4
      000CD6 8D 82            [24] 3435 	mov	dpl,r5
      000CD8 8E 83            [24] 3436 	mov	dph,r6
      000CDA 8F F0            [24] 3437 	mov	b,r7
      000CDC 78r49            [12] 3438 	mov	r0,#_item_from_index
      000CDE 79s00            [12] 3439 	mov	r1,#(_item_from_index >> 8)
      000CE0 7As00            [12] 3440 	mov	r2,#(_item_from_index >> 16)
      000CE2 12r00r00         [24] 3441 	lcall	__sdcc_banked_call
      000CE5 AA 82            [24] 3442 	mov	r2,dpl
      000CE7 AB 83            [24] 3443 	mov	r3,dph
      000CE9 AC F0            [24] 3444 	mov	r4,b
      000CEB 15 81            [12] 3445 	dec	sp
      000CED 15 81            [12] 3446 	dec	sp
      000CEF D0 05            [24] 3447 	pop	ar5
      000CF1 D0 06            [24] 3448 	pop	ar6
      000CF3 D0 07            [24] 3449 	pop	ar7
                                   3450 ;	/opt/contiki/core/net/nbr-table.c:338: return nbr_get_bit(used_map, table, item) ? item : NULL;
      000CF5 C0 04            [24] 3451 	push	ar4
      000CF7 C0 03            [24] 3452 	push	ar3
      000CF9 C0 02            [24] 3453 	push	ar2
      000CFB C0 02            [24] 3454 	push	ar2
      000CFD C0 03            [24] 3455 	push	ar3
      000CFF C0 04            [24] 3456 	push	ar4
      000D01 C0 05            [24] 3457 	push	ar5
      000D03 C0 06            [24] 3458 	push	ar6
      000D05 C0 07            [24] 3459 	push	ar7
      000D07 90r00r00         [24] 3460 	mov	dptr,#_used_map
      000D0A 75 F0 00         [24] 3461 	mov	b,#0x00
      000D0D 78r0B            [12] 3462 	mov	r0,#_nbr_get_bit
      000D0F 79s03            [12] 3463 	mov	r1,#(_nbr_get_bit >> 8)
      000D11 7As00            [12] 3464 	mov	r2,#(_nbr_get_bit >> 16)
      000D13 12r00r00         [24] 3465 	lcall	__sdcc_banked_call
      000D16 AE 82            [24] 3466 	mov	r6,dpl
      000D18 AF 83            [24] 3467 	mov	r7,dph
      000D1A E5 81            [12] 3468 	mov	a,sp
      000D1C 24 FA            [12] 3469 	add	a,#0xfa
      000D1E F5 81            [12] 3470 	mov	sp,a
      000D20 D0 02            [24] 3471 	pop	ar2
      000D22 D0 03            [24] 3472 	pop	ar3
      000D24 D0 04            [24] 3473 	pop	ar4
      000D26 EE               [12] 3474 	mov	a,r6
      000D27 4F               [12] 3475 	orl	a,r7
      000D28 60 08            [24] 3476 	jz	00103$
      000D2A 8A 05            [24] 3477 	mov	ar5,r2
      000D2C 8B 06            [24] 3478 	mov	ar6,r3
      000D2E 8C 07            [24] 3479 	mov	ar7,r4
      000D30 80 06            [24] 3480 	sjmp	00104$
      000D32                       3481 00103$:
      000D32 7D 00            [12] 3482 	mov	r5,#0x00
      000D34 7E 00            [12] 3483 	mov	r6,#0x00
      000D36 7F 00            [12] 3484 	mov	r7,#0x00
      000D38                       3485 00104$:
      000D38 8D 82            [24] 3486 	mov	dpl,r5
      000D3A 8E 83            [24] 3487 	mov	dph,r6
      000D3C 8F F0            [24] 3488 	mov	b,r7
      000D3E 02r00r00         [24] 3489 	ljmp	__sdcc_banked_ret
                                   3490 ;------------------------------------------------------------
                                   3491 ;Allocation info for local variables in function 'nbr_table_remove'
                                   3492 ;------------------------------------------------------------
                                   3493 ;item                      Allocated to stack - sp -5
                                   3494 ;table                     Allocated to registers r5 r6 r7 
                                   3495 ;ret                       Allocated to registers r3 r4 
                                   3496 ;------------------------------------------------------------
                                   3497 ;	/opt/contiki/core/net/nbr-table.c:343: nbr_table_remove(nbr_table_t *table, void *item)
                                   3498 ;	-----------------------------------------
                                   3499 ;	 function nbr_table_remove
                                   3500 ;	-----------------------------------------
      000D41                       3501 _nbr_table_remove:
      000D41 AD 82            [24] 3502 	mov	r5,dpl
      000D43 AE 83            [24] 3503 	mov	r6,dph
      000D45 AF F0            [24] 3504 	mov	r7,b
                                   3505 ;	/opt/contiki/core/net/nbr-table.c:345: int ret = nbr_set_bit(used_map, table, item, 0);
      000D47 C0 07            [24] 3506 	push	ar7
      000D49 C0 06            [24] 3507 	push	ar6
      000D4B C0 05            [24] 3508 	push	ar5
      000D4D E4               [12] 3509 	clr	a
      000D4E C0 E0            [24] 3510 	push	acc
      000D50 C0 E0            [24] 3511 	push	acc
      000D52 E5 81            [12] 3512 	mov	a,sp
      000D54 24 F6            [12] 3513 	add	a,#0xf6
      000D56 F8               [12] 3514 	mov	r0,a
      000D57 E6               [12] 3515 	mov	a,@r0
      000D58 C0 E0            [24] 3516 	push	acc
      000D5A 08               [12] 3517 	inc	r0
      000D5B E6               [12] 3518 	mov	a,@r0
      000D5C C0 E0            [24] 3519 	push	acc
      000D5E 08               [12] 3520 	inc	r0
      000D5F E6               [12] 3521 	mov	a,@r0
      000D60 C0 E0            [24] 3522 	push	acc
      000D62 C0 05            [24] 3523 	push	ar5
      000D64 C0 06            [24] 3524 	push	ar6
      000D66 C0 07            [24] 3525 	push	ar7
      000D68 90r00r00         [24] 3526 	mov	dptr,#_used_map
      000D6B 75 F0 00         [24] 3527 	mov	b,#0x00
      000D6E 78rC4            [12] 3528 	mov	r0,#_nbr_set_bit
      000D70 79s03            [12] 3529 	mov	r1,#(_nbr_set_bit >> 8)
      000D72 7As00            [12] 3530 	mov	r2,#(_nbr_set_bit >> 16)
      000D74 12r00r00         [24] 3531 	lcall	__sdcc_banked_call
      000D77 AB 82            [24] 3532 	mov	r3,dpl
      000D79 AC 83            [24] 3533 	mov	r4,dph
      000D7B E5 81            [12] 3534 	mov	a,sp
      000D7D 24 F8            [12] 3535 	add	a,#0xf8
      000D7F F5 81            [12] 3536 	mov	sp,a
      000D81 D0 05            [24] 3537 	pop	ar5
      000D83 D0 06            [24] 3538 	pop	ar6
      000D85 D0 07            [24] 3539 	pop	ar7
                                   3540 ;	/opt/contiki/core/net/nbr-table.c:346: nbr_set_bit(locked_map, table, item, 0);
      000D87 C0 04            [24] 3541 	push	ar4
      000D89 C0 03            [24] 3542 	push	ar3
      000D8B E4               [12] 3543 	clr	a
      000D8C C0 E0            [24] 3544 	push	acc
      000D8E C0 E0            [24] 3545 	push	acc
      000D90 E5 81            [12] 3546 	mov	a,sp
      000D92 24 F7            [12] 3547 	add	a,#0xf7
      000D94 F8               [12] 3548 	mov	r0,a
      000D95 E6               [12] 3549 	mov	a,@r0
      000D96 C0 E0            [24] 3550 	push	acc
      000D98 08               [12] 3551 	inc	r0
      000D99 E6               [12] 3552 	mov	a,@r0
      000D9A C0 E0            [24] 3553 	push	acc
      000D9C 08               [12] 3554 	inc	r0
      000D9D E6               [12] 3555 	mov	a,@r0
      000D9E C0 E0            [24] 3556 	push	acc
      000DA0 C0 05            [24] 3557 	push	ar5
      000DA2 C0 06            [24] 3558 	push	ar6
      000DA4 C0 07            [24] 3559 	push	ar7
      000DA6 90r00r04         [24] 3560 	mov	dptr,#_locked_map
      000DA9 75 F0 00         [24] 3561 	mov	b,#0x00
      000DAC 78rC4            [12] 3562 	mov	r0,#_nbr_set_bit
      000DAE 79s03            [12] 3563 	mov	r1,#(_nbr_set_bit >> 8)
      000DB0 7As00            [12] 3564 	mov	r2,#(_nbr_set_bit >> 16)
      000DB2 12r00r00         [24] 3565 	lcall	__sdcc_banked_call
      000DB5 E5 81            [12] 3566 	mov	a,sp
      000DB7 24 F8            [12] 3567 	add	a,#0xf8
      000DB9 F5 81            [12] 3568 	mov	sp,a
      000DBB D0 03            [24] 3569 	pop	ar3
      000DBD D0 04            [24] 3570 	pop	ar4
                                   3571 ;	/opt/contiki/core/net/nbr-table.c:347: return ret;
      000DBF 8B 82            [24] 3572 	mov	dpl,r3
      000DC1 8C 83            [24] 3573 	mov	dph,r4
      000DC3 02r00r00         [24] 3574 	ljmp	__sdcc_banked_ret
                                   3575 ;------------------------------------------------------------
                                   3576 ;Allocation info for local variables in function 'nbr_table_lock'
                                   3577 ;------------------------------------------------------------
                                   3578 ;item                      Allocated to stack - sp -5
                                   3579 ;table                     Allocated to registers r5 r6 r7 
                                   3580 ;------------------------------------------------------------
                                   3581 ;	/opt/contiki/core/net/nbr-table.c:352: nbr_table_lock(nbr_table_t *table, void *item)
                                   3582 ;	-----------------------------------------
                                   3583 ;	 function nbr_table_lock
                                   3584 ;	-----------------------------------------
      000DC6                       3585 _nbr_table_lock:
      000DC6 AD 82            [24] 3586 	mov	r5,dpl
      000DC8 AE 83            [24] 3587 	mov	r6,dph
      000DCA AF F0            [24] 3588 	mov	r7,b
                                   3589 ;	/opt/contiki/core/net/nbr-table.c:358: return nbr_set_bit(locked_map, table, item, 1);
      000DCC 74 01            [12] 3590 	mov	a,#0x01
      000DCE C0 E0            [24] 3591 	push	acc
      000DD0 E4               [12] 3592 	clr	a
      000DD1 C0 E0            [24] 3593 	push	acc
      000DD3 E5 81            [12] 3594 	mov	a,sp
      000DD5 24 F9            [12] 3595 	add	a,#0xf9
      000DD7 F8               [12] 3596 	mov	r0,a
      000DD8 E6               [12] 3597 	mov	a,@r0
      000DD9 C0 E0            [24] 3598 	push	acc
      000DDB 08               [12] 3599 	inc	r0
      000DDC E6               [12] 3600 	mov	a,@r0
      000DDD C0 E0            [24] 3601 	push	acc
      000DDF 08               [12] 3602 	inc	r0
      000DE0 E6               [12] 3603 	mov	a,@r0
      000DE1 C0 E0            [24] 3604 	push	acc
      000DE3 C0 05            [24] 3605 	push	ar5
      000DE5 C0 06            [24] 3606 	push	ar6
      000DE7 C0 07            [24] 3607 	push	ar7
      000DE9 90r00r04         [24] 3608 	mov	dptr,#_locked_map
      000DEC 75 F0 00         [24] 3609 	mov	b,#0x00
      000DEF 78rC4            [12] 3610 	mov	r0,#_nbr_set_bit
      000DF1 79s03            [12] 3611 	mov	r1,#(_nbr_set_bit >> 8)
      000DF3 7As00            [12] 3612 	mov	r2,#(_nbr_set_bit >> 16)
      000DF5 12r00r00         [24] 3613 	lcall	__sdcc_banked_call
      000DF8 AE 82            [24] 3614 	mov	r6,dpl
      000DFA AF 83            [24] 3615 	mov	r7,dph
      000DFC E5 81            [12] 3616 	mov	a,sp
      000DFE 24 F8            [12] 3617 	add	a,#0xf8
      000E00 F5 81            [12] 3618 	mov	sp,a
      000E02 8E 82            [24] 3619 	mov	dpl,r6
      000E04 8F 83            [24] 3620 	mov	dph,r7
      000E06 02r00r00         [24] 3621 	ljmp	__sdcc_banked_ret
                                   3622 ;------------------------------------------------------------
                                   3623 ;Allocation info for local variables in function 'nbr_table_unlock'
                                   3624 ;------------------------------------------------------------
                                   3625 ;item                      Allocated to stack - sp -5
                                   3626 ;table                     Allocated to registers r5 r6 r7 
                                   3627 ;------------------------------------------------------------
                                   3628 ;	/opt/contiki/core/net/nbr-table.c:363: nbr_table_unlock(nbr_table_t *table, void *item)
                                   3629 ;	-----------------------------------------
                                   3630 ;	 function nbr_table_unlock
                                   3631 ;	-----------------------------------------
      000E09                       3632 _nbr_table_unlock:
      000E09 AD 82            [24] 3633 	mov	r5,dpl
      000E0B AE 83            [24] 3634 	mov	r6,dph
      000E0D AF F0            [24] 3635 	mov	r7,b
                                   3636 ;	/opt/contiki/core/net/nbr-table.c:369: return nbr_set_bit(locked_map, table, item, 0);
      000E0F E4               [12] 3637 	clr	a
      000E10 C0 E0            [24] 3638 	push	acc
      000E12 C0 E0            [24] 3639 	push	acc
      000E14 E5 81            [12] 3640 	mov	a,sp
      000E16 24 F9            [12] 3641 	add	a,#0xf9
      000E18 F8               [12] 3642 	mov	r0,a
      000E19 E6               [12] 3643 	mov	a,@r0
      000E1A C0 E0            [24] 3644 	push	acc
      000E1C 08               [12] 3645 	inc	r0
      000E1D E6               [12] 3646 	mov	a,@r0
      000E1E C0 E0            [24] 3647 	push	acc
      000E20 08               [12] 3648 	inc	r0
      000E21 E6               [12] 3649 	mov	a,@r0
      000E22 C0 E0            [24] 3650 	push	acc
      000E24 C0 05            [24] 3651 	push	ar5
      000E26 C0 06            [24] 3652 	push	ar6
      000E28 C0 07            [24] 3653 	push	ar7
      000E2A 90r00r04         [24] 3654 	mov	dptr,#_locked_map
      000E2D 75 F0 00         [24] 3655 	mov	b,#0x00
      000E30 78rC4            [12] 3656 	mov	r0,#_nbr_set_bit
      000E32 79s03            [12] 3657 	mov	r1,#(_nbr_set_bit >> 8)
      000E34 7As00            [12] 3658 	mov	r2,#(_nbr_set_bit >> 16)
      000E36 12r00r00         [24] 3659 	lcall	__sdcc_banked_call
      000E39 AE 82            [24] 3660 	mov	r6,dpl
      000E3B AF 83            [24] 3661 	mov	r7,dph
      000E3D E5 81            [12] 3662 	mov	a,sp
      000E3F 24 F8            [12] 3663 	add	a,#0xf8
      000E41 F5 81            [12] 3664 	mov	sp,a
      000E43 8E 82            [24] 3665 	mov	dpl,r6
      000E45 8F 83            [24] 3666 	mov	dph,r7
      000E47 02r00r00         [24] 3667 	ljmp	__sdcc_banked_ret
                                   3668 ;------------------------------------------------------------
                                   3669 ;Allocation info for local variables in function 'nbr_table_get_lladdr'
                                   3670 ;------------------------------------------------------------
                                   3671 ;item                      Allocated to stack - sp -5
                                   3672 ;table                     Allocated to registers r5 r6 r7 
                                   3673 ;key                       Allocated to registers r2 r3 r4 
                                   3674 ;------------------------------------------------------------
                                   3675 ;	/opt/contiki/core/net/nbr-table.c:374: nbr_table_get_lladdr(nbr_table_t *table, const void *item)
                                   3676 ;	-----------------------------------------
                                   3677 ;	 function nbr_table_get_lladdr
                                   3678 ;	-----------------------------------------
      000E4A                       3679 _nbr_table_get_lladdr:
      000E4A AD 82            [24] 3680 	mov	r5,dpl
      000E4C AE 83            [24] 3681 	mov	r6,dph
      000E4E AF F0            [24] 3682 	mov	r7,b
                                   3683 ;	/opt/contiki/core/net/nbr-table.c:376: nbr_table_key_t *key = key_from_item(table, item);
      000E50 E5 81            [12] 3684 	mov	a,sp
      000E52 24 FB            [12] 3685 	add	a,#0xfb
      000E54 F8               [12] 3686 	mov	r0,a
      000E55 E6               [12] 3687 	mov	a,@r0
      000E56 C0 E0            [24] 3688 	push	acc
      000E58 08               [12] 3689 	inc	r0
      000E59 E6               [12] 3690 	mov	a,@r0
      000E5A C0 E0            [24] 3691 	push	acc
      000E5C 08               [12] 3692 	inc	r0
      000E5D E6               [12] 3693 	mov	a,@r0
      000E5E C0 E0            [24] 3694 	push	acc
      000E60 8D 82            [24] 3695 	mov	dpl,r5
      000E62 8E 83            [24] 3696 	mov	dph,r6
      000E64 8F F0            [24] 3697 	mov	b,r7
      000E66 78rF7            [12] 3698 	mov	r0,#_key_from_item
      000E68 79s01            [12] 3699 	mov	r1,#(_key_from_item >> 8)
      000E6A 7As00            [12] 3700 	mov	r2,#(_key_from_item >> 16)
      000E6C 12r00r00         [24] 3701 	lcall	__sdcc_banked_call
      000E6F AD 82            [24] 3702 	mov	r5,dpl
      000E71 AE 83            [24] 3703 	mov	r6,dph
      000E73 AF F0            [24] 3704 	mov	r7,b
      000E75 15 81            [12] 3705 	dec	sp
      000E77 15 81            [12] 3706 	dec	sp
      000E79 15 81            [12] 3707 	dec	sp
      000E7B 8D 02            [24] 3708 	mov	ar2,r5
      000E7D 8E 03            [24] 3709 	mov	ar3,r6
      000E7F 8F 04            [24] 3710 	mov	ar4,r7
                                   3711 ;	/opt/contiki/core/net/nbr-table.c:377: return key != NULL ? &key->lladdr : NULL;
      000E81 ED               [12] 3712 	mov	a,r5
      000E82 4E               [12] 3713 	orl	a,r6
      000E83 60 0B            [24] 3714 	jz	00103$
      000E85 74 03            [12] 3715 	mov	a,#0x03
      000E87 2A               [12] 3716 	add	a,r2
      000E88 FD               [12] 3717 	mov	r5,a
      000E89 E4               [12] 3718 	clr	a
      000E8A 3B               [12] 3719 	addc	a,r3
      000E8B FE               [12] 3720 	mov	r6,a
      000E8C 8C 07            [24] 3721 	mov	ar7,r4
      000E8E 80 06            [24] 3722 	sjmp	00104$
      000E90                       3723 00103$:
      000E90 7D 00            [12] 3724 	mov	r5,#0x00
      000E92 7E 00            [12] 3725 	mov	r6,#0x00
      000E94 7F 00            [12] 3726 	mov	r7,#0x00
      000E96                       3727 00104$:
      000E96 8D 82            [24] 3728 	mov	dpl,r5
      000E98 8E 83            [24] 3729 	mov	dph,r6
      000E9A 8F F0            [24] 3730 	mov	b,r7
      000E9C 02r00r00         [24] 3731 	ljmp	__sdcc_banked_ret
                                   3732 	.area CSEG    (CODE)
                                   3733 	.area CONST   (CODE)
                                   3734 	.area XINIT   (CODE)
      000000                       3735 __xinit__neighbor_addr_mem:
      000000 0B 00                 3736 	.byte #0x0B,#0x00	; 11
      000002 04 00                 3737 	.byte #0x04,#0x00	; 4
      000004r22s00 00              3738 	.byte _neighbor_addr_mem_memb_count, (_neighbor_addr_mem_memb_count >> 8),#0x00
      000007r26s00 00              3739 	.byte _neighbor_addr_mem_memb_mem, (_neighbor_addr_mem_memb_mem >> 8),#0x00
      00000A                       3740 __xinit__nbr_table_keys_list:
                                   3741 ; generic printIvalPtr
      00000A 00 00 00              3742 	.byte #0x00,#0x00,#0x00
      00000D                       3743 __xinit__nbr_table_keys:
      00000Dr0As00 00              3744 	.byte _nbr_table_keys_list, (_nbr_table_keys_list >> 8),#0x00
                                   3745 	.area CABS    (ABS,CODE)
