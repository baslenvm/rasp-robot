                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.5 #9380 (Linux)
                                      4 ; This file was generated Wed Nov 18 02:57:37 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module phase
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _nbr_table_remove
                                     13 	.globl _nbr_table_get_from_lladdr
                                     14 	.globl _nbr_table_add_lladdr
                                     15 	.globl _nbr_table_register
                                     16 	.globl _queuebuf_free
                                     17 	.globl _queuebuf_to_packetbuf
                                     18 	.globl _queuebuf_new_from_packetbuf
                                     19 	.globl _packetbuf_set_attr
                                     20 	.globl _ctimer_set
                                     21 	.globl _memb_free
                                     22 	.globl _memb_alloc
                                     23 	.globl _memb_init
                                     24 	.globl _timer_expired
                                     25 	.globl _timer_set
                                     26 	.globl _ACTIVE
                                     27 	.globl _TX_BYTE
                                     28 	.globl _RX_BYTE
                                     29 	.globl _ERR
                                     30 	.globl _FE
                                     31 	.globl _SLAVE
                                     32 	.globl _RE
                                     33 	.globl _MODE
                                     34 	.globl _T3OVFIF
                                     35 	.globl _T3CH0IF
                                     36 	.globl _T3CH1IF
                                     37 	.globl _T4OVFIF
                                     38 	.globl _T4CH0IF
                                     39 	.globl _T4CH1IF
                                     40 	.globl _OVFIM
                                     41 	.globl _B_0
                                     42 	.globl _B_1
                                     43 	.globl _B_2
                                     44 	.globl _B_3
                                     45 	.globl _B_4
                                     46 	.globl _B_5
                                     47 	.globl _B_6
                                     48 	.globl _B_7
                                     49 	.globl _P2IF
                                     50 	.globl _UTX0IF
                                     51 	.globl _UTX1IF
                                     52 	.globl _P1IF
                                     53 	.globl _WDTIF
                                     54 	.globl _ACC_0
                                     55 	.globl _ACC_1
                                     56 	.globl _ACC_2
                                     57 	.globl _ACC_3
                                     58 	.globl _ACC_4
                                     59 	.globl _ACC_5
                                     60 	.globl _ACC_6
                                     61 	.globl _ACC_7
                                     62 	.globl _P
                                     63 	.globl _F1
                                     64 	.globl _OV
                                     65 	.globl _RS0
                                     66 	.globl _RS1
                                     67 	.globl _F0
                                     68 	.globl _AC
                                     69 	.globl _CY
                                     70 	.globl _DMAIF
                                     71 	.globl _T1IF
                                     72 	.globl _T2IF
                                     73 	.globl _T3IF
                                     74 	.globl _T4IF
                                     75 	.globl _P0IF
                                     76 	.globl _STIF
                                     77 	.globl _DMAIE
                                     78 	.globl _T1IE
                                     79 	.globl _T2IE
                                     80 	.globl _T3IE
                                     81 	.globl _T4IE
                                     82 	.globl _P0IE
                                     83 	.globl _RFERRIE
                                     84 	.globl _ADCIE
                                     85 	.globl _URX0IE
                                     86 	.globl _URX1IE
                                     87 	.globl _ENCIE
                                     88 	.globl _STIE
                                     89 	.globl _EA
                                     90 	.globl _P2_0
                                     91 	.globl _P2_1
                                     92 	.globl _P2_2
                                     93 	.globl _P2_3
                                     94 	.globl _P2_4
                                     95 	.globl _P2_5
                                     96 	.globl _P2_6
                                     97 	.globl _P2_7
                                     98 	.globl _ENCIF_0
                                     99 	.globl _ENCIF_1
                                    100 	.globl _P1_0
                                    101 	.globl _P1_1
                                    102 	.globl _P1_2
                                    103 	.globl _P1_3
                                    104 	.globl _P1_4
                                    105 	.globl _P1_5
                                    106 	.globl _P1_6
                                    107 	.globl _P1_7
                                    108 	.globl _IT0
                                    109 	.globl _RFERRIF
                                    110 	.globl _IT1
                                    111 	.globl _URX0IF
                                    112 	.globl _ADCIF
                                    113 	.globl _URX1IF
                                    114 	.globl _P0_0
                                    115 	.globl _P0_1
                                    116 	.globl _P0_2
                                    117 	.globl _P0_3
                                    118 	.globl _P0_4
                                    119 	.globl _P0_5
                                    120 	.globl _P0_6
                                    121 	.globl _P0_7
                                    122 	.globl _WDCTL
                                    123 	.globl _U1GCR
                                    124 	.globl _U1UCR
                                    125 	.globl _U1BAUD
                                    126 	.globl _U1DBUF
                                    127 	.globl _U1CSR
                                    128 	.globl _U0GCR
                                    129 	.globl _U0UCR
                                    130 	.globl _U0BAUD
                                    131 	.globl _U0DBUF
                                    132 	.globl _U0CSR
                                    133 	.globl _TIMIF
                                    134 	.globl _T4CC1
                                    135 	.globl _T4CCTL1
                                    136 	.globl _T4CC0
                                    137 	.globl _T4CCTL0
                                    138 	.globl _T4CTL
                                    139 	.globl _T4CNT
                                    140 	.globl _T3CC1
                                    141 	.globl _T3CCTL1
                                    142 	.globl _T3CC0
                                    143 	.globl _T3CCTL0
                                    144 	.globl _T3CTL
                                    145 	.globl _T3CNT
                                    146 	.globl _T2MSEL
                                    147 	.globl _T2IRQM
                                    148 	.globl _T2MOVF2
                                    149 	.globl _T2MOVF1
                                    150 	.globl _T2MOVF0
                                    151 	.globl _T2M1
                                    152 	.globl _T2M0
                                    153 	.globl _T2IRQF
                                    154 	.globl _T2EVTCFG
                                    155 	.globl _T2CTRL
                                    156 	.globl _T1STAT
                                    157 	.globl _T1CCTL2
                                    158 	.globl _T1CCTL1
                                    159 	.globl _T1CCTL0
                                    160 	.globl _T1CTL
                                    161 	.globl _T1CNTH
                                    162 	.globl _T1CNTL
                                    163 	.globl _T1CC2H
                                    164 	.globl _T1CC2L
                                    165 	.globl _T1CC1H
                                    166 	.globl _T1CC1L
                                    167 	.globl _T1CC0H
                                    168 	.globl _T1CC0L
                                    169 	.globl _CLKCONSTA
                                    170 	.globl _CLKCONCMD
                                    171 	.globl _SLEEPSTA
                                    172 	.globl _SLEEPCMD
                                    173 	.globl _STLOAD
                                    174 	.globl _ST2
                                    175 	.globl _ST1
                                    176 	.globl _ST0
                                    177 	.globl _RFERRF
                                    178 	.globl _RFIRQF0
                                    179 	.globl _RFST
                                    180 	.globl _RFD
                                    181 	.globl _RFIRQF1
                                    182 	.globl _PSBANK
                                    183 	.globl _FMAP
                                    184 	.globl _MEMCTR
                                    185 	.globl __XPAGE
                                    186 	.globl _MPAGE
                                    187 	.globl _PMUX
                                    188 	.globl _P2DIR
                                    189 	.globl _P1DIR
                                    190 	.globl _P0DIR
                                    191 	.globl _P2INP
                                    192 	.globl _P1INP
                                    193 	.globl _P2SEL
                                    194 	.globl _P1SEL
                                    195 	.globl _P0SEL
                                    196 	.globl _APCFG
                                    197 	.globl _PERCFG
                                    198 	.globl _P0INP
                                    199 	.globl _P2IEN
                                    200 	.globl _P1IEN
                                    201 	.globl _P0IEN
                                    202 	.globl _PICTL
                                    203 	.globl _P2IFG
                                    204 	.globl _P1IFG
                                    205 	.globl _P0IFG
                                    206 	.globl _DMAREQ
                                    207 	.globl _DMAARM
                                    208 	.globl _DMA0CFGH
                                    209 	.globl _DMA0CFGL
                                    210 	.globl _DMA1CFGH
                                    211 	.globl _DMA1CFGL
                                    212 	.globl _DMAIRQ
                                    213 	.globl _ENCCS
                                    214 	.globl _ENCDO
                                    215 	.globl _ENCDI
                                    216 	.globl _RNDH
                                    217 	.globl _RNDL
                                    218 	.globl _ADCH
                                    219 	.globl _ADCL
                                    220 	.globl _ADCCON3
                                    221 	.globl _ADCCON2
                                    222 	.globl _ADCCON1
                                    223 	.globl _B
                                    224 	.globl _IRCON2
                                    225 	.globl _ACC
                                    226 	.globl _PSW
                                    227 	.globl _IRCON
                                    228 	.globl _IP1
                                    229 	.globl _IEN1
                                    230 	.globl _IP0
                                    231 	.globl _IEN0
                                    232 	.globl _P2
                                    233 	.globl _S1CON
                                    234 	.globl _IEN2
                                    235 	.globl _S0CON
                                    236 	.globl _DPS
                                    237 	.globl _P1
                                    238 	.globl _TCON
                                    239 	.globl _PCON
                                    240 	.globl _DPH1
                                    241 	.globl _DPL1
                                    242 	.globl _DPH0
                                    243 	.globl _DPL0
                                    244 	.globl _SP
                                    245 	.globl _P0
                                    246 	.globl _X_IEEE_ADDR
                                    247 	.globl _X_INFOPAGE
                                    248 	.globl _X_P2DIR
                                    249 	.globl _X_P1DIR
                                    250 	.globl _X_P0DIR
                                    251 	.globl _X_U1GCR
                                    252 	.globl _X_U1UCR
                                    253 	.globl _X_U1BAUD
                                    254 	.globl _X_U1DBUF
                                    255 	.globl _X_U1CSR
                                    256 	.globl _X_P2INP
                                    257 	.globl _X_P1INP
                                    258 	.globl _X_P2SEL
                                    259 	.globl _X_P1SEL
                                    260 	.globl _X_P0SEL
                                    261 	.globl _X_APCFG
                                    262 	.globl _X_PERCFG
                                    263 	.globl _X_T4CC1
                                    264 	.globl _X_T4CCTL1
                                    265 	.globl _X_T4CC0
                                    266 	.globl _X_T4CCTL0
                                    267 	.globl _X_T4CTL
                                    268 	.globl _X_T4CNT
                                    269 	.globl _X_RFIRQF0
                                    270 	.globl _X_T1CCTL2
                                    271 	.globl _X_T1CCTL1
                                    272 	.globl _X_T1CCTL0
                                    273 	.globl _X_T1CTL
                                    274 	.globl _X_T1CNTH
                                    275 	.globl _X_T1CNTL
                                    276 	.globl _X_RFST
                                    277 	.globl _X_T1CC2H
                                    278 	.globl _X_T1CC2L
                                    279 	.globl _X_T1CC1H
                                    280 	.globl _X_T1CC1L
                                    281 	.globl _X_T1CC0H
                                    282 	.globl _X_T1CC0L
                                    283 	.globl _X_RFD
                                    284 	.globl _X_TIMIF
                                    285 	.globl _X_DMAREQ
                                    286 	.globl _X_DMAARM
                                    287 	.globl _X_DMA0CFGH
                                    288 	.globl _X_DMA0CFGL
                                    289 	.globl _X_DMA1CFGH
                                    290 	.globl _X_DMA1CFGL
                                    291 	.globl _X_DMAIRQ
                                    292 	.globl _X_T3CC1
                                    293 	.globl _X_T3CCTL1
                                    294 	.globl _X_T3CC0
                                    295 	.globl _X_T3CCTL0
                                    296 	.globl _X_T3CTL
                                    297 	.globl _X_T3CNT
                                    298 	.globl _X_WDCTL
                                    299 	.globl _X_MEMCTR
                                    300 	.globl _X_CLKCONCMD
                                    301 	.globl _X_U0GCR
                                    302 	.globl _X_U0UCR
                                    303 	.globl _X_T2MSEL
                                    304 	.globl _X_U0BAUD
                                    305 	.globl _X_U0DBUF
                                    306 	.globl _X_RFERRF
                                    307 	.globl _X_SLEEPCMD
                                    308 	.globl _X_RNDH
                                    309 	.globl _X_RNDL
                                    310 	.globl _X_ADCH
                                    311 	.globl _X_ADCL
                                    312 	.globl _X_ADCCON3
                                    313 	.globl _X_ADCCON2
                                    314 	.globl _X_ADCCON1
                                    315 	.globl _X_ENCCS
                                    316 	.globl _X_ENCDO
                                    317 	.globl _X_ENCDI
                                    318 	.globl _X_T1STAT
                                    319 	.globl _X_PMUX
                                    320 	.globl _X_STLOAD
                                    321 	.globl _X_P2IEN
                                    322 	.globl _X_P0IEN
                                    323 	.globl _X_T2IRQM
                                    324 	.globl _X_T2MOVF2
                                    325 	.globl _X_T2MOVF1
                                    326 	.globl _X_T2MOVF0
                                    327 	.globl _X_T2M1
                                    328 	.globl _X_T2M0
                                    329 	.globl _X_T2IRQF
                                    330 	.globl _X_P2
                                    331 	.globl _X_PSBANK
                                    332 	.globl _X_FMAP
                                    333 	.globl _X_CLKCONSTA
                                    334 	.globl _X_SLEEPSTA
                                    335 	.globl _X_T2EVTCFG
                                    336 	.globl _X_ST2
                                    337 	.globl _X_ST1
                                    338 	.globl _X_ST0
                                    339 	.globl _X_T2CTRL
                                    340 	.globl _X__XPAGE
                                    341 	.globl _X_MPAGE
                                    342 	.globl _X_RFIRQF1
                                    343 	.globl _X_P1
                                    344 	.globl _X_P0INP
                                    345 	.globl _X_P1IEN
                                    346 	.globl _X_PICTL
                                    347 	.globl _X_P2IFG
                                    348 	.globl _X_P1IFG
                                    349 	.globl _X_P0IFG
                                    350 	.globl _X_U0CSR
                                    351 	.globl _X_P0
                                    352 	.globl _USBF5
                                    353 	.globl _USBF4
                                    354 	.globl _USBF3
                                    355 	.globl _USBF2
                                    356 	.globl _USBF1
                                    357 	.globl _USBF0
                                    358 	.globl _USBCNTH
                                    359 	.globl _USBCNTL
                                    360 	.globl _USBCNT0
                                    361 	.globl _USBCSOH
                                    362 	.globl _USBCSOL
                                    363 	.globl _USBMAXO
                                    364 	.globl _USBCSIH
                                    365 	.globl _USBCSIL
                                    366 	.globl _USBCS0
                                    367 	.globl _USBMAXI
                                    368 	.globl _USBCTRL
                                    369 	.globl _USBINDEX
                                    370 	.globl _USBFRMH
                                    371 	.globl _USBFRML
                                    372 	.globl _USBCIE
                                    373 	.globl _USBOIE
                                    374 	.globl _USBIIE
                                    375 	.globl _USBCIF
                                    376 	.globl _USBOIF
                                    377 	.globl _USBIIF
                                    378 	.globl _USBPOW
                                    379 	.globl _USBADDR
                                    380 	.globl _CSPT
                                    381 	.globl _CSPZ
                                    382 	.globl _CSPY
                                    383 	.globl _CSPX
                                    384 	.globl _CSPSTAT
                                    385 	.globl _CSPCTRL
                                    386 	.globl _CSPPROG23
                                    387 	.globl _CSPPROG22
                                    388 	.globl _CSPPROG21
                                    389 	.globl _CSPPROG20
                                    390 	.globl _CSPPROG19
                                    391 	.globl _CSPPROG18
                                    392 	.globl _CSPPROG17
                                    393 	.globl _CSPPROG16
                                    394 	.globl _CSPPROG15
                                    395 	.globl _CSPPROG14
                                    396 	.globl _CSPPROG13
                                    397 	.globl _CSPPROG12
                                    398 	.globl _CSPPROG11
                                    399 	.globl _CSPPROG10
                                    400 	.globl _CSPPROG9
                                    401 	.globl _CSPPROG8
                                    402 	.globl _CSPPROG7
                                    403 	.globl _CSPPROG6
                                    404 	.globl _CSPPROG5
                                    405 	.globl _CSPPROG4
                                    406 	.globl _CSPPROG3
                                    407 	.globl _CSPPROG2
                                    408 	.globl _CSPPROG1
                                    409 	.globl _CSPPROG0
                                    410 	.globl _RFC_OBS_CTRL2
                                    411 	.globl _RFC_OBS_CTRL1
                                    412 	.globl _RFC_OBS_CTRL0
                                    413 	.globl _TXFILTCFG
                                    414 	.globl _PTEST1
                                    415 	.globl _PTEST0
                                    416 	.globl _ATEST
                                    417 	.globl _DACTEST2
                                    418 	.globl _DACTEST1
                                    419 	.globl _DACTEST0
                                    420 	.globl _MDMTEST1
                                    421 	.globl _MDMTEST0
                                    422 	.globl _ADCTEST2
                                    423 	.globl _ADCTEST1
                                    424 	.globl _ADCTEST0
                                    425 	.globl _AGCCTRL3
                                    426 	.globl _AGCCTRL2
                                    427 	.globl _AGCCTRL1
                                    428 	.globl _AGCCTRL0
                                    429 	.globl _FSCAL3
                                    430 	.globl _FSCAL2
                                    431 	.globl _FSCAL1
                                    432 	.globl _FSCAL0
                                    433 	.globl _FSCTRL
                                    434 	.globl _RXCTRL
                                    435 	.globl _FREQEST
                                    436 	.globl _MDMCTRL1
                                    437 	.globl _MDMCTRL0
                                    438 	.globl _RFRND
                                    439 	.globl _RFERRM
                                    440 	.globl _RFIRQM1
                                    441 	.globl _RFIRQM0
                                    442 	.globl _TXLAST_PTR
                                    443 	.globl _TXFIRST_PTR
                                    444 	.globl _RXP1_PTR
                                    445 	.globl _RXLAST_PTR
                                    446 	.globl _RXFIRST_PTR
                                    447 	.globl _TXFIFOCNT
                                    448 	.globl _RXFIFOCNT
                                    449 	.globl _RXFIRST
                                    450 	.globl _RSSISTAT
                                    451 	.globl _RSSI
                                    452 	.globl _CCACTRL1
                                    453 	.globl _CCACTRL0
                                    454 	.globl _FSMCTRL
                                    455 	.globl _FIFOPCTRL
                                    456 	.globl _FSMSTAT1
                                    457 	.globl _FSMSTAT0
                                    458 	.globl _TXCTRL
                                    459 	.globl _TXPOWER
                                    460 	.globl _FREQCTRL
                                    461 	.globl _FREQTUNE
                                    462 	.globl _RXMASKCLR
                                    463 	.globl _RXMASKSET
                                    464 	.globl _RXENABLE
                                    465 	.globl _FRMCTRL1
                                    466 	.globl _FRMCTRL0
                                    467 	.globl _SRCEXTEN2
                                    468 	.globl _SRCEXTEN1
                                    469 	.globl _SRCEXTEN0
                                    470 	.globl _SRCSHORTEN2
                                    471 	.globl _SRCSHORTEN1
                                    472 	.globl _SRCSHORTEN0
                                    473 	.globl _SRCMATCH
                                    474 	.globl _FRMFILT1
                                    475 	.globl _FRMFILT0
                                    476 	.globl _SHORT_ADDR1
                                    477 	.globl _SHORT_ADDR0
                                    478 	.globl _PAN_ID1
                                    479 	.globl _PAN_ID0
                                    480 	.globl _EXT_ADDR7
                                    481 	.globl _EXT_ADDR6
                                    482 	.globl _EXT_ADDR5
                                    483 	.globl _EXT_ADDR4
                                    484 	.globl _EXT_ADDR3
                                    485 	.globl _EXT_ADDR2
                                    486 	.globl _EXT_ADDR1
                                    487 	.globl _EXT_ADDR0
                                    488 	.globl _SRCSHORTPENDEN2
                                    489 	.globl _SRCSHORTPENDEN1
                                    490 	.globl _SRCSHORTPENDEN0
                                    491 	.globl _SRCEXTPENDEN2
                                    492 	.globl _SRCEXTPENDEN1
                                    493 	.globl _SRCEXTPENDEN0
                                    494 	.globl _SRCRESINDEX
                                    495 	.globl _SRCRESMASK2
                                    496 	.globl _SRCRESMASK1
                                    497 	.globl _SRCRESMASK0
                                    498 	.globl _SRC_ADDR_TABLE
                                    499 	.globl _TXFIFO
                                    500 	.globl _RXFIFO
                                    501 	.globl _RFCORE_RAM
                                    502 	.globl _CMPCTL
                                    503 	.globl _OPAMPS
                                    504 	.globl _OPAMPC
                                    505 	.globl _STCV2
                                    506 	.globl _STCV1
                                    507 	.globl _STCV0
                                    508 	.globl _STCS
                                    509 	.globl _STCC
                                    510 	.globl _T1CC4H
                                    511 	.globl _T1CC4L
                                    512 	.globl _T1CC3H
                                    513 	.globl _T1CC3L
                                    514 	.globl _XX_T1CC2H
                                    515 	.globl _XX_T1CC2L
                                    516 	.globl _XX_T1CC1H
                                    517 	.globl _XX_T1CC1L
                                    518 	.globl _XX_T1CC0H
                                    519 	.globl _XX_T1CC0L
                                    520 	.globl _T1CCTL4
                                    521 	.globl _T1CCTL3
                                    522 	.globl _XX_T1CCTL2
                                    523 	.globl _XX_T1CCTL1
                                    524 	.globl _XX_T1CCTL0
                                    525 	.globl _CLD
                                    526 	.globl _IRCTL
                                    527 	.globl _CHIPINFO1
                                    528 	.globl _CHIPINFO0
                                    529 	.globl _FWDATA
                                    530 	.globl _FADDRH
                                    531 	.globl _FADDRL
                                    532 	.globl _FCTL
                                    533 	.globl _IVCTRL
                                    534 	.globl _BATTMON
                                    535 	.globl _SRCRC
                                    536 	.globl _DBGDATA
                                    537 	.globl _TESTREG0
                                    538 	.globl _CHIPID
                                    539 	.globl _CHVER
                                    540 	.globl _OBSSEL5
                                    541 	.globl _OBSSEL4
                                    542 	.globl _OBSSEL3
                                    543 	.globl _OBSSEL2
                                    544 	.globl _OBSSEL1
                                    545 	.globl _OBSSEL0
                                    546 	.globl _I2CIO
                                    547 	.globl _I2CWC
                                    548 	.globl _I2CADDR
                                    549 	.globl _I2CDATA
                                    550 	.globl _I2CSTAT
                                    551 	.globl _I2CCFG
                                    552 	.globl _OPAMPMC
                                    553 	.globl _MONMUX
                                    554 	.globl _phase_update
                                    555 	.globl _phase_wait
                                    556 	.globl _phase_init
                                    557 ;--------------------------------------------------------
                                    558 ; special function registers
                                    559 ;--------------------------------------------------------
                                    560 	.area RSEG    (ABS,DATA)
      000000                        561 	.org 0x0000
                           000080   562 _P0	=	0x0080
                           000081   563 _SP	=	0x0081
                           000082   564 _DPL0	=	0x0082
                           000083   565 _DPH0	=	0x0083
                           000084   566 _DPL1	=	0x0084
                           000085   567 _DPH1	=	0x0085
                           000087   568 _PCON	=	0x0087
                           000088   569 _TCON	=	0x0088
                           000090   570 _P1	=	0x0090
                           000092   571 _DPS	=	0x0092
                           000098   572 _S0CON	=	0x0098
                           00009A   573 _IEN2	=	0x009a
                           00009B   574 _S1CON	=	0x009b
                           0000A0   575 _P2	=	0x00a0
                           0000A8   576 _IEN0	=	0x00a8
                           0000A9   577 _IP0	=	0x00a9
                           0000B8   578 _IEN1	=	0x00b8
                           0000B9   579 _IP1	=	0x00b9
                           0000C0   580 _IRCON	=	0x00c0
                           0000D0   581 _PSW	=	0x00d0
                           0000E0   582 _ACC	=	0x00e0
                           0000E8   583 _IRCON2	=	0x00e8
                           0000F0   584 _B	=	0x00f0
                           0000B4   585 _ADCCON1	=	0x00b4
                           0000B5   586 _ADCCON2	=	0x00b5
                           0000B6   587 _ADCCON3	=	0x00b6
                           0000BA   588 _ADCL	=	0x00ba
                           0000BB   589 _ADCH	=	0x00bb
                           0000BC   590 _RNDL	=	0x00bc
                           0000BD   591 _RNDH	=	0x00bd
                           0000B1   592 _ENCDI	=	0x00b1
                           0000B2   593 _ENCDO	=	0x00b2
                           0000B3   594 _ENCCS	=	0x00b3
                           0000D1   595 _DMAIRQ	=	0x00d1
                           0000D2   596 _DMA1CFGL	=	0x00d2
                           0000D3   597 _DMA1CFGH	=	0x00d3
                           0000D4   598 _DMA0CFGL	=	0x00d4
                           0000D5   599 _DMA0CFGH	=	0x00d5
                           0000D6   600 _DMAARM	=	0x00d6
                           0000D7   601 _DMAREQ	=	0x00d7
                           000089   602 _P0IFG	=	0x0089
                           00008A   603 _P1IFG	=	0x008a
                           00008B   604 _P2IFG	=	0x008b
                           00008C   605 _PICTL	=	0x008c
                           0000AB   606 _P0IEN	=	0x00ab
                           00008D   607 _P1IEN	=	0x008d
                           0000AC   608 _P2IEN	=	0x00ac
                           00008F   609 _P0INP	=	0x008f
                           0000F1   610 _PERCFG	=	0x00f1
                           0000F2   611 _APCFG	=	0x00f2
                           0000F3   612 _P0SEL	=	0x00f3
                           0000F4   613 _P1SEL	=	0x00f4
                           0000F5   614 _P2SEL	=	0x00f5
                           0000F6   615 _P1INP	=	0x00f6
                           0000F7   616 _P2INP	=	0x00f7
                           0000FD   617 _P0DIR	=	0x00fd
                           0000FE   618 _P1DIR	=	0x00fe
                           0000FF   619 _P2DIR	=	0x00ff
                           0000AE   620 _PMUX	=	0x00ae
                           000093   621 _MPAGE	=	0x0093
                           000093   622 __XPAGE	=	0x0093
                           0000C7   623 _MEMCTR	=	0x00c7
                           00009F   624 _FMAP	=	0x009f
                           00009F   625 _PSBANK	=	0x009f
                           000091   626 _RFIRQF1	=	0x0091
                           0000D9   627 _RFD	=	0x00d9
                           0000E1   628 _RFST	=	0x00e1
                           0000E9   629 _RFIRQF0	=	0x00e9
                           0000BF   630 _RFERRF	=	0x00bf
                           000095   631 _ST0	=	0x0095
                           000096   632 _ST1	=	0x0096
                           000097   633 _ST2	=	0x0097
                           0000AD   634 _STLOAD	=	0x00ad
                           0000BE   635 _SLEEPCMD	=	0x00be
                           00009D   636 _SLEEPSTA	=	0x009d
                           0000C6   637 _CLKCONCMD	=	0x00c6
                           00009E   638 _CLKCONSTA	=	0x009e
                           0000DA   639 _T1CC0L	=	0x00da
                           0000DB   640 _T1CC0H	=	0x00db
                           0000DC   641 _T1CC1L	=	0x00dc
                           0000DD   642 _T1CC1H	=	0x00dd
                           0000DE   643 _T1CC2L	=	0x00de
                           0000DF   644 _T1CC2H	=	0x00df
                           0000E2   645 _T1CNTL	=	0x00e2
                           0000E3   646 _T1CNTH	=	0x00e3
                           0000E4   647 _T1CTL	=	0x00e4
                           0000E5   648 _T1CCTL0	=	0x00e5
                           0000E6   649 _T1CCTL1	=	0x00e6
                           0000E7   650 _T1CCTL2	=	0x00e7
                           0000AF   651 _T1STAT	=	0x00af
                           000094   652 _T2CTRL	=	0x0094
                           00009C   653 _T2EVTCFG	=	0x009c
                           0000A1   654 _T2IRQF	=	0x00a1
                           0000A2   655 _T2M0	=	0x00a2
                           0000A3   656 _T2M1	=	0x00a3
                           0000A4   657 _T2MOVF0	=	0x00a4
                           0000A5   658 _T2MOVF1	=	0x00a5
                           0000A6   659 _T2MOVF2	=	0x00a6
                           0000A7   660 _T2IRQM	=	0x00a7
                           0000C3   661 _T2MSEL	=	0x00c3
                           0000CA   662 _T3CNT	=	0x00ca
                           0000CB   663 _T3CTL	=	0x00cb
                           0000CC   664 _T3CCTL0	=	0x00cc
                           0000CD   665 _T3CC0	=	0x00cd
                           0000CE   666 _T3CCTL1	=	0x00ce
                           0000CF   667 _T3CC1	=	0x00cf
                           0000EA   668 _T4CNT	=	0x00ea
                           0000EB   669 _T4CTL	=	0x00eb
                           0000EC   670 _T4CCTL0	=	0x00ec
                           0000ED   671 _T4CC0	=	0x00ed
                           0000EE   672 _T4CCTL1	=	0x00ee
                           0000EF   673 _T4CC1	=	0x00ef
                           0000D8   674 _TIMIF	=	0x00d8
                           000086   675 _U0CSR	=	0x0086
                           0000C1   676 _U0DBUF	=	0x00c1
                           0000C2   677 _U0BAUD	=	0x00c2
                           0000C4   678 _U0UCR	=	0x00c4
                           0000C5   679 _U0GCR	=	0x00c5
                           0000F8   680 _U1CSR	=	0x00f8
                           0000F9   681 _U1DBUF	=	0x00f9
                           0000FA   682 _U1BAUD	=	0x00fa
                           0000FB   683 _U1UCR	=	0x00fb
                           0000FC   684 _U1GCR	=	0x00fc
                           0000C9   685 _WDCTL	=	0x00c9
                                    686 ;--------------------------------------------------------
                                    687 ; special function bits
                                    688 ;--------------------------------------------------------
                                    689 	.area RSEG    (ABS,DATA)
      000000                        690 	.org 0x0000
                           000087   691 _P0_7	=	0x0087
                           000086   692 _P0_6	=	0x0086
                           000085   693 _P0_5	=	0x0085
                           000084   694 _P0_4	=	0x0084
                           000083   695 _P0_3	=	0x0083
                           000082   696 _P0_2	=	0x0082
                           000081   697 _P0_1	=	0x0081
                           000080   698 _P0_0	=	0x0080
                           00008F   699 _URX1IF	=	0x008f
                           00008D   700 _ADCIF	=	0x008d
                           00008B   701 _URX0IF	=	0x008b
                           00008A   702 _IT1	=	0x008a
                           000089   703 _RFERRIF	=	0x0089
                           000088   704 _IT0	=	0x0088
                           000097   705 _P1_7	=	0x0097
                           000096   706 _P1_6	=	0x0096
                           000095   707 _P1_5	=	0x0095
                           000094   708 _P1_4	=	0x0094
                           000093   709 _P1_3	=	0x0093
                           000092   710 _P1_2	=	0x0092
                           000091   711 _P1_1	=	0x0091
                           000090   712 _P1_0	=	0x0090
                           000099   713 _ENCIF_1	=	0x0099
                           000098   714 _ENCIF_0	=	0x0098
                           0000A7   715 _P2_7	=	0x00a7
                           0000A6   716 _P2_6	=	0x00a6
                           0000A5   717 _P2_5	=	0x00a5
                           0000A4   718 _P2_4	=	0x00a4
                           0000A3   719 _P2_3	=	0x00a3
                           0000A2   720 _P2_2	=	0x00a2
                           0000A1   721 _P2_1	=	0x00a1
                           0000A0   722 _P2_0	=	0x00a0
                           0000AF   723 _EA	=	0x00af
                           0000AD   724 _STIE	=	0x00ad
                           0000AC   725 _ENCIE	=	0x00ac
                           0000AB   726 _URX1IE	=	0x00ab
                           0000AA   727 _URX0IE	=	0x00aa
                           0000A9   728 _ADCIE	=	0x00a9
                           0000A8   729 _RFERRIE	=	0x00a8
                           0000BD   730 _P0IE	=	0x00bd
                           0000BC   731 _T4IE	=	0x00bc
                           0000BB   732 _T3IE	=	0x00bb
                           0000BA   733 _T2IE	=	0x00ba
                           0000B9   734 _T1IE	=	0x00b9
                           0000B8   735 _DMAIE	=	0x00b8
                           0000C7   736 _STIF	=	0x00c7
                           0000C5   737 _P0IF	=	0x00c5
                           0000C4   738 _T4IF	=	0x00c4
                           0000C3   739 _T3IF	=	0x00c3
                           0000C2   740 _T2IF	=	0x00c2
                           0000C1   741 _T1IF	=	0x00c1
                           0000C0   742 _DMAIF	=	0x00c0
                           0000D7   743 _CY	=	0x00d7
                           0000D6   744 _AC	=	0x00d6
                           0000D5   745 _F0	=	0x00d5
                           0000D4   746 _RS1	=	0x00d4
                           0000D3   747 _RS0	=	0x00d3
                           0000D2   748 _OV	=	0x00d2
                           0000D1   749 _F1	=	0x00d1
                           0000D0   750 _P	=	0x00d0
                           0000E7   751 _ACC_7	=	0x00e7
                           0000E6   752 _ACC_6	=	0x00e6
                           0000E5   753 _ACC_5	=	0x00e5
                           0000E4   754 _ACC_4	=	0x00e4
                           0000E3   755 _ACC_3	=	0x00e3
                           0000E2   756 _ACC_2	=	0x00e2
                           0000E1   757 _ACC_1	=	0x00e1
                           0000E0   758 _ACC_0	=	0x00e0
                           0000EC   759 _WDTIF	=	0x00ec
                           0000EB   760 _P1IF	=	0x00eb
                           0000EA   761 _UTX1IF	=	0x00ea
                           0000E9   762 _UTX0IF	=	0x00e9
                           0000E8   763 _P2IF	=	0x00e8
                           0000F7   764 _B_7	=	0x00f7
                           0000F6   765 _B_6	=	0x00f6
                           0000F5   766 _B_5	=	0x00f5
                           0000F4   767 _B_4	=	0x00f4
                           0000F3   768 _B_3	=	0x00f3
                           0000F2   769 _B_2	=	0x00f2
                           0000F1   770 _B_1	=	0x00f1
                           0000F0   771 _B_0	=	0x00f0
                           0000DE   772 _OVFIM	=	0x00de
                           0000DD   773 _T4CH1IF	=	0x00dd
                           0000DC   774 _T4CH0IF	=	0x00dc
                           0000DB   775 _T4OVFIF	=	0x00db
                           0000DA   776 _T3CH1IF	=	0x00da
                           0000D9   777 _T3CH0IF	=	0x00d9
                           0000D8   778 _T3OVFIF	=	0x00d8
                           0000FF   779 _MODE	=	0x00ff
                           0000FE   780 _RE	=	0x00fe
                           0000FD   781 _SLAVE	=	0x00fd
                           0000FC   782 _FE	=	0x00fc
                           0000FB   783 _ERR	=	0x00fb
                           0000FA   784 _RX_BYTE	=	0x00fa
                           0000F9   785 _TX_BYTE	=	0x00f9
                           0000F8   786 _ACTIVE	=	0x00f8
                                    787 ;--------------------------------------------------------
                                    788 ; overlayable register banks
                                    789 ;--------------------------------------------------------
                                    790 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        791 	.ds 8
                                    792 ;--------------------------------------------------------
                                    793 ; internal ram data
                                    794 ;--------------------------------------------------------
                                    795 	.area DSEG    (DATA)
                                    796 ;--------------------------------------------------------
                                    797 ; overlayable items in internal ram 
                                    798 ;--------------------------------------------------------
                                    799 ;--------------------------------------------------------
                                    800 ; indirectly addressable internal ram data
                                    801 ;--------------------------------------------------------
                                    802 	.area ISEG    (DATA)
                                    803 ;--------------------------------------------------------
                                    804 ; absolute internal ram data
                                    805 ;--------------------------------------------------------
                                    806 	.area IABS    (ABS,DATA)
                                    807 	.area IABS    (ABS,DATA)
                                    808 ;--------------------------------------------------------
                                    809 ; bit data
                                    810 ;--------------------------------------------------------
                                    811 	.area BSEG    (BIT)
                                    812 ;--------------------------------------------------------
                                    813 ; paged external ram data
                                    814 ;--------------------------------------------------------
                                    815 	.area PSEG    (PAG,XDATA)
                                    816 ;--------------------------------------------------------
                                    817 ; external ram data
                                    818 ;--------------------------------------------------------
                                    819 	.area XSEG    (XDATA)
                           0061A6   820 _MONMUX	=	0x61a6
                           0061A6   821 _OPAMPMC	=	0x61a6
                           006230   822 _I2CCFG	=	0x6230
                           006231   823 _I2CSTAT	=	0x6231
                           006232   824 _I2CDATA	=	0x6232
                           006233   825 _I2CADDR	=	0x6233
                           006234   826 _I2CWC	=	0x6234
                           006235   827 _I2CIO	=	0x6235
                           006243   828 _OBSSEL0	=	0x6243
                           006244   829 _OBSSEL1	=	0x6244
                           006245   830 _OBSSEL2	=	0x6245
                           006246   831 _OBSSEL3	=	0x6246
                           006247   832 _OBSSEL4	=	0x6247
                           006248   833 _OBSSEL5	=	0x6248
                           006249   834 _CHVER	=	0x6249
                           00624A   835 _CHIPID	=	0x624a
                           00624B   836 _TESTREG0	=	0x624b
                           006260   837 _DBGDATA	=	0x6260
                           006262   838 _SRCRC	=	0x6262
                           006264   839 _BATTMON	=	0x6264
                           006265   840 _IVCTRL	=	0x6265
                           006270   841 _FCTL	=	0x6270
                           006271   842 _FADDRL	=	0x6271
                           006272   843 _FADDRH	=	0x6272
                           006273   844 _FWDATA	=	0x6273
                           006276   845 _CHIPINFO0	=	0x6276
                           006277   846 _CHIPINFO1	=	0x6277
                           006281   847 _IRCTL	=	0x6281
                           006290   848 _CLD	=	0x6290
                           0062A0   849 _XX_T1CCTL0	=	0x62a0
                           0062A1   850 _XX_T1CCTL1	=	0x62a1
                           0062A2   851 _XX_T1CCTL2	=	0x62a2
                           0062A3   852 _T1CCTL3	=	0x62a3
                           0062A4   853 _T1CCTL4	=	0x62a4
                           0062A6   854 _XX_T1CC0L	=	0x62a6
                           0062A7   855 _XX_T1CC0H	=	0x62a7
                           0062A8   856 _XX_T1CC1L	=	0x62a8
                           0062A9   857 _XX_T1CC1H	=	0x62a9
                           0062AA   858 _XX_T1CC2L	=	0x62aa
                           0062AB   859 _XX_T1CC2H	=	0x62ab
                           0062AC   860 _T1CC3L	=	0x62ac
                           0062AD   861 _T1CC3H	=	0x62ad
                           0062AE   862 _T1CC4L	=	0x62ae
                           0062AF   863 _T1CC4H	=	0x62af
                           0062B0   864 _STCC	=	0x62b0
                           0062B1   865 _STCS	=	0x62b1
                           0062B2   866 _STCV0	=	0x62b2
                           0062B3   867 _STCV1	=	0x62b3
                           0062B4   868 _STCV2	=	0x62b4
                           0062C0   869 _OPAMPC	=	0x62c0
                           0062C1   870 _OPAMPS	=	0x62c1
                           0062D0   871 _CMPCTL	=	0x62d0
                           006000   872 _RFCORE_RAM	=	0x6000
                           006000   873 _RXFIFO	=	0x6000
                           006080   874 _TXFIFO	=	0x6080
                           006100   875 _SRC_ADDR_TABLE	=	0x6100
                           006160   876 _SRCRESMASK0	=	0x6160
                           006161   877 _SRCRESMASK1	=	0x6161
                           006162   878 _SRCRESMASK2	=	0x6162
                           006163   879 _SRCRESINDEX	=	0x6163
                           006164   880 _SRCEXTPENDEN0	=	0x6164
                           006165   881 _SRCEXTPENDEN1	=	0x6165
                           006166   882 _SRCEXTPENDEN2	=	0x6166
                           006167   883 _SRCSHORTPENDEN0	=	0x6167
                           006168   884 _SRCSHORTPENDEN1	=	0x6168
                           006169   885 _SRCSHORTPENDEN2	=	0x6169
                           00616A   886 _EXT_ADDR0	=	0x616a
                           00616B   887 _EXT_ADDR1	=	0x616b
                           00616C   888 _EXT_ADDR2	=	0x616c
                           00616D   889 _EXT_ADDR3	=	0x616d
                           00616E   890 _EXT_ADDR4	=	0x616e
                           00616F   891 _EXT_ADDR5	=	0x616f
                           006170   892 _EXT_ADDR6	=	0x6170
                           006171   893 _EXT_ADDR7	=	0x6171
                           006172   894 _PAN_ID0	=	0x6172
                           006173   895 _PAN_ID1	=	0x6173
                           006174   896 _SHORT_ADDR0	=	0x6174
                           006175   897 _SHORT_ADDR1	=	0x6175
                           006180   898 _FRMFILT0	=	0x6180
                           006181   899 _FRMFILT1	=	0x6181
                           006182   900 _SRCMATCH	=	0x6182
                           006183   901 _SRCSHORTEN0	=	0x6183
                           006184   902 _SRCSHORTEN1	=	0x6184
                           006185   903 _SRCSHORTEN2	=	0x6185
                           006186   904 _SRCEXTEN0	=	0x6186
                           006187   905 _SRCEXTEN1	=	0x6187
                           006188   906 _SRCEXTEN2	=	0x6188
                           006189   907 _FRMCTRL0	=	0x6189
                           00618A   908 _FRMCTRL1	=	0x618a
                           00618B   909 _RXENABLE	=	0x618b
                           00618C   910 _RXMASKSET	=	0x618c
                           00618D   911 _RXMASKCLR	=	0x618d
                           00618E   912 _FREQTUNE	=	0x618e
                           00618F   913 _FREQCTRL	=	0x618f
                           006190   914 _TXPOWER	=	0x6190
                           006191   915 _TXCTRL	=	0x6191
                           006192   916 _FSMSTAT0	=	0x6192
                           006193   917 _FSMSTAT1	=	0x6193
                           006194   918 _FIFOPCTRL	=	0x6194
                           006195   919 _FSMCTRL	=	0x6195
                           006196   920 _CCACTRL0	=	0x6196
                           006197   921 _CCACTRL1	=	0x6197
                           006198   922 _RSSI	=	0x6198
                           006199   923 _RSSISTAT	=	0x6199
                           00619A   924 _RXFIRST	=	0x619a
                           00619B   925 _RXFIFOCNT	=	0x619b
                           00619C   926 _TXFIFOCNT	=	0x619c
                           00619D   927 _RXFIRST_PTR	=	0x619d
                           00619E   928 _RXLAST_PTR	=	0x619e
                           00619F   929 _RXP1_PTR	=	0x619f
                           0061A1   930 _TXFIRST_PTR	=	0x61a1
                           0061A2   931 _TXLAST_PTR	=	0x61a2
                           0061A3   932 _RFIRQM0	=	0x61a3
                           0061A4   933 _RFIRQM1	=	0x61a4
                           0061A5   934 _RFERRM	=	0x61a5
                           0061A7   935 _RFRND	=	0x61a7
                           0061A8   936 _MDMCTRL0	=	0x61a8
                           0061A9   937 _MDMCTRL1	=	0x61a9
                           0061AA   938 _FREQEST	=	0x61aa
                           0061AB   939 _RXCTRL	=	0x61ab
                           0061AC   940 _FSCTRL	=	0x61ac
                           0061AD   941 _FSCAL0	=	0x61ad
                           0061AE   942 _FSCAL1	=	0x61ae
                           0061AF   943 _FSCAL2	=	0x61af
                           0061B0   944 _FSCAL3	=	0x61b0
                           0061B1   945 _AGCCTRL0	=	0x61b1
                           0061B2   946 _AGCCTRL1	=	0x61b2
                           0061B3   947 _AGCCTRL2	=	0x61b3
                           0061B4   948 _AGCCTRL3	=	0x61b4
                           0061B5   949 _ADCTEST0	=	0x61b5
                           0061B6   950 _ADCTEST1	=	0x61b6
                           0061B7   951 _ADCTEST2	=	0x61b7
                           0061B8   952 _MDMTEST0	=	0x61b8
                           0061B9   953 _MDMTEST1	=	0x61b9
                           0061BA   954 _DACTEST0	=	0x61ba
                           0061BB   955 _DACTEST1	=	0x61bb
                           0061BC   956 _DACTEST2	=	0x61bc
                           0061BD   957 _ATEST	=	0x61bd
                           0061BE   958 _PTEST0	=	0x61be
                           0061BF   959 _PTEST1	=	0x61bf
                           0061FA   960 _TXFILTCFG	=	0x61fa
                           0061EB   961 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   962 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   963 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   964 _CSPPROG0	=	0x61c0
                           0061C1   965 _CSPPROG1	=	0x61c1
                           0061C2   966 _CSPPROG2	=	0x61c2
                           0061C3   967 _CSPPROG3	=	0x61c3
                           0061C4   968 _CSPPROG4	=	0x61c4
                           0061C5   969 _CSPPROG5	=	0x61c5
                           0061C6   970 _CSPPROG6	=	0x61c6
                           0061C7   971 _CSPPROG7	=	0x61c7
                           0061C8   972 _CSPPROG8	=	0x61c8
                           0061C9   973 _CSPPROG9	=	0x61c9
                           0061CA   974 _CSPPROG10	=	0x61ca
                           0061CB   975 _CSPPROG11	=	0x61cb
                           0061CC   976 _CSPPROG12	=	0x61cc
                           0061CD   977 _CSPPROG13	=	0x61cd
                           0061CE   978 _CSPPROG14	=	0x61ce
                           0061CF   979 _CSPPROG15	=	0x61cf
                           0061D0   980 _CSPPROG16	=	0x61d0
                           0061D1   981 _CSPPROG17	=	0x61d1
                           0061D2   982 _CSPPROG18	=	0x61d2
                           0061D3   983 _CSPPROG19	=	0x61d3
                           0061D4   984 _CSPPROG20	=	0x61d4
                           0061D5   985 _CSPPROG21	=	0x61d5
                           0061D6   986 _CSPPROG22	=	0x61d6
                           0061D7   987 _CSPPROG23	=	0x61d7
                           0061E0   988 _CSPCTRL	=	0x61e0
                           0061E1   989 _CSPSTAT	=	0x61e1
                           0061E2   990 _CSPX	=	0x61e2
                           0061E3   991 _CSPY	=	0x61e3
                           0061E4   992 _CSPZ	=	0x61e4
                           0061E5   993 _CSPT	=	0x61e5
                           006200   994 _USBADDR	=	0x6200
                           006201   995 _USBPOW	=	0x6201
                           006202   996 _USBIIF	=	0x6202
                           006204   997 _USBOIF	=	0x6204
                           006206   998 _USBCIF	=	0x6206
                           006207   999 _USBIIE	=	0x6207
                           006209  1000 _USBOIE	=	0x6209
                           00620B  1001 _USBCIE	=	0x620b
                           00620C  1002 _USBFRML	=	0x620c
                           00620D  1003 _USBFRMH	=	0x620d
                           00620E  1004 _USBINDEX	=	0x620e
                           00620F  1005 _USBCTRL	=	0x620f
                           006210  1006 _USBMAXI	=	0x6210
                           006211  1007 _USBCS0	=	0x6211
                           006211  1008 _USBCSIL	=	0x6211
                           006212  1009 _USBCSIH	=	0x6212
                           006213  1010 _USBMAXO	=	0x6213
                           006214  1011 _USBCSOL	=	0x6214
                           006215  1012 _USBCSOH	=	0x6215
                           006216  1013 _USBCNT0	=	0x6216
                           006216  1014 _USBCNTL	=	0x6216
                           006217  1015 _USBCNTH	=	0x6217
                           006220  1016 _USBF0	=	0x6220
                           006222  1017 _USBF1	=	0x6222
                           006224  1018 _USBF2	=	0x6224
                           006226  1019 _USBF3	=	0x6226
                           006228  1020 _USBF4	=	0x6228
                           00622A  1021 _USBF5	=	0x622a
                           007080  1022 _X_P0	=	0x7080
                           007086  1023 _X_U0CSR	=	0x7086
                           007089  1024 _X_P0IFG	=	0x7089
                           00708A  1025 _X_P1IFG	=	0x708a
                           00708B  1026 _X_P2IFG	=	0x708b
                           00708C  1027 _X_PICTL	=	0x708c
                           00708D  1028 _X_P1IEN	=	0x708d
                           00708F  1029 _X_P0INP	=	0x708f
                           007090  1030 _X_P1	=	0x7090
                           007091  1031 _X_RFIRQF1	=	0x7091
                           007093  1032 _X_MPAGE	=	0x7093
                           007093  1033 _X__XPAGE	=	0x7093
                           007094  1034 _X_T2CTRL	=	0x7094
                           007095  1035 _X_ST0	=	0x7095
                           007096  1036 _X_ST1	=	0x7096
                           007097  1037 _X_ST2	=	0x7097
                           00709C  1038 _X_T2EVTCFG	=	0x709c
                           00709D  1039 _X_SLEEPSTA	=	0x709d
                           00709E  1040 _X_CLKCONSTA	=	0x709e
                           00709F  1041 _X_FMAP	=	0x709f
                           00709F  1042 _X_PSBANK	=	0x709f
                           0070A0  1043 _X_P2	=	0x70a0
                           0070A1  1044 _X_T2IRQF	=	0x70a1
                           0070A2  1045 _X_T2M0	=	0x70a2
                           0070A3  1046 _X_T2M1	=	0x70a3
                           0070A4  1047 _X_T2MOVF0	=	0x70a4
                           0070A5  1048 _X_T2MOVF1	=	0x70a5
                           0070A6  1049 _X_T2MOVF2	=	0x70a6
                           0070A7  1050 _X_T2IRQM	=	0x70a7
                           0070AB  1051 _X_P0IEN	=	0x70ab
                           0070AC  1052 _X_P2IEN	=	0x70ac
                           0070AD  1053 _X_STLOAD	=	0x70ad
                           0070AE  1054 _X_PMUX	=	0x70ae
                           0070AF  1055 _X_T1STAT	=	0x70af
                           0070B1  1056 _X_ENCDI	=	0x70b1
                           0070B2  1057 _X_ENCDO	=	0x70b2
                           0070B3  1058 _X_ENCCS	=	0x70b3
                           0070B4  1059 _X_ADCCON1	=	0x70b4
                           0070B5  1060 _X_ADCCON2	=	0x70b5
                           0070B6  1061 _X_ADCCON3	=	0x70b6
                           0070BA  1062 _X_ADCL	=	0x70ba
                           0070BB  1063 _X_ADCH	=	0x70bb
                           0070BC  1064 _X_RNDL	=	0x70bc
                           0070BD  1065 _X_RNDH	=	0x70bd
                           0070BE  1066 _X_SLEEPCMD	=	0x70be
                           0070BF  1067 _X_RFERRF	=	0x70bf
                           0070C1  1068 _X_U0DBUF	=	0x70c1
                           0070C2  1069 _X_U0BAUD	=	0x70c2
                           0070C3  1070 _X_T2MSEL	=	0x70c3
                           0070C4  1071 _X_U0UCR	=	0x70c4
                           0070C5  1072 _X_U0GCR	=	0x70c5
                           0070C6  1073 _X_CLKCONCMD	=	0x70c6
                           0070C7  1074 _X_MEMCTR	=	0x70c7
                           0070C9  1075 _X_WDCTL	=	0x70c9
                           0070CA  1076 _X_T3CNT	=	0x70ca
                           0070CB  1077 _X_T3CTL	=	0x70cb
                           0070CC  1078 _X_T3CCTL0	=	0x70cc
                           0070CD  1079 _X_T3CC0	=	0x70cd
                           0070CE  1080 _X_T3CCTL1	=	0x70ce
                           0070CF  1081 _X_T3CC1	=	0x70cf
                           0070D1  1082 _X_DMAIRQ	=	0x70d1
                           0070D2  1083 _X_DMA1CFGL	=	0x70d2
                           0070D3  1084 _X_DMA1CFGH	=	0x70d3
                           0070D4  1085 _X_DMA0CFGL	=	0x70d4
                           0070D5  1086 _X_DMA0CFGH	=	0x70d5
                           0070D6  1087 _X_DMAARM	=	0x70d6
                           0070D7  1088 _X_DMAREQ	=	0x70d7
                           0070D8  1089 _X_TIMIF	=	0x70d8
                           0070D9  1090 _X_RFD	=	0x70d9
                           0070DA  1091 _X_T1CC0L	=	0x70da
                           0070DB  1092 _X_T1CC0H	=	0x70db
                           0070DC  1093 _X_T1CC1L	=	0x70dc
                           0070DD  1094 _X_T1CC1H	=	0x70dd
                           0070DE  1095 _X_T1CC2L	=	0x70de
                           0070DF  1096 _X_T1CC2H	=	0x70df
                           0070E1  1097 _X_RFST	=	0x70e1
                           0070E2  1098 _X_T1CNTL	=	0x70e2
                           0070E3  1099 _X_T1CNTH	=	0x70e3
                           0070E4  1100 _X_T1CTL	=	0x70e4
                           0070E5  1101 _X_T1CCTL0	=	0x70e5
                           0070E6  1102 _X_T1CCTL1	=	0x70e6
                           0070E7  1103 _X_T1CCTL2	=	0x70e7
                           0070E9  1104 _X_RFIRQF0	=	0x70e9
                           0070EA  1105 _X_T4CNT	=	0x70ea
                           0070EB  1106 _X_T4CTL	=	0x70eb
                           0070EC  1107 _X_T4CCTL0	=	0x70ec
                           0070ED  1108 _X_T4CC0	=	0x70ed
                           0070EE  1109 _X_T4CCTL1	=	0x70ee
                           0070EF  1110 _X_T4CC1	=	0x70ef
                           0070F1  1111 _X_PERCFG	=	0x70f1
                           0070F2  1112 _X_APCFG	=	0x70f2
                           0070F3  1113 _X_P0SEL	=	0x70f3
                           0070F4  1114 _X_P1SEL	=	0x70f4
                           0070F5  1115 _X_P2SEL	=	0x70f5
                           0070F6  1116 _X_P1INP	=	0x70f6
                           0070F7  1117 _X_P2INP	=	0x70f7
                           0070F8  1118 _X_U1CSR	=	0x70f8
                           0070F9  1119 _X_U1DBUF	=	0x70f9
                           0070FA  1120 _X_U1BAUD	=	0x70fa
                           0070FB  1121 _X_U1UCR	=	0x70fb
                           0070FC  1122 _X_U1GCR	=	0x70fc
                           0070FD  1123 _X_P0DIR	=	0x70fd
                           0070FE  1124 _X_P1DIR	=	0x70fe
                           0070FF  1125 _X_P2DIR	=	0x70ff
                           007800  1126 _X_INFOPAGE	=	0x7800
                           00780C  1127 _X_IEEE_ADDR	=	0x780c
      000000                       1128 _queued_packets_memb_memb_count:
      000000                       1129 	.ds 8
      000008                       1130 _queued_packets_memb_memb_mem:
      000008                       1131 	.ds 272
      000118                       1132 __nbr_phase_mem:
      000118                       1133 	.ds 28
                                   1134 ;--------------------------------------------------------
                                   1135 ; absolute external ram data
                                   1136 ;--------------------------------------------------------
                                   1137 	.area XABS    (ABS,XDATA)
                                   1138 ;--------------------------------------------------------
                                   1139 ; external initialized ram data
                                   1140 ;--------------------------------------------------------
                                   1141 	.area XISEG   (XDATA)
      000000                       1142 _queued_packets_memb:
      000000                       1143 	.ds 10
      00000A                       1144 _nbr_phase_struct:
      00000A                       1145 	.ds 10
      000014                       1146 _nbr_phase:
      000014                       1147 	.ds 3
                                   1148 	.area HOME    (CODE)
                                   1149 	.area GSINIT0 (CODE)
                                   1150 	.area GSINIT1 (CODE)
                                   1151 	.area GSINIT2 (CODE)
                                   1152 	.area GSINIT3 (CODE)
                                   1153 	.area GSINIT4 (CODE)
                                   1154 	.area GSINIT5 (CODE)
                                   1155 	.area GSINIT  (CODE)
                                   1156 	.area GSFINAL (CODE)
                                   1157 	.area CSEG    (CODE)
                                   1158 ;--------------------------------------------------------
                                   1159 ; global & static initialisations
                                   1160 ;--------------------------------------------------------
                                   1161 	.area HOME    (CODE)
                                   1162 	.area GSINIT  (CODE)
                                   1163 	.area GSFINAL (CODE)
                                   1164 	.area GSINIT  (CODE)
                                   1165 ;--------------------------------------------------------
                                   1166 ; Home
                                   1167 ;--------------------------------------------------------
                                   1168 	.area HOME    (CODE)
                                   1169 	.area HOME    (CODE)
                                   1170 ;--------------------------------------------------------
                                   1171 ; code
                                   1172 ;--------------------------------------------------------
                                   1173 	.area BANK1   (CODE)
                                   1174 ;------------------------------------------------------------
                                   1175 ;Allocation info for local variables in function 'phase_update'
                                   1176 ;------------------------------------------------------------
                                   1177 ;time                      Allocated to stack - sp -7
                                   1178 ;mac_status                Allocated to stack - sp -9
                                   1179 ;neighbor                  Allocated to registers r5 r6 r7 
                                   1180 ;e                         Allocated to stack - sp -2
                                   1181 ;sloc0                     Allocated to stack - sp +4
                                   1182 ;------------------------------------------------------------
                                   1183 ;	/opt/contiki/core/net/mac/phase.c:91: phase_update(const linkaddr_t *neighbor, rtimer_clock_t time,
                                   1184 ;	-----------------------------------------
                                   1185 ;	 function phase_update
                                   1186 ;	-----------------------------------------
      000000                       1187 _phase_update:
                           000007  1188 	ar7 = 0x07
                           000006  1189 	ar6 = 0x06
                           000005  1190 	ar5 = 0x05
                           000004  1191 	ar4 = 0x04
                           000003  1192 	ar3 = 0x03
                           000002  1193 	ar2 = 0x02
                           000001  1194 	ar1 = 0x01
                           000000  1195 	ar0 = 0x00
      000000 05 81            [12] 1196 	inc	sp
      000002 05 81            [12] 1197 	inc	sp
      000004 05 81            [12] 1198 	inc	sp
      000006 AD 82            [24] 1199 	mov	r5,dpl
      000008 AE 83            [24] 1200 	mov	r6,dph
      00000A AF F0            [24] 1201 	mov	r7,b
                                   1202 ;	/opt/contiki/core/net/mac/phase.c:97: e = nbr_table_get_from_lladdr(nbr_phase, neighbor);
      00000C 90r00r14         [24] 1203 	mov	dptr,#_nbr_phase
      00000F E0               [24] 1204 	movx	a,@dptr
      000010 FA               [12] 1205 	mov	r2,a
      000011 A3               [24] 1206 	inc	dptr
      000012 E0               [24] 1207 	movx	a,@dptr
      000013 FB               [12] 1208 	mov	r3,a
      000014 A3               [24] 1209 	inc	dptr
      000015 E0               [24] 1210 	movx	a,@dptr
      000016 FC               [12] 1211 	mov	r4,a
      000017 C0 07            [24] 1212 	push	ar7
      000019 C0 06            [24] 1213 	push	ar6
      00001B C0 05            [24] 1214 	push	ar5
      00001D C0 05            [24] 1215 	push	ar5
      00001F C0 06            [24] 1216 	push	ar6
      000021 C0 07            [24] 1217 	push	ar7
      000023 8A 82            [24] 1218 	mov	dpl,r2
      000025 8B 83            [24] 1219 	mov	dph,r3
      000027 8C F0            [24] 1220 	mov	b,r4
      000029 78r00            [12] 1221 	mov	r0,#_nbr_table_get_from_lladdr
      00002B 79s00            [12] 1222 	mov	r1,#(_nbr_table_get_from_lladdr >> 8)
      00002D 7As00            [12] 1223 	mov	r2,#(_nbr_table_get_from_lladdr >> 16)
      00002F 12r00r00         [24] 1224 	lcall	__sdcc_banked_call
      000032 AA 82            [24] 1225 	mov	r2,dpl
      000034 AB 83            [24] 1226 	mov	r3,dph
      000036 AC F0            [24] 1227 	mov	r4,b
      000038 15 81            [12] 1228 	dec	sp
      00003A 15 81            [12] 1229 	dec	sp
      00003C 15 81            [12] 1230 	dec	sp
      00003E D0 05            [24] 1231 	pop	ar5
      000040 D0 06            [24] 1232 	pop	ar6
      000042 D0 07            [24] 1233 	pop	ar7
      000044 A8 81            [24] 1234 	mov	r0,sp
      000046 18               [12] 1235 	dec	r0
      000047 18               [12] 1236 	dec	r0
      000048 A6 02            [24] 1237 	mov	@r0,ar2
      00004A 08               [12] 1238 	inc	r0
      00004B A6 03            [24] 1239 	mov	@r0,ar3
      00004D 08               [12] 1240 	inc	r0
      00004E A6 04            [24] 1241 	mov	@r0,ar4
                                   1242 ;	/opt/contiki/core/net/mac/phase.c:98: if(e != NULL) {
      000050 A8 81            [24] 1243 	mov	r0,sp
      000052 18               [12] 1244 	dec	r0
      000053 18               [12] 1245 	dec	r0
      000054 E6               [12] 1246 	mov	a,@r0
      000055 08               [12] 1247 	inc	r0
      000056 46               [12] 1248 	orl	a,@r0
      000057 70 03            [24] 1249 	jnz	00150$
      000059 02r01r85         [24] 1250 	ljmp	00119$
      00005C                       1251 00150$:
                                   1252 ;	/opt/contiki/core/net/mac/phase.c:99: if(mac_status == MAC_TX_OK) {
      00005C E5 81            [12] 1253 	mov	a,sp
      00005E 24 F7            [12] 1254 	add	a,#0xf7
      000060 F8               [12] 1255 	mov	r0,a
      000061 E6               [12] 1256 	mov	a,@r0
      000062 08               [12] 1257 	inc	r0
      000063 46               [12] 1258 	orl	a,@r0
      000064 70 1B            [24] 1259 	jnz	00102$
                                   1260 ;	/opt/contiki/core/net/mac/phase.c:103: e->time = time;
      000066 A8 81            [24] 1261 	mov	r0,sp
      000068 18               [12] 1262 	dec	r0
      000069 18               [12] 1263 	dec	r0
      00006A 86 82            [24] 1264 	mov	dpl,@r0
      00006C 08               [12] 1265 	inc	r0
      00006D 86 83            [24] 1266 	mov	dph,@r0
      00006F 08               [12] 1267 	inc	r0
      000070 86 F0            [24] 1268 	mov	b,@r0
      000072 E5 81            [12] 1269 	mov	a,sp
      000074 24 F9            [12] 1270 	add	a,#0xf9
      000076 F9               [12] 1271 	mov	r1,a
      000077 E7               [12] 1272 	mov	a,@r1
      000078 12r00r00         [24] 1273 	lcall	__gptrput
      00007B A3               [24] 1274 	inc	dptr
      00007C 09               [12] 1275 	inc	r1
      00007D E7               [12] 1276 	mov	a,@r1
      00007E 12r00r00         [24] 1277 	lcall	__gptrput
      000081                       1278 00102$:
                                   1279 ;	/opt/contiki/core/net/mac/phase.c:108: if(mac_status == MAC_TX_NOACK) {
      000081 E5 81            [12] 1280 	mov	a,sp
      000083 24 F7            [12] 1281 	add	a,#0xf7
      000085 F8               [12] 1282 	mov	r0,a
      000086 B6 02 06         [24] 1283 	cjne	@r0,#0x02,00152$
      000089 08               [12] 1284 	inc	r0
      00008A B6 00 02         [24] 1285 	cjne	@r0,#0x00,00152$
      00008D 80 03            [24] 1286 	sjmp	00153$
      00008F                       1287 00152$:
      00008F 02r01r5C         [24] 1288 	ljmp	00111$
      000092                       1289 00153$:
                                   1290 ;	/opt/contiki/core/net/mac/phase.c:110: e->noacks++;
      000092 A8 81            [24] 1291 	mov	r0,sp
      000094 18               [12] 1292 	dec	r0
      000095 18               [12] 1293 	dec	r0
      000096 74 02            [12] 1294 	mov	a,#0x02
      000098 26               [12] 1295 	add	a,@r0
      000099 FF               [12] 1296 	mov	r7,a
      00009A E4               [12] 1297 	clr	a
      00009B 08               [12] 1298 	inc	r0
      00009C 36               [12] 1299 	addc	a,@r0
      00009D FE               [12] 1300 	mov	r6,a
      00009E 08               [12] 1301 	inc	r0
      00009F 86 05            [24] 1302 	mov	ar5,@r0
      0000A1 8F 82            [24] 1303 	mov	dpl,r7
      0000A3 8E 83            [24] 1304 	mov	dph,r6
      0000A5 8D F0            [24] 1305 	mov	b,r5
      0000A7 12r00r00         [24] 1306 	lcall	__gptrget
      0000AA FC               [12] 1307 	mov	r4,a
      0000AB 0C               [12] 1308 	inc	r4
      0000AC 8F 82            [24] 1309 	mov	dpl,r7
      0000AE 8E 83            [24] 1310 	mov	dph,r6
      0000B0 8D F0            [24] 1311 	mov	b,r5
      0000B2 EC               [12] 1312 	mov	a,r4
      0000B3 12r00r00         [24] 1313 	lcall	__gptrput
                                   1314 ;	/opt/contiki/core/net/mac/phase.c:111: if(e->noacks == 1) {
      0000B6 BC 01 35         [24] 1315 	cjne	r4,#0x01,00104$
                                   1316 ;	/opt/contiki/core/net/mac/phase.c:112: timer_set(&e->noacks_timer, MAX_NOACKS_TIME);
      0000B9 A8 81            [24] 1317 	mov	r0,sp
      0000BB 18               [12] 1318 	dec	r0
      0000BC 18               [12] 1319 	dec	r0
      0000BD 74 03            [12] 1320 	mov	a,#0x03
      0000BF 26               [12] 1321 	add	a,@r0
      0000C0 FA               [12] 1322 	mov	r2,a
      0000C1 E4               [12] 1323 	clr	a
      0000C2 08               [12] 1324 	inc	r0
      0000C3 36               [12] 1325 	addc	a,@r0
      0000C4 FB               [12] 1326 	mov	r3,a
      0000C5 08               [12] 1327 	inc	r0
      0000C6 86 04            [24] 1328 	mov	ar4,@r0
      0000C8 C0 07            [24] 1329 	push	ar7
      0000CA C0 06            [24] 1330 	push	ar6
      0000CC C0 05            [24] 1331 	push	ar5
      0000CE E4               [12] 1332 	clr	a
      0000CF C0 E0            [24] 1333 	push	acc
      0000D1 74 0F            [12] 1334 	mov	a,#0x0F
      0000D3 C0 E0            [24] 1335 	push	acc
      0000D5 8A 82            [24] 1336 	mov	dpl,r2
      0000D7 8B 83            [24] 1337 	mov	dph,r3
      0000D9 8C F0            [24] 1338 	mov	b,r4
      0000DB 78r00            [12] 1339 	mov	r0,#_timer_set
      0000DD 79s00            [12] 1340 	mov	r1,#(_timer_set >> 8)
      0000DF 7As00            [12] 1341 	mov	r2,#(_timer_set >> 16)
      0000E1 12r00r00         [24] 1342 	lcall	__sdcc_banked_call
      0000E4 15 81            [12] 1343 	dec	sp
      0000E6 15 81            [12] 1344 	dec	sp
      0000E8 D0 05            [24] 1345 	pop	ar5
      0000EA D0 06            [24] 1346 	pop	ar6
      0000EC D0 07            [24] 1347 	pop	ar7
      0000EE                       1348 00104$:
                                   1349 ;	/opt/contiki/core/net/mac/phase.c:114: if(e->noacks >= MAX_NOACKS || timer_expired(&e->noacks_timer)) {
      0000EE 8F 82            [24] 1350 	mov	dpl,r7
      0000F0 8E 83            [24] 1351 	mov	dph,r6
      0000F2 8D F0            [24] 1352 	mov	b,r5
      0000F4 12r00r00         [24] 1353 	lcall	__gptrget
      0000F7 FC               [12] 1354 	mov	r4,a
      0000F8 BC 10 00         [24] 1355 	cjne	r4,#0x10,00156$
      0000FB                       1356 00156$:
      0000FB 50 2A            [24] 1357 	jnc	00105$
      0000FD A8 81            [24] 1358 	mov	r0,sp
      0000FF 18               [12] 1359 	dec	r0
      000100 18               [12] 1360 	dec	r0
      000101 74 03            [12] 1361 	mov	a,#0x03
      000103 26               [12] 1362 	add	a,@r0
      000104 FA               [12] 1363 	mov	r2,a
      000105 E4               [12] 1364 	clr	a
      000106 08               [12] 1365 	inc	r0
      000107 36               [12] 1366 	addc	a,@r0
      000108 FB               [12] 1367 	mov	r3,a
      000109 08               [12] 1368 	inc	r0
      00010A 86 04            [24] 1369 	mov	ar4,@r0
      00010C 8A 82            [24] 1370 	mov	dpl,r2
      00010E 8B 83            [24] 1371 	mov	dph,r3
      000110 8C F0            [24] 1372 	mov	b,r4
      000112 78r00            [12] 1373 	mov	r0,#_timer_expired
      000114 79s00            [12] 1374 	mov	r1,#(_timer_expired >> 8)
      000116 7As00            [12] 1375 	mov	r2,#(_timer_expired >> 16)
      000118 12r00r00         [24] 1376 	lcall	__sdcc_banked_call
      00011B E5 82            [12] 1377 	mov	a,dpl
      00011D 85 83 F0         [24] 1378 	mov	b,dph
      000120 45 F0            [12] 1379 	orl	a,b
      000122 70 03            [24] 1380 	jnz	00158$
      000124 02r02r10         [24] 1381 	ljmp	00121$
      000127                       1382 00158$:
      000127                       1383 00105$:
                                   1384 ;	/opt/contiki/core/net/mac/phase.c:116: nbr_table_remove(nbr_phase, e);
      000127 A8 81            [24] 1385 	mov	r0,sp
      000129 18               [12] 1386 	dec	r0
      00012A 18               [12] 1387 	dec	r0
      00012B 86 07            [24] 1388 	mov	ar7,@r0
      00012D 08               [12] 1389 	inc	r0
      00012E 86 06            [24] 1390 	mov	ar6,@r0
      000130 08               [12] 1391 	inc	r0
      000131 86 05            [24] 1392 	mov	ar5,@r0
      000133 90r00r14         [24] 1393 	mov	dptr,#_nbr_phase
      000136 E0               [24] 1394 	movx	a,@dptr
      000137 FA               [12] 1395 	mov	r2,a
      000138 A3               [24] 1396 	inc	dptr
      000139 E0               [24] 1397 	movx	a,@dptr
      00013A FB               [12] 1398 	mov	r3,a
      00013B A3               [24] 1399 	inc	dptr
      00013C E0               [24] 1400 	movx	a,@dptr
      00013D FC               [12] 1401 	mov	r4,a
      00013E C0 07            [24] 1402 	push	ar7
      000140 C0 06            [24] 1403 	push	ar6
      000142 C0 05            [24] 1404 	push	ar5
      000144 8A 82            [24] 1405 	mov	dpl,r2
      000146 8B 83            [24] 1406 	mov	dph,r3
      000148 8C F0            [24] 1407 	mov	b,r4
      00014A 78r00            [12] 1408 	mov	r0,#_nbr_table_remove
      00014C 79s00            [12] 1409 	mov	r1,#(_nbr_table_remove >> 8)
      00014E 7As00            [12] 1410 	mov	r2,#(_nbr_table_remove >> 16)
      000150 12r00r00         [24] 1411 	lcall	__sdcc_banked_call
      000153 15 81            [12] 1412 	dec	sp
      000155 15 81            [12] 1413 	dec	sp
      000157 15 81            [12] 1414 	dec	sp
                                   1415 ;	/opt/contiki/core/net/mac/phase.c:117: return;
      000159 02r02r10         [24] 1416 	ljmp	00121$
      00015C                       1417 00111$:
                                   1418 ;	/opt/contiki/core/net/mac/phase.c:119: } else if(mac_status == MAC_TX_OK) {
      00015C E5 81            [12] 1419 	mov	a,sp
      00015E 24 F7            [12] 1420 	add	a,#0xf7
      000160 F8               [12] 1421 	mov	r0,a
      000161 E6               [12] 1422 	mov	a,@r0
      000162 08               [12] 1423 	inc	r0
      000163 46               [12] 1424 	orl	a,@r0
      000164 60 03            [24] 1425 	jz	00159$
      000166 02r02r10         [24] 1426 	ljmp	00121$
      000169                       1427 00159$:
                                   1428 ;	/opt/contiki/core/net/mac/phase.c:120: e->noacks = 0;
      000169 A8 81            [24] 1429 	mov	r0,sp
      00016B 18               [12] 1430 	dec	r0
      00016C 18               [12] 1431 	dec	r0
      00016D 74 02            [12] 1432 	mov	a,#0x02
      00016F 26               [12] 1433 	add	a,@r0
      000170 FA               [12] 1434 	mov	r2,a
      000171 E4               [12] 1435 	clr	a
      000172 08               [12] 1436 	inc	r0
      000173 36               [12] 1437 	addc	a,@r0
      000174 FB               [12] 1438 	mov	r3,a
      000175 08               [12] 1439 	inc	r0
      000176 86 04            [24] 1440 	mov	ar4,@r0
      000178 8A 82            [24] 1441 	mov	dpl,r2
      00017A 8B 83            [24] 1442 	mov	dph,r3
      00017C 8C F0            [24] 1443 	mov	b,r4
      00017E E4               [12] 1444 	clr	a
      00017F 12r00r00         [24] 1445 	lcall	__gptrput
      000182 02r02r10         [24] 1446 	ljmp	00121$
      000185                       1447 00119$:
                                   1448 ;	/opt/contiki/core/net/mac/phase.c:124: if(mac_status == MAC_TX_OK && e == NULL) {
      000185 E5 81            [12] 1449 	mov	a,sp
      000187 24 F7            [12] 1450 	add	a,#0xf7
      000189 F8               [12] 1451 	mov	r0,a
      00018A E6               [12] 1452 	mov	a,@r0
      00018B 08               [12] 1453 	inc	r0
      00018C 46               [12] 1454 	orl	a,@r0
      00018D 60 03            [24] 1455 	jz	00160$
      00018F 02r02r10         [24] 1456 	ljmp	00121$
      000192                       1457 00160$:
      000192 A8 81            [24] 1458 	mov	r0,sp
      000194 18               [12] 1459 	dec	r0
      000195 18               [12] 1460 	dec	r0
      000196 E6               [12] 1461 	mov	a,@r0
      000197 08               [12] 1462 	inc	r0
      000198 46               [12] 1463 	orl	a,@r0
      000199 70 75            [24] 1464 	jnz	00121$
                                   1465 ;	/opt/contiki/core/net/mac/phase.c:125: e = nbr_table_add_lladdr(nbr_phase, neighbor);
      00019B 90r00r14         [24] 1466 	mov	dptr,#_nbr_phase
      00019E E0               [24] 1467 	movx	a,@dptr
      00019F FA               [12] 1468 	mov	r2,a
      0001A0 A3               [24] 1469 	inc	dptr
      0001A1 E0               [24] 1470 	movx	a,@dptr
      0001A2 FB               [12] 1471 	mov	r3,a
      0001A3 A3               [24] 1472 	inc	dptr
      0001A4 E0               [24] 1473 	movx	a,@dptr
      0001A5 FC               [12] 1474 	mov	r4,a
      0001A6 C0 05            [24] 1475 	push	ar5
      0001A8 C0 06            [24] 1476 	push	ar6
      0001AA C0 07            [24] 1477 	push	ar7
      0001AC 8A 82            [24] 1478 	mov	dpl,r2
      0001AE 8B 83            [24] 1479 	mov	dph,r3
      0001B0 8C F0            [24] 1480 	mov	b,r4
      0001B2 78r00            [12] 1481 	mov	r0,#_nbr_table_add_lladdr
      0001B4 79s00            [12] 1482 	mov	r1,#(_nbr_table_add_lladdr >> 8)
      0001B6 7As00            [12] 1483 	mov	r2,#(_nbr_table_add_lladdr >> 16)
      0001B8 12r00r00         [24] 1484 	lcall	__sdcc_banked_call
      0001BB AD 82            [24] 1485 	mov	r5,dpl
      0001BD AE 83            [24] 1486 	mov	r6,dph
      0001BF AF F0            [24] 1487 	mov	r7,b
      0001C1 15 81            [12] 1488 	dec	sp
      0001C3 15 81            [12] 1489 	dec	sp
      0001C5 15 81            [12] 1490 	dec	sp
      0001C7 A8 81            [24] 1491 	mov	r0,sp
      0001C9 18               [12] 1492 	dec	r0
      0001CA 18               [12] 1493 	dec	r0
      0001CB A6 05            [24] 1494 	mov	@r0,ar5
      0001CD 08               [12] 1495 	inc	r0
      0001CE A6 06            [24] 1496 	mov	@r0,ar6
      0001D0 08               [12] 1497 	inc	r0
      0001D1 A6 07            [24] 1498 	mov	@r0,ar7
                                   1499 ;	/opt/contiki/core/net/mac/phase.c:126: if(e) {
      0001D3 A8 81            [24] 1500 	mov	r0,sp
      0001D5 18               [12] 1501 	dec	r0
      0001D6 18               [12] 1502 	dec	r0
      0001D7 E6               [12] 1503 	mov	a,@r0
      0001D8 08               [12] 1504 	inc	r0
      0001D9 46               [12] 1505 	orl	a,@r0
      0001DA 60 34            [24] 1506 	jz	00121$
                                   1507 ;	/opt/contiki/core/net/mac/phase.c:127: e->time = time;
      0001DC A8 81            [24] 1508 	mov	r0,sp
      0001DE 18               [12] 1509 	dec	r0
      0001DF 18               [12] 1510 	dec	r0
      0001E0 86 82            [24] 1511 	mov	dpl,@r0
      0001E2 08               [12] 1512 	inc	r0
      0001E3 86 83            [24] 1513 	mov	dph,@r0
      0001E5 08               [12] 1514 	inc	r0
      0001E6 86 F0            [24] 1515 	mov	b,@r0
      0001E8 E5 81            [12] 1516 	mov	a,sp
      0001EA 24 F9            [12] 1517 	add	a,#0xf9
      0001EC F9               [12] 1518 	mov	r1,a
      0001ED E7               [12] 1519 	mov	a,@r1
      0001EE 12r00r00         [24] 1520 	lcall	__gptrput
      0001F1 A3               [24] 1521 	inc	dptr
      0001F2 09               [12] 1522 	inc	r1
      0001F3 E7               [12] 1523 	mov	a,@r1
      0001F4 12r00r00         [24] 1524 	lcall	__gptrput
                                   1525 ;	/opt/contiki/core/net/mac/phase.c:131: e->noacks = 0;
      0001F7 A8 81            [24] 1526 	mov	r0,sp
      0001F9 18               [12] 1527 	dec	r0
      0001FA 18               [12] 1528 	dec	r0
      0001FB 74 02            [12] 1529 	mov	a,#0x02
      0001FD 26               [12] 1530 	add	a,@r0
      0001FE FD               [12] 1531 	mov	r5,a
      0001FF E4               [12] 1532 	clr	a
      000200 08               [12] 1533 	inc	r0
      000201 36               [12] 1534 	addc	a,@r0
      000202 FE               [12] 1535 	mov	r6,a
      000203 08               [12] 1536 	inc	r0
      000204 86 07            [24] 1537 	mov	ar7,@r0
      000206 8D 82            [24] 1538 	mov	dpl,r5
      000208 8E 83            [24] 1539 	mov	dph,r6
      00020A 8F F0            [24] 1540 	mov	b,r7
      00020C E4               [12] 1541 	clr	a
      00020D 12r00r00         [24] 1542 	lcall	__gptrput
      000210                       1543 00121$:
      000210 15 81            [12] 1544 	dec	sp
      000212 15 81            [12] 1545 	dec	sp
      000214 15 81            [12] 1546 	dec	sp
      000216 02r00r00         [24] 1547 	ljmp	__sdcc_banked_ret
                                   1548 ;------------------------------------------------------------
                                   1549 ;Allocation info for local variables in function 'send_packet'
                                   1550 ;------------------------------------------------------------
                                   1551 ;ptr                       Allocated to registers r5 r6 r7 
                                   1552 ;p                         Allocated to stack - sp -2
                                   1553 ;sloc0                     Allocated to stack - sp -8
                                   1554 ;sloc1                     Allocated to stack - sp -5
                                   1555 ;------------------------------------------------------------
                                   1556 ;	/opt/contiki/core/net/mac/phase.c:138: send_packet(void *ptr)
                                   1557 ;	-----------------------------------------
                                   1558 ;	 function send_packet
                                   1559 ;	-----------------------------------------
      000219                       1560 _send_packet:
      000219 E5 81            [12] 1561 	mov	a,sp
      00021B 24 09            [12] 1562 	add	a,#0x09
      00021D F5 81            [12] 1563 	mov	sp,a
      00021F AD 82            [24] 1564 	mov	r5,dpl
      000221 AE 83            [24] 1565 	mov	r6,dph
      000223 AF F0            [24] 1566 	mov	r7,b
                                   1567 ;	/opt/contiki/core/net/mac/phase.c:140: struct phase_queueitem *p = ptr;
      000225 A8 81            [24] 1568 	mov	r0,sp
      000227 18               [12] 1569 	dec	r0
      000228 18               [12] 1570 	dec	r0
      000229 A6 05            [24] 1571 	mov	@r0,ar5
      00022B 08               [12] 1572 	inc	r0
      00022C A6 06            [24] 1573 	mov	@r0,ar6
      00022E 08               [12] 1574 	inc	r0
      00022F A6 07            [24] 1575 	mov	@r0,ar7
                                   1576 ;	/opt/contiki/core/net/mac/phase.c:142: if(p->buf_list == NULL) {
      000231 A8 81            [24] 1577 	mov	r0,sp
      000233 18               [12] 1578 	dec	r0
      000234 18               [12] 1579 	dec	r0
      000235 74 1F            [12] 1580 	mov	a,#0x1F
      000237 26               [12] 1581 	add	a,@r0
      000238 FA               [12] 1582 	mov	r2,a
      000239 E4               [12] 1583 	clr	a
      00023A 08               [12] 1584 	inc	r0
      00023B 36               [12] 1585 	addc	a,@r0
      00023C FB               [12] 1586 	mov	r3,a
      00023D 08               [12] 1587 	inc	r0
      00023E 86 04            [24] 1588 	mov	ar4,@r0
      000240 8A 82            [24] 1589 	mov	dpl,r2
      000242 8B 83            [24] 1590 	mov	dph,r3
      000244 8C F0            [24] 1591 	mov	b,r4
      000246 12r00r00         [24] 1592 	lcall	__gptrget
      000249 FA               [12] 1593 	mov	r2,a
      00024A A3               [24] 1594 	inc	dptr
      00024B 12r00r00         [24] 1595 	lcall	__gptrget
      00024E FB               [12] 1596 	mov	r3,a
      00024F A3               [24] 1597 	inc	dptr
      000250 12r00r00         [24] 1598 	lcall	__gptrget
      000253 FC               [12] 1599 	mov	r4,a
      000254 EA               [12] 1600 	mov	a,r2
      000255 4B               [12] 1601 	orl	a,r3
      000256 60 03            [24] 1602 	jz	00109$
      000258 02r03r51         [24] 1603 	ljmp	00102$
      00025B                       1604 00109$:
                                   1605 ;	/opt/contiki/core/net/mac/phase.c:143: queuebuf_to_packetbuf(p->q);
      00025B A8 81            [24] 1606 	mov	r0,sp
      00025D 18               [12] 1607 	dec	r0
      00025E 18               [12] 1608 	dec	r0
      00025F 74 1C            [12] 1609 	mov	a,#0x1C
      000261 26               [12] 1610 	add	a,@r0
      000262 FC               [12] 1611 	mov	r4,a
      000263 E4               [12] 1612 	clr	a
      000264 08               [12] 1613 	inc	r0
      000265 36               [12] 1614 	addc	a,@r0
      000266 FB               [12] 1615 	mov	r3,a
      000267 08               [12] 1616 	inc	r0
      000268 86 02            [24] 1617 	mov	ar2,@r0
      00026A 8C 82            [24] 1618 	mov	dpl,r4
      00026C 8B 83            [24] 1619 	mov	dph,r3
      00026E 8A F0            [24] 1620 	mov	b,r2
      000270 12r00r00         [24] 1621 	lcall	__gptrget
      000273 FD               [12] 1622 	mov	r5,a
      000274 A3               [24] 1623 	inc	dptr
      000275 12r00r00         [24] 1624 	lcall	__gptrget
      000278 FE               [12] 1625 	mov	r6,a
      000279 A3               [24] 1626 	inc	dptr
      00027A 12r00r00         [24] 1627 	lcall	__gptrget
      00027D FF               [12] 1628 	mov	r7,a
      00027E 8D 82            [24] 1629 	mov	dpl,r5
      000280 8E 83            [24] 1630 	mov	dph,r6
      000282 8F F0            [24] 1631 	mov	b,r7
      000284 C0 04            [24] 1632 	push	ar4
      000286 C0 03            [24] 1633 	push	ar3
      000288 C0 02            [24] 1634 	push	ar2
      00028A 78r00            [12] 1635 	mov	r0,#_queuebuf_to_packetbuf
      00028C 79s00            [12] 1636 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      00028E 7As00            [12] 1637 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      000290 12r00r00         [24] 1638 	lcall	__sdcc_banked_call
      000293 D0 02            [24] 1639 	pop	ar2
      000295 D0 03            [24] 1640 	pop	ar3
      000297 D0 04            [24] 1641 	pop	ar4
                                   1642 ;	/opt/contiki/core/net/mac/phase.c:144: queuebuf_free(p->q);
      000299 8C 82            [24] 1643 	mov	dpl,r4
      00029B 8B 83            [24] 1644 	mov	dph,r3
      00029D 8A F0            [24] 1645 	mov	b,r2
      00029F 12r00r00         [24] 1646 	lcall	__gptrget
      0002A2 FD               [12] 1647 	mov	r5,a
      0002A3 A3               [24] 1648 	inc	dptr
      0002A4 12r00r00         [24] 1649 	lcall	__gptrget
      0002A7 FE               [12] 1650 	mov	r6,a
      0002A8 A3               [24] 1651 	inc	dptr
      0002A9 12r00r00         [24] 1652 	lcall	__gptrget
      0002AC FF               [12] 1653 	mov	r7,a
      0002AD 8D 82            [24] 1654 	mov	dpl,r5
      0002AF 8E 83            [24] 1655 	mov	dph,r6
      0002B1 8F F0            [24] 1656 	mov	b,r7
      0002B3 78r00            [12] 1657 	mov	r0,#_queuebuf_free
      0002B5 79s00            [12] 1658 	mov	r1,#(_queuebuf_free >> 8)
      0002B7 7As00            [12] 1659 	mov	r2,#(_queuebuf_free >> 16)
      0002B9 12r00r00         [24] 1660 	lcall	__sdcc_banked_call
                                   1661 ;	/opt/contiki/core/net/mac/phase.c:145: NETSTACK_RDC.send(p->mac_callback, p->mac_callback_ptr);
      0002BC 90r00r06         [24] 1662 	mov	dptr,#(_nullrdc_driver + 0x0006)
      0002BF E4               [12] 1663 	clr	a
      0002C0 93               [24] 1664 	movc	a,@a+dptr
      0002C1 FC               [12] 1665 	mov	r4,a
      0002C2 A3               [24] 1666 	inc	dptr
      0002C3 E4               [12] 1667 	clr	a
      0002C4 93               [24] 1668 	movc	a,@a+dptr
      0002C5 FB               [12] 1669 	mov	r3,a
      0002C6 A3               [24] 1670 	inc	dptr
      0002C7 E4               [12] 1671 	clr	a
      0002C8 93               [24] 1672 	movc	a,@a+dptr
      0002C9 FA               [12] 1673 	mov	r2,a
      0002CA A8 81            [24] 1674 	mov	r0,sp
      0002CC 18               [12] 1675 	dec	r0
      0002CD 18               [12] 1676 	dec	r0
      0002CE 74 19            [12] 1677 	mov	a,#0x19
      0002D0 26               [12] 1678 	add	a,@r0
      0002D1 FD               [12] 1679 	mov	r5,a
      0002D2 E4               [12] 1680 	clr	a
      0002D3 08               [12] 1681 	inc	r0
      0002D4 36               [12] 1682 	addc	a,@r0
      0002D5 FE               [12] 1683 	mov	r6,a
      0002D6 08               [12] 1684 	inc	r0
      0002D7 86 07            [24] 1685 	mov	ar7,@r0
      0002D9 8D 82            [24] 1686 	mov	dpl,r5
      0002DB 8E 83            [24] 1687 	mov	dph,r6
      0002DD 8F F0            [24] 1688 	mov	b,r7
      0002DF E5 81            [12] 1689 	mov	a,sp
      0002E1 24 FB            [12] 1690 	add	a,#0xfb
      0002E3 F8               [12] 1691 	mov	r0,a
      0002E4 12r00r00         [24] 1692 	lcall	__gptrget
      0002E7 F6               [12] 1693 	mov	@r0,a
      0002E8 A3               [24] 1694 	inc	dptr
      0002E9 12r00r00         [24] 1695 	lcall	__gptrget
      0002EC 08               [12] 1696 	inc	r0
      0002ED F6               [12] 1697 	mov	@r0,a
      0002EE A3               [24] 1698 	inc	dptr
      0002EF 12r00r00         [24] 1699 	lcall	__gptrget
      0002F2 08               [12] 1700 	inc	r0
      0002F3 F6               [12] 1701 	mov	@r0,a
      0002F4 A8 81            [24] 1702 	mov	r0,sp
      0002F6 18               [12] 1703 	dec	r0
      0002F7 18               [12] 1704 	dec	r0
      0002F8 74 16            [12] 1705 	mov	a,#0x16
      0002FA 26               [12] 1706 	add	a,@r0
      0002FB FD               [12] 1707 	mov	r5,a
      0002FC E4               [12] 1708 	clr	a
      0002FD 08               [12] 1709 	inc	r0
      0002FE 36               [12] 1710 	addc	a,@r0
      0002FF FE               [12] 1711 	mov	r6,a
      000300 08               [12] 1712 	inc	r0
      000301 86 07            [24] 1713 	mov	ar7,@r0
      000303 8D 82            [24] 1714 	mov	dpl,r5
      000305 8E 83            [24] 1715 	mov	dph,r6
      000307 8F F0            [24] 1716 	mov	b,r7
      000309 12r00r00         [24] 1717 	lcall	__gptrget
      00030C FD               [12] 1718 	mov	r5,a
      00030D A3               [24] 1719 	inc	dptr
      00030E 12r00r00         [24] 1720 	lcall	__gptrget
      000311 FE               [12] 1721 	mov	r6,a
      000312 A3               [24] 1722 	inc	dptr
      000313 12r00r00         [24] 1723 	lcall	__gptrget
      000316 FF               [12] 1724 	mov	r7,a
      000317 C0 04            [24] 1725 	push	ar4
      000319 C0 03            [24] 1726 	push	ar3
      00031B C0 02            [24] 1727 	push	ar2
      00031D E5 81            [12] 1728 	mov	a,sp
      00031F 24 F8            [12] 1729 	add	a,#0xf8
      000321 F8               [12] 1730 	mov	r0,a
      000322 E6               [12] 1731 	mov	a,@r0
      000323 C0 E0            [24] 1732 	push	acc
      000325 08               [12] 1733 	inc	r0
      000326 E6               [12] 1734 	mov	a,@r0
      000327 C0 E0            [24] 1735 	push	acc
      000329 08               [12] 1736 	inc	r0
      00032A E6               [12] 1737 	mov	a,@r0
      00032B C0 E0            [24] 1738 	push	acc
      00032D C0 04            [24] 1739 	push	ar4
      00032F C0 03            [24] 1740 	push	ar3
      000331 C0 02            [24] 1741 	push	ar2
      000333 8D 82            [24] 1742 	mov	dpl,r5
      000335 8E 83            [24] 1743 	mov	dph,r6
      000337 8F F0            [24] 1744 	mov	b,r7
      000339 D0 02            [24] 1745 	pop	ar2
      00033B D0 01            [24] 1746 	pop	ar1
      00033D D0 00            [24] 1747 	pop	ar0
      00033F 12r00r00         [24] 1748 	lcall	__sdcc_banked_call
      000342 15 81            [12] 1749 	dec	sp
      000344 15 81            [12] 1750 	dec	sp
      000346 15 81            [12] 1751 	dec	sp
      000348 D0 02            [24] 1752 	pop	ar2
      00034A D0 03            [24] 1753 	pop	ar3
      00034C D0 04            [24] 1754 	pop	ar4
      00034E 02r03rEE         [24] 1755 	ljmp	00103$
      000351                       1756 00102$:
                                   1757 ;	/opt/contiki/core/net/mac/phase.c:147: NETSTACK_RDC.send_list(p->mac_callback, p->mac_callback_ptr, p->buf_list);
      000351 90r00r09         [24] 1758 	mov	dptr,#(_nullrdc_driver + 0x0009)
      000354 E5 81            [12] 1759 	mov	a,sp
      000356 24 FB            [12] 1760 	add	a,#0xfb
      000358 F8               [12] 1761 	mov	r0,a
      000359 E4               [12] 1762 	clr	a
      00035A 93               [24] 1763 	movc	a,@a+dptr
      00035B F6               [12] 1764 	mov	@r0,a
      00035C A3               [24] 1765 	inc	dptr
      00035D E4               [12] 1766 	clr	a
      00035E 93               [24] 1767 	movc	a,@a+dptr
      00035F 08               [12] 1768 	inc	r0
      000360 F6               [12] 1769 	mov	@r0,a
      000361 A3               [24] 1770 	inc	dptr
      000362 E4               [12] 1771 	clr	a
      000363 93               [24] 1772 	movc	a,@a+dptr
      000364 08               [12] 1773 	inc	r0
      000365 F6               [12] 1774 	mov	@r0,a
      000366 A8 81            [24] 1775 	mov	r0,sp
      000368 18               [12] 1776 	dec	r0
      000369 18               [12] 1777 	dec	r0
      00036A 74 19            [12] 1778 	mov	a,#0x19
      00036C 26               [12] 1779 	add	a,@r0
      00036D FD               [12] 1780 	mov	r5,a
      00036E E4               [12] 1781 	clr	a
      00036F 08               [12] 1782 	inc	r0
      000370 36               [12] 1783 	addc	a,@r0
      000371 FE               [12] 1784 	mov	r6,a
      000372 08               [12] 1785 	inc	r0
      000373 86 07            [24] 1786 	mov	ar7,@r0
      000375 8D 82            [24] 1787 	mov	dpl,r5
      000377 8E 83            [24] 1788 	mov	dph,r6
      000379 8F F0            [24] 1789 	mov	b,r7
      00037B E5 81            [12] 1790 	mov	a,sp
      00037D 24 F8            [12] 1791 	add	a,#0xf8
      00037F F8               [12] 1792 	mov	r0,a
      000380 12r00r00         [24] 1793 	lcall	__gptrget
      000383 F6               [12] 1794 	mov	@r0,a
      000384 A3               [24] 1795 	inc	dptr
      000385 12r00r00         [24] 1796 	lcall	__gptrget
      000388 08               [12] 1797 	inc	r0
      000389 F6               [12] 1798 	mov	@r0,a
      00038A A3               [24] 1799 	inc	dptr
      00038B 12r00r00         [24] 1800 	lcall	__gptrget
      00038E 08               [12] 1801 	inc	r0
      00038F F6               [12] 1802 	mov	@r0,a
      000390 A8 81            [24] 1803 	mov	r0,sp
      000392 18               [12] 1804 	dec	r0
      000393 18               [12] 1805 	dec	r0
      000394 74 16            [12] 1806 	mov	a,#0x16
      000396 26               [12] 1807 	add	a,@r0
      000397 FD               [12] 1808 	mov	r5,a
      000398 E4               [12] 1809 	clr	a
      000399 08               [12] 1810 	inc	r0
      00039A 36               [12] 1811 	addc	a,@r0
      00039B FE               [12] 1812 	mov	r6,a
      00039C 08               [12] 1813 	inc	r0
      00039D 86 07            [24] 1814 	mov	ar7,@r0
      00039F 8D 82            [24] 1815 	mov	dpl,r5
      0003A1 8E 83            [24] 1816 	mov	dph,r6
      0003A3 8F F0            [24] 1817 	mov	b,r7
      0003A5 12r00r00         [24] 1818 	lcall	__gptrget
      0003A8 FD               [12] 1819 	mov	r5,a
      0003A9 A3               [24] 1820 	inc	dptr
      0003AA 12r00r00         [24] 1821 	lcall	__gptrget
      0003AD FE               [12] 1822 	mov	r6,a
      0003AE A3               [24] 1823 	inc	dptr
      0003AF 12r00r00         [24] 1824 	lcall	__gptrget
      0003B2 FF               [12] 1825 	mov	r7,a
      0003B3 C0 02            [24] 1826 	push	ar2
      0003B5 C0 03            [24] 1827 	push	ar3
      0003B7 C0 04            [24] 1828 	push	ar4
      0003B9 E5 81            [12] 1829 	mov	a,sp
      0003BB 24 F5            [12] 1830 	add	a,#0xf5
      0003BD F8               [12] 1831 	mov	r0,a
      0003BE E6               [12] 1832 	mov	a,@r0
      0003BF C0 E0            [24] 1833 	push	acc
      0003C1 08               [12] 1834 	inc	r0
      0003C2 E6               [12] 1835 	mov	a,@r0
      0003C3 C0 E0            [24] 1836 	push	acc
      0003C5 08               [12] 1837 	inc	r0
      0003C6 E6               [12] 1838 	mov	a,@r0
      0003C7 C0 E0            [24] 1839 	push	acc
      0003C9 E5 81            [12] 1840 	mov	a,sp
      0003CB 24 F5            [12] 1841 	add	a,#0xf5
      0003CD F8               [12] 1842 	mov	r0,a
      0003CE E6               [12] 1843 	mov	a,@r0
      0003CF C0 E0            [24] 1844 	push	acc
      0003D1 08               [12] 1845 	inc	r0
      0003D2 E6               [12] 1846 	mov	a,@r0
      0003D3 C0 E0            [24] 1847 	push	acc
      0003D5 08               [12] 1848 	inc	r0
      0003D6 E6               [12] 1849 	mov	a,@r0
      0003D7 C0 E0            [24] 1850 	push	acc
      0003D9 8D 82            [24] 1851 	mov	dpl,r5
      0003DB 8E 83            [24] 1852 	mov	dph,r6
      0003DD 8F F0            [24] 1853 	mov	b,r7
      0003DF D0 02            [24] 1854 	pop	ar2
      0003E1 D0 01            [24] 1855 	pop	ar1
      0003E3 D0 00            [24] 1856 	pop	ar0
      0003E5 12r00r00         [24] 1857 	lcall	__sdcc_banked_call
      0003E8 E5 81            [12] 1858 	mov	a,sp
      0003EA 24 FA            [12] 1859 	add	a,#0xfa
      0003EC F5 81            [12] 1860 	mov	sp,a
      0003EE                       1861 00103$:
                                   1862 ;	/opt/contiki/core/net/mac/phase.c:150: memb_free(&queued_packets_memb, p);
      0003EE A8 81            [24] 1863 	mov	r0,sp
      0003F0 18               [12] 1864 	dec	r0
      0003F1 18               [12] 1865 	dec	r0
      0003F2 86 05            [24] 1866 	mov	ar5,@r0
      0003F4 08               [12] 1867 	inc	r0
      0003F5 86 06            [24] 1868 	mov	ar6,@r0
      0003F7 08               [12] 1869 	inc	r0
      0003F8 86 07            [24] 1870 	mov	ar7,@r0
      0003FA C0 05            [24] 1871 	push	ar5
      0003FC C0 06            [24] 1872 	push	ar6
      0003FE C0 07            [24] 1873 	push	ar7
      000400 90r00r00         [24] 1874 	mov	dptr,#_queued_packets_memb
      000403 75 F0 00         [24] 1875 	mov	b,#0x00
      000406 78r00            [12] 1876 	mov	r0,#_memb_free
      000408 79s00            [12] 1877 	mov	r1,#(_memb_free >> 8)
      00040A 7As00            [12] 1878 	mov	r2,#(_memb_free >> 16)
      00040C 12r00r00         [24] 1879 	lcall	__sdcc_banked_call
      00040F 15 81            [12] 1880 	dec	sp
      000411 15 81            [12] 1881 	dec	sp
      000413 15 81            [12] 1882 	dec	sp
      000415 E5 81            [12] 1883 	mov	a,sp
      000417 24 F7            [12] 1884 	add	a,#0xF7
      000419 F5 81            [12] 1885 	mov	sp,a
      00041B 02r00r00         [24] 1886 	ljmp	__sdcc_banked_ret
                                   1887 ;------------------------------------------------------------
                                   1888 ;Allocation info for local variables in function 'phase_wait'
                                   1889 ;------------------------------------------------------------
                                   1890 ;cycle_time                Allocated to stack - sp -14
                                   1891 ;guard_time                Allocated to stack - sp -16
                                   1892 ;mac_callback              Allocated to stack - sp -19
                                   1893 ;mac_callback_ptr          Allocated to stack - sp -22
                                   1894 ;buf_list                  Allocated to stack - sp -25
                                   1895 ;neighbor                  Allocated to registers r5 r6 r7 
                                   1896 ;e                         Allocated to stack - sp -9
                                   1897 ;wait                      Allocated to stack - sp -6
                                   1898 ;now                       Allocated to registers r6 r7 
                                   1899 ;expected                  Allocated to registers r4 r5 
                                   1900 ;sync                      Allocated to registers r4 r5 
                                   1901 ;ctimewait                 Allocated to stack - sp -4
                                   1902 ;p                         Allocated to stack - sp -2
                                   1903 ;sloc0                     Allocated to stack - sp +10
                                   1904 ;------------------------------------------------------------
                                   1905 ;	/opt/contiki/core/net/mac/phase.c:154: phase_wait(const linkaddr_t *neighbor, rtimer_clock_t cycle_time,
                                   1906 ;	-----------------------------------------
                                   1907 ;	 function phase_wait
                                   1908 ;	-----------------------------------------
      00041E                       1909 _phase_wait:
      00041E E5 81            [12] 1910 	mov	a,sp
      000420 24 0A            [12] 1911 	add	a,#0x0A
      000422 F5 81            [12] 1912 	mov	sp,a
      000424 AD 82            [24] 1913 	mov	r5,dpl
      000426 AE 83            [24] 1914 	mov	r6,dph
      000428 AF F0            [24] 1915 	mov	r7,b
                                   1916 ;	/opt/contiki/core/net/mac/phase.c:165: e = nbr_table_get_from_lladdr(nbr_phase, neighbor);
      00042A 90r00r14         [24] 1917 	mov	dptr,#_nbr_phase
      00042D E0               [24] 1918 	movx	a,@dptr
      00042E FA               [12] 1919 	mov	r2,a
      00042F A3               [24] 1920 	inc	dptr
      000430 E0               [24] 1921 	movx	a,@dptr
      000431 FB               [12] 1922 	mov	r3,a
      000432 A3               [24] 1923 	inc	dptr
      000433 E0               [24] 1924 	movx	a,@dptr
      000434 FC               [12] 1925 	mov	r4,a
      000435 C0 05            [24] 1926 	push	ar5
      000437 C0 06            [24] 1927 	push	ar6
      000439 C0 07            [24] 1928 	push	ar7
      00043B 8A 82            [24] 1929 	mov	dpl,r2
      00043D 8B 83            [24] 1930 	mov	dph,r3
      00043F 8C F0            [24] 1931 	mov	b,r4
      000441 78r00            [12] 1932 	mov	r0,#_nbr_table_get_from_lladdr
      000443 79s00            [12] 1933 	mov	r1,#(_nbr_table_get_from_lladdr >> 8)
      000445 7As00            [12] 1934 	mov	r2,#(_nbr_table_get_from_lladdr >> 16)
      000447 12r00r00         [24] 1935 	lcall	__sdcc_banked_call
      00044A AD 82            [24] 1936 	mov	r5,dpl
      00044C AE 83            [24] 1937 	mov	r6,dph
      00044E AF F0            [24] 1938 	mov	r7,b
      000450 15 81            [12] 1939 	dec	sp
      000452 15 81            [12] 1940 	dec	sp
      000454 15 81            [12] 1941 	dec	sp
      000456 E5 81            [12] 1942 	mov	a,sp
      000458 24 F7            [12] 1943 	add	a,#0xf7
      00045A F8               [12] 1944 	mov	r0,a
      00045B A6 05            [24] 1945 	mov	@r0,ar5
      00045D 08               [12] 1946 	inc	r0
      00045E A6 06            [24] 1947 	mov	@r0,ar6
      000460 08               [12] 1948 	inc	r0
      000461 A6 07            [24] 1949 	mov	@r0,ar7
                                   1950 ;	/opt/contiki/core/net/mac/phase.c:166: if(e != NULL) {
      000463 E5 81            [12] 1951 	mov	a,sp
      000465 24 F7            [12] 1952 	add	a,#0xf7
      000467 F8               [12] 1953 	mov	r0,a
      000468 E6               [12] 1954 	mov	a,@r0
      000469 08               [12] 1955 	inc	r0
      00046A 46               [12] 1956 	orl	a,@r0
      00046B 70 03            [24] 1957 	jnz	00152$
      00046D 02r07r84         [24] 1958 	ljmp	00120$
      000470                       1959 00152$:
                                   1960 ;	/opt/contiki/core/net/mac/phase.c:184: now = RTIMER_NOW();
      000470 AB E2            [24] 1961 	mov	r3,_T1CNTL
      000472 7C 00            [12] 1962 	mov	r4,#0x00
      000474 AA E3            [24] 1963 	mov	r2,_T1CNTH
      000476 8A 07            [24] 1964 	mov	ar7,r2
      000478 E4               [12] 1965 	clr	a
      000479 FA               [12] 1966 	mov	r2,a
      00047A 2B               [12] 1967 	add	a,r3
      00047B FB               [12] 1968 	mov	r3,a
      00047C EF               [12] 1969 	mov	a,r7
      00047D 3C               [12] 1970 	addc	a,r4
      00047E FC               [12] 1971 	mov	r4,a
      00047F 8B 06            [24] 1972 	mov	ar6,r3
      000481 8C 07            [24] 1973 	mov	ar7,r4
                                   1974 ;	/opt/contiki/core/net/mac/phase.c:186: sync = (e == NULL) ? now : e->time;
      000483 E5 81            [12] 1975 	mov	a,sp
      000485 24 F7            [12] 1976 	add	a,#0xf7
      000487 F8               [12] 1977 	mov	r0,a
      000488 E6               [12] 1978 	mov	a,@r0
      000489 08               [12] 1979 	inc	r0
      00048A 46               [12] 1980 	orl	a,@r0
      00048B 70 06            [24] 1981 	jnz	00123$
      00048D 8E 04            [24] 1982 	mov	ar4,r6
      00048F 8F 05            [24] 1983 	mov	ar5,r7
      000491 80 16            [24] 1984 	sjmp	00124$
      000493                       1985 00123$:
      000493 E5 81            [12] 1986 	mov	a,sp
      000495 24 F7            [12] 1987 	add	a,#0xf7
      000497 F8               [12] 1988 	mov	r0,a
      000498 86 82            [24] 1989 	mov	dpl,@r0
      00049A 08               [12] 1990 	inc	r0
      00049B 86 83            [24] 1991 	mov	dph,@r0
      00049D 08               [12] 1992 	inc	r0
      00049E 86 F0            [24] 1993 	mov	b,@r0
      0004A0 12r00r00         [24] 1994 	lcall	__gptrget
      0004A3 FC               [12] 1995 	mov	r4,a
      0004A4 A3               [24] 1996 	inc	dptr
      0004A5 12r00r00         [24] 1997 	lcall	__gptrget
      0004A8 FD               [12] 1998 	mov	r5,a
      0004A9                       1999 00124$:
                                   2000 ;	/opt/contiki/core/net/mac/phase.c:200: if(!(cycle_time & (cycle_time - 1))) {
      0004A9 E5 81            [12] 2001 	mov	a,sp
      0004AB 24 F2            [12] 2002 	add	a,#0xf2
      0004AD F8               [12] 2003 	mov	r0,a
      0004AE E6               [12] 2004 	mov	a,@r0
      0004AF 24 FF            [12] 2005 	add	a,#0xFF
      0004B1 FA               [12] 2006 	mov	r2,a
      0004B2 08               [12] 2007 	inc	r0
      0004B3 E6               [12] 2008 	mov	a,@r0
      0004B4 34 FF            [12] 2009 	addc	a,#0xFF
      0004B6 FB               [12] 2010 	mov	r3,a
      0004B7 E5 81            [12] 2011 	mov	a,sp
      0004B9 24 F2            [12] 2012 	add	a,#0xf2
      0004BB F8               [12] 2013 	mov	r0,a
      0004BC E6               [12] 2014 	mov	a,@r0
      0004BD 52 02            [12] 2015 	anl	ar2,a
      0004BF 08               [12] 2016 	inc	r0
      0004C0 E6               [12] 2017 	mov	a,@r0
      0004C1 52 03            [12] 2018 	anl	ar3,a
      0004C3 EA               [12] 2019 	mov	a,r2
      0004C4 4B               [12] 2020 	orl	a,r3
      0004C5 70 2F            [24] 2021 	jnz	00102$
                                   2022 ;	/opt/contiki/core/net/mac/phase.c:202: wait = (rtimer_clock_t)((sync - now) & (cycle_time - 1));
      0004C7 EC               [12] 2023 	mov	a,r4
      0004C8 C3               [12] 2024 	clr	c
      0004C9 9E               [12] 2025 	subb	a,r6
      0004CA FA               [12] 2026 	mov	r2,a
      0004CB ED               [12] 2027 	mov	a,r5
      0004CC 9F               [12] 2028 	subb	a,r7
      0004CD FB               [12] 2029 	mov	r3,a
      0004CE C0 06            [24] 2030 	push	ar6
      0004D0 C0 07            [24] 2031 	push	ar7
      0004D2 E5 81            [12] 2032 	mov	a,sp
      0004D4 24 F0            [12] 2033 	add	a,#0xf0
      0004D6 F8               [12] 2034 	mov	r0,a
      0004D7 E6               [12] 2035 	mov	a,@r0
      0004D8 24 FF            [12] 2036 	add	a,#0xFF
      0004DA FE               [12] 2037 	mov	r6,a
      0004DB 08               [12] 2038 	inc	r0
      0004DC E6               [12] 2039 	mov	a,@r0
      0004DD 34 FF            [12] 2040 	addc	a,#0xFF
      0004DF FF               [12] 2041 	mov	r7,a
      0004E0 EE               [12] 2042 	mov	a,r6
      0004E1 52 02            [12] 2043 	anl	ar2,a
      0004E3 EF               [12] 2044 	mov	a,r7
      0004E4 52 03            [12] 2045 	anl	ar3,a
      0004E6 E5 81            [12] 2046 	mov	a,sp
      0004E8 24 F8            [12] 2047 	add	a,#0xf8
      0004EA F8               [12] 2048 	mov	r0,a
      0004EB A6 02            [24] 2049 	mov	@r0,ar2
      0004ED 08               [12] 2050 	inc	r0
      0004EE A6 03            [24] 2051 	mov	@r0,ar3
      0004F0 D0 07            [24] 2052 	pop	ar7
      0004F2 D0 06            [24] 2053 	pop	ar6
      0004F4 80 41            [24] 2054 	sjmp	00103$
      0004F6                       2055 00102$:
                                   2056 ;	/opt/contiki/core/net/mac/phase.c:205: wait = cycle_time - (rtimer_clock_t)((now - sync) % cycle_time);
      0004F6 EE               [12] 2057 	mov	a,r6
      0004F7 C3               [12] 2058 	clr	c
      0004F8 9C               [12] 2059 	subb	a,r4
      0004F9 FC               [12] 2060 	mov	r4,a
      0004FA EF               [12] 2061 	mov	a,r7
      0004FB 9D               [12] 2062 	subb	a,r5
      0004FC FD               [12] 2063 	mov	r5,a
      0004FD C0 07            [24] 2064 	push	ar7
      0004FF C0 06            [24] 2065 	push	ar6
      000501 E5 81            [12] 2066 	mov	a,sp
      000503 24 F0            [12] 2067 	add	a,#0xf0
      000505 F8               [12] 2068 	mov	r0,a
      000506 E6               [12] 2069 	mov	a,@r0
      000507 C0 E0            [24] 2070 	push	acc
      000509 08               [12] 2071 	inc	r0
      00050A E6               [12] 2072 	mov	a,@r0
      00050B C0 E0            [24] 2073 	push	acc
      00050D 8C 82            [24] 2074 	mov	dpl,r4
      00050F 8D 83            [24] 2075 	mov	dph,r5
      000511 12r00r00         [24] 2076 	lcall	__moduint
      000514 AC 82            [24] 2077 	mov	r4,dpl
      000516 AD 83            [24] 2078 	mov	r5,dph
      000518 15 81            [12] 2079 	dec	sp
      00051A 15 81            [12] 2080 	dec	sp
      00051C D0 06            [24] 2081 	pop	ar6
      00051E D0 07            [24] 2082 	pop	ar7
      000520 E5 81            [12] 2083 	mov	a,sp
      000522 24 F2            [12] 2084 	add	a,#0xf2
      000524 F8               [12] 2085 	mov	r0,a
      000525 E6               [12] 2086 	mov	a,@r0
      000526 C3               [12] 2087 	clr	c
      000527 9C               [12] 2088 	subb	a,r4
      000528 FC               [12] 2089 	mov	r4,a
      000529 08               [12] 2090 	inc	r0
      00052A E6               [12] 2091 	mov	a,@r0
      00052B 9D               [12] 2092 	subb	a,r5
      00052C FD               [12] 2093 	mov	r5,a
      00052D E5 81            [12] 2094 	mov	a,sp
      00052F 24 FA            [12] 2095 	add	a,#0xfa
      000531 F8               [12] 2096 	mov	r0,a
      000532 A6 04            [24] 2097 	mov	@r0,ar4
      000534 08               [12] 2098 	inc	r0
      000535 A6 05            [24] 2099 	mov	@r0,ar5
      000537                       2100 00103$:
                                   2101 ;	/opt/contiki/core/net/mac/phase.c:208: if(wait < guard_time) {
      000537 E5 81            [12] 2102 	mov	a,sp
      000539 24 FA            [12] 2103 	add	a,#0xfa
      00053B F8               [12] 2104 	mov	r0,a
      00053C E5 81            [12] 2105 	mov	a,sp
      00053E 24 F0            [12] 2106 	add	a,#0xf0
      000540 F9               [12] 2107 	mov	r1,a
      000541 C3               [12] 2108 	clr	c
      000542 E6               [12] 2109 	mov	a,@r0
      000543 97               [12] 2110 	subb	a,@r1
      000544 08               [12] 2111 	inc	r0
      000545 E6               [12] 2112 	mov	a,@r0
      000546 09               [12] 2113 	inc	r1
      000547 97               [12] 2114 	subb	a,@r1
      000548 50 12            [24] 2115 	jnc	00105$
                                   2116 ;	/opt/contiki/core/net/mac/phase.c:209: wait += cycle_time;
      00054A E5 81            [12] 2117 	mov	a,sp
      00054C 24 FA            [12] 2118 	add	a,#0xfa
      00054E F8               [12] 2119 	mov	r0,a
      00054F E5 81            [12] 2120 	mov	a,sp
      000551 24 F2            [12] 2121 	add	a,#0xf2
      000553 F9               [12] 2122 	mov	r1,a
      000554 E7               [12] 2123 	mov	a,@r1
      000555 26               [12] 2124 	add	a,@r0
      000556 F6               [12] 2125 	mov	@r0,a
      000557 09               [12] 2126 	inc	r1
      000558 E7               [12] 2127 	mov	a,@r1
      000559 08               [12] 2128 	inc	r0
      00055A 36               [12] 2129 	addc	a,@r0
      00055B F6               [12] 2130 	mov	@r0,a
      00055C                       2131 00105$:
                                   2132 ;	/opt/contiki/core/net/mac/phase.c:212: ctimewait = (CLOCK_SECOND * (wait - guard_time)) / RTIMER_ARCH_SECOND;
      00055C E5 81            [12] 2133 	mov	a,sp
      00055E 24 FA            [12] 2134 	add	a,#0xfa
      000560 F8               [12] 2135 	mov	r0,a
      000561 E5 81            [12] 2136 	mov	a,sp
      000563 24 F0            [12] 2137 	add	a,#0xf0
      000565 F9               [12] 2138 	mov	r1,a
      000566 E6               [12] 2139 	mov	a,@r0
      000567 C3               [12] 2140 	clr	c
      000568 97               [12] 2141 	subb	a,@r1
      000569 FC               [12] 2142 	mov	r4,a
      00056A 08               [12] 2143 	inc	r0
      00056B E6               [12] 2144 	mov	a,@r0
      00056C 09               [12] 2145 	inc	r1
      00056D 97               [12] 2146 	subb	a,@r1
      00056E 54 01            [12] 2147 	anl	a,#0x01
      000570 A2 E0            [12] 2148 	mov	c,acc.0
      000572 CC               [12] 2149 	xch	a,r4
      000573 13               [12] 2150 	rrc	a
      000574 CC               [12] 2151 	xch	a,r4
      000575 13               [12] 2152 	rrc	a
      000576 CC               [12] 2153 	xch	a,r4
      000577 FD               [12] 2154 	mov	r5,a
      000578 C0 07            [24] 2155 	push	ar7
      00057A C0 06            [24] 2156 	push	ar6
      00057C 74 09            [12] 2157 	mov	a,#0x09
      00057E C0 E0            [24] 2158 	push	acc
      000580 74 3D            [12] 2159 	mov	a,#0x3D
      000582 C0 E0            [24] 2160 	push	acc
      000584 8C 82            [24] 2161 	mov	dpl,r4
      000586 8D 83            [24] 2162 	mov	dph,r5
      000588 12r00r00         [24] 2163 	lcall	__divuint
      00058B AC 82            [24] 2164 	mov	r4,dpl
      00058D AD 83            [24] 2165 	mov	r5,dph
      00058F 15 81            [12] 2166 	dec	sp
      000591 15 81            [12] 2167 	dec	sp
      000593 D0 06            [24] 2168 	pop	ar6
      000595 D0 07            [24] 2169 	pop	ar7
      000597 E5 81            [12] 2170 	mov	a,sp
      000599 24 FC            [12] 2171 	add	a,#0xfc
      00059B F8               [12] 2172 	mov	r0,a
      00059C A6 04            [24] 2173 	mov	@r0,ar4
      00059E 08               [12] 2174 	inc	r0
      00059F A6 05            [24] 2175 	mov	@r0,ar5
                                   2176 ;	/opt/contiki/core/net/mac/phase.c:214: if(ctimewait > PHASE_DEFER_THRESHOLD) {
      0005A1 E5 81            [12] 2177 	mov	a,sp
      0005A3 24 FC            [12] 2178 	add	a,#0xfc
      0005A5 F8               [12] 2179 	mov	r0,a
      0005A6 C3               [12] 2180 	clr	c
      0005A7 74 01            [12] 2181 	mov	a,#0x01
      0005A9 96               [12] 2182 	subb	a,@r0
      0005AA E4               [12] 2183 	clr	a
      0005AB 08               [12] 2184 	inc	r0
      0005AC 96               [12] 2185 	subb	a,@r0
      0005AD 40 03            [24] 2186 	jc	00156$
      0005AF 02r07r43         [24] 2187 	ljmp	00113$
      0005B2                       2188 00156$:
                                   2189 ;	/opt/contiki/core/net/mac/phase.c:217: p = memb_alloc(&queued_packets_memb);
      0005B2 90r00r00         [24] 2190 	mov	dptr,#_queued_packets_memb
      0005B5 75 F0 00         [24] 2191 	mov	b,#0x00
      0005B8 C0 07            [24] 2192 	push	ar7
      0005BA C0 06            [24] 2193 	push	ar6
      0005BC 78r00            [12] 2194 	mov	r0,#_memb_alloc
      0005BE 79s00            [12] 2195 	mov	r1,#(_memb_alloc >> 8)
      0005C0 7As00            [12] 2196 	mov	r2,#(_memb_alloc >> 16)
      0005C2 12r00r00         [24] 2197 	lcall	__sdcc_banked_call
      0005C5 AA 82            [24] 2198 	mov	r2,dpl
      0005C7 AB 83            [24] 2199 	mov	r3,dph
      0005C9 AD F0            [24] 2200 	mov	r5,b
      0005CB D0 06            [24] 2201 	pop	ar6
      0005CD D0 07            [24] 2202 	pop	ar7
      0005CF A8 81            [24] 2203 	mov	r0,sp
      0005D1 18               [12] 2204 	dec	r0
      0005D2 18               [12] 2205 	dec	r0
      0005D3 A6 02            [24] 2206 	mov	@r0,ar2
      0005D5 08               [12] 2207 	inc	r0
      0005D6 A6 03            [24] 2208 	mov	@r0,ar3
      0005D8 08               [12] 2209 	inc	r0
      0005D9 A6 05            [24] 2210 	mov	@r0,ar5
                                   2211 ;	/opt/contiki/core/net/mac/phase.c:218: if(p != NULL) {
      0005DB A8 81            [24] 2212 	mov	r0,sp
      0005DD 18               [12] 2213 	dec	r0
      0005DE 18               [12] 2214 	dec	r0
      0005DF E6               [12] 2215 	mov	a,@r0
      0005E0 08               [12] 2216 	inc	r0
      0005E1 46               [12] 2217 	orl	a,@r0
      0005E2 70 03            [24] 2218 	jnz	00157$
      0005E4 02r07r43         [24] 2219 	ljmp	00113$
      0005E7                       2220 00157$:
                                   2221 ;	/opt/contiki/core/net/mac/phase.c:219: if(buf_list == NULL) {
      0005E7 E5 81            [12] 2222 	mov	a,sp
      0005E9 24 E7            [12] 2223 	add	a,#0xe7
      0005EB F8               [12] 2224 	mov	r0,a
      0005EC E6               [12] 2225 	mov	a,@r0
      0005ED 08               [12] 2226 	inc	r0
      0005EE 46               [12] 2227 	orl	a,@r0
      0005EF 60 03            [24] 2228 	jz	00158$
      0005F1 02r06r7A         [24] 2229 	ljmp	00109$
      0005F4                       2230 00158$:
                                   2231 ;	/opt/contiki/core/net/mac/phase.c:220: packetbuf_set_attr(PACKETBUF_ATTR_IS_CREATED_AND_SECURED, 1);
      0005F4 74 01            [12] 2232 	mov	a,#0x01
      0005F6 C0 E0            [24] 2233 	push	acc
      0005F8 E4               [12] 2234 	clr	a
      0005F9 C0 E0            [24] 2235 	push	acc
      0005FB 75 82 0C         [24] 2236 	mov	dpl,#0x0C
      0005FE 78r00            [12] 2237 	mov	r0,#_packetbuf_set_attr
      000600 79s00            [12] 2238 	mov	r1,#(_packetbuf_set_attr >> 8)
      000602 7As00            [12] 2239 	mov	r2,#(_packetbuf_set_attr >> 16)
      000604 12r00r00         [24] 2240 	lcall	__sdcc_banked_call
      000607 15 81            [12] 2241 	dec	sp
      000609 15 81            [12] 2242 	dec	sp
                                   2243 ;	/opt/contiki/core/net/mac/phase.c:221: p->q = queuebuf_new_from_packetbuf();
      00060B A8 81            [24] 2244 	mov	r0,sp
      00060D 18               [12] 2245 	dec	r0
      00060E 18               [12] 2246 	dec	r0
      00060F 74 1C            [12] 2247 	mov	a,#0x1C
      000611 26               [12] 2248 	add	a,@r0
      000612 FF               [12] 2249 	mov	r7,a
      000613 E4               [12] 2250 	clr	a
      000614 08               [12] 2251 	inc	r0
      000615 36               [12] 2252 	addc	a,@r0
      000616 FE               [12] 2253 	mov	r6,a
      000617 08               [12] 2254 	inc	r0
      000618 86 02            [24] 2255 	mov	ar2,@r0
      00061A C0 07            [24] 2256 	push	ar7
      00061C C0 06            [24] 2257 	push	ar6
      00061E C0 02            [24] 2258 	push	ar2
      000620 78r00            [12] 2259 	mov	r0,#_queuebuf_new_from_packetbuf
      000622 79s00            [12] 2260 	mov	r1,#(_queuebuf_new_from_packetbuf >> 8)
      000624 7As00            [12] 2261 	mov	r2,#(_queuebuf_new_from_packetbuf >> 16)
      000626 12r00r00         [24] 2262 	lcall	__sdcc_banked_call
      000629 AB 82            [24] 2263 	mov	r3,dpl
      00062B AC 83            [24] 2264 	mov	r4,dph
      00062D AD F0            [24] 2265 	mov	r5,b
      00062F D0 02            [24] 2266 	pop	ar2
      000631 D0 06            [24] 2267 	pop	ar6
      000633 D0 07            [24] 2268 	pop	ar7
      000635 8F 82            [24] 2269 	mov	dpl,r7
      000637 8E 83            [24] 2270 	mov	dph,r6
      000639 8A F0            [24] 2271 	mov	b,r2
      00063B EB               [12] 2272 	mov	a,r3
      00063C 12r00r00         [24] 2273 	lcall	__gptrput
      00063F A3               [24] 2274 	inc	dptr
      000640 EC               [12] 2275 	mov	a,r4
      000641 12r00r00         [24] 2276 	lcall	__gptrput
      000644 A3               [24] 2277 	inc	dptr
      000645 ED               [12] 2278 	mov	a,r5
      000646 12r00r00         [24] 2279 	lcall	__gptrput
                                   2280 ;	/opt/contiki/core/net/mac/phase.c:222: if(p->q == NULL) {
      000649 EB               [12] 2281 	mov	a,r3
      00064A 4C               [12] 2282 	orl	a,r4
      00064B 70 2D            [24] 2283 	jnz	00109$
                                   2284 ;	/opt/contiki/core/net/mac/phase.c:224: memb_free(&queued_packets_memb, p);
      00064D A8 81            [24] 2285 	mov	r0,sp
      00064F 18               [12] 2286 	dec	r0
      000650 18               [12] 2287 	dec	r0
      000651 86 07            [24] 2288 	mov	ar7,@r0
      000653 08               [12] 2289 	inc	r0
      000654 86 06            [24] 2290 	mov	ar6,@r0
      000656 08               [12] 2291 	inc	r0
      000657 86 05            [24] 2292 	mov	ar5,@r0
      000659 C0 07            [24] 2293 	push	ar7
      00065B C0 06            [24] 2294 	push	ar6
      00065D C0 05            [24] 2295 	push	ar5
      00065F 90r00r00         [24] 2296 	mov	dptr,#_queued_packets_memb
      000662 75 F0 00         [24] 2297 	mov	b,#0x00
      000665 78r00            [12] 2298 	mov	r0,#_memb_free
      000667 79s00            [12] 2299 	mov	r1,#(_memb_free >> 8)
      000669 7As00            [12] 2300 	mov	r2,#(_memb_free >> 16)
      00066B 12r00r00         [24] 2301 	lcall	__sdcc_banked_call
      00066E 15 81            [12] 2302 	dec	sp
      000670 15 81            [12] 2303 	dec	sp
      000672 15 81            [12] 2304 	dec	sp
                                   2305 ;	/opt/contiki/core/net/mac/phase.c:225: return PHASE_UNKNOWN;
      000674 75 82 00         [24] 2306 	mov	dpl,#0x00
      000677 02r07r87         [24] 2307 	ljmp	00121$
      00067A                       2308 00109$:
                                   2309 ;	/opt/contiki/core/net/mac/phase.c:228: p->mac_callback = mac_callback;
      00067A A8 81            [24] 2310 	mov	r0,sp
      00067C 18               [12] 2311 	dec	r0
      00067D 18               [12] 2312 	dec	r0
      00067E 74 16            [12] 2313 	mov	a,#0x16
      000680 26               [12] 2314 	add	a,@r0
      000681 FA               [12] 2315 	mov	r2,a
      000682 E4               [12] 2316 	clr	a
      000683 08               [12] 2317 	inc	r0
      000684 36               [12] 2318 	addc	a,@r0
      000685 FB               [12] 2319 	mov	r3,a
      000686 08               [12] 2320 	inc	r0
      000687 86 05            [24] 2321 	mov	ar5,@r0
      000689 8A 82            [24] 2322 	mov	dpl,r2
      00068B 8B 83            [24] 2323 	mov	dph,r3
      00068D 8D F0            [24] 2324 	mov	b,r5
      00068F E5 81            [12] 2325 	mov	a,sp
      000691 24 ED            [12] 2326 	add	a,#0xed
      000693 F8               [12] 2327 	mov	r0,a
      000694 E6               [12] 2328 	mov	a,@r0
      000695 12r00r00         [24] 2329 	lcall	__gptrput
      000698 A3               [24] 2330 	inc	dptr
      000699 08               [12] 2331 	inc	r0
      00069A E6               [12] 2332 	mov	a,@r0
      00069B 12r00r00         [24] 2333 	lcall	__gptrput
      00069E A3               [24] 2334 	inc	dptr
      00069F 08               [12] 2335 	inc	r0
      0006A0 E6               [12] 2336 	mov	a,@r0
      0006A1 12r00r00         [24] 2337 	lcall	__gptrput
                                   2338 ;	/opt/contiki/core/net/mac/phase.c:229: p->mac_callback_ptr = mac_callback_ptr;
      0006A4 A8 81            [24] 2339 	mov	r0,sp
      0006A6 18               [12] 2340 	dec	r0
      0006A7 18               [12] 2341 	dec	r0
      0006A8 74 19            [12] 2342 	mov	a,#0x19
      0006AA 26               [12] 2343 	add	a,@r0
      0006AB FB               [12] 2344 	mov	r3,a
      0006AC E4               [12] 2345 	clr	a
      0006AD 08               [12] 2346 	inc	r0
      0006AE 36               [12] 2347 	addc	a,@r0
      0006AF FC               [12] 2348 	mov	r4,a
      0006B0 08               [12] 2349 	inc	r0
      0006B1 86 05            [24] 2350 	mov	ar5,@r0
      0006B3 8B 82            [24] 2351 	mov	dpl,r3
      0006B5 8C 83            [24] 2352 	mov	dph,r4
      0006B7 8D F0            [24] 2353 	mov	b,r5
      0006B9 E5 81            [12] 2354 	mov	a,sp
      0006BB 24 EA            [12] 2355 	add	a,#0xea
      0006BD F8               [12] 2356 	mov	r0,a
      0006BE E6               [12] 2357 	mov	a,@r0
      0006BF 12r00r00         [24] 2358 	lcall	__gptrput
      0006C2 A3               [24] 2359 	inc	dptr
      0006C3 08               [12] 2360 	inc	r0
      0006C4 E6               [12] 2361 	mov	a,@r0
      0006C5 12r00r00         [24] 2362 	lcall	__gptrput
      0006C8 A3               [24] 2363 	inc	dptr
      0006C9 08               [12] 2364 	inc	r0
      0006CA E6               [12] 2365 	mov	a,@r0
      0006CB 12r00r00         [24] 2366 	lcall	__gptrput
                                   2367 ;	/opt/contiki/core/net/mac/phase.c:230: p->buf_list = buf_list;
      0006CE A8 81            [24] 2368 	mov	r0,sp
      0006D0 18               [12] 2369 	dec	r0
      0006D1 18               [12] 2370 	dec	r0
      0006D2 74 1F            [12] 2371 	mov	a,#0x1F
      0006D4 26               [12] 2372 	add	a,@r0
      0006D5 FB               [12] 2373 	mov	r3,a
      0006D6 E4               [12] 2374 	clr	a
      0006D7 08               [12] 2375 	inc	r0
      0006D8 36               [12] 2376 	addc	a,@r0
      0006D9 FC               [12] 2377 	mov	r4,a
      0006DA 08               [12] 2378 	inc	r0
      0006DB 86 05            [24] 2379 	mov	ar5,@r0
      0006DD 8B 82            [24] 2380 	mov	dpl,r3
      0006DF 8C 83            [24] 2381 	mov	dph,r4
      0006E1 8D F0            [24] 2382 	mov	b,r5
      0006E3 E5 81            [12] 2383 	mov	a,sp
      0006E5 24 E7            [12] 2384 	add	a,#0xe7
      0006E7 F8               [12] 2385 	mov	r0,a
      0006E8 E6               [12] 2386 	mov	a,@r0
      0006E9 12r00r00         [24] 2387 	lcall	__gptrput
      0006EC A3               [24] 2388 	inc	dptr
      0006ED 08               [12] 2389 	inc	r0
      0006EE E6               [12] 2390 	mov	a,@r0
      0006EF 12r00r00         [24] 2391 	lcall	__gptrput
      0006F2 A3               [24] 2392 	inc	dptr
      0006F3 08               [12] 2393 	inc	r0
      0006F4 E6               [12] 2394 	mov	a,@r0
      0006F5 12r00r00         [24] 2395 	lcall	__gptrput
                                   2396 ;	/opt/contiki/core/net/mac/phase.c:231: ctimer_set(&p->timer, ctimewait, send_packet, p);
      0006F8 A8 81            [24] 2397 	mov	r0,sp
      0006FA 18               [12] 2398 	dec	r0
      0006FB 18               [12] 2399 	dec	r0
      0006FC 86 03            [24] 2400 	mov	ar3,@r0
      0006FE 08               [12] 2401 	inc	r0
      0006FF 86 04            [24] 2402 	mov	ar4,@r0
      000701 08               [12] 2403 	inc	r0
      000702 86 05            [24] 2404 	mov	ar5,@r0
      000704 C0 03            [24] 2405 	push	ar3
      000706 C0 04            [24] 2406 	push	ar4
      000708 C0 05            [24] 2407 	push	ar5
      00070A 74r19            [12] 2408 	mov	a,#_send_packet
      00070C C0 E0            [24] 2409 	push	acc
      00070E 74s02            [12] 2410 	mov	a,#(_send_packet >> 8)
      000710 C0 E0            [24] 2411 	push	acc
      000712 74s00            [12] 2412 	mov	a,#(_send_packet >> 16)
      000714 C0 E0            [24] 2413 	push	acc
      000716 E5 81            [12] 2414 	mov	a,sp
      000718 24 F6            [12] 2415 	add	a,#0xf6
      00071A F8               [12] 2416 	mov	r0,a
      00071B E6               [12] 2417 	mov	a,@r0
      00071C C0 E0            [24] 2418 	push	acc
      00071E 08               [12] 2419 	inc	r0
      00071F E6               [12] 2420 	mov	a,@r0
      000720 C0 E0            [24] 2421 	push	acc
      000722 E5 81            [12] 2422 	mov	a,sp
      000724 24 F6            [12] 2423 	add	a,#0xf6
      000726 F8               [12] 2424 	mov	r0,a
      000727 86 82            [24] 2425 	mov	dpl,@r0
      000729 08               [12] 2426 	inc	r0
      00072A 86 83            [24] 2427 	mov	dph,@r0
      00072C 08               [12] 2428 	inc	r0
      00072D 86 F0            [24] 2429 	mov	b,@r0
      00072F 78r00            [12] 2430 	mov	r0,#_ctimer_set
      000731 79s00            [12] 2431 	mov	r1,#(_ctimer_set >> 8)
      000733 7As00            [12] 2432 	mov	r2,#(_ctimer_set >> 16)
      000735 12r00r00         [24] 2433 	lcall	__sdcc_banked_call
      000738 E5 81            [12] 2434 	mov	a,sp
      00073A 24 F8            [12] 2435 	add	a,#0xf8
      00073C F5 81            [12] 2436 	mov	sp,a
                                   2437 ;	/opt/contiki/core/net/mac/phase.c:232: return PHASE_DEFERRED;
      00073E 75 82 02         [24] 2438 	mov	dpl,#0x02
      000741 80 44            [24] 2439 	sjmp	00121$
      000743                       2440 00113$:
                                   2441 ;	/opt/contiki/core/net/mac/phase.c:236: expected = now + wait - guard_time;
      000743 E5 81            [12] 2442 	mov	a,sp
      000745 24 FA            [12] 2443 	add	a,#0xfa
      000747 F8               [12] 2444 	mov	r0,a
      000748 E6               [12] 2445 	mov	a,@r0
      000749 2E               [12] 2446 	add	a,r6
      00074A FC               [12] 2447 	mov	r4,a
      00074B 08               [12] 2448 	inc	r0
      00074C E6               [12] 2449 	mov	a,@r0
      00074D 3F               [12] 2450 	addc	a,r7
      00074E FD               [12] 2451 	mov	r5,a
      00074F E5 81            [12] 2452 	mov	a,sp
      000751 24 F0            [12] 2453 	add	a,#0xf0
      000753 F8               [12] 2454 	mov	r0,a
      000754 EC               [12] 2455 	mov	a,r4
      000755 C3               [12] 2456 	clr	c
      000756 96               [12] 2457 	subb	a,@r0
      000757 FC               [12] 2458 	mov	r4,a
      000758 ED               [12] 2459 	mov	a,r5
      000759 08               [12] 2460 	inc	r0
      00075A 96               [12] 2461 	subb	a,@r0
      00075B FD               [12] 2462 	mov	r5,a
                                   2463 ;	/opt/contiki/core/net/mac/phase.c:237: if(!RTIMER_CLOCK_LT(expected, now)) {
      00075C EC               [12] 2464 	mov	a,r4
      00075D C3               [12] 2465 	clr	c
      00075E 9E               [12] 2466 	subb	a,r6
      00075F FE               [12] 2467 	mov	r6,a
      000760 ED               [12] 2468 	mov	a,r5
      000761 9F               [12] 2469 	subb	a,r7
      000762 FF               [12] 2470 	mov	r7,a
      000763 20 E7 19         [24] 2471 	jb	acc.7,00118$
                                   2472 ;	/opt/contiki/core/net/mac/phase.c:239: while(RTIMER_CLOCK_LT(RTIMER_NOW(), expected));
      000766                       2473 00114$:
      000766 AE E2            [24] 2474 	mov	r6,_T1CNTL
      000768 7F 00            [12] 2475 	mov	r7,#0x00
      00076A AA E3            [24] 2476 	mov	r2,_T1CNTH
      00076C 8A 03            [24] 2477 	mov	ar3,r2
      00076E E4               [12] 2478 	clr	a
      00076F FA               [12] 2479 	mov	r2,a
      000770 2E               [12] 2480 	add	a,r6
      000771 FE               [12] 2481 	mov	r6,a
      000772 EB               [12] 2482 	mov	a,r3
      000773 3F               [12] 2483 	addc	a,r7
      000774 FF               [12] 2484 	mov	r7,a
      000775 EE               [12] 2485 	mov	a,r6
      000776 C3               [12] 2486 	clr	c
      000777 9C               [12] 2487 	subb	a,r4
      000778 FE               [12] 2488 	mov	r6,a
      000779 EF               [12] 2489 	mov	a,r7
      00077A 9D               [12] 2490 	subb	a,r5
      00077B FF               [12] 2491 	mov	r7,a
      00077C 20 E7 E7         [24] 2492 	jb	acc.7,00114$
      00077F                       2493 00118$:
                                   2494 ;	/opt/contiki/core/net/mac/phase.c:241: return PHASE_SEND_NOW;
      00077F 75 82 01         [24] 2495 	mov	dpl,#0x01
      000782 80 03            [24] 2496 	sjmp	00121$
      000784                       2497 00120$:
                                   2498 ;	/opt/contiki/core/net/mac/phase.c:243: return PHASE_UNKNOWN;
      000784 75 82 00         [24] 2499 	mov	dpl,#0x00
      000787                       2500 00121$:
      000787 E5 81            [12] 2501 	mov	a,sp
      000789 24 F6            [12] 2502 	add	a,#0xF6
      00078B F5 81            [12] 2503 	mov	sp,a
      00078D 02r00r00         [24] 2504 	ljmp	__sdcc_banked_ret
                                   2505 ;------------------------------------------------------------
                                   2506 ;Allocation info for local variables in function 'phase_init'
                                   2507 ;------------------------------------------------------------
                                   2508 ;	/opt/contiki/core/net/mac/phase.c:247: phase_init(void)
                                   2509 ;	-----------------------------------------
                                   2510 ;	 function phase_init
                                   2511 ;	-----------------------------------------
      000790                       2512 _phase_init:
                                   2513 ;	/opt/contiki/core/net/mac/phase.c:249: memb_init(&queued_packets_memb);
      000790 90r00r00         [24] 2514 	mov	dptr,#_queued_packets_memb
      000793 75 F0 00         [24] 2515 	mov	b,#0x00
      000796 78r00            [12] 2516 	mov	r0,#_memb_init
      000798 79s00            [12] 2517 	mov	r1,#(_memb_init >> 8)
      00079A 7As00            [12] 2518 	mov	r2,#(_memb_init >> 16)
      00079C 12r00r00         [24] 2519 	lcall	__sdcc_banked_call
                                   2520 ;	/opt/contiki/core/net/mac/phase.c:250: nbr_table_register(nbr_phase, NULL);
      00079F 90r00r14         [24] 2521 	mov	dptr,#_nbr_phase
      0007A2 E0               [24] 2522 	movx	a,@dptr
      0007A3 FD               [12] 2523 	mov	r5,a
      0007A4 A3               [24] 2524 	inc	dptr
      0007A5 E0               [24] 2525 	movx	a,@dptr
      0007A6 FE               [12] 2526 	mov	r6,a
      0007A7 A3               [24] 2527 	inc	dptr
      0007A8 E0               [24] 2528 	movx	a,@dptr
      0007A9 FF               [12] 2529 	mov	r7,a
      0007AA E4               [12] 2530 	clr	a
      0007AB C0 E0            [24] 2531 	push	acc
      0007AD C0 E0            [24] 2532 	push	acc
      0007AF 74 80            [12] 2533 	mov	a,#0x80
      0007B1 C0 E0            [24] 2534 	push	acc
      0007B3 8D 82            [24] 2535 	mov	dpl,r5
      0007B5 8E 83            [24] 2536 	mov	dph,r6
      0007B7 8F F0            [24] 2537 	mov	b,r7
      0007B9 78r00            [12] 2538 	mov	r0,#_nbr_table_register
      0007BB 79s00            [12] 2539 	mov	r1,#(_nbr_table_register >> 8)
      0007BD 7As00            [12] 2540 	mov	r2,#(_nbr_table_register >> 16)
      0007BF 12r00r00         [24] 2541 	lcall	__sdcc_banked_call
      0007C2 15 81            [12] 2542 	dec	sp
      0007C4 15 81            [12] 2543 	dec	sp
      0007C6 15 81            [12] 2544 	dec	sp
      0007C8 02r00r00         [24] 2545 	ljmp	__sdcc_banked_ret
                                   2546 	.area CSEG    (CODE)
                                   2547 	.area CONST   (CODE)
                                   2548 	.area XINIT   (CODE)
      000000                       2549 __xinit__queued_packets_memb:
      000000 22 00                 2550 	.byte #0x22,#0x00	; 34
      000002 08 00                 2551 	.byte #0x08,#0x00	; 8
      000004r00s00 00              2552 	.byte _queued_packets_memb_memb_count, (_queued_packets_memb_memb_count >> 8),#0x00
      000007r08s00 00              2553 	.byte _queued_packets_memb_memb_mem, (_queued_packets_memb_memb_mem >> 8),#0x00
      00000A                       2554 __xinit__nbr_phase_struct:
      00000A 00 00                 2555 	.byte #0x00,#0x00	;  0
      00000C 07 00                 2556 	.byte #0x07,#0x00	;  7
      00000E 00 00 00              2557 	.byte #0x00,#0x00,#0x00
      000011r18s01 00              2558 	.byte __nbr_phase_mem, (__nbr_phase_mem >> 8),#0x00
      000014                       2559 __xinit__nbr_phase:
      000014r0As00 00              2560 	.byte _nbr_phase_struct, (_nbr_phase_struct >> 8),#0x00
                                   2561 	.area CABS    (ABS,CODE)
