                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.5 #9380 (Linux)
                                      4 ; This file was generated Wed Nov 18 02:57:35 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module rpl_timers
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _random_rand
                                     13 	.globl _rpl_purge_routes
                                     14 	.globl _rpl_recalculate_ranks
                                     15 	.globl _rpl_purge_dags
                                     16 	.globl _dao_output
                                     17 	.globl _dio_output
                                     18 	.globl _dis_output
                                     19 	.globl _rpl_get_mode
                                     20 	.globl _rpl_get_parent_ipaddr
                                     21 	.globl _rpl_get_any_dag
                                     22 	.globl _uip_ds6_get_link_local
                                     23 	.globl _nbr_table_next
                                     24 	.globl _nbr_table_head
                                     25 	.globl _ctimer_stop
                                     26 	.globl _ctimer_set
                                     27 	.globl _ctimer_reset
                                     28 	.globl _etimer_expired
                                     29 	.globl _etimer_expiration_time
                                     30 	.globl _clock_time
                                     31 	.globl _ACTIVE
                                     32 	.globl _TX_BYTE
                                     33 	.globl _RX_BYTE
                                     34 	.globl _ERR
                                     35 	.globl _FE
                                     36 	.globl _SLAVE
                                     37 	.globl _RE
                                     38 	.globl _MODE
                                     39 	.globl _T3OVFIF
                                     40 	.globl _T3CH0IF
                                     41 	.globl _T3CH1IF
                                     42 	.globl _T4OVFIF
                                     43 	.globl _T4CH0IF
                                     44 	.globl _T4CH1IF
                                     45 	.globl _OVFIM
                                     46 	.globl _B_0
                                     47 	.globl _B_1
                                     48 	.globl _B_2
                                     49 	.globl _B_3
                                     50 	.globl _B_4
                                     51 	.globl _B_5
                                     52 	.globl _B_6
                                     53 	.globl _B_7
                                     54 	.globl _P2IF
                                     55 	.globl _UTX0IF
                                     56 	.globl _UTX1IF
                                     57 	.globl _P1IF
                                     58 	.globl _WDTIF
                                     59 	.globl _ACC_0
                                     60 	.globl _ACC_1
                                     61 	.globl _ACC_2
                                     62 	.globl _ACC_3
                                     63 	.globl _ACC_4
                                     64 	.globl _ACC_5
                                     65 	.globl _ACC_6
                                     66 	.globl _ACC_7
                                     67 	.globl _P
                                     68 	.globl _F1
                                     69 	.globl _OV
                                     70 	.globl _RS0
                                     71 	.globl _RS1
                                     72 	.globl _F0
                                     73 	.globl _AC
                                     74 	.globl _CY
                                     75 	.globl _DMAIF
                                     76 	.globl _T1IF
                                     77 	.globl _T2IF
                                     78 	.globl _T3IF
                                     79 	.globl _T4IF
                                     80 	.globl _P0IF
                                     81 	.globl _STIF
                                     82 	.globl _DMAIE
                                     83 	.globl _T1IE
                                     84 	.globl _T2IE
                                     85 	.globl _T3IE
                                     86 	.globl _T4IE
                                     87 	.globl _P0IE
                                     88 	.globl _RFERRIE
                                     89 	.globl _ADCIE
                                     90 	.globl _URX0IE
                                     91 	.globl _URX1IE
                                     92 	.globl _ENCIE
                                     93 	.globl _STIE
                                     94 	.globl _EA
                                     95 	.globl _P2_0
                                     96 	.globl _P2_1
                                     97 	.globl _P2_2
                                     98 	.globl _P2_3
                                     99 	.globl _P2_4
                                    100 	.globl _P2_5
                                    101 	.globl _P2_6
                                    102 	.globl _P2_7
                                    103 	.globl _ENCIF_0
                                    104 	.globl _ENCIF_1
                                    105 	.globl _P1_0
                                    106 	.globl _P1_1
                                    107 	.globl _P1_2
                                    108 	.globl _P1_3
                                    109 	.globl _P1_4
                                    110 	.globl _P1_5
                                    111 	.globl _P1_6
                                    112 	.globl _P1_7
                                    113 	.globl _IT0
                                    114 	.globl _RFERRIF
                                    115 	.globl _IT1
                                    116 	.globl _URX0IF
                                    117 	.globl _ADCIF
                                    118 	.globl _URX1IF
                                    119 	.globl _P0_0
                                    120 	.globl _P0_1
                                    121 	.globl _P0_2
                                    122 	.globl _P0_3
                                    123 	.globl _P0_4
                                    124 	.globl _P0_5
                                    125 	.globl _P0_6
                                    126 	.globl _P0_7
                                    127 	.globl _WDCTL
                                    128 	.globl _U1GCR
                                    129 	.globl _U1UCR
                                    130 	.globl _U1BAUD
                                    131 	.globl _U1DBUF
                                    132 	.globl _U1CSR
                                    133 	.globl _U0GCR
                                    134 	.globl _U0UCR
                                    135 	.globl _U0BAUD
                                    136 	.globl _U0DBUF
                                    137 	.globl _U0CSR
                                    138 	.globl _TIMIF
                                    139 	.globl _T4CC1
                                    140 	.globl _T4CCTL1
                                    141 	.globl _T4CC0
                                    142 	.globl _T4CCTL0
                                    143 	.globl _T4CTL
                                    144 	.globl _T4CNT
                                    145 	.globl _T3CC1
                                    146 	.globl _T3CCTL1
                                    147 	.globl _T3CC0
                                    148 	.globl _T3CCTL0
                                    149 	.globl _T3CTL
                                    150 	.globl _T3CNT
                                    151 	.globl _T2MSEL
                                    152 	.globl _T2IRQM
                                    153 	.globl _T2MOVF2
                                    154 	.globl _T2MOVF1
                                    155 	.globl _T2MOVF0
                                    156 	.globl _T2M1
                                    157 	.globl _T2M0
                                    158 	.globl _T2IRQF
                                    159 	.globl _T2EVTCFG
                                    160 	.globl _T2CTRL
                                    161 	.globl _T1STAT
                                    162 	.globl _T1CCTL2
                                    163 	.globl _T1CCTL1
                                    164 	.globl _T1CCTL0
                                    165 	.globl _T1CTL
                                    166 	.globl _T1CNTH
                                    167 	.globl _T1CNTL
                                    168 	.globl _T1CC2H
                                    169 	.globl _T1CC2L
                                    170 	.globl _T1CC1H
                                    171 	.globl _T1CC1L
                                    172 	.globl _T1CC0H
                                    173 	.globl _T1CC0L
                                    174 	.globl _CLKCONSTA
                                    175 	.globl _CLKCONCMD
                                    176 	.globl _SLEEPSTA
                                    177 	.globl _SLEEPCMD
                                    178 	.globl _STLOAD
                                    179 	.globl _ST2
                                    180 	.globl _ST1
                                    181 	.globl _ST0
                                    182 	.globl _RFERRF
                                    183 	.globl _RFIRQF0
                                    184 	.globl _RFST
                                    185 	.globl _RFD
                                    186 	.globl _RFIRQF1
                                    187 	.globl _PSBANK
                                    188 	.globl _FMAP
                                    189 	.globl _MEMCTR
                                    190 	.globl __XPAGE
                                    191 	.globl _MPAGE
                                    192 	.globl _PMUX
                                    193 	.globl _P2DIR
                                    194 	.globl _P1DIR
                                    195 	.globl _P0DIR
                                    196 	.globl _P2INP
                                    197 	.globl _P1INP
                                    198 	.globl _P2SEL
                                    199 	.globl _P1SEL
                                    200 	.globl _P0SEL
                                    201 	.globl _APCFG
                                    202 	.globl _PERCFG
                                    203 	.globl _P0INP
                                    204 	.globl _P2IEN
                                    205 	.globl _P1IEN
                                    206 	.globl _P0IEN
                                    207 	.globl _PICTL
                                    208 	.globl _P2IFG
                                    209 	.globl _P1IFG
                                    210 	.globl _P0IFG
                                    211 	.globl _DMAREQ
                                    212 	.globl _DMAARM
                                    213 	.globl _DMA0CFGH
                                    214 	.globl _DMA0CFGL
                                    215 	.globl _DMA1CFGH
                                    216 	.globl _DMA1CFGL
                                    217 	.globl _DMAIRQ
                                    218 	.globl _ENCCS
                                    219 	.globl _ENCDO
                                    220 	.globl _ENCDI
                                    221 	.globl _RNDH
                                    222 	.globl _RNDL
                                    223 	.globl _ADCH
                                    224 	.globl _ADCL
                                    225 	.globl _ADCCON3
                                    226 	.globl _ADCCON2
                                    227 	.globl _ADCCON1
                                    228 	.globl _B
                                    229 	.globl _IRCON2
                                    230 	.globl _ACC
                                    231 	.globl _PSW
                                    232 	.globl _IRCON
                                    233 	.globl _IP1
                                    234 	.globl _IEN1
                                    235 	.globl _IP0
                                    236 	.globl _IEN0
                                    237 	.globl _P2
                                    238 	.globl _S1CON
                                    239 	.globl _IEN2
                                    240 	.globl _S0CON
                                    241 	.globl _DPS
                                    242 	.globl _P1
                                    243 	.globl _TCON
                                    244 	.globl _PCON
                                    245 	.globl _DPH1
                                    246 	.globl _DPL1
                                    247 	.globl _DPH0
                                    248 	.globl _DPL0
                                    249 	.globl _SP
                                    250 	.globl _P0
                                    251 	.globl _X_IEEE_ADDR
                                    252 	.globl _X_INFOPAGE
                                    253 	.globl _X_P2DIR
                                    254 	.globl _X_P1DIR
                                    255 	.globl _X_P0DIR
                                    256 	.globl _X_U1GCR
                                    257 	.globl _X_U1UCR
                                    258 	.globl _X_U1BAUD
                                    259 	.globl _X_U1DBUF
                                    260 	.globl _X_U1CSR
                                    261 	.globl _X_P2INP
                                    262 	.globl _X_P1INP
                                    263 	.globl _X_P2SEL
                                    264 	.globl _X_P1SEL
                                    265 	.globl _X_P0SEL
                                    266 	.globl _X_APCFG
                                    267 	.globl _X_PERCFG
                                    268 	.globl _X_T4CC1
                                    269 	.globl _X_T4CCTL1
                                    270 	.globl _X_T4CC0
                                    271 	.globl _X_T4CCTL0
                                    272 	.globl _X_T4CTL
                                    273 	.globl _X_T4CNT
                                    274 	.globl _X_RFIRQF0
                                    275 	.globl _X_T1CCTL2
                                    276 	.globl _X_T1CCTL1
                                    277 	.globl _X_T1CCTL0
                                    278 	.globl _X_T1CTL
                                    279 	.globl _X_T1CNTH
                                    280 	.globl _X_T1CNTL
                                    281 	.globl _X_RFST
                                    282 	.globl _X_T1CC2H
                                    283 	.globl _X_T1CC2L
                                    284 	.globl _X_T1CC1H
                                    285 	.globl _X_T1CC1L
                                    286 	.globl _X_T1CC0H
                                    287 	.globl _X_T1CC0L
                                    288 	.globl _X_RFD
                                    289 	.globl _X_TIMIF
                                    290 	.globl _X_DMAREQ
                                    291 	.globl _X_DMAARM
                                    292 	.globl _X_DMA0CFGH
                                    293 	.globl _X_DMA0CFGL
                                    294 	.globl _X_DMA1CFGH
                                    295 	.globl _X_DMA1CFGL
                                    296 	.globl _X_DMAIRQ
                                    297 	.globl _X_T3CC1
                                    298 	.globl _X_T3CCTL1
                                    299 	.globl _X_T3CC0
                                    300 	.globl _X_T3CCTL0
                                    301 	.globl _X_T3CTL
                                    302 	.globl _X_T3CNT
                                    303 	.globl _X_WDCTL
                                    304 	.globl _X_MEMCTR
                                    305 	.globl _X_CLKCONCMD
                                    306 	.globl _X_U0GCR
                                    307 	.globl _X_U0UCR
                                    308 	.globl _X_T2MSEL
                                    309 	.globl _X_U0BAUD
                                    310 	.globl _X_U0DBUF
                                    311 	.globl _X_RFERRF
                                    312 	.globl _X_SLEEPCMD
                                    313 	.globl _X_RNDH
                                    314 	.globl _X_RNDL
                                    315 	.globl _X_ADCH
                                    316 	.globl _X_ADCL
                                    317 	.globl _X_ADCCON3
                                    318 	.globl _X_ADCCON2
                                    319 	.globl _X_ADCCON1
                                    320 	.globl _X_ENCCS
                                    321 	.globl _X_ENCDO
                                    322 	.globl _X_ENCDI
                                    323 	.globl _X_T1STAT
                                    324 	.globl _X_PMUX
                                    325 	.globl _X_STLOAD
                                    326 	.globl _X_P2IEN
                                    327 	.globl _X_P0IEN
                                    328 	.globl _X_T2IRQM
                                    329 	.globl _X_T2MOVF2
                                    330 	.globl _X_T2MOVF1
                                    331 	.globl _X_T2MOVF0
                                    332 	.globl _X_T2M1
                                    333 	.globl _X_T2M0
                                    334 	.globl _X_T2IRQF
                                    335 	.globl _X_P2
                                    336 	.globl _X_PSBANK
                                    337 	.globl _X_FMAP
                                    338 	.globl _X_CLKCONSTA
                                    339 	.globl _X_SLEEPSTA
                                    340 	.globl _X_T2EVTCFG
                                    341 	.globl _X_ST2
                                    342 	.globl _X_ST1
                                    343 	.globl _X_ST0
                                    344 	.globl _X_T2CTRL
                                    345 	.globl _X__XPAGE
                                    346 	.globl _X_MPAGE
                                    347 	.globl _X_RFIRQF1
                                    348 	.globl _X_P1
                                    349 	.globl _X_P0INP
                                    350 	.globl _X_P1IEN
                                    351 	.globl _X_PICTL
                                    352 	.globl _X_P2IFG
                                    353 	.globl _X_P1IFG
                                    354 	.globl _X_P0IFG
                                    355 	.globl _X_U0CSR
                                    356 	.globl _X_P0
                                    357 	.globl _USBF5
                                    358 	.globl _USBF4
                                    359 	.globl _USBF3
                                    360 	.globl _USBF2
                                    361 	.globl _USBF1
                                    362 	.globl _USBF0
                                    363 	.globl _USBCNTH
                                    364 	.globl _USBCNTL
                                    365 	.globl _USBCNT0
                                    366 	.globl _USBCSOH
                                    367 	.globl _USBCSOL
                                    368 	.globl _USBMAXO
                                    369 	.globl _USBCSIH
                                    370 	.globl _USBCSIL
                                    371 	.globl _USBCS0
                                    372 	.globl _USBMAXI
                                    373 	.globl _USBCTRL
                                    374 	.globl _USBINDEX
                                    375 	.globl _USBFRMH
                                    376 	.globl _USBFRML
                                    377 	.globl _USBCIE
                                    378 	.globl _USBOIE
                                    379 	.globl _USBIIE
                                    380 	.globl _USBCIF
                                    381 	.globl _USBOIF
                                    382 	.globl _USBIIF
                                    383 	.globl _USBPOW
                                    384 	.globl _USBADDR
                                    385 	.globl _CSPT
                                    386 	.globl _CSPZ
                                    387 	.globl _CSPY
                                    388 	.globl _CSPX
                                    389 	.globl _CSPSTAT
                                    390 	.globl _CSPCTRL
                                    391 	.globl _CSPPROG23
                                    392 	.globl _CSPPROG22
                                    393 	.globl _CSPPROG21
                                    394 	.globl _CSPPROG20
                                    395 	.globl _CSPPROG19
                                    396 	.globl _CSPPROG18
                                    397 	.globl _CSPPROG17
                                    398 	.globl _CSPPROG16
                                    399 	.globl _CSPPROG15
                                    400 	.globl _CSPPROG14
                                    401 	.globl _CSPPROG13
                                    402 	.globl _CSPPROG12
                                    403 	.globl _CSPPROG11
                                    404 	.globl _CSPPROG10
                                    405 	.globl _CSPPROG9
                                    406 	.globl _CSPPROG8
                                    407 	.globl _CSPPROG7
                                    408 	.globl _CSPPROG6
                                    409 	.globl _CSPPROG5
                                    410 	.globl _CSPPROG4
                                    411 	.globl _CSPPROG3
                                    412 	.globl _CSPPROG2
                                    413 	.globl _CSPPROG1
                                    414 	.globl _CSPPROG0
                                    415 	.globl _RFC_OBS_CTRL2
                                    416 	.globl _RFC_OBS_CTRL1
                                    417 	.globl _RFC_OBS_CTRL0
                                    418 	.globl _TXFILTCFG
                                    419 	.globl _PTEST1
                                    420 	.globl _PTEST0
                                    421 	.globl _ATEST
                                    422 	.globl _DACTEST2
                                    423 	.globl _DACTEST1
                                    424 	.globl _DACTEST0
                                    425 	.globl _MDMTEST1
                                    426 	.globl _MDMTEST0
                                    427 	.globl _ADCTEST2
                                    428 	.globl _ADCTEST1
                                    429 	.globl _ADCTEST0
                                    430 	.globl _AGCCTRL3
                                    431 	.globl _AGCCTRL2
                                    432 	.globl _AGCCTRL1
                                    433 	.globl _AGCCTRL0
                                    434 	.globl _FSCAL3
                                    435 	.globl _FSCAL2
                                    436 	.globl _FSCAL1
                                    437 	.globl _FSCAL0
                                    438 	.globl _FSCTRL
                                    439 	.globl _RXCTRL
                                    440 	.globl _FREQEST
                                    441 	.globl _MDMCTRL1
                                    442 	.globl _MDMCTRL0
                                    443 	.globl _RFRND
                                    444 	.globl _RFERRM
                                    445 	.globl _RFIRQM1
                                    446 	.globl _RFIRQM0
                                    447 	.globl _TXLAST_PTR
                                    448 	.globl _TXFIRST_PTR
                                    449 	.globl _RXP1_PTR
                                    450 	.globl _RXLAST_PTR
                                    451 	.globl _RXFIRST_PTR
                                    452 	.globl _TXFIFOCNT
                                    453 	.globl _RXFIFOCNT
                                    454 	.globl _RXFIRST
                                    455 	.globl _RSSISTAT
                                    456 	.globl _RSSI
                                    457 	.globl _CCACTRL1
                                    458 	.globl _CCACTRL0
                                    459 	.globl _FSMCTRL
                                    460 	.globl _FIFOPCTRL
                                    461 	.globl _FSMSTAT1
                                    462 	.globl _FSMSTAT0
                                    463 	.globl _TXCTRL
                                    464 	.globl _TXPOWER
                                    465 	.globl _FREQCTRL
                                    466 	.globl _FREQTUNE
                                    467 	.globl _RXMASKCLR
                                    468 	.globl _RXMASKSET
                                    469 	.globl _RXENABLE
                                    470 	.globl _FRMCTRL1
                                    471 	.globl _FRMCTRL0
                                    472 	.globl _SRCEXTEN2
                                    473 	.globl _SRCEXTEN1
                                    474 	.globl _SRCEXTEN0
                                    475 	.globl _SRCSHORTEN2
                                    476 	.globl _SRCSHORTEN1
                                    477 	.globl _SRCSHORTEN0
                                    478 	.globl _SRCMATCH
                                    479 	.globl _FRMFILT1
                                    480 	.globl _FRMFILT0
                                    481 	.globl _SHORT_ADDR1
                                    482 	.globl _SHORT_ADDR0
                                    483 	.globl _PAN_ID1
                                    484 	.globl _PAN_ID0
                                    485 	.globl _EXT_ADDR7
                                    486 	.globl _EXT_ADDR6
                                    487 	.globl _EXT_ADDR5
                                    488 	.globl _EXT_ADDR4
                                    489 	.globl _EXT_ADDR3
                                    490 	.globl _EXT_ADDR2
                                    491 	.globl _EXT_ADDR1
                                    492 	.globl _EXT_ADDR0
                                    493 	.globl _SRCSHORTPENDEN2
                                    494 	.globl _SRCSHORTPENDEN1
                                    495 	.globl _SRCSHORTPENDEN0
                                    496 	.globl _SRCEXTPENDEN2
                                    497 	.globl _SRCEXTPENDEN1
                                    498 	.globl _SRCEXTPENDEN0
                                    499 	.globl _SRCRESINDEX
                                    500 	.globl _SRCRESMASK2
                                    501 	.globl _SRCRESMASK1
                                    502 	.globl _SRCRESMASK0
                                    503 	.globl _SRC_ADDR_TABLE
                                    504 	.globl _TXFIFO
                                    505 	.globl _RXFIFO
                                    506 	.globl _RFCORE_RAM
                                    507 	.globl _CMPCTL
                                    508 	.globl _OPAMPS
                                    509 	.globl _OPAMPC
                                    510 	.globl _STCV2
                                    511 	.globl _STCV1
                                    512 	.globl _STCV0
                                    513 	.globl _STCS
                                    514 	.globl _STCC
                                    515 	.globl _T1CC4H
                                    516 	.globl _T1CC4L
                                    517 	.globl _T1CC3H
                                    518 	.globl _T1CC3L
                                    519 	.globl _XX_T1CC2H
                                    520 	.globl _XX_T1CC2L
                                    521 	.globl _XX_T1CC1H
                                    522 	.globl _XX_T1CC1L
                                    523 	.globl _XX_T1CC0H
                                    524 	.globl _XX_T1CC0L
                                    525 	.globl _T1CCTL4
                                    526 	.globl _T1CCTL3
                                    527 	.globl _XX_T1CCTL2
                                    528 	.globl _XX_T1CCTL1
                                    529 	.globl _XX_T1CCTL0
                                    530 	.globl _CLD
                                    531 	.globl _IRCTL
                                    532 	.globl _CHIPINFO1
                                    533 	.globl _CHIPINFO0
                                    534 	.globl _FWDATA
                                    535 	.globl _FADDRH
                                    536 	.globl _FADDRL
                                    537 	.globl _FCTL
                                    538 	.globl _IVCTRL
                                    539 	.globl _BATTMON
                                    540 	.globl _SRCRC
                                    541 	.globl _DBGDATA
                                    542 	.globl _TESTREG0
                                    543 	.globl _CHIPID
                                    544 	.globl _CHVER
                                    545 	.globl _OBSSEL5
                                    546 	.globl _OBSSEL4
                                    547 	.globl _OBSSEL3
                                    548 	.globl _OBSSEL2
                                    549 	.globl _OBSSEL1
                                    550 	.globl _OBSSEL0
                                    551 	.globl _I2CIO
                                    552 	.globl _I2CWC
                                    553 	.globl _I2CADDR
                                    554 	.globl _I2CDATA
                                    555 	.globl _I2CSTAT
                                    556 	.globl _I2CCFG
                                    557 	.globl _OPAMPMC
                                    558 	.globl _MONMUX
                                    559 	.globl _rpl_reset_periodic_timer
                                    560 	.globl _rpl_reset_dio_timer
                                    561 	.globl _rpl_schedule_dao
                                    562 	.globl _rpl_schedule_dao_immediately
                                    563 	.globl _rpl_cancel_dao
                                    564 	.globl _rpl_schedule_probing
                                    565 ;--------------------------------------------------------
                                    566 ; special function registers
                                    567 ;--------------------------------------------------------
                                    568 	.area RSEG    (ABS,DATA)
      000000                        569 	.org 0x0000
                           000080   570 _P0	=	0x0080
                           000081   571 _SP	=	0x0081
                           000082   572 _DPL0	=	0x0082
                           000083   573 _DPH0	=	0x0083
                           000084   574 _DPL1	=	0x0084
                           000085   575 _DPH1	=	0x0085
                           000087   576 _PCON	=	0x0087
                           000088   577 _TCON	=	0x0088
                           000090   578 _P1	=	0x0090
                           000092   579 _DPS	=	0x0092
                           000098   580 _S0CON	=	0x0098
                           00009A   581 _IEN2	=	0x009a
                           00009B   582 _S1CON	=	0x009b
                           0000A0   583 _P2	=	0x00a0
                           0000A8   584 _IEN0	=	0x00a8
                           0000A9   585 _IP0	=	0x00a9
                           0000B8   586 _IEN1	=	0x00b8
                           0000B9   587 _IP1	=	0x00b9
                           0000C0   588 _IRCON	=	0x00c0
                           0000D0   589 _PSW	=	0x00d0
                           0000E0   590 _ACC	=	0x00e0
                           0000E8   591 _IRCON2	=	0x00e8
                           0000F0   592 _B	=	0x00f0
                           0000B4   593 _ADCCON1	=	0x00b4
                           0000B5   594 _ADCCON2	=	0x00b5
                           0000B6   595 _ADCCON3	=	0x00b6
                           0000BA   596 _ADCL	=	0x00ba
                           0000BB   597 _ADCH	=	0x00bb
                           0000BC   598 _RNDL	=	0x00bc
                           0000BD   599 _RNDH	=	0x00bd
                           0000B1   600 _ENCDI	=	0x00b1
                           0000B2   601 _ENCDO	=	0x00b2
                           0000B3   602 _ENCCS	=	0x00b3
                           0000D1   603 _DMAIRQ	=	0x00d1
                           0000D2   604 _DMA1CFGL	=	0x00d2
                           0000D3   605 _DMA1CFGH	=	0x00d3
                           0000D4   606 _DMA0CFGL	=	0x00d4
                           0000D5   607 _DMA0CFGH	=	0x00d5
                           0000D6   608 _DMAARM	=	0x00d6
                           0000D7   609 _DMAREQ	=	0x00d7
                           000089   610 _P0IFG	=	0x0089
                           00008A   611 _P1IFG	=	0x008a
                           00008B   612 _P2IFG	=	0x008b
                           00008C   613 _PICTL	=	0x008c
                           0000AB   614 _P0IEN	=	0x00ab
                           00008D   615 _P1IEN	=	0x008d
                           0000AC   616 _P2IEN	=	0x00ac
                           00008F   617 _P0INP	=	0x008f
                           0000F1   618 _PERCFG	=	0x00f1
                           0000F2   619 _APCFG	=	0x00f2
                           0000F3   620 _P0SEL	=	0x00f3
                           0000F4   621 _P1SEL	=	0x00f4
                           0000F5   622 _P2SEL	=	0x00f5
                           0000F6   623 _P1INP	=	0x00f6
                           0000F7   624 _P2INP	=	0x00f7
                           0000FD   625 _P0DIR	=	0x00fd
                           0000FE   626 _P1DIR	=	0x00fe
                           0000FF   627 _P2DIR	=	0x00ff
                           0000AE   628 _PMUX	=	0x00ae
                           000093   629 _MPAGE	=	0x0093
                           000093   630 __XPAGE	=	0x0093
                           0000C7   631 _MEMCTR	=	0x00c7
                           00009F   632 _FMAP	=	0x009f
                           00009F   633 _PSBANK	=	0x009f
                           000091   634 _RFIRQF1	=	0x0091
                           0000D9   635 _RFD	=	0x00d9
                           0000E1   636 _RFST	=	0x00e1
                           0000E9   637 _RFIRQF0	=	0x00e9
                           0000BF   638 _RFERRF	=	0x00bf
                           000095   639 _ST0	=	0x0095
                           000096   640 _ST1	=	0x0096
                           000097   641 _ST2	=	0x0097
                           0000AD   642 _STLOAD	=	0x00ad
                           0000BE   643 _SLEEPCMD	=	0x00be
                           00009D   644 _SLEEPSTA	=	0x009d
                           0000C6   645 _CLKCONCMD	=	0x00c6
                           00009E   646 _CLKCONSTA	=	0x009e
                           0000DA   647 _T1CC0L	=	0x00da
                           0000DB   648 _T1CC0H	=	0x00db
                           0000DC   649 _T1CC1L	=	0x00dc
                           0000DD   650 _T1CC1H	=	0x00dd
                           0000DE   651 _T1CC2L	=	0x00de
                           0000DF   652 _T1CC2H	=	0x00df
                           0000E2   653 _T1CNTL	=	0x00e2
                           0000E3   654 _T1CNTH	=	0x00e3
                           0000E4   655 _T1CTL	=	0x00e4
                           0000E5   656 _T1CCTL0	=	0x00e5
                           0000E6   657 _T1CCTL1	=	0x00e6
                           0000E7   658 _T1CCTL2	=	0x00e7
                           0000AF   659 _T1STAT	=	0x00af
                           000094   660 _T2CTRL	=	0x0094
                           00009C   661 _T2EVTCFG	=	0x009c
                           0000A1   662 _T2IRQF	=	0x00a1
                           0000A2   663 _T2M0	=	0x00a2
                           0000A3   664 _T2M1	=	0x00a3
                           0000A4   665 _T2MOVF0	=	0x00a4
                           0000A5   666 _T2MOVF1	=	0x00a5
                           0000A6   667 _T2MOVF2	=	0x00a6
                           0000A7   668 _T2IRQM	=	0x00a7
                           0000C3   669 _T2MSEL	=	0x00c3
                           0000CA   670 _T3CNT	=	0x00ca
                           0000CB   671 _T3CTL	=	0x00cb
                           0000CC   672 _T3CCTL0	=	0x00cc
                           0000CD   673 _T3CC0	=	0x00cd
                           0000CE   674 _T3CCTL1	=	0x00ce
                           0000CF   675 _T3CC1	=	0x00cf
                           0000EA   676 _T4CNT	=	0x00ea
                           0000EB   677 _T4CTL	=	0x00eb
                           0000EC   678 _T4CCTL0	=	0x00ec
                           0000ED   679 _T4CC0	=	0x00ed
                           0000EE   680 _T4CCTL1	=	0x00ee
                           0000EF   681 _T4CC1	=	0x00ef
                           0000D8   682 _TIMIF	=	0x00d8
                           000086   683 _U0CSR	=	0x0086
                           0000C1   684 _U0DBUF	=	0x00c1
                           0000C2   685 _U0BAUD	=	0x00c2
                           0000C4   686 _U0UCR	=	0x00c4
                           0000C5   687 _U0GCR	=	0x00c5
                           0000F8   688 _U1CSR	=	0x00f8
                           0000F9   689 _U1DBUF	=	0x00f9
                           0000FA   690 _U1BAUD	=	0x00fa
                           0000FB   691 _U1UCR	=	0x00fb
                           0000FC   692 _U1GCR	=	0x00fc
                           0000C9   693 _WDCTL	=	0x00c9
                                    694 ;--------------------------------------------------------
                                    695 ; special function bits
                                    696 ;--------------------------------------------------------
                                    697 	.area RSEG    (ABS,DATA)
      000000                        698 	.org 0x0000
                           000087   699 _P0_7	=	0x0087
                           000086   700 _P0_6	=	0x0086
                           000085   701 _P0_5	=	0x0085
                           000084   702 _P0_4	=	0x0084
                           000083   703 _P0_3	=	0x0083
                           000082   704 _P0_2	=	0x0082
                           000081   705 _P0_1	=	0x0081
                           000080   706 _P0_0	=	0x0080
                           00008F   707 _URX1IF	=	0x008f
                           00008D   708 _ADCIF	=	0x008d
                           00008B   709 _URX0IF	=	0x008b
                           00008A   710 _IT1	=	0x008a
                           000089   711 _RFERRIF	=	0x0089
                           000088   712 _IT0	=	0x0088
                           000097   713 _P1_7	=	0x0097
                           000096   714 _P1_6	=	0x0096
                           000095   715 _P1_5	=	0x0095
                           000094   716 _P1_4	=	0x0094
                           000093   717 _P1_3	=	0x0093
                           000092   718 _P1_2	=	0x0092
                           000091   719 _P1_1	=	0x0091
                           000090   720 _P1_0	=	0x0090
                           000099   721 _ENCIF_1	=	0x0099
                           000098   722 _ENCIF_0	=	0x0098
                           0000A7   723 _P2_7	=	0x00a7
                           0000A6   724 _P2_6	=	0x00a6
                           0000A5   725 _P2_5	=	0x00a5
                           0000A4   726 _P2_4	=	0x00a4
                           0000A3   727 _P2_3	=	0x00a3
                           0000A2   728 _P2_2	=	0x00a2
                           0000A1   729 _P2_1	=	0x00a1
                           0000A0   730 _P2_0	=	0x00a0
                           0000AF   731 _EA	=	0x00af
                           0000AD   732 _STIE	=	0x00ad
                           0000AC   733 _ENCIE	=	0x00ac
                           0000AB   734 _URX1IE	=	0x00ab
                           0000AA   735 _URX0IE	=	0x00aa
                           0000A9   736 _ADCIE	=	0x00a9
                           0000A8   737 _RFERRIE	=	0x00a8
                           0000BD   738 _P0IE	=	0x00bd
                           0000BC   739 _T4IE	=	0x00bc
                           0000BB   740 _T3IE	=	0x00bb
                           0000BA   741 _T2IE	=	0x00ba
                           0000B9   742 _T1IE	=	0x00b9
                           0000B8   743 _DMAIE	=	0x00b8
                           0000C7   744 _STIF	=	0x00c7
                           0000C5   745 _P0IF	=	0x00c5
                           0000C4   746 _T4IF	=	0x00c4
                           0000C3   747 _T3IF	=	0x00c3
                           0000C2   748 _T2IF	=	0x00c2
                           0000C1   749 _T1IF	=	0x00c1
                           0000C0   750 _DMAIF	=	0x00c0
                           0000D7   751 _CY	=	0x00d7
                           0000D6   752 _AC	=	0x00d6
                           0000D5   753 _F0	=	0x00d5
                           0000D4   754 _RS1	=	0x00d4
                           0000D3   755 _RS0	=	0x00d3
                           0000D2   756 _OV	=	0x00d2
                           0000D1   757 _F1	=	0x00d1
                           0000D0   758 _P	=	0x00d0
                           0000E7   759 _ACC_7	=	0x00e7
                           0000E6   760 _ACC_6	=	0x00e6
                           0000E5   761 _ACC_5	=	0x00e5
                           0000E4   762 _ACC_4	=	0x00e4
                           0000E3   763 _ACC_3	=	0x00e3
                           0000E2   764 _ACC_2	=	0x00e2
                           0000E1   765 _ACC_1	=	0x00e1
                           0000E0   766 _ACC_0	=	0x00e0
                           0000EC   767 _WDTIF	=	0x00ec
                           0000EB   768 _P1IF	=	0x00eb
                           0000EA   769 _UTX1IF	=	0x00ea
                           0000E9   770 _UTX0IF	=	0x00e9
                           0000E8   771 _P2IF	=	0x00e8
                           0000F7   772 _B_7	=	0x00f7
                           0000F6   773 _B_6	=	0x00f6
                           0000F5   774 _B_5	=	0x00f5
                           0000F4   775 _B_4	=	0x00f4
                           0000F3   776 _B_3	=	0x00f3
                           0000F2   777 _B_2	=	0x00f2
                           0000F1   778 _B_1	=	0x00f1
                           0000F0   779 _B_0	=	0x00f0
                           0000DE   780 _OVFIM	=	0x00de
                           0000DD   781 _T4CH1IF	=	0x00dd
                           0000DC   782 _T4CH0IF	=	0x00dc
                           0000DB   783 _T4OVFIF	=	0x00db
                           0000DA   784 _T3CH1IF	=	0x00da
                           0000D9   785 _T3CH0IF	=	0x00d9
                           0000D8   786 _T3OVFIF	=	0x00d8
                           0000FF   787 _MODE	=	0x00ff
                           0000FE   788 _RE	=	0x00fe
                           0000FD   789 _SLAVE	=	0x00fd
                           0000FC   790 _FE	=	0x00fc
                           0000FB   791 _ERR	=	0x00fb
                           0000FA   792 _RX_BYTE	=	0x00fa
                           0000F9   793 _TX_BYTE	=	0x00f9
                           0000F8   794 _ACTIVE	=	0x00f8
                                    795 ;--------------------------------------------------------
                                    796 ; overlayable register banks
                                    797 ;--------------------------------------------------------
                                    798 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        799 	.ds 8
                                    800 ;--------------------------------------------------------
                                    801 ; internal ram data
                                    802 ;--------------------------------------------------------
                                    803 	.area DSEG    (DATA)
                                    804 ;--------------------------------------------------------
                                    805 ; overlayable items in internal ram 
                                    806 ;--------------------------------------------------------
                                    807 ;--------------------------------------------------------
                                    808 ; indirectly addressable internal ram data
                                    809 ;--------------------------------------------------------
                                    810 	.area ISEG    (DATA)
                                    811 ;--------------------------------------------------------
                                    812 ; absolute internal ram data
                                    813 ;--------------------------------------------------------
                                    814 	.area IABS    (ABS,DATA)
                                    815 	.area IABS    (ABS,DATA)
                                    816 ;--------------------------------------------------------
                                    817 ; bit data
                                    818 ;--------------------------------------------------------
                                    819 	.area BSEG    (BIT)
                                    820 ;--------------------------------------------------------
                                    821 ; paged external ram data
                                    822 ;--------------------------------------------------------
                                    823 	.area PSEG    (PAG,XDATA)
                                    824 ;--------------------------------------------------------
                                    825 ; external ram data
                                    826 ;--------------------------------------------------------
                                    827 	.area XSEG    (XDATA)
                           0061A6   828 _MONMUX	=	0x61a6
                           0061A6   829 _OPAMPMC	=	0x61a6
                           006230   830 _I2CCFG	=	0x6230
                           006231   831 _I2CSTAT	=	0x6231
                           006232   832 _I2CDATA	=	0x6232
                           006233   833 _I2CADDR	=	0x6233
                           006234   834 _I2CWC	=	0x6234
                           006235   835 _I2CIO	=	0x6235
                           006243   836 _OBSSEL0	=	0x6243
                           006244   837 _OBSSEL1	=	0x6244
                           006245   838 _OBSSEL2	=	0x6245
                           006246   839 _OBSSEL3	=	0x6246
                           006247   840 _OBSSEL4	=	0x6247
                           006248   841 _OBSSEL5	=	0x6248
                           006249   842 _CHVER	=	0x6249
                           00624A   843 _CHIPID	=	0x624a
                           00624B   844 _TESTREG0	=	0x624b
                           006260   845 _DBGDATA	=	0x6260
                           006262   846 _SRCRC	=	0x6262
                           006264   847 _BATTMON	=	0x6264
                           006265   848 _IVCTRL	=	0x6265
                           006270   849 _FCTL	=	0x6270
                           006271   850 _FADDRL	=	0x6271
                           006272   851 _FADDRH	=	0x6272
                           006273   852 _FWDATA	=	0x6273
                           006276   853 _CHIPINFO0	=	0x6276
                           006277   854 _CHIPINFO1	=	0x6277
                           006281   855 _IRCTL	=	0x6281
                           006290   856 _CLD	=	0x6290
                           0062A0   857 _XX_T1CCTL0	=	0x62a0
                           0062A1   858 _XX_T1CCTL1	=	0x62a1
                           0062A2   859 _XX_T1CCTL2	=	0x62a2
                           0062A3   860 _T1CCTL3	=	0x62a3
                           0062A4   861 _T1CCTL4	=	0x62a4
                           0062A6   862 _XX_T1CC0L	=	0x62a6
                           0062A7   863 _XX_T1CC0H	=	0x62a7
                           0062A8   864 _XX_T1CC1L	=	0x62a8
                           0062A9   865 _XX_T1CC1H	=	0x62a9
                           0062AA   866 _XX_T1CC2L	=	0x62aa
                           0062AB   867 _XX_T1CC2H	=	0x62ab
                           0062AC   868 _T1CC3L	=	0x62ac
                           0062AD   869 _T1CC3H	=	0x62ad
                           0062AE   870 _T1CC4L	=	0x62ae
                           0062AF   871 _T1CC4H	=	0x62af
                           0062B0   872 _STCC	=	0x62b0
                           0062B1   873 _STCS	=	0x62b1
                           0062B2   874 _STCV0	=	0x62b2
                           0062B3   875 _STCV1	=	0x62b3
                           0062B4   876 _STCV2	=	0x62b4
                           0062C0   877 _OPAMPC	=	0x62c0
                           0062C1   878 _OPAMPS	=	0x62c1
                           0062D0   879 _CMPCTL	=	0x62d0
                           006000   880 _RFCORE_RAM	=	0x6000
                           006000   881 _RXFIFO	=	0x6000
                           006080   882 _TXFIFO	=	0x6080
                           006100   883 _SRC_ADDR_TABLE	=	0x6100
                           006160   884 _SRCRESMASK0	=	0x6160
                           006161   885 _SRCRESMASK1	=	0x6161
                           006162   886 _SRCRESMASK2	=	0x6162
                           006163   887 _SRCRESINDEX	=	0x6163
                           006164   888 _SRCEXTPENDEN0	=	0x6164
                           006165   889 _SRCEXTPENDEN1	=	0x6165
                           006166   890 _SRCEXTPENDEN2	=	0x6166
                           006167   891 _SRCSHORTPENDEN0	=	0x6167
                           006168   892 _SRCSHORTPENDEN1	=	0x6168
                           006169   893 _SRCSHORTPENDEN2	=	0x6169
                           00616A   894 _EXT_ADDR0	=	0x616a
                           00616B   895 _EXT_ADDR1	=	0x616b
                           00616C   896 _EXT_ADDR2	=	0x616c
                           00616D   897 _EXT_ADDR3	=	0x616d
                           00616E   898 _EXT_ADDR4	=	0x616e
                           00616F   899 _EXT_ADDR5	=	0x616f
                           006170   900 _EXT_ADDR6	=	0x6170
                           006171   901 _EXT_ADDR7	=	0x6171
                           006172   902 _PAN_ID0	=	0x6172
                           006173   903 _PAN_ID1	=	0x6173
                           006174   904 _SHORT_ADDR0	=	0x6174
                           006175   905 _SHORT_ADDR1	=	0x6175
                           006180   906 _FRMFILT0	=	0x6180
                           006181   907 _FRMFILT1	=	0x6181
                           006182   908 _SRCMATCH	=	0x6182
                           006183   909 _SRCSHORTEN0	=	0x6183
                           006184   910 _SRCSHORTEN1	=	0x6184
                           006185   911 _SRCSHORTEN2	=	0x6185
                           006186   912 _SRCEXTEN0	=	0x6186
                           006187   913 _SRCEXTEN1	=	0x6187
                           006188   914 _SRCEXTEN2	=	0x6188
                           006189   915 _FRMCTRL0	=	0x6189
                           00618A   916 _FRMCTRL1	=	0x618a
                           00618B   917 _RXENABLE	=	0x618b
                           00618C   918 _RXMASKSET	=	0x618c
                           00618D   919 _RXMASKCLR	=	0x618d
                           00618E   920 _FREQTUNE	=	0x618e
                           00618F   921 _FREQCTRL	=	0x618f
                           006190   922 _TXPOWER	=	0x6190
                           006191   923 _TXCTRL	=	0x6191
                           006192   924 _FSMSTAT0	=	0x6192
                           006193   925 _FSMSTAT1	=	0x6193
                           006194   926 _FIFOPCTRL	=	0x6194
                           006195   927 _FSMCTRL	=	0x6195
                           006196   928 _CCACTRL0	=	0x6196
                           006197   929 _CCACTRL1	=	0x6197
                           006198   930 _RSSI	=	0x6198
                           006199   931 _RSSISTAT	=	0x6199
                           00619A   932 _RXFIRST	=	0x619a
                           00619B   933 _RXFIFOCNT	=	0x619b
                           00619C   934 _TXFIFOCNT	=	0x619c
                           00619D   935 _RXFIRST_PTR	=	0x619d
                           00619E   936 _RXLAST_PTR	=	0x619e
                           00619F   937 _RXP1_PTR	=	0x619f
                           0061A1   938 _TXFIRST_PTR	=	0x61a1
                           0061A2   939 _TXLAST_PTR	=	0x61a2
                           0061A3   940 _RFIRQM0	=	0x61a3
                           0061A4   941 _RFIRQM1	=	0x61a4
                           0061A5   942 _RFERRM	=	0x61a5
                           0061A7   943 _RFRND	=	0x61a7
                           0061A8   944 _MDMCTRL0	=	0x61a8
                           0061A9   945 _MDMCTRL1	=	0x61a9
                           0061AA   946 _FREQEST	=	0x61aa
                           0061AB   947 _RXCTRL	=	0x61ab
                           0061AC   948 _FSCTRL	=	0x61ac
                           0061AD   949 _FSCAL0	=	0x61ad
                           0061AE   950 _FSCAL1	=	0x61ae
                           0061AF   951 _FSCAL2	=	0x61af
                           0061B0   952 _FSCAL3	=	0x61b0
                           0061B1   953 _AGCCTRL0	=	0x61b1
                           0061B2   954 _AGCCTRL1	=	0x61b2
                           0061B3   955 _AGCCTRL2	=	0x61b3
                           0061B4   956 _AGCCTRL3	=	0x61b4
                           0061B5   957 _ADCTEST0	=	0x61b5
                           0061B6   958 _ADCTEST1	=	0x61b6
                           0061B7   959 _ADCTEST2	=	0x61b7
                           0061B8   960 _MDMTEST0	=	0x61b8
                           0061B9   961 _MDMTEST1	=	0x61b9
                           0061BA   962 _DACTEST0	=	0x61ba
                           0061BB   963 _DACTEST1	=	0x61bb
                           0061BC   964 _DACTEST2	=	0x61bc
                           0061BD   965 _ATEST	=	0x61bd
                           0061BE   966 _PTEST0	=	0x61be
                           0061BF   967 _PTEST1	=	0x61bf
                           0061FA   968 _TXFILTCFG	=	0x61fa
                           0061EB   969 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   970 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   971 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   972 _CSPPROG0	=	0x61c0
                           0061C1   973 _CSPPROG1	=	0x61c1
                           0061C2   974 _CSPPROG2	=	0x61c2
                           0061C3   975 _CSPPROG3	=	0x61c3
                           0061C4   976 _CSPPROG4	=	0x61c4
                           0061C5   977 _CSPPROG5	=	0x61c5
                           0061C6   978 _CSPPROG6	=	0x61c6
                           0061C7   979 _CSPPROG7	=	0x61c7
                           0061C8   980 _CSPPROG8	=	0x61c8
                           0061C9   981 _CSPPROG9	=	0x61c9
                           0061CA   982 _CSPPROG10	=	0x61ca
                           0061CB   983 _CSPPROG11	=	0x61cb
                           0061CC   984 _CSPPROG12	=	0x61cc
                           0061CD   985 _CSPPROG13	=	0x61cd
                           0061CE   986 _CSPPROG14	=	0x61ce
                           0061CF   987 _CSPPROG15	=	0x61cf
                           0061D0   988 _CSPPROG16	=	0x61d0
                           0061D1   989 _CSPPROG17	=	0x61d1
                           0061D2   990 _CSPPROG18	=	0x61d2
                           0061D3   991 _CSPPROG19	=	0x61d3
                           0061D4   992 _CSPPROG20	=	0x61d4
                           0061D5   993 _CSPPROG21	=	0x61d5
                           0061D6   994 _CSPPROG22	=	0x61d6
                           0061D7   995 _CSPPROG23	=	0x61d7
                           0061E0   996 _CSPCTRL	=	0x61e0
                           0061E1   997 _CSPSTAT	=	0x61e1
                           0061E2   998 _CSPX	=	0x61e2
                           0061E3   999 _CSPY	=	0x61e3
                           0061E4  1000 _CSPZ	=	0x61e4
                           0061E5  1001 _CSPT	=	0x61e5
                           006200  1002 _USBADDR	=	0x6200
                           006201  1003 _USBPOW	=	0x6201
                           006202  1004 _USBIIF	=	0x6202
                           006204  1005 _USBOIF	=	0x6204
                           006206  1006 _USBCIF	=	0x6206
                           006207  1007 _USBIIE	=	0x6207
                           006209  1008 _USBOIE	=	0x6209
                           00620B  1009 _USBCIE	=	0x620b
                           00620C  1010 _USBFRML	=	0x620c
                           00620D  1011 _USBFRMH	=	0x620d
                           00620E  1012 _USBINDEX	=	0x620e
                           00620F  1013 _USBCTRL	=	0x620f
                           006210  1014 _USBMAXI	=	0x6210
                           006211  1015 _USBCS0	=	0x6211
                           006211  1016 _USBCSIL	=	0x6211
                           006212  1017 _USBCSIH	=	0x6212
                           006213  1018 _USBMAXO	=	0x6213
                           006214  1019 _USBCSOL	=	0x6214
                           006215  1020 _USBCSOH	=	0x6215
                           006216  1021 _USBCNT0	=	0x6216
                           006216  1022 _USBCNTL	=	0x6216
                           006217  1023 _USBCNTH	=	0x6217
                           006220  1024 _USBF0	=	0x6220
                           006222  1025 _USBF1	=	0x6222
                           006224  1026 _USBF2	=	0x6224
                           006226  1027 _USBF3	=	0x6226
                           006228  1028 _USBF4	=	0x6228
                           00622A  1029 _USBF5	=	0x622a
                           007080  1030 _X_P0	=	0x7080
                           007086  1031 _X_U0CSR	=	0x7086
                           007089  1032 _X_P0IFG	=	0x7089
                           00708A  1033 _X_P1IFG	=	0x708a
                           00708B  1034 _X_P2IFG	=	0x708b
                           00708C  1035 _X_PICTL	=	0x708c
                           00708D  1036 _X_P1IEN	=	0x708d
                           00708F  1037 _X_P0INP	=	0x708f
                           007090  1038 _X_P1	=	0x7090
                           007091  1039 _X_RFIRQF1	=	0x7091
                           007093  1040 _X_MPAGE	=	0x7093
                           007093  1041 _X__XPAGE	=	0x7093
                           007094  1042 _X_T2CTRL	=	0x7094
                           007095  1043 _X_ST0	=	0x7095
                           007096  1044 _X_ST1	=	0x7096
                           007097  1045 _X_ST2	=	0x7097
                           00709C  1046 _X_T2EVTCFG	=	0x709c
                           00709D  1047 _X_SLEEPSTA	=	0x709d
                           00709E  1048 _X_CLKCONSTA	=	0x709e
                           00709F  1049 _X_FMAP	=	0x709f
                           00709F  1050 _X_PSBANK	=	0x709f
                           0070A0  1051 _X_P2	=	0x70a0
                           0070A1  1052 _X_T2IRQF	=	0x70a1
                           0070A2  1053 _X_T2M0	=	0x70a2
                           0070A3  1054 _X_T2M1	=	0x70a3
                           0070A4  1055 _X_T2MOVF0	=	0x70a4
                           0070A5  1056 _X_T2MOVF1	=	0x70a5
                           0070A6  1057 _X_T2MOVF2	=	0x70a6
                           0070A7  1058 _X_T2IRQM	=	0x70a7
                           0070AB  1059 _X_P0IEN	=	0x70ab
                           0070AC  1060 _X_P2IEN	=	0x70ac
                           0070AD  1061 _X_STLOAD	=	0x70ad
                           0070AE  1062 _X_PMUX	=	0x70ae
                           0070AF  1063 _X_T1STAT	=	0x70af
                           0070B1  1064 _X_ENCDI	=	0x70b1
                           0070B2  1065 _X_ENCDO	=	0x70b2
                           0070B3  1066 _X_ENCCS	=	0x70b3
                           0070B4  1067 _X_ADCCON1	=	0x70b4
                           0070B5  1068 _X_ADCCON2	=	0x70b5
                           0070B6  1069 _X_ADCCON3	=	0x70b6
                           0070BA  1070 _X_ADCL	=	0x70ba
                           0070BB  1071 _X_ADCH	=	0x70bb
                           0070BC  1072 _X_RNDL	=	0x70bc
                           0070BD  1073 _X_RNDH	=	0x70bd
                           0070BE  1074 _X_SLEEPCMD	=	0x70be
                           0070BF  1075 _X_RFERRF	=	0x70bf
                           0070C1  1076 _X_U0DBUF	=	0x70c1
                           0070C2  1077 _X_U0BAUD	=	0x70c2
                           0070C3  1078 _X_T2MSEL	=	0x70c3
                           0070C4  1079 _X_U0UCR	=	0x70c4
                           0070C5  1080 _X_U0GCR	=	0x70c5
                           0070C6  1081 _X_CLKCONCMD	=	0x70c6
                           0070C7  1082 _X_MEMCTR	=	0x70c7
                           0070C9  1083 _X_WDCTL	=	0x70c9
                           0070CA  1084 _X_T3CNT	=	0x70ca
                           0070CB  1085 _X_T3CTL	=	0x70cb
                           0070CC  1086 _X_T3CCTL0	=	0x70cc
                           0070CD  1087 _X_T3CC0	=	0x70cd
                           0070CE  1088 _X_T3CCTL1	=	0x70ce
                           0070CF  1089 _X_T3CC1	=	0x70cf
                           0070D1  1090 _X_DMAIRQ	=	0x70d1
                           0070D2  1091 _X_DMA1CFGL	=	0x70d2
                           0070D3  1092 _X_DMA1CFGH	=	0x70d3
                           0070D4  1093 _X_DMA0CFGL	=	0x70d4
                           0070D5  1094 _X_DMA0CFGH	=	0x70d5
                           0070D6  1095 _X_DMAARM	=	0x70d6
                           0070D7  1096 _X_DMAREQ	=	0x70d7
                           0070D8  1097 _X_TIMIF	=	0x70d8
                           0070D9  1098 _X_RFD	=	0x70d9
                           0070DA  1099 _X_T1CC0L	=	0x70da
                           0070DB  1100 _X_T1CC0H	=	0x70db
                           0070DC  1101 _X_T1CC1L	=	0x70dc
                           0070DD  1102 _X_T1CC1H	=	0x70dd
                           0070DE  1103 _X_T1CC2L	=	0x70de
                           0070DF  1104 _X_T1CC2H	=	0x70df
                           0070E1  1105 _X_RFST	=	0x70e1
                           0070E2  1106 _X_T1CNTL	=	0x70e2
                           0070E3  1107 _X_T1CNTH	=	0x70e3
                           0070E4  1108 _X_T1CTL	=	0x70e4
                           0070E5  1109 _X_T1CCTL0	=	0x70e5
                           0070E6  1110 _X_T1CCTL1	=	0x70e6
                           0070E7  1111 _X_T1CCTL2	=	0x70e7
                           0070E9  1112 _X_RFIRQF0	=	0x70e9
                           0070EA  1113 _X_T4CNT	=	0x70ea
                           0070EB  1114 _X_T4CTL	=	0x70eb
                           0070EC  1115 _X_T4CCTL0	=	0x70ec
                           0070ED  1116 _X_T4CC0	=	0x70ed
                           0070EE  1117 _X_T4CCTL1	=	0x70ee
                           0070EF  1118 _X_T4CC1	=	0x70ef
                           0070F1  1119 _X_PERCFG	=	0x70f1
                           0070F2  1120 _X_APCFG	=	0x70f2
                           0070F3  1121 _X_P0SEL	=	0x70f3
                           0070F4  1122 _X_P1SEL	=	0x70f4
                           0070F5  1123 _X_P2SEL	=	0x70f5
                           0070F6  1124 _X_P1INP	=	0x70f6
                           0070F7  1125 _X_P2INP	=	0x70f7
                           0070F8  1126 _X_U1CSR	=	0x70f8
                           0070F9  1127 _X_U1DBUF	=	0x70f9
                           0070FA  1128 _X_U1BAUD	=	0x70fa
                           0070FB  1129 _X_U1UCR	=	0x70fb
                           0070FC  1130 _X_U1GCR	=	0x70fc
                           0070FD  1131 _X_P0DIR	=	0x70fd
                           0070FE  1132 _X_P1DIR	=	0x70fe
                           0070FF  1133 _X_P2DIR	=	0x70ff
                           007800  1134 _X_INFOPAGE	=	0x7800
                           00780C  1135 _X_IEEE_ADDR	=	0x780c
      000000                       1136 _periodic_timer:
      000000                       1137 	.ds 22
      000016                       1138 _next_dis:
      000016                       1139 	.ds 2
      000018                       1140 _dio_send_ok:
      000018                       1141 	.ds 1
                                   1142 ;--------------------------------------------------------
                                   1143 ; absolute external ram data
                                   1144 ;--------------------------------------------------------
                                   1145 	.area XABS    (ABS,XDATA)
                                   1146 ;--------------------------------------------------------
                                   1147 ; external initialized ram data
                                   1148 ;--------------------------------------------------------
                                   1149 	.area XISEG   (XDATA)
                                   1150 	.area HOME    (CODE)
                                   1151 	.area GSINIT0 (CODE)
                                   1152 	.area GSINIT1 (CODE)
                                   1153 	.area GSINIT2 (CODE)
                                   1154 	.area GSINIT3 (CODE)
                                   1155 	.area GSINIT4 (CODE)
                                   1156 	.area GSINIT5 (CODE)
                                   1157 	.area GSINIT  (CODE)
                                   1158 	.area GSFINAL (CODE)
                                   1159 	.area CSEG    (CODE)
                                   1160 ;--------------------------------------------------------
                                   1161 ; global & static initialisations
                                   1162 ;--------------------------------------------------------
                                   1163 	.area HOME    (CODE)
                                   1164 	.area GSINIT  (CODE)
                                   1165 	.area GSFINAL (CODE)
                                   1166 	.area GSINIT  (CODE)
                                   1167 ;--------------------------------------------------------
                                   1168 ; Home
                                   1169 ;--------------------------------------------------------
                                   1170 	.area HOME    (CODE)
                                   1171 	.area HOME    (CODE)
                                   1172 ;--------------------------------------------------------
                                   1173 ; code
                                   1174 ;--------------------------------------------------------
                                   1175 	.area BANK1   (CODE)
                                   1176 ;------------------------------------------------------------
                                   1177 ;Allocation info for local variables in function 'handle_periodic_timer'
                                   1178 ;------------------------------------------------------------
                                   1179 ;ptr                       Allocated to registers 
                                   1180 ;------------------------------------------------------------
                                   1181 ;	/opt/contiki/core/net/rpl/rpl-timers.c:67: handle_periodic_timer(void *ptr)
                                   1182 ;	-----------------------------------------
                                   1183 ;	 function handle_periodic_timer
                                   1184 ;	-----------------------------------------
      000000                       1185 _handle_periodic_timer:
                           000007  1186 	ar7 = 0x07
                           000006  1187 	ar6 = 0x06
                           000005  1188 	ar5 = 0x05
                           000004  1189 	ar4 = 0x04
                           000003  1190 	ar3 = 0x03
                           000002  1191 	ar2 = 0x02
                           000001  1192 	ar1 = 0x01
                           000000  1193 	ar0 = 0x00
                                   1194 ;	/opt/contiki/core/net/rpl/rpl-timers.c:69: rpl_purge_dags();
      000000 78r00            [12] 1195 	mov	r0,#_rpl_purge_dags
      000002 79s00            [12] 1196 	mov	r1,#(_rpl_purge_dags >> 8)
      000004 7As00            [12] 1197 	mov	r2,#(_rpl_purge_dags >> 16)
      000006 12r00r00         [24] 1198 	lcall	__sdcc_banked_call
                                   1199 ;	/opt/contiki/core/net/rpl/rpl-timers.c:70: rpl_purge_routes();
      000009 78r00            [12] 1200 	mov	r0,#_rpl_purge_routes
      00000B 79s00            [12] 1201 	mov	r1,#(_rpl_purge_routes >> 8)
      00000D 7As00            [12] 1202 	mov	r2,#(_rpl_purge_routes >> 16)
      00000F 12r00r00         [24] 1203 	lcall	__sdcc_banked_call
                                   1204 ;	/opt/contiki/core/net/rpl/rpl-timers.c:71: rpl_recalculate_ranks();
      000012 78r00            [12] 1205 	mov	r0,#_rpl_recalculate_ranks
      000014 79s00            [12] 1206 	mov	r1,#(_rpl_recalculate_ranks >> 8)
      000016 7As00            [12] 1207 	mov	r2,#(_rpl_recalculate_ranks >> 16)
      000018 12r00r00         [24] 1208 	lcall	__sdcc_banked_call
                                   1209 ;	/opt/contiki/core/net/rpl/rpl-timers.c:75: next_dis++;
      00001B 90r00r16         [24] 1210 	mov	dptr,#_next_dis
      00001E E0               [24] 1211 	movx	a,@dptr
      00001F 24 01            [12] 1212 	add	a,#0x01
      000021 F0               [24] 1213 	movx	@dptr,a
      000022 A3               [24] 1214 	inc	dptr
      000023 E0               [24] 1215 	movx	a,@dptr
      000024 34 00            [12] 1216 	addc	a,#0x00
      000026 F0               [24] 1217 	movx	@dptr,a
                                   1218 ;	/opt/contiki/core/net/rpl/rpl-timers.c:76: if(rpl_get_any_dag() == NULL && next_dis >= RPL_DIS_INTERVAL) {
      000027 78r00            [12] 1219 	mov	r0,#_rpl_get_any_dag
      000029 79s00            [12] 1220 	mov	r1,#(_rpl_get_any_dag >> 8)
      00002B 7As00            [12] 1221 	mov	r2,#(_rpl_get_any_dag >> 16)
      00002D 12r00r00         [24] 1222 	lcall	__sdcc_banked_call
      000030 AD 82            [24] 1223 	mov	r5,dpl
      000032 AE 83            [24] 1224 	mov	r6,dph
      000034 AF F0            [24] 1225 	mov	r7,b
      000036 ED               [12] 1226 	mov	a,r5
      000037 4E               [12] 1227 	orl	a,r6
      000038 70 27            [24] 1228 	jnz	00102$
      00003A 90r00r16         [24] 1229 	mov	dptr,#_next_dis
      00003D E0               [24] 1230 	movx	a,@dptr
      00003E FE               [12] 1231 	mov	r6,a
      00003F A3               [24] 1232 	inc	dptr
      000040 E0               [24] 1233 	movx	a,@dptr
      000041 FF               [12] 1234 	mov	r7,a
      000042 C3               [12] 1235 	clr	c
      000043 EE               [12] 1236 	mov	a,r6
      000044 94 3C            [12] 1237 	subb	a,#0x3C
      000046 EF               [12] 1238 	mov	a,r7
      000047 94 00            [12] 1239 	subb	a,#0x00
      000049 40 16            [24] 1240 	jc	00102$
                                   1241 ;	/opt/contiki/core/net/rpl/rpl-timers.c:77: next_dis = 0;
      00004B 90r00r16         [24] 1242 	mov	dptr,#_next_dis
      00004E E4               [12] 1243 	clr	a
      00004F F0               [24] 1244 	movx	@dptr,a
      000050 A3               [24] 1245 	inc	dptr
      000051 F0               [24] 1246 	movx	@dptr,a
                                   1247 ;	/opt/contiki/core/net/rpl/rpl-timers.c:78: dis_output(NULL);
      000052 90 00 00         [24] 1248 	mov	dptr,#0x0000
      000055 75 F0 00         [24] 1249 	mov	b,#0x00
      000058 78r00            [12] 1250 	mov	r0,#_dis_output
      00005A 79s00            [12] 1251 	mov	r1,#(_dis_output >> 8)
      00005C 7As00            [12] 1252 	mov	r2,#(_dis_output >> 16)
      00005E 12r00r00         [24] 1253 	lcall	__sdcc_banked_call
      000061                       1254 00102$:
                                   1255 ;	/opt/contiki/core/net/rpl/rpl-timers.c:81: ctimer_reset(&periodic_timer);
      000061 90r00r00         [24] 1256 	mov	dptr,#_periodic_timer
      000064 75 F0 00         [24] 1257 	mov	b,#0x00
      000067 78r00            [12] 1258 	mov	r0,#_ctimer_reset
      000069 79s00            [12] 1259 	mov	r1,#(_ctimer_reset >> 8)
      00006B 7As00            [12] 1260 	mov	r2,#(_ctimer_reset >> 16)
      00006D 12r00r00         [24] 1261 	lcall	__sdcc_banked_call
      000070 02r00r00         [24] 1262 	ljmp	__sdcc_banked_ret
                                   1263 ;------------------------------------------------------------
                                   1264 ;Allocation info for local variables in function 'new_dio_interval'
                                   1265 ;------------------------------------------------------------
                                   1266 ;instance                  Allocated to stack - sp -11
                                   1267 ;time                      Allocated to registers r5 r6 r4 r7 
                                   1268 ;ticks                     Allocated to stack - sp -1
                                   1269 ;sloc0                     Allocated to stack - sp -2
                                   1270 ;sloc1                     Allocated to stack - sp -8
                                   1271 ;sloc2                     Allocated to stack - sp +3
                                   1272 ;sloc3                     Allocated to stack - sp -5
                                   1273 ;------------------------------------------------------------
                                   1274 ;	/opt/contiki/core/net/rpl/rpl-timers.c:85: new_dio_interval(rpl_instance_t *instance)
                                   1275 ;	-----------------------------------------
                                   1276 ;	 function new_dio_interval
                                   1277 ;	-----------------------------------------
      000073                       1278 _new_dio_interval:
      000073 C0 82            [24] 1279 	push	dpl
      000075 C0 83            [24] 1280 	push	dph
      000077 C0 F0            [24] 1281 	push	b
      000079 E5 81            [12] 1282 	mov	a,sp
      00007B 24 09            [12] 1283 	add	a,#0x09
                                   1284 ;	/opt/contiki/core/net/rpl/rpl-timers.c:91: time = 1UL << instance->dio_intcurrent;
      00007D F5 81            [12] 1285 	mov	sp,a
      00007F 24 F5            [12] 1286 	add	a,#0xf5
      000081 F8               [12] 1287 	mov	r0,a
      000082 74 8A            [12] 1288 	mov	a,#0x8A
      000084 26               [12] 1289 	add	a,@r0
      000085 FA               [12] 1290 	mov	r2,a
      000086 E4               [12] 1291 	clr	a
      000087 08               [12] 1292 	inc	r0
      000088 36               [12] 1293 	addc	a,@r0
      000089 FB               [12] 1294 	mov	r3,a
      00008A 08               [12] 1295 	inc	r0
      00008B 86 04            [24] 1296 	mov	ar4,@r0
      00008D 8A 82            [24] 1297 	mov	dpl,r2
      00008F 8B 83            [24] 1298 	mov	dph,r3
      000091 8C F0            [24] 1299 	mov	b,r4
      000093 12r00r00         [24] 1300 	lcall	__gptrget
      000096 FA               [12] 1301 	mov	r2,a
      000097 8A F0            [24] 1302 	mov	b,r2
      000099 05 F0            [12] 1303 	inc	b
      00009B 7D 01            [12] 1304 	mov	r5,#0x01
      00009D 7E 00            [12] 1305 	mov	r6,#0x00
      00009F 7C 00            [12] 1306 	mov	r4,#0x00
      0000A1 7F 00            [12] 1307 	mov	r7,#0x00
      0000A3 80 0C            [24] 1308 	sjmp	00104$
      0000A5                       1309 00103$:
      0000A5 ED               [12] 1310 	mov	a,r5
      0000A6 2D               [12] 1311 	add	a,r5
      0000A7 FD               [12] 1312 	mov	r5,a
      0000A8 EE               [12] 1313 	mov	a,r6
      0000A9 33               [12] 1314 	rlc	a
      0000AA FE               [12] 1315 	mov	r6,a
      0000AB EC               [12] 1316 	mov	a,r4
      0000AC 33               [12] 1317 	rlc	a
      0000AD FC               [12] 1318 	mov	r4,a
      0000AE EF               [12] 1319 	mov	a,r7
      0000AF 33               [12] 1320 	rlc	a
      0000B0 FF               [12] 1321 	mov	r7,a
      0000B1                       1322 00104$:
      0000B1 D5 F0 F1         [24] 1323 	djnz	b,00103$
                                   1324 ;	/opt/contiki/core/net/rpl/rpl-timers.c:94: ticks = (time * CLOCK_SECOND) / 1000;
      0000B4 EF               [12] 1325 	mov	a,r7
      0000B5 54 01            [12] 1326 	anl	a,#0x01
      0000B7 A2 E0            [12] 1327 	mov	c,acc.0
      0000B9 CC               [12] 1328 	xch	a,r4
      0000BA 13               [12] 1329 	rrc	a
      0000BB CC               [12] 1330 	xch	a,r4
      0000BC 13               [12] 1331 	rrc	a
      0000BD CC               [12] 1332 	xch	a,r4
      0000BE FF               [12] 1333 	mov	r7,a
      0000BF EE               [12] 1334 	mov	a,r6
      0000C0 C3               [12] 1335 	clr	c
      0000C1 13               [12] 1336 	rrc	a
      0000C2 4C               [12] 1337 	orl	a,r4
      0000C3 FC               [12] 1338 	mov	r4,a
      0000C4 8D 02            [24] 1339 	mov	ar2,r5
      0000C6 EE               [12] 1340 	mov	a,r6
      0000C7 54 01            [12] 1341 	anl	a,#0x01
      0000C9 A2 E0            [12] 1342 	mov	c,acc.0
      0000CB CA               [12] 1343 	xch	a,r2
      0000CC 13               [12] 1344 	rrc	a
      0000CD CA               [12] 1345 	xch	a,r2
      0000CE 13               [12] 1346 	rrc	a
      0000CF CA               [12] 1347 	xch	a,r2
      0000D0 FB               [12] 1348 	mov	r3,a
      0000D1 74 E8            [12] 1349 	mov	a,#0xE8
      0000D3 C0 E0            [24] 1350 	push	acc
      0000D5 74 03            [12] 1351 	mov	a,#0x03
      0000D7 C0 E0            [24] 1352 	push	acc
      0000D9 E4               [12] 1353 	clr	a
      0000DA C0 E0            [24] 1354 	push	acc
      0000DC C0 E0            [24] 1355 	push	acc
      0000DE 8A 82            [24] 1356 	mov	dpl,r2
      0000E0 8B 83            [24] 1357 	mov	dph,r3
      0000E2 8C F0            [24] 1358 	mov	b,r4
      0000E4 EF               [12] 1359 	mov	a,r7
      0000E5 12r00r00         [24] 1360 	lcall	__divulong
      0000E8 AC 82            [24] 1361 	mov	r4,dpl
      0000EA AD 83            [24] 1362 	mov	r5,dph
      0000EC E5 81            [12] 1363 	mov	a,sp
      0000EE 24 FC            [12] 1364 	add	a,#0xfc
      0000F0 F5 81            [12] 1365 	mov	sp,a
      0000F2 A8 81            [24] 1366 	mov	r0,sp
      0000F4 18               [12] 1367 	dec	r0
      0000F5 A6 04            [24] 1368 	mov	@r0,ar4
      0000F7 08               [12] 1369 	inc	r0
      0000F8 A6 05            [24] 1370 	mov	@r0,ar5
                                   1371 ;	/opt/contiki/core/net/rpl/rpl-timers.c:95: instance->dio_next_delay = ticks;
      0000FA E5 81            [12] 1372 	mov	a,sp
      0000FC 24 F5            [12] 1373 	add	a,#0xf5
      0000FE F8               [12] 1374 	mov	r0,a
      0000FF E5 81            [12] 1375 	mov	a,sp
      000101 24 F8            [12] 1376 	add	a,#0xf8
      000103 F9               [12] 1377 	mov	r1,a
      000104 74 93            [12] 1378 	mov	a,#0x93
      000106 26               [12] 1379 	add	a,@r0
      000107 F7               [12] 1380 	mov	@r1,a
      000108 E4               [12] 1381 	clr	a
      000109 08               [12] 1382 	inc	r0
      00010A 36               [12] 1383 	addc	a,@r0
      00010B 09               [12] 1384 	inc	r1
      00010C F7               [12] 1385 	mov	@r1,a
      00010D 08               [12] 1386 	inc	r0
      00010E 09               [12] 1387 	inc	r1
      00010F E6               [12] 1388 	mov	a,@r0
      000110 F7               [12] 1389 	mov	@r1,a
      000111 E5 81            [12] 1390 	mov	a,sp
      000113 24 F8            [12] 1391 	add	a,#0xf8
      000115 F8               [12] 1392 	mov	r0,a
      000116 86 82            [24] 1393 	mov	dpl,@r0
      000118 08               [12] 1394 	inc	r0
      000119 86 83            [24] 1395 	mov	dph,@r0
      00011B 08               [12] 1396 	inc	r0
      00011C 86 F0            [24] 1397 	mov	b,@r0
      00011E A9 81            [24] 1398 	mov	r1,sp
      000120 19               [12] 1399 	dec	r1
      000121 E7               [12] 1400 	mov	a,@r1
      000122 12r00r00         [24] 1401 	lcall	__gptrput
      000125 A3               [24] 1402 	inc	dptr
      000126 09               [12] 1403 	inc	r1
      000127 E7               [12] 1404 	mov	a,@r1
      000128 12r00r00         [24] 1405 	lcall	__gptrput
                                   1406 ;	/opt/contiki/core/net/rpl/rpl-timers.c:98: ticks = ticks / 2 + (ticks / 2 * (uint32_t)random_rand()) / RANDOM_RAND_MAX;
      00012B A8 81            [24] 1407 	mov	r0,sp
      00012D 18               [12] 1408 	dec	r0
      00012E 86 07            [24] 1409 	mov	ar7,@r0
      000130 08               [12] 1410 	inc	r0
      000131 E6               [12] 1411 	mov	a,@r0
      000132 C3               [12] 1412 	clr	c
      000133 13               [12] 1413 	rrc	a
      000134 CF               [12] 1414 	xch	a,r7
      000135 13               [12] 1415 	rrc	a
      000136 CF               [12] 1416 	xch	a,r7
      000137 FE               [12] 1417 	mov	r6,a
      000138 C0 07            [24] 1418 	push	ar7
      00013A C0 06            [24] 1419 	push	ar6
      00013C 78r00            [12] 1420 	mov	r0,#_random_rand
      00013E 79s00            [12] 1421 	mov	r1,#(_random_rand >> 8)
      000140 7As00            [12] 1422 	mov	r2,#(_random_rand >> 16)
      000142 12r00r00         [24] 1423 	lcall	__sdcc_banked_call
      000145 AC 82            [24] 1424 	mov	r4,dpl
      000147 AD 83            [24] 1425 	mov	r5,dph
      000149 D0 06            [24] 1426 	pop	ar6
      00014B D0 07            [24] 1427 	pop	ar7
      00014D E4               [12] 1428 	clr	a
      00014E FB               [12] 1429 	mov	r3,a
      00014F FA               [12] 1430 	mov	r2,a
      000150 E5 81            [12] 1431 	mov	a,sp
      000152 24 FB            [12] 1432 	add	a,#0xfb
      000154 F8               [12] 1433 	mov	r0,a
      000155 A6 07            [24] 1434 	mov	@r0,ar7
      000157 08               [12] 1435 	inc	r0
      000158 A6 06            [24] 1436 	mov	@r0,ar6
      00015A 08               [12] 1437 	inc	r0
      00015B 76 00            [12] 1438 	mov	@r0,#0x00
      00015D 08               [12] 1439 	inc	r0
      00015E 76 00            [12] 1440 	mov	@r0,#0x00
      000160 C0 04            [24] 1441 	push	ar4
      000162 C0 05            [24] 1442 	push	ar5
      000164 C0 03            [24] 1443 	push	ar3
      000166 C0 02            [24] 1444 	push	ar2
      000168 E5 81            [12] 1445 	mov	a,sp
      00016A 24 F7            [12] 1446 	add	a,#0xf7
      00016C F8               [12] 1447 	mov	r0,a
      00016D 86 82            [24] 1448 	mov	dpl,@r0
      00016F 08               [12] 1449 	inc	r0
      000170 86 83            [24] 1450 	mov	dph,@r0
      000172 08               [12] 1451 	inc	r0
      000173 86 F0            [24] 1452 	mov	b,@r0
      000175 08               [12] 1453 	inc	r0
      000176 E6               [12] 1454 	mov	a,@r0
      000177 12r00r00         [24] 1455 	lcall	__mullong
      00017A AA 82            [24] 1456 	mov	r2,dpl
      00017C AC 83            [24] 1457 	mov	r4,dph
      00017E AE F0            [24] 1458 	mov	r6,b
      000180 FF               [12] 1459 	mov	r7,a
      000181 E5 81            [12] 1460 	mov	a,sp
      000183 24 FC            [12] 1461 	add	a,#0xfc
      000185 F5 81            [12] 1462 	mov	sp,a
      000187 74 FF            [12] 1463 	mov	a,#0xFF
      000189 C0 E0            [24] 1464 	push	acc
      00018B C0 E0            [24] 1465 	push	acc
      00018D E4               [12] 1466 	clr	a
      00018E C0 E0            [24] 1467 	push	acc
      000190 C0 E0            [24] 1468 	push	acc
      000192 8A 82            [24] 1469 	mov	dpl,r2
      000194 8C 83            [24] 1470 	mov	dph,r4
      000196 8E F0            [24] 1471 	mov	b,r6
      000198 EF               [12] 1472 	mov	a,r7
      000199 12r00r00         [24] 1473 	lcall	__divulong
      00019C AC 82            [24] 1474 	mov	r4,dpl
      00019E AD 83            [24] 1475 	mov	r5,dph
      0001A0 AE F0            [24] 1476 	mov	r6,b
      0001A2 FF               [12] 1477 	mov	r7,a
      0001A3 E5 81            [12] 1478 	mov	a,sp
      0001A5 24 FC            [12] 1479 	add	a,#0xfc
      0001A7 F5 81            [12] 1480 	mov	sp,a
      0001A9 24 FB            [12] 1481 	add	a,#0xfb
      0001AB F8               [12] 1482 	mov	r0,a
      0001AC EC               [12] 1483 	mov	a,r4
      0001AD 26               [12] 1484 	add	a,@r0
      0001AE FC               [12] 1485 	mov	r4,a
      0001AF ED               [12] 1486 	mov	a,r5
      0001B0 08               [12] 1487 	inc	r0
      0001B1 36               [12] 1488 	addc	a,@r0
      0001B2 FD               [12] 1489 	mov	r5,a
      0001B3 EE               [12] 1490 	mov	a,r6
      0001B4 08               [12] 1491 	inc	r0
      0001B5 36               [12] 1492 	addc	a,@r0
      0001B6 EF               [12] 1493 	mov	a,r7
      0001B7 08               [12] 1494 	inc	r0
      0001B8 36               [12] 1495 	addc	a,@r0
      0001B9 A8 81            [24] 1496 	mov	r0,sp
      0001BB 18               [12] 1497 	dec	r0
      0001BC A6 04            [24] 1498 	mov	@r0,ar4
      0001BE 08               [12] 1499 	inc	r0
      0001BF A6 05            [24] 1500 	mov	@r0,ar5
                                   1501 ;	/opt/contiki/core/net/rpl/rpl-timers.c:105: instance->dio_next_delay -= ticks;
      0001C1 E5 81            [12] 1502 	mov	a,sp
      0001C3 24 F8            [12] 1503 	add	a,#0xf8
      0001C5 F8               [12] 1504 	mov	r0,a
      0001C6 86 82            [24] 1505 	mov	dpl,@r0
      0001C8 08               [12] 1506 	inc	r0
      0001C9 86 83            [24] 1507 	mov	dph,@r0
      0001CB 08               [12] 1508 	inc	r0
      0001CC 86 F0            [24] 1509 	mov	b,@r0
      0001CE 12r00r00         [24] 1510 	lcall	__gptrget
      0001D1 FE               [12] 1511 	mov	r6,a
      0001D2 A3               [24] 1512 	inc	dptr
      0001D3 12r00r00         [24] 1513 	lcall	__gptrget
      0001D6 FF               [12] 1514 	mov	r7,a
      0001D7 A8 81            [24] 1515 	mov	r0,sp
      0001D9 18               [12] 1516 	dec	r0
      0001DA EE               [12] 1517 	mov	a,r6
      0001DB C3               [12] 1518 	clr	c
      0001DC 96               [12] 1519 	subb	a,@r0
      0001DD FE               [12] 1520 	mov	r6,a
      0001DE EF               [12] 1521 	mov	a,r7
      0001DF 08               [12] 1522 	inc	r0
      0001E0 96               [12] 1523 	subb	a,@r0
      0001E1 FF               [12] 1524 	mov	r7,a
      0001E2 E5 81            [12] 1525 	mov	a,sp
      0001E4 24 F8            [12] 1526 	add	a,#0xf8
      0001E6 F8               [12] 1527 	mov	r0,a
      0001E7 86 82            [24] 1528 	mov	dpl,@r0
      0001E9 08               [12] 1529 	inc	r0
      0001EA 86 83            [24] 1530 	mov	dph,@r0
      0001EC 08               [12] 1531 	inc	r0
      0001ED 86 F0            [24] 1532 	mov	b,@r0
      0001EF EE               [12] 1533 	mov	a,r6
      0001F0 12r00r00         [24] 1534 	lcall	__gptrput
      0001F3 A3               [24] 1535 	inc	dptr
      0001F4 EF               [12] 1536 	mov	a,r7
      0001F5 12r00r00         [24] 1537 	lcall	__gptrput
                                   1538 ;	/opt/contiki/core/net/rpl/rpl-timers.c:106: instance->dio_send = 1;
      0001F8 E5 81            [12] 1539 	mov	a,sp
      0001FA 24 F5            [12] 1540 	add	a,#0xf5
      0001FC F8               [12] 1541 	mov	r0,a
      0001FD 74 8B            [12] 1542 	mov	a,#0x8B
      0001FF 26               [12] 1543 	add	a,@r0
      000200 FD               [12] 1544 	mov	r5,a
      000201 E4               [12] 1545 	clr	a
      000202 08               [12] 1546 	inc	r0
      000203 36               [12] 1547 	addc	a,@r0
      000204 FE               [12] 1548 	mov	r6,a
      000205 08               [12] 1549 	inc	r0
      000206 86 07            [24] 1550 	mov	ar7,@r0
      000208 8D 82            [24] 1551 	mov	dpl,r5
      00020A 8E 83            [24] 1552 	mov	dph,r6
      00020C 8F F0            [24] 1553 	mov	b,r7
      00020E 74 01            [12] 1554 	mov	a,#0x01
      000210 12r00r00         [24] 1555 	lcall	__gptrput
                                   1556 ;	/opt/contiki/core/net/rpl/rpl-timers.c:122: instance->dio_counter = 0;
      000213 E5 81            [12] 1557 	mov	a,sp
      000215 24 F5            [12] 1558 	add	a,#0xf5
      000217 F8               [12] 1559 	mov	r0,a
      000218 74 8C            [12] 1560 	mov	a,#0x8C
      00021A 26               [12] 1561 	add	a,@r0
      00021B FD               [12] 1562 	mov	r5,a
      00021C E4               [12] 1563 	clr	a
      00021D 08               [12] 1564 	inc	r0
      00021E 36               [12] 1565 	addc	a,@r0
      00021F FE               [12] 1566 	mov	r6,a
      000220 08               [12] 1567 	inc	r0
      000221 86 07            [24] 1568 	mov	ar7,@r0
      000223 8D 82            [24] 1569 	mov	dpl,r5
      000225 8E 83            [24] 1570 	mov	dph,r6
      000227 8F F0            [24] 1571 	mov	b,r7
      000229 E4               [12] 1572 	clr	a
      00022A 12r00r00         [24] 1573 	lcall	__gptrput
                                   1574 ;	/opt/contiki/core/net/rpl/rpl-timers.c:126: ctimer_set(&instance->dio_timer, ticks, &handle_dio_timer, instance);
      00022D E5 81            [12] 1575 	mov	a,sp
      00022F 24 F5            [12] 1576 	add	a,#0xf5
      000231 F8               [12] 1577 	mov	r0,a
      000232 86 05            [24] 1578 	mov	ar5,@r0
      000234 08               [12] 1579 	inc	r0
      000235 86 06            [24] 1580 	mov	ar6,@r0
      000237 08               [12] 1581 	inc	r0
      000238 86 07            [24] 1582 	mov	ar7,@r0
      00023A E5 81            [12] 1583 	mov	a,sp
      00023C 24 F5            [12] 1584 	add	a,#0xf5
      00023E F8               [12] 1585 	mov	r0,a
      00023F 74 AB            [12] 1586 	mov	a,#0xAB
      000241 26               [12] 1587 	add	a,@r0
      000242 FA               [12] 1588 	mov	r2,a
      000243 E4               [12] 1589 	clr	a
      000244 08               [12] 1590 	inc	r0
      000245 36               [12] 1591 	addc	a,@r0
      000246 FB               [12] 1592 	mov	r3,a
      000247 08               [12] 1593 	inc	r0
      000248 86 04            [24] 1594 	mov	ar4,@r0
      00024A C0 05            [24] 1595 	push	ar5
      00024C C0 06            [24] 1596 	push	ar6
      00024E C0 07            [24] 1597 	push	ar7
      000250 74r82            [12] 1598 	mov	a,#_handle_dio_timer
      000252 C0 E0            [24] 1599 	push	acc
      000254 74s02            [12] 1600 	mov	a,#(_handle_dio_timer >> 8)
      000256 C0 E0            [24] 1601 	push	acc
      000258 74s00            [12] 1602 	mov	a,#(_handle_dio_timer >> 16)
      00025A C0 E0            [24] 1603 	push	acc
      00025C E5 81            [12] 1604 	mov	a,sp
      00025E 24 F9            [12] 1605 	add	a,#0xf9
      000260 F8               [12] 1606 	mov	r0,a
      000261 E6               [12] 1607 	mov	a,@r0
      000262 C0 E0            [24] 1608 	push	acc
      000264 08               [12] 1609 	inc	r0
      000265 E6               [12] 1610 	mov	a,@r0
      000266 C0 E0            [24] 1611 	push	acc
      000268 8A 82            [24] 1612 	mov	dpl,r2
      00026A 8B 83            [24] 1613 	mov	dph,r3
      00026C 8C F0            [24] 1614 	mov	b,r4
      00026E 78r00            [12] 1615 	mov	r0,#_ctimer_set
      000270 79s00            [12] 1616 	mov	r1,#(_ctimer_set >> 8)
      000272 7As00            [12] 1617 	mov	r2,#(_ctimer_set >> 16)
      000274 12r00r00         [24] 1618 	lcall	__sdcc_banked_call
      000277 E5 81            [12] 1619 	mov	a,sp
      000279 24 F8            [12] 1620 	add	a,#0xf8
      00027B 24 F4            [12] 1621 	add	a,#0xF4
      00027D F5 81            [12] 1622 	mov	sp,a
      00027F 02r00r00         [24] 1623 	ljmp	__sdcc_banked_ret
                                   1624 ;------------------------------------------------------------
                                   1625 ;Allocation info for local variables in function 'handle_dio_timer'
                                   1626 ;------------------------------------------------------------
                                   1627 ;ptr                       Allocated to registers r5 r6 r7 
                                   1628 ;instance                  Allocated to stack - sp -2
                                   1629 ;sloc0                     Allocated to stack - sp -6
                                   1630 ;sloc1                     Allocated to stack - sp -4
                                   1631 ;------------------------------------------------------------
                                   1632 ;	/opt/contiki/core/net/rpl/rpl-timers.c:130: handle_dio_timer(void *ptr)
                                   1633 ;	-----------------------------------------
                                   1634 ;	 function handle_dio_timer
                                   1635 ;	-----------------------------------------
      000282                       1636 _handle_dio_timer:
      000282 E5 81            [12] 1637 	mov	a,sp
      000284 24 07            [12] 1638 	add	a,#0x07
      000286 F5 81            [12] 1639 	mov	sp,a
      000288 AD 82            [24] 1640 	mov	r5,dpl
      00028A AE 83            [24] 1641 	mov	r6,dph
      00028C AF F0            [24] 1642 	mov	r7,b
                                   1643 ;	/opt/contiki/core/net/rpl/rpl-timers.c:134: instance = (rpl_instance_t *)ptr;
      00028E A8 81            [24] 1644 	mov	r0,sp
      000290 18               [12] 1645 	dec	r0
      000291 18               [12] 1646 	dec	r0
      000292 A6 05            [24] 1647 	mov	@r0,ar5
      000294 08               [12] 1648 	inc	r0
      000295 A6 06            [24] 1649 	mov	@r0,ar6
      000297 08               [12] 1650 	inc	r0
      000298 A6 07            [24] 1651 	mov	@r0,ar7
                                   1652 ;	/opt/contiki/core/net/rpl/rpl-timers.c:137: if(!dio_send_ok) {
      00029A 90r00r18         [24] 1653 	mov	dptr,#_dio_send_ok
      00029D E0               [24] 1654 	movx	a,@dptr
      00029E 70 6A            [24] 1655 	jnz	00105$
                                   1656 ;	/opt/contiki/core/net/rpl/rpl-timers.c:138: if(uip_ds6_get_link_local(ADDR_PREFERRED) != NULL) {
      0002A0 75 82 01         [24] 1657 	mov	dpl,#0x01
      0002A3 78r00            [12] 1658 	mov	r0,#_uip_ds6_get_link_local
      0002A5 79s00            [12] 1659 	mov	r1,#(_uip_ds6_get_link_local >> 8)
      0002A7 7As00            [12] 1660 	mov	r2,#(_uip_ds6_get_link_local >> 16)
      0002A9 12r00r00         [24] 1661 	lcall	__sdcc_banked_call
      0002AC AA 82            [24] 1662 	mov	r2,dpl
      0002AE AB 83            [24] 1663 	mov	r3,dph
      0002B0 AC F0            [24] 1664 	mov	r4,b
      0002B2 EA               [12] 1665 	mov	a,r2
      0002B3 4B               [12] 1666 	orl	a,r3
      0002B4 60 08            [24] 1667 	jz	00102$
                                   1668 ;	/opt/contiki/core/net/rpl/rpl-timers.c:139: dio_send_ok = 1;
      0002B6 90r00r18         [24] 1669 	mov	dptr,#_dio_send_ok
      0002B9 74 01            [12] 1670 	mov	a,#0x01
      0002BB F0               [24] 1671 	movx	@dptr,a
      0002BC 80 4C            [24] 1672 	sjmp	00105$
      0002BE                       1673 00102$:
                                   1674 ;	/opt/contiki/core/net/rpl/rpl-timers.c:142: ctimer_set(&instance->dio_timer, CLOCK_SECOND, &handle_dio_timer, instance);
      0002BE A8 81            [24] 1675 	mov	r0,sp
      0002C0 18               [12] 1676 	dec	r0
      0002C1 18               [12] 1677 	dec	r0
      0002C2 86 02            [24] 1678 	mov	ar2,@r0
      0002C4 08               [12] 1679 	inc	r0
      0002C5 86 03            [24] 1680 	mov	ar3,@r0
      0002C7 08               [12] 1681 	inc	r0
      0002C8 86 04            [24] 1682 	mov	ar4,@r0
      0002CA A8 81            [24] 1683 	mov	r0,sp
      0002CC 18               [12] 1684 	dec	r0
      0002CD 18               [12] 1685 	dec	r0
      0002CE 74 AB            [12] 1686 	mov	a,#0xAB
      0002D0 26               [12] 1687 	add	a,@r0
      0002D1 FD               [12] 1688 	mov	r5,a
      0002D2 E4               [12] 1689 	clr	a
      0002D3 08               [12] 1690 	inc	r0
      0002D4 36               [12] 1691 	addc	a,@r0
      0002D5 FE               [12] 1692 	mov	r6,a
      0002D6 08               [12] 1693 	inc	r0
      0002D7 86 07            [24] 1694 	mov	ar7,@r0
      0002D9 C0 02            [24] 1695 	push	ar2
      0002DB C0 03            [24] 1696 	push	ar3
      0002DD C0 04            [24] 1697 	push	ar4
      0002DF 74r82            [12] 1698 	mov	a,#_handle_dio_timer
      0002E1 C0 E0            [24] 1699 	push	acc
      0002E3 74s02            [12] 1700 	mov	a,#(_handle_dio_timer >> 8)
      0002E5 C0 E0            [24] 1701 	push	acc
      0002E7 74s00            [12] 1702 	mov	a,#(_handle_dio_timer >> 16)
      0002E9 C0 E0            [24] 1703 	push	acc
      0002EB 74 80            [12] 1704 	mov	a,#0x80
      0002ED C0 E0            [24] 1705 	push	acc
      0002EF E4               [12] 1706 	clr	a
      0002F0 C0 E0            [24] 1707 	push	acc
      0002F2 8D 82            [24] 1708 	mov	dpl,r5
      0002F4 8E 83            [24] 1709 	mov	dph,r6
      0002F6 8F F0            [24] 1710 	mov	b,r7
      0002F8 78r00            [12] 1711 	mov	r0,#_ctimer_set
      0002FA 79s00            [12] 1712 	mov	r1,#(_ctimer_set >> 8)
      0002FC 7As00            [12] 1713 	mov	r2,#(_ctimer_set >> 16)
      0002FE 12r00r00         [24] 1714 	lcall	__sdcc_banked_call
      000301 E5 81            [12] 1715 	mov	a,sp
      000303 24 F8            [12] 1716 	add	a,#0xf8
      000305 F5 81            [12] 1717 	mov	sp,a
                                   1718 ;	/opt/contiki/core/net/rpl/rpl-timers.c:143: return;
      000307 02r04rC6         [24] 1719 	ljmp	00114$
      00030A                       1720 00105$:
                                   1721 ;	/opt/contiki/core/net/rpl/rpl-timers.c:147: if(instance->dio_send) {
      00030A A8 81            [24] 1722 	mov	r0,sp
      00030C 18               [12] 1723 	dec	r0
      00030D 18               [12] 1724 	dec	r0
      00030E 74 8B            [12] 1725 	mov	a,#0x8B
      000310 26               [12] 1726 	add	a,@r0
      000311 FD               [12] 1727 	mov	r5,a
      000312 E4               [12] 1728 	clr	a
      000313 08               [12] 1729 	inc	r0
      000314 36               [12] 1730 	addc	a,@r0
      000315 FE               [12] 1731 	mov	r6,a
      000316 08               [12] 1732 	inc	r0
      000317 86 07            [24] 1733 	mov	ar7,@r0
      000319 8D 82            [24] 1734 	mov	dpl,r5
      00031B 8E 83            [24] 1735 	mov	dph,r6
      00031D 8F F0            [24] 1736 	mov	b,r7
      00031F 12r00r00         [24] 1737 	lcall	__gptrget
      000322 70 03            [24] 1738 	jnz	00136$
      000324 02r04r1A         [24] 1739 	ljmp	00112$
      000327                       1740 00136$:
                                   1741 ;	/opt/contiki/core/net/rpl/rpl-timers.c:149: if(instance->dio_redundancy != 0 && instance->dio_counter < instance->dio_redundancy) {
      000327 A8 81            [24] 1742 	mov	r0,sp
      000329 18               [12] 1743 	dec	r0
      00032A 18               [12] 1744 	dec	r0
      00032B 74 88            [12] 1745 	mov	a,#0x88
      00032D 26               [12] 1746 	add	a,@r0
      00032E FA               [12] 1747 	mov	r2,a
      00032F E4               [12] 1748 	clr	a
      000330 08               [12] 1749 	inc	r0
      000331 36               [12] 1750 	addc	a,@r0
      000332 FB               [12] 1751 	mov	r3,a
      000333 08               [12] 1752 	inc	r0
      000334 86 04            [24] 1753 	mov	ar4,@r0
      000336 8A 82            [24] 1754 	mov	dpl,r2
      000338 8B 83            [24] 1755 	mov	dph,r3
      00033A 8C F0            [24] 1756 	mov	b,r4
      00033C 12r00r00         [24] 1757 	lcall	__gptrget
      00033F FC               [12] 1758 	mov	r4,a
      000340 60 59            [24] 1759 	jz	00107$
      000342 C0 05            [24] 1760 	push	ar5
      000344 C0 06            [24] 1761 	push	ar6
      000346 C0 07            [24] 1762 	push	ar7
      000348 E5 81            [12] 1763 	mov	a,sp
      00034A 24 FB            [12] 1764 	add	a,#0xfb
      00034C F8               [12] 1765 	mov	r0,a
      00034D 74 8C            [12] 1766 	mov	a,#0x8C
      00034F 26               [12] 1767 	add	a,@r0
      000350 FA               [12] 1768 	mov	r2,a
      000351 E4               [12] 1769 	clr	a
      000352 08               [12] 1770 	inc	r0
      000353 36               [12] 1771 	addc	a,@r0
      000354 FB               [12] 1772 	mov	r3,a
      000355 08               [12] 1773 	inc	r0
      000356 86 07            [24] 1774 	mov	ar7,@r0
      000358 8A 82            [24] 1775 	mov	dpl,r2
      00035A 8B 83            [24] 1776 	mov	dph,r3
      00035C 8F F0            [24] 1777 	mov	b,r7
      00035E 12r00r00         [24] 1778 	lcall	__gptrget
      000361 FA               [12] 1779 	mov	r2,a
      000362 C3               [12] 1780 	clr	c
      000363 9C               [12] 1781 	subb	a,r4
      000364 D0 07            [24] 1782 	pop	ar7
      000366 D0 06            [24] 1783 	pop	ar6
      000368 D0 05            [24] 1784 	pop	ar5
      00036A 50 2F            [24] 1785 	jnc	00107$
                                   1786 ;	/opt/contiki/core/net/rpl/rpl-timers.c:153: dio_output(instance, NULL);
      00036C C0 07            [24] 1787 	push	ar7
      00036E C0 06            [24] 1788 	push	ar6
      000370 C0 05            [24] 1789 	push	ar5
      000372 E4               [12] 1790 	clr	a
      000373 C0 E0            [24] 1791 	push	acc
      000375 C0 E0            [24] 1792 	push	acc
      000377 C0 E0            [24] 1793 	push	acc
      000379 E5 81            [12] 1794 	mov	a,sp
      00037B 24 F8            [12] 1795 	add	a,#0xf8
      00037D F8               [12] 1796 	mov	r0,a
      00037E 86 82            [24] 1797 	mov	dpl,@r0
      000380 08               [12] 1798 	inc	r0
      000381 86 83            [24] 1799 	mov	dph,@r0
      000383 08               [12] 1800 	inc	r0
      000384 86 F0            [24] 1801 	mov	b,@r0
      000386 78r00            [12] 1802 	mov	r0,#_dio_output
      000388 79s00            [12] 1803 	mov	r1,#(_dio_output >> 8)
      00038A 7As00            [12] 1804 	mov	r2,#(_dio_output >> 16)
      00038C 12r00r00         [24] 1805 	lcall	__sdcc_banked_call
      00038F 15 81            [12] 1806 	dec	sp
      000391 15 81            [12] 1807 	dec	sp
      000393 15 81            [12] 1808 	dec	sp
      000395 D0 05            [24] 1809 	pop	ar5
      000397 D0 06            [24] 1810 	pop	ar6
      000399 D0 07            [24] 1811 	pop	ar7
      00039B                       1812 00107$:
                                   1813 ;	/opt/contiki/core/net/rpl/rpl-timers.c:158: instance->dio_send = 0;
      00039B 8D 82            [24] 1814 	mov	dpl,r5
      00039D 8E 83            [24] 1815 	mov	dph,r6
      00039F 8F F0            [24] 1816 	mov	b,r7
      0003A1 E4               [12] 1817 	clr	a
      0003A2 12r00r00         [24] 1818 	lcall	__gptrput
                                   1819 ;	/opt/contiki/core/net/rpl/rpl-timers.c:161: ctimer_set(&instance->dio_timer, instance->dio_next_delay, handle_dio_timer, instance);
      0003A5 A8 81            [24] 1820 	mov	r0,sp
      0003A7 18               [12] 1821 	dec	r0
      0003A8 18               [12] 1822 	dec	r0
      0003A9 86 05            [24] 1823 	mov	ar5,@r0
      0003AB 08               [12] 1824 	inc	r0
      0003AC 86 06            [24] 1825 	mov	ar6,@r0
      0003AE 08               [12] 1826 	inc	r0
      0003AF 86 07            [24] 1827 	mov	ar7,@r0
      0003B1 A8 81            [24] 1828 	mov	r0,sp
      0003B3 18               [12] 1829 	dec	r0
      0003B4 18               [12] 1830 	dec	r0
      0003B5 74 93            [12] 1831 	mov	a,#0x93
      0003B7 26               [12] 1832 	add	a,@r0
      0003B8 FA               [12] 1833 	mov	r2,a
      0003B9 E4               [12] 1834 	clr	a
      0003BA 08               [12] 1835 	inc	r0
      0003BB 36               [12] 1836 	addc	a,@r0
      0003BC FB               [12] 1837 	mov	r3,a
      0003BD 08               [12] 1838 	inc	r0
      0003BE 86 04            [24] 1839 	mov	ar4,@r0
      0003C0 8A 82            [24] 1840 	mov	dpl,r2
      0003C2 8B 83            [24] 1841 	mov	dph,r3
      0003C4 8C F0            [24] 1842 	mov	b,r4
      0003C6 E5 81            [12] 1843 	mov	a,sp
      0003C8 24 FA            [12] 1844 	add	a,#0xfa
      0003CA F8               [12] 1845 	mov	r0,a
      0003CB 12r00r00         [24] 1846 	lcall	__gptrget
      0003CE F6               [12] 1847 	mov	@r0,a
      0003CF A3               [24] 1848 	inc	dptr
      0003D0 12r00r00         [24] 1849 	lcall	__gptrget
      0003D3 08               [12] 1850 	inc	r0
      0003D4 F6               [12] 1851 	mov	@r0,a
      0003D5 A8 81            [24] 1852 	mov	r0,sp
      0003D7 18               [12] 1853 	dec	r0
      0003D8 18               [12] 1854 	dec	r0
      0003D9 74 AB            [12] 1855 	mov	a,#0xAB
      0003DB 26               [12] 1856 	add	a,@r0
      0003DC FA               [12] 1857 	mov	r2,a
      0003DD E4               [12] 1858 	clr	a
      0003DE 08               [12] 1859 	inc	r0
      0003DF 36               [12] 1860 	addc	a,@r0
      0003E0 FB               [12] 1861 	mov	r3,a
      0003E1 08               [12] 1862 	inc	r0
      0003E2 86 04            [24] 1863 	mov	ar4,@r0
      0003E4 C0 05            [24] 1864 	push	ar5
      0003E6 C0 06            [24] 1865 	push	ar6
      0003E8 C0 07            [24] 1866 	push	ar7
      0003EA 74r82            [12] 1867 	mov	a,#_handle_dio_timer
      0003EC C0 E0            [24] 1868 	push	acc
      0003EE 74s02            [12] 1869 	mov	a,#(_handle_dio_timer >> 8)
      0003F0 C0 E0            [24] 1870 	push	acc
      0003F2 74s00            [12] 1871 	mov	a,#(_handle_dio_timer >> 16)
      0003F4 C0 E0            [24] 1872 	push	acc
      0003F6 E5 81            [12] 1873 	mov	a,sp
      0003F8 24 F4            [12] 1874 	add	a,#0xf4
      0003FA F8               [12] 1875 	mov	r0,a
      0003FB E6               [12] 1876 	mov	a,@r0
      0003FC C0 E0            [24] 1877 	push	acc
      0003FE 08               [12] 1878 	inc	r0
      0003FF E6               [12] 1879 	mov	a,@r0
      000400 C0 E0            [24] 1880 	push	acc
      000402 8A 82            [24] 1881 	mov	dpl,r2
      000404 8B 83            [24] 1882 	mov	dph,r3
      000406 8C F0            [24] 1883 	mov	b,r4
      000408 78r00            [12] 1884 	mov	r0,#_ctimer_set
      00040A 79s00            [12] 1885 	mov	r1,#(_ctimer_set >> 8)
      00040C 7As00            [12] 1886 	mov	r2,#(_ctimer_set >> 16)
      00040E 12r00r00         [24] 1887 	lcall	__sdcc_banked_call
      000411 E5 81            [12] 1888 	mov	a,sp
      000413 24 F8            [12] 1889 	add	a,#0xf8
      000415 F5 81            [12] 1890 	mov	sp,a
      000417 02r04rC6         [24] 1891 	ljmp	00114$
      00041A                       1892 00112$:
                                   1893 ;	/opt/contiki/core/net/rpl/rpl-timers.c:164: if(instance->dio_intcurrent < instance->dio_intmin + instance->dio_intdoubl) {
      00041A A8 81            [24] 1894 	mov	r0,sp
      00041C 18               [12] 1895 	dec	r0
      00041D 18               [12] 1896 	dec	r0
      00041E 74 8A            [12] 1897 	mov	a,#0x8A
      000420 26               [12] 1898 	add	a,@r0
      000421 FD               [12] 1899 	mov	r5,a
      000422 E4               [12] 1900 	clr	a
      000423 08               [12] 1901 	inc	r0
      000424 36               [12] 1902 	addc	a,@r0
      000425 FE               [12] 1903 	mov	r6,a
      000426 08               [12] 1904 	inc	r0
      000427 86 07            [24] 1905 	mov	ar7,@r0
      000429 8D 82            [24] 1906 	mov	dpl,r5
      00042B 8E 83            [24] 1907 	mov	dph,r6
      00042D 8F F0            [24] 1908 	mov	b,r7
      00042F E5 81            [12] 1909 	mov	a,sp
      000431 24 FA            [12] 1910 	add	a,#0xfa
      000433 F8               [12] 1911 	mov	r0,a
      000434 12r00r00         [24] 1912 	lcall	__gptrget
      000437 F6               [12] 1913 	mov	@r0,a
      000438 A8 81            [24] 1914 	mov	r0,sp
      00043A 18               [12] 1915 	dec	r0
      00043B 18               [12] 1916 	dec	r0
      00043C 74 87            [12] 1917 	mov	a,#0x87
      00043E 26               [12] 1918 	add	a,@r0
      00043F FA               [12] 1919 	mov	r2,a
      000440 E4               [12] 1920 	clr	a
      000441 08               [12] 1921 	inc	r0
      000442 36               [12] 1922 	addc	a,@r0
      000443 FB               [12] 1923 	mov	r3,a
      000444 08               [12] 1924 	inc	r0
      000445 86 04            [24] 1925 	mov	ar4,@r0
      000447 8A 82            [24] 1926 	mov	dpl,r2
      000449 8B 83            [24] 1927 	mov	dph,r3
      00044B 8C F0            [24] 1928 	mov	b,r4
      00044D 12r00r00         [24] 1929 	lcall	__gptrget
      000450 FA               [12] 1930 	mov	r2,a
      000451 E5 81            [12] 1931 	mov	a,sp
      000453 24 FC            [12] 1932 	add	a,#0xfc
      000455 F8               [12] 1933 	mov	r0,a
      000456 A6 02            [24] 1934 	mov	@r0,ar2
      000458 08               [12] 1935 	inc	r0
      000459 76 00            [12] 1936 	mov	@r0,#0x00
      00045B A8 81            [24] 1937 	mov	r0,sp
      00045D 18               [12] 1938 	dec	r0
      00045E 18               [12] 1939 	dec	r0
      00045F 74 86            [12] 1940 	mov	a,#0x86
      000461 26               [12] 1941 	add	a,@r0
      000462 FA               [12] 1942 	mov	r2,a
      000463 E4               [12] 1943 	clr	a
      000464 08               [12] 1944 	inc	r0
      000465 36               [12] 1945 	addc	a,@r0
      000466 FB               [12] 1946 	mov	r3,a
      000467 08               [12] 1947 	inc	r0
      000468 86 04            [24] 1948 	mov	ar4,@r0
      00046A 8A 82            [24] 1949 	mov	dpl,r2
      00046C 8B 83            [24] 1950 	mov	dph,r3
      00046E 8C F0            [24] 1951 	mov	b,r4
      000470 12r00r00         [24] 1952 	lcall	__gptrget
      000473 FA               [12] 1953 	mov	r2,a
      000474 7C 00            [12] 1954 	mov	r4,#0x00
      000476 E5 81            [12] 1955 	mov	a,sp
      000478 24 FC            [12] 1956 	add	a,#0xfc
      00047A F8               [12] 1957 	mov	r0,a
      00047B EA               [12] 1958 	mov	a,r2
      00047C 26               [12] 1959 	add	a,@r0
      00047D F6               [12] 1960 	mov	@r0,a
      00047E EC               [12] 1961 	mov	a,r4
      00047F 08               [12] 1962 	inc	r0
      000480 36               [12] 1963 	addc	a,@r0
      000481 F6               [12] 1964 	mov	@r0,a
      000482 E5 81            [12] 1965 	mov	a,sp
      000484 24 FA            [12] 1966 	add	a,#0xfa
      000486 F8               [12] 1967 	mov	r0,a
      000487 86 03            [24] 1968 	mov	ar3,@r0
      000489 7C 00            [12] 1969 	mov	r4,#0x00
      00048B E5 81            [12] 1970 	mov	a,sp
      00048D 24 FC            [12] 1971 	add	a,#0xfc
      00048F F8               [12] 1972 	mov	r0,a
      000490 C3               [12] 1973 	clr	c
      000491 EB               [12] 1974 	mov	a,r3
      000492 96               [12] 1975 	subb	a,@r0
      000493 EC               [12] 1976 	mov	a,r4
      000494 64 80            [12] 1977 	xrl	a,#0x80
      000496 08               [12] 1978 	inc	r0
      000497 86 F0            [24] 1979 	mov	b,@r0
      000499 63 F0 80         [24] 1980 	xrl	b,#0x80
      00049C 95 F0            [12] 1981 	subb	a,b
      00049E 50 11            [24] 1982 	jnc	00110$
                                   1983 ;	/opt/contiki/core/net/rpl/rpl-timers.c:165: instance->dio_intcurrent++;
      0004A0 E5 81            [12] 1984 	mov	a,sp
      0004A2 24 FA            [12] 1985 	add	a,#0xfa
      0004A4 F8               [12] 1986 	mov	r0,a
      0004A5 E6               [12] 1987 	mov	a,@r0
      0004A6 04               [12] 1988 	inc	a
      0004A7 FC               [12] 1989 	mov	r4,a
      0004A8 8D 82            [24] 1990 	mov	dpl,r5
      0004AA 8E 83            [24] 1991 	mov	dph,r6
      0004AC 8F F0            [24] 1992 	mov	b,r7
      0004AE 12r00r00         [24] 1993 	lcall	__gptrput
      0004B1                       1994 00110$:
                                   1995 ;	/opt/contiki/core/net/rpl/rpl-timers.c:168: new_dio_interval(instance);
      0004B1 A8 81            [24] 1996 	mov	r0,sp
      0004B3 18               [12] 1997 	dec	r0
      0004B4 18               [12] 1998 	dec	r0
      0004B5 86 82            [24] 1999 	mov	dpl,@r0
      0004B7 08               [12] 2000 	inc	r0
      0004B8 86 83            [24] 2001 	mov	dph,@r0
      0004BA 08               [12] 2002 	inc	r0
      0004BB 86 F0            [24] 2003 	mov	b,@r0
      0004BD 78r73            [12] 2004 	mov	r0,#_new_dio_interval
      0004BF 79s00            [12] 2005 	mov	r1,#(_new_dio_interval >> 8)
      0004C1 7As00            [12] 2006 	mov	r2,#(_new_dio_interval >> 16)
      0004C3 12r00r00         [24] 2007 	lcall	__sdcc_banked_call
      0004C6                       2008 00114$:
      0004C6 E5 81            [12] 2009 	mov	a,sp
      0004C8 24 F9            [12] 2010 	add	a,#0xF9
      0004CA F5 81            [12] 2011 	mov	sp,a
      0004CC 02r00r00         [24] 2012 	ljmp	__sdcc_banked_ret
                                   2013 ;------------------------------------------------------------
                                   2014 ;Allocation info for local variables in function 'rpl_reset_periodic_timer'
                                   2015 ;------------------------------------------------------------
                                   2016 ;	/opt/contiki/core/net/rpl/rpl-timers.c:177: rpl_reset_periodic_timer(void)
                                   2017 ;	-----------------------------------------
                                   2018 ;	 function rpl_reset_periodic_timer
                                   2019 ;	-----------------------------------------
      0004CF                       2020 _rpl_reset_periodic_timer:
                                   2021 ;	/opt/contiki/core/net/rpl/rpl-timers.c:180: ((uint32_t)RPL_DIS_INTERVAL * (uint32_t)random_rand()) / RANDOM_RAND_MAX -
      0004CF 78r00            [12] 2022 	mov	r0,#_random_rand
      0004D1 79s00            [12] 2023 	mov	r1,#(_random_rand >> 8)
      0004D3 7As00            [12] 2024 	mov	r2,#(_random_rand >> 16)
      0004D5 12r00r00         [24] 2025 	lcall	__sdcc_banked_call
      0004D8 AE 82            [24] 2026 	mov	r6,dpl
      0004DA AF 83            [24] 2027 	mov	r7,dph
      0004DC 7D 00            [12] 2028 	mov	r5,#0x00
      0004DE 7C 00            [12] 2029 	mov	r4,#0x00
      0004E0 C0 06            [24] 2030 	push	ar6
      0004E2 C0 07            [24] 2031 	push	ar7
      0004E4 C0 05            [24] 2032 	push	ar5
      0004E6 C0 04            [24] 2033 	push	ar4
      0004E8 90 00 3C         [24] 2034 	mov	dptr,#(0x3C&0x00ff)
      0004EB E4               [12] 2035 	clr	a
      0004EC F5 F0            [12] 2036 	mov	b,a
      0004EE 12r00r00         [24] 2037 	lcall	__mullong
      0004F1 AC 82            [24] 2038 	mov	r4,dpl
      0004F3 AD 83            [24] 2039 	mov	r5,dph
      0004F5 AE F0            [24] 2040 	mov	r6,b
      0004F7 FF               [12] 2041 	mov	r7,a
      0004F8 E5 81            [12] 2042 	mov	a,sp
      0004FA 24 FC            [12] 2043 	add	a,#0xfc
      0004FC F5 81            [12] 2044 	mov	sp,a
      0004FE 74 FF            [12] 2045 	mov	a,#0xFF
      000500 C0 E0            [24] 2046 	push	acc
      000502 C0 E0            [24] 2047 	push	acc
      000504 E4               [12] 2048 	clr	a
      000505 C0 E0            [24] 2049 	push	acc
      000507 C0 E0            [24] 2050 	push	acc
      000509 8C 82            [24] 2051 	mov	dpl,r4
      00050B 8D 83            [24] 2052 	mov	dph,r5
      00050D 8E F0            [24] 2053 	mov	b,r6
      00050F EF               [12] 2054 	mov	a,r7
      000510 12r00r00         [24] 2055 	lcall	__divulong
      000513 AC 82            [24] 2056 	mov	r4,dpl
      000515 AD 83            [24] 2057 	mov	r5,dph
      000517 AE F0            [24] 2058 	mov	r6,b
      000519 FF               [12] 2059 	mov	r7,a
      00051A E5 81            [12] 2060 	mov	a,sp
      00051C 24 FC            [12] 2061 	add	a,#0xfc
      00051E F5 81            [12] 2062 	mov	sp,a
      000520 74 19            [12] 2063 	mov	a,#0x19
      000522 2C               [12] 2064 	add	a,r4
      000523 FC               [12] 2065 	mov	r4,a
      000524 E4               [12] 2066 	clr	a
      000525 3D               [12] 2067 	addc	a,r5
      000526 FD               [12] 2068 	mov	r5,a
      000527 E4               [12] 2069 	clr	a
      000528 3E               [12] 2070 	addc	a,r6
      000529 E4               [12] 2071 	clr	a
      00052A 3F               [12] 2072 	addc	a,r7
      00052B 90r00r16         [24] 2073 	mov	dptr,#_next_dis
      00052E EC               [12] 2074 	mov	a,r4
      00052F F0               [24] 2075 	movx	@dptr,a
      000530 ED               [12] 2076 	mov	a,r5
      000531 A3               [24] 2077 	inc	dptr
      000532 F0               [24] 2078 	movx	@dptr,a
                                   2079 ;	/opt/contiki/core/net/rpl/rpl-timers.c:182: ctimer_set(&periodic_timer, CLOCK_SECOND, handle_periodic_timer, NULL);
      000533 E4               [12] 2080 	clr	a
      000534 C0 E0            [24] 2081 	push	acc
      000536 C0 E0            [24] 2082 	push	acc
      000538 C0 E0            [24] 2083 	push	acc
      00053A 74r00            [12] 2084 	mov	a,#_handle_periodic_timer
      00053C C0 E0            [24] 2085 	push	acc
      00053E 74s00            [12] 2086 	mov	a,#(_handle_periodic_timer >> 8)
      000540 C0 E0            [24] 2087 	push	acc
      000542 74s00            [12] 2088 	mov	a,#(_handle_periodic_timer >> 16)
      000544 C0 E0            [24] 2089 	push	acc
      000546 74 80            [12] 2090 	mov	a,#0x80
      000548 C0 E0            [24] 2091 	push	acc
      00054A E4               [12] 2092 	clr	a
      00054B C0 E0            [24] 2093 	push	acc
      00054D 90r00r00         [24] 2094 	mov	dptr,#_periodic_timer
      000550 75 F0 00         [24] 2095 	mov	b,#0x00
      000553 78r00            [12] 2096 	mov	r0,#_ctimer_set
      000555 79s00            [12] 2097 	mov	r1,#(_ctimer_set >> 8)
      000557 7As00            [12] 2098 	mov	r2,#(_ctimer_set >> 16)
      000559 12r00r00         [24] 2099 	lcall	__sdcc_banked_call
      00055C E5 81            [12] 2100 	mov	a,sp
      00055E 24 F8            [12] 2101 	add	a,#0xf8
      000560 F5 81            [12] 2102 	mov	sp,a
      000562 02r00r00         [24] 2103 	ljmp	__sdcc_banked_ret
                                   2104 ;------------------------------------------------------------
                                   2105 ;Allocation info for local variables in function 'rpl_reset_dio_timer'
                                   2106 ;------------------------------------------------------------
                                   2107 ;instance                  Allocated to stack - sp -5
                                   2108 ;sloc0                     Allocated to stack - sp -2
                                   2109 ;sloc1                     Allocated to stack - sp +1
                                   2110 ;------------------------------------------------------------
                                   2111 ;	/opt/contiki/core/net/rpl/rpl-timers.c:187: rpl_reset_dio_timer(rpl_instance_t *instance)
                                   2112 ;	-----------------------------------------
                                   2113 ;	 function rpl_reset_dio_timer
                                   2114 ;	-----------------------------------------
      000565                       2115 _rpl_reset_dio_timer:
      000565 C0 82            [24] 2116 	push	dpl
      000567 C0 83            [24] 2117 	push	dph
      000569 C0 F0            [24] 2118 	push	b
      00056B 05 81            [12] 2119 	inc	sp
      00056D 05 81            [12] 2120 	inc	sp
      00056F 05 81            [12] 2121 	inc	sp
                                   2122 ;	/opt/contiki/core/net/rpl/rpl-timers.c:192: if(instance->dio_intcurrent > instance->dio_intmin) {
      000571 E5 81            [12] 2123 	mov	a,sp
      000573 24 FB            [12] 2124 	add	a,#0xfb
      000575 F8               [12] 2125 	mov	r0,a
      000576 74 8A            [12] 2126 	mov	a,#0x8A
      000578 26               [12] 2127 	add	a,@r0
      000579 FA               [12] 2128 	mov	r2,a
      00057A E4               [12] 2129 	clr	a
      00057B 08               [12] 2130 	inc	r0
      00057C 36               [12] 2131 	addc	a,@r0
      00057D FB               [12] 2132 	mov	r3,a
      00057E 08               [12] 2133 	inc	r0
      00057F 86 04            [24] 2134 	mov	ar4,@r0
      000581 8A 82            [24] 2135 	mov	dpl,r2
      000583 8B 83            [24] 2136 	mov	dph,r3
      000585 8C F0            [24] 2137 	mov	b,r4
      000587 12r00r00         [24] 2138 	lcall	__gptrget
      00058A FE               [12] 2139 	mov	r6,a
      00058B E5 81            [12] 2140 	mov	a,sp
      00058D 24 FB            [12] 2141 	add	a,#0xfb
      00058F F8               [12] 2142 	mov	r0,a
      000590 A9 81            [24] 2143 	mov	r1,sp
      000592 19               [12] 2144 	dec	r1
      000593 19               [12] 2145 	dec	r1
      000594 74 87            [12] 2146 	mov	a,#0x87
      000596 26               [12] 2147 	add	a,@r0
      000597 F7               [12] 2148 	mov	@r1,a
      000598 E4               [12] 2149 	clr	a
      000599 08               [12] 2150 	inc	r0
      00059A 36               [12] 2151 	addc	a,@r0
      00059B 09               [12] 2152 	inc	r1
      00059C F7               [12] 2153 	mov	@r1,a
      00059D 08               [12] 2154 	inc	r0
      00059E 09               [12] 2155 	inc	r1
      00059F E6               [12] 2156 	mov	a,@r0
      0005A0 F7               [12] 2157 	mov	@r1,a
      0005A1 A8 81            [24] 2158 	mov	r0,sp
      0005A3 18               [12] 2159 	dec	r0
      0005A4 18               [12] 2160 	dec	r0
      0005A5 86 82            [24] 2161 	mov	dpl,@r0
      0005A7 08               [12] 2162 	inc	r0
      0005A8 86 83            [24] 2163 	mov	dph,@r0
      0005AA 08               [12] 2164 	inc	r0
      0005AB 86 F0            [24] 2165 	mov	b,@r0
      0005AD 12r00r00         [24] 2166 	lcall	__gptrget
      0005B0 FF               [12] 2167 	mov	r7,a
      0005B1 C3               [12] 2168 	clr	c
      0005B2 9E               [12] 2169 	subb	a,r6
      0005B3 50 48            [24] 2170 	jnc	00103$
                                   2171 ;	/opt/contiki/core/net/rpl/rpl-timers.c:193: instance->dio_counter = 0;
      0005B5 E5 81            [12] 2172 	mov	a,sp
      0005B7 24 FB            [12] 2173 	add	a,#0xfb
      0005B9 F8               [12] 2174 	mov	r0,a
      0005BA 74 8C            [12] 2175 	mov	a,#0x8C
      0005BC 26               [12] 2176 	add	a,@r0
      0005BD FD               [12] 2177 	mov	r5,a
      0005BE E4               [12] 2178 	clr	a
      0005BF 08               [12] 2179 	inc	r0
      0005C0 36               [12] 2180 	addc	a,@r0
      0005C1 FE               [12] 2181 	mov	r6,a
      0005C2 08               [12] 2182 	inc	r0
      0005C3 86 07            [24] 2183 	mov	ar7,@r0
      0005C5 8D 82            [24] 2184 	mov	dpl,r5
      0005C7 8E 83            [24] 2185 	mov	dph,r6
      0005C9 8F F0            [24] 2186 	mov	b,r7
      0005CB E4               [12] 2187 	clr	a
      0005CC 12r00r00         [24] 2188 	lcall	__gptrput
                                   2189 ;	/opt/contiki/core/net/rpl/rpl-timers.c:194: instance->dio_intcurrent = instance->dio_intmin;
      0005CF A8 81            [24] 2190 	mov	r0,sp
      0005D1 18               [12] 2191 	dec	r0
      0005D2 18               [12] 2192 	dec	r0
      0005D3 86 82            [24] 2193 	mov	dpl,@r0
      0005D5 08               [12] 2194 	inc	r0
      0005D6 86 83            [24] 2195 	mov	dph,@r0
      0005D8 08               [12] 2196 	inc	r0
      0005D9 86 F0            [24] 2197 	mov	b,@r0
      0005DB 12r00r00         [24] 2198 	lcall	__gptrget
      0005DE 8A 82            [24] 2199 	mov	dpl,r2
      0005E0 8B 83            [24] 2200 	mov	dph,r3
      0005E2 8C F0            [24] 2201 	mov	b,r4
      0005E4 12r00r00         [24] 2202 	lcall	__gptrput
                                   2203 ;	/opt/contiki/core/net/rpl/rpl-timers.c:195: new_dio_interval(instance);
      0005E7 E5 81            [12] 2204 	mov	a,sp
      0005E9 24 FB            [12] 2205 	add	a,#0xfb
      0005EB F8               [12] 2206 	mov	r0,a
      0005EC 86 82            [24] 2207 	mov	dpl,@r0
      0005EE 08               [12] 2208 	inc	r0
      0005EF 86 83            [24] 2209 	mov	dph,@r0
      0005F1 08               [12] 2210 	inc	r0
      0005F2 86 F0            [24] 2211 	mov	b,@r0
      0005F4 78r73            [12] 2212 	mov	r0,#_new_dio_interval
      0005F6 79s00            [12] 2213 	mov	r1,#(_new_dio_interval >> 8)
      0005F8 7As00            [12] 2214 	mov	r2,#(_new_dio_interval >> 16)
      0005FA 12r00r00         [24] 2215 	lcall	__sdcc_banked_call
      0005FD                       2216 00103$:
      0005FD E5 81            [12] 2217 	mov	a,sp
      0005FF 24 FA            [12] 2218 	add	a,#0xFA
      000601 F5 81            [12] 2219 	mov	sp,a
      000603 02r00r00         [24] 2220 	ljmp	__sdcc_banked_ret
                                   2221 ;------------------------------------------------------------
                                   2222 ;Allocation info for local variables in function 'set_dao_lifetime_timer'
                                   2223 ;------------------------------------------------------------
                                   2224 ;instance                  Allocated to stack - sp -4
                                   2225 ;expiration_time           Allocated to stack - sp -1
                                   2226 ;sloc0                     Allocated to stack - sp +1
                                   2227 ;------------------------------------------------------------
                                   2228 ;	/opt/contiki/core/net/rpl/rpl-timers.c:205: set_dao_lifetime_timer(rpl_instance_t *instance)
                                   2229 ;	-----------------------------------------
                                   2230 ;	 function set_dao_lifetime_timer
                                   2231 ;	-----------------------------------------
      000606                       2232 _set_dao_lifetime_timer:
      000606 C0 82            [24] 2233 	push	dpl
      000608 C0 83            [24] 2234 	push	dph
      00060A C0 F0            [24] 2235 	push	b
      00060C 05 81            [12] 2236 	inc	sp
      00060E 05 81            [12] 2237 	inc	sp
                                   2238 ;	/opt/contiki/core/net/rpl/rpl-timers.c:207: if(rpl_get_mode() == RPL_MODE_FEATHER) {
      000610 78r00            [12] 2239 	mov	r0,#_rpl_get_mode
      000612 79s00            [12] 2240 	mov	r1,#(_rpl_get_mode >> 8)
      000614 7As00            [12] 2241 	mov	r2,#(_rpl_get_mode >> 16)
      000616 12r00r00         [24] 2242 	lcall	__sdcc_banked_call
      000619 AC 82            [24] 2243 	mov	r4,dpl
      00061B BC 01 03         [24] 2244 	cjne	r4,#0x01,00102$
                                   2245 ;	/opt/contiki/core/net/rpl/rpl-timers.c:208: return;
      00061E 02r06rEB         [24] 2246 	ljmp	00106$
      000621                       2247 00102$:
                                   2248 ;	/opt/contiki/core/net/rpl/rpl-timers.c:213: if(instance->lifetime_unit != 0xffff && instance->default_lifetime != 0xff) {
      000621 E5 81            [12] 2249 	mov	a,sp
      000623 24 FC            [12] 2250 	add	a,#0xfc
      000625 F8               [12] 2251 	mov	r0,a
      000626 74 91            [12] 2252 	mov	a,#0x91
      000628 26               [12] 2253 	add	a,@r0
      000629 FA               [12] 2254 	mov	r2,a
      00062A E4               [12] 2255 	clr	a
      00062B 08               [12] 2256 	inc	r0
      00062C 36               [12] 2257 	addc	a,@r0
      00062D FB               [12] 2258 	mov	r3,a
      00062E 08               [12] 2259 	inc	r0
      00062F 86 04            [24] 2260 	mov	ar4,@r0
      000631 8A 82            [24] 2261 	mov	dpl,r2
      000633 8B 83            [24] 2262 	mov	dph,r3
      000635 8C F0            [24] 2263 	mov	b,r4
      000637 12r00r00         [24] 2264 	lcall	__gptrget
      00063A FB               [12] 2265 	mov	r3,a
      00063B A3               [24] 2266 	inc	dptr
      00063C 12r00r00         [24] 2267 	lcall	__gptrget
      00063F FC               [12] 2268 	mov	r4,a
      000640 BB FF 06         [24] 2269 	cjne	r3,#0xFF,00119$
      000643 BC FF 03         [24] 2270 	cjne	r4,#0xFF,00119$
      000646 02r06rEB         [24] 2271 	ljmp	00106$
      000649                       2272 00119$:
      000649 C0 03            [24] 2273 	push	ar3
      00064B C0 04            [24] 2274 	push	ar4
      00064D E5 81            [12] 2275 	mov	a,sp
      00064F 24 FA            [12] 2276 	add	a,#0xfa
      000651 F8               [12] 2277 	mov	r0,a
      000652 74 89            [12] 2278 	mov	a,#0x89
      000654 26               [12] 2279 	add	a,@r0
      000655 FA               [12] 2280 	mov	r2,a
      000656 E4               [12] 2281 	clr	a
      000657 08               [12] 2282 	inc	r0
      000658 36               [12] 2283 	addc	a,@r0
      000659 FB               [12] 2284 	mov	r3,a
      00065A 08               [12] 2285 	inc	r0
      00065B 86 04            [24] 2286 	mov	ar4,@r0
      00065D 8A 82            [24] 2287 	mov	dpl,r2
      00065F 8B 83            [24] 2288 	mov	dph,r3
      000661 8C F0            [24] 2289 	mov	b,r4
      000663 12r00r00         [24] 2290 	lcall	__gptrget
      000666 FF               [12] 2291 	mov	r7,a
      000667 BF FF 06         [24] 2292 	cjne	r7,#0xFF,00120$
      00066A D0 04            [24] 2293 	pop	ar4
      00066C D0 03            [24] 2294 	pop	ar3
      00066E 80 7B            [24] 2295 	sjmp	00106$
      000670                       2296 00120$:
                                   2297 ;	/opt/contiki/core/net/rpl/rpl-timers.c:215: expiration_time = (clock_time_t)instance->default_lifetime *
      000670 8F 02            [24] 2298 	mov	ar2,r7
      000672 7F 00            [12] 2299 	mov	r7,#0x00
                                   2300 ;	/opt/contiki/core/net/rpl/rpl-timers.c:216: (clock_time_t)instance->lifetime_unit *
      000674 8A 82            [24] 2301 	mov	dpl,r2
      000676 8F 83            [24] 2302 	mov	dph,r7
      000678 12r00r00         [24] 2303 	lcall	__mulint
      00067B AE 82            [24] 2304 	mov	r6,dpl
      00067D AF 83            [24] 2305 	mov	r7,dph
      00067F 15 81            [12] 2306 	dec	sp
      000681 15 81            [12] 2307 	dec	sp
      000683 EF               [12] 2308 	mov	a,r7
      000684 54 01            [12] 2309 	anl	a,#0x01
      000686 A2 E0            [12] 2310 	mov	c,acc.0
      000688 CE               [12] 2311 	xch	a,r6
      000689 13               [12] 2312 	rrc	a
      00068A CE               [12] 2313 	xch	a,r6
      00068B 13               [12] 2314 	rrc	a
      00068C CE               [12] 2315 	xch	a,r6
      00068D FF               [12] 2316 	mov	r7,a
      00068E A8 81            [24] 2317 	mov	r0,sp
      000690 18               [12] 2318 	dec	r0
      000691 A6 06            [24] 2319 	mov	@r0,ar6
      000693 EF               [12] 2320 	mov	a,r7
      000694 C3               [12] 2321 	clr	c
      000695 13               [12] 2322 	rrc	a
      000696 C6               [12] 2323 	xch	a,@r0
      000697 13               [12] 2324 	rrc	a
      000698 C6               [12] 2325 	xch	a,@r0
      000699 08               [12] 2326 	inc	r0
      00069A F6               [12] 2327 	mov	@r0,a
                                   2328 ;	/opt/contiki/core/net/rpl/rpl-timers.c:221: handle_dao_timer, instance);
      00069B E5 81            [12] 2329 	mov	a,sp
      00069D 24 FC            [12] 2330 	add	a,#0xfc
      00069F F8               [12] 2331 	mov	r0,a
      0006A0 86 03            [24] 2332 	mov	ar3,@r0
      0006A2 08               [12] 2333 	inc	r0
      0006A3 86 04            [24] 2334 	mov	ar4,@r0
      0006A5 08               [12] 2335 	inc	r0
      0006A6 86 05            [24] 2336 	mov	ar5,@r0
                                   2337 ;	/opt/contiki/core/net/rpl/rpl-timers.c:220: ctimer_set(&instance->dao_lifetime_timer, expiration_time,
      0006A8 E5 81            [12] 2338 	mov	a,sp
      0006AA 24 FC            [12] 2339 	add	a,#0xfc
      0006AC F8               [12] 2340 	mov	r0,a
      0006AD 74 D7            [12] 2341 	mov	a,#0xD7
      0006AF 26               [12] 2342 	add	a,@r0
      0006B0 FA               [12] 2343 	mov	r2,a
      0006B1 E4               [12] 2344 	clr	a
      0006B2 08               [12] 2345 	inc	r0
      0006B3 36               [12] 2346 	addc	a,@r0
      0006B4 FE               [12] 2347 	mov	r6,a
      0006B5 08               [12] 2348 	inc	r0
      0006B6 86 07            [24] 2349 	mov	ar7,@r0
      0006B8 C0 03            [24] 2350 	push	ar3
      0006BA C0 04            [24] 2351 	push	ar4
      0006BC C0 05            [24] 2352 	push	ar5
      0006BE 74rF4            [12] 2353 	mov	a,#_handle_dao_timer
      0006C0 C0 E0            [24] 2354 	push	acc
      0006C2 74s06            [12] 2355 	mov	a,#(_handle_dao_timer >> 8)
      0006C4 C0 E0            [24] 2356 	push	acc
      0006C6 74s00            [12] 2357 	mov	a,#(_handle_dao_timer >> 16)
      0006C8 C0 E0            [24] 2358 	push	acc
      0006CA E5 81            [12] 2359 	mov	a,sp
      0006CC 24 F9            [12] 2360 	add	a,#0xf9
      0006CE F8               [12] 2361 	mov	r0,a
      0006CF E6               [12] 2362 	mov	a,@r0
      0006D0 C0 E0            [24] 2363 	push	acc
      0006D2 08               [12] 2364 	inc	r0
      0006D3 E6               [12] 2365 	mov	a,@r0
      0006D4 C0 E0            [24] 2366 	push	acc
      0006D6 8A 82            [24] 2367 	mov	dpl,r2
      0006D8 8E 83            [24] 2368 	mov	dph,r6
      0006DA 8F F0            [24] 2369 	mov	b,r7
      0006DC 78r00            [12] 2370 	mov	r0,#_ctimer_set
      0006DE 79s00            [12] 2371 	mov	r1,#(_ctimer_set >> 8)
      0006E0 7As00            [12] 2372 	mov	r2,#(_ctimer_set >> 16)
      0006E2 12r00r00         [24] 2373 	lcall	__sdcc_banked_call
      0006E5 E5 81            [12] 2374 	mov	a,sp
      0006E7 24 F8            [12] 2375 	add	a,#0xf8
      0006E9 F5 81            [12] 2376 	mov	sp,a
      0006EB                       2377 00106$:
      0006EB E5 81            [12] 2378 	mov	a,sp
      0006ED 24 FB            [12] 2379 	add	a,#0xFB
      0006EF F5 81            [12] 2380 	mov	sp,a
      0006F1 02r00r00         [24] 2381 	ljmp	__sdcc_banked_ret
                                   2382 ;------------------------------------------------------------
                                   2383 ;Allocation info for local variables in function 'handle_dao_timer'
                                   2384 ;------------------------------------------------------------
                                   2385 ;ptr                       Allocated to registers r5 r6 r7 
                                   2386 ;instance                  Allocated to stack - sp -2
                                   2387 ;------------------------------------------------------------
                                   2388 ;	/opt/contiki/core/net/rpl/rpl-timers.c:226: handle_dao_timer(void *ptr)
                                   2389 ;	-----------------------------------------
                                   2390 ;	 function handle_dao_timer
                                   2391 ;	-----------------------------------------
      0006F4                       2392 _handle_dao_timer:
      0006F4 05 81            [12] 2393 	inc	sp
      0006F6 05 81            [12] 2394 	inc	sp
      0006F8 05 81            [12] 2395 	inc	sp
      0006FA AD 82            [24] 2396 	mov	r5,dpl
      0006FC AE 83            [24] 2397 	mov	r6,dph
      0006FE AF F0            [24] 2398 	mov	r7,b
                                   2399 ;	/opt/contiki/core/net/rpl/rpl-timers.c:234: instance = (rpl_instance_t *)ptr;
      000700 A8 81            [24] 2400 	mov	r0,sp
      000702 18               [12] 2401 	dec	r0
      000703 18               [12] 2402 	dec	r0
      000704 A6 05            [24] 2403 	mov	@r0,ar5
      000706 08               [12] 2404 	inc	r0
      000707 A6 06            [24] 2405 	mov	@r0,ar6
      000709 08               [12] 2406 	inc	r0
      00070A A6 07            [24] 2407 	mov	@r0,ar7
                                   2408 ;	/opt/contiki/core/net/rpl/rpl-timers.c:236: if(!dio_send_ok && uip_ds6_get_link_local(ADDR_PREFERRED) == NULL) {
      00070C 90r00r18         [24] 2409 	mov	dptr,#_dio_send_ok
      00070F E0               [24] 2410 	movx	a,@dptr
      000710 70 62            [24] 2411 	jnz	00102$
      000712 75 82 01         [24] 2412 	mov	dpl,#0x01
      000715 78r00            [12] 2413 	mov	r0,#_uip_ds6_get_link_local
      000717 79s00            [12] 2414 	mov	r1,#(_uip_ds6_get_link_local >> 8)
      000719 7As00            [12] 2415 	mov	r2,#(_uip_ds6_get_link_local >> 16)
      00071B 12r00r00         [24] 2416 	lcall	__sdcc_banked_call
      00071E AA 82            [24] 2417 	mov	r2,dpl
      000720 AB 83            [24] 2418 	mov	r3,dph
      000722 AC F0            [24] 2419 	mov	r4,b
      000724 EA               [12] 2420 	mov	a,r2
      000725 4B               [12] 2421 	orl	a,r3
      000726 70 4C            [24] 2422 	jnz	00102$
                                   2423 ;	/opt/contiki/core/net/rpl/rpl-timers.c:238: ctimer_set(&instance->dao_timer, CLOCK_SECOND, handle_dao_timer, instance);
      000728 A8 81            [24] 2424 	mov	r0,sp
      00072A 18               [12] 2425 	dec	r0
      00072B 18               [12] 2426 	dec	r0
      00072C 86 02            [24] 2427 	mov	ar2,@r0
      00072E 08               [12] 2428 	inc	r0
      00072F 86 03            [24] 2429 	mov	ar3,@r0
      000731 08               [12] 2430 	inc	r0
      000732 86 04            [24] 2431 	mov	ar4,@r0
      000734 A8 81            [24] 2432 	mov	r0,sp
      000736 18               [12] 2433 	dec	r0
      000737 18               [12] 2434 	dec	r0
      000738 74 C1            [12] 2435 	mov	a,#0xC1
      00073A 26               [12] 2436 	add	a,@r0
      00073B FD               [12] 2437 	mov	r5,a
      00073C E4               [12] 2438 	clr	a
      00073D 08               [12] 2439 	inc	r0
      00073E 36               [12] 2440 	addc	a,@r0
      00073F FE               [12] 2441 	mov	r6,a
      000740 08               [12] 2442 	inc	r0
      000741 86 07            [24] 2443 	mov	ar7,@r0
      000743 C0 02            [24] 2444 	push	ar2
      000745 C0 03            [24] 2445 	push	ar3
      000747 C0 04            [24] 2446 	push	ar4
      000749 74rF4            [12] 2447 	mov	a,#_handle_dao_timer
      00074B C0 E0            [24] 2448 	push	acc
      00074D 74s06            [12] 2449 	mov	a,#(_handle_dao_timer >> 8)
      00074F C0 E0            [24] 2450 	push	acc
      000751 74s00            [12] 2451 	mov	a,#(_handle_dao_timer >> 16)
      000753 C0 E0            [24] 2452 	push	acc
      000755 74 80            [12] 2453 	mov	a,#0x80
      000757 C0 E0            [24] 2454 	push	acc
      000759 E4               [12] 2455 	clr	a
      00075A C0 E0            [24] 2456 	push	acc
      00075C 8D 82            [24] 2457 	mov	dpl,r5
      00075E 8E 83            [24] 2458 	mov	dph,r6
      000760 8F F0            [24] 2459 	mov	b,r7
      000762 78r00            [12] 2460 	mov	r0,#_ctimer_set
      000764 79s00            [12] 2461 	mov	r1,#(_ctimer_set >> 8)
      000766 7As00            [12] 2462 	mov	r2,#(_ctimer_set >> 16)
      000768 12r00r00         [24] 2463 	lcall	__sdcc_banked_call
      00076B E5 81            [12] 2464 	mov	a,sp
      00076D 24 F8            [12] 2465 	add	a,#0xf8
      00076F F5 81            [12] 2466 	mov	sp,a
                                   2467 ;	/opt/contiki/core/net/rpl/rpl-timers.c:239: return;
      000771 02r08r43         [24] 2468 	ljmp	00108$
      000774                       2469 00102$:
                                   2470 ;	/opt/contiki/core/net/rpl/rpl-timers.c:243: if(instance->current_dag->preferred_parent != NULL) {
      000774 A8 81            [24] 2471 	mov	r0,sp
      000776 18               [12] 2472 	dec	r0
      000777 18               [12] 2473 	dec	r0
      000778 74 0A            [12] 2474 	mov	a,#0x0A
      00077A 26               [12] 2475 	add	a,@r0
      00077B FD               [12] 2476 	mov	r5,a
      00077C E4               [12] 2477 	clr	a
      00077D 08               [12] 2478 	inc	r0
      00077E 36               [12] 2479 	addc	a,@r0
      00077F FE               [12] 2480 	mov	r6,a
      000780 08               [12] 2481 	inc	r0
      000781 86 07            [24] 2482 	mov	ar7,@r0
      000783 8D 82            [24] 2483 	mov	dpl,r5
      000785 8E 83            [24] 2484 	mov	dph,r6
      000787 8F F0            [24] 2485 	mov	b,r7
      000789 12r00r00         [24] 2486 	lcall	__gptrget
      00078C FD               [12] 2487 	mov	r5,a
      00078D A3               [24] 2488 	inc	dptr
      00078E 12r00r00         [24] 2489 	lcall	__gptrget
      000791 FE               [12] 2490 	mov	r6,a
      000792 A3               [24] 2491 	inc	dptr
      000793 12r00r00         [24] 2492 	lcall	__gptrget
      000796 FF               [12] 2493 	mov	r7,a
      000797 74 17            [12] 2494 	mov	a,#0x17
      000799 2D               [12] 2495 	add	a,r5
      00079A FD               [12] 2496 	mov	r5,a
      00079B E4               [12] 2497 	clr	a
      00079C 3E               [12] 2498 	addc	a,r6
      00079D FE               [12] 2499 	mov	r6,a
      00079E 8D 82            [24] 2500 	mov	dpl,r5
      0007A0 8E 83            [24] 2501 	mov	dph,r6
      0007A2 8F F0            [24] 2502 	mov	b,r7
      0007A4 12r00r00         [24] 2503 	lcall	__gptrget
      0007A7 FD               [12] 2504 	mov	r5,a
      0007A8 A3               [24] 2505 	inc	dptr
      0007A9 12r00r00         [24] 2506 	lcall	__gptrget
      0007AC FE               [12] 2507 	mov	r6,a
      0007AD A3               [24] 2508 	inc	dptr
      0007AE 12r00r00         [24] 2509 	lcall	__gptrget
      0007B1 FF               [12] 2510 	mov	r7,a
      0007B2 ED               [12] 2511 	mov	a,r5
      0007B3 4E               [12] 2512 	orl	a,r6
      0007B4 60 2C            [24] 2513 	jz	00105$
                                   2514 ;	/opt/contiki/core/net/rpl/rpl-timers.c:246: dao_output(instance->current_dag->preferred_parent, instance->default_lifetime);
      0007B6 A8 81            [24] 2515 	mov	r0,sp
      0007B8 18               [12] 2516 	dec	r0
      0007B9 18               [12] 2517 	dec	r0
      0007BA 74 89            [12] 2518 	mov	a,#0x89
      0007BC 26               [12] 2519 	add	a,@r0
      0007BD FA               [12] 2520 	mov	r2,a
      0007BE E4               [12] 2521 	clr	a
      0007BF 08               [12] 2522 	inc	r0
      0007C0 36               [12] 2523 	addc	a,@r0
      0007C1 FB               [12] 2524 	mov	r3,a
      0007C2 08               [12] 2525 	inc	r0
      0007C3 86 04            [24] 2526 	mov	ar4,@r0
      0007C5 8A 82            [24] 2527 	mov	dpl,r2
      0007C7 8B 83            [24] 2528 	mov	dph,r3
      0007C9 8C F0            [24] 2529 	mov	b,r4
      0007CB 12r00r00         [24] 2530 	lcall	__gptrget
      0007CE FA               [12] 2531 	mov	r2,a
      0007CF C0 02            [24] 2532 	push	ar2
      0007D1 8D 82            [24] 2533 	mov	dpl,r5
      0007D3 8E 83            [24] 2534 	mov	dph,r6
      0007D5 8F F0            [24] 2535 	mov	b,r7
      0007D7 78r00            [12] 2536 	mov	r0,#_dao_output
      0007D9 79s00            [12] 2537 	mov	r1,#(_dao_output >> 8)
      0007DB 7As00            [12] 2538 	mov	r2,#(_dao_output >> 16)
      0007DD 12r00r00         [24] 2539 	lcall	__sdcc_banked_call
      0007E0 15 81            [12] 2540 	dec	sp
      0007E2                       2541 00105$:
                                   2542 ;	/opt/contiki/core/net/rpl/rpl-timers.c:276: ctimer_stop(&instance->dao_timer);
      0007E2 A8 81            [24] 2543 	mov	r0,sp
      0007E4 18               [12] 2544 	dec	r0
      0007E5 18               [12] 2545 	dec	r0
      0007E6 74 C1            [12] 2546 	mov	a,#0xC1
      0007E8 26               [12] 2547 	add	a,@r0
      0007E9 FD               [12] 2548 	mov	r5,a
      0007EA E4               [12] 2549 	clr	a
      0007EB 08               [12] 2550 	inc	r0
      0007EC 36               [12] 2551 	addc	a,@r0
      0007ED FE               [12] 2552 	mov	r6,a
      0007EE 08               [12] 2553 	inc	r0
      0007EF 86 07            [24] 2554 	mov	ar7,@r0
      0007F1 8D 82            [24] 2555 	mov	dpl,r5
      0007F3 8E 83            [24] 2556 	mov	dph,r6
      0007F5 8F F0            [24] 2557 	mov	b,r7
      0007F7 78r00            [12] 2558 	mov	r0,#_ctimer_stop
      0007F9 79s00            [12] 2559 	mov	r1,#(_ctimer_stop >> 8)
      0007FB 7As00            [12] 2560 	mov	r2,#(_ctimer_stop >> 16)
      0007FD 12r00r00         [24] 2561 	lcall	__sdcc_banked_call
                                   2562 ;	/opt/contiki/core/net/rpl/rpl-timers.c:278: if(etimer_expired(&instance->dao_lifetime_timer.etimer)) {
      000800 A8 81            [24] 2563 	mov	r0,sp
      000802 18               [12] 2564 	dec	r0
      000803 18               [12] 2565 	dec	r0
      000804 74 D7            [12] 2566 	mov	a,#0xD7
      000806 26               [12] 2567 	add	a,@r0
      000807 FD               [12] 2568 	mov	r5,a
      000808 E4               [12] 2569 	clr	a
      000809 08               [12] 2570 	inc	r0
      00080A 36               [12] 2571 	addc	a,@r0
      00080B FE               [12] 2572 	mov	r6,a
      00080C 08               [12] 2573 	inc	r0
      00080D 86 07            [24] 2574 	mov	ar7,@r0
      00080F 74 03            [12] 2575 	mov	a,#0x03
      000811 2D               [12] 2576 	add	a,r5
      000812 FD               [12] 2577 	mov	r5,a
      000813 E4               [12] 2578 	clr	a
      000814 3E               [12] 2579 	addc	a,r6
      000815 FE               [12] 2580 	mov	r6,a
      000816 8D 82            [24] 2581 	mov	dpl,r5
      000818 8E 83            [24] 2582 	mov	dph,r6
      00081A 8F F0            [24] 2583 	mov	b,r7
      00081C 78r00            [12] 2584 	mov	r0,#_etimer_expired
      00081E 79s00            [12] 2585 	mov	r1,#(_etimer_expired >> 8)
      000820 7As00            [12] 2586 	mov	r2,#(_etimer_expired >> 16)
      000822 12r00r00         [24] 2587 	lcall	__sdcc_banked_call
      000825 E5 82            [12] 2588 	mov	a,dpl
      000827 85 83 F0         [24] 2589 	mov	b,dph
      00082A 45 F0            [12] 2590 	orl	a,b
      00082C 60 15            [24] 2591 	jz	00108$
                                   2592 ;	/opt/contiki/core/net/rpl/rpl-timers.c:279: set_dao_lifetime_timer(instance);
      00082E A8 81            [24] 2593 	mov	r0,sp
      000830 18               [12] 2594 	dec	r0
      000831 18               [12] 2595 	dec	r0
      000832 86 82            [24] 2596 	mov	dpl,@r0
      000834 08               [12] 2597 	inc	r0
      000835 86 83            [24] 2598 	mov	dph,@r0
      000837 08               [12] 2599 	inc	r0
      000838 86 F0            [24] 2600 	mov	b,@r0
      00083A 78r06            [12] 2601 	mov	r0,#_set_dao_lifetime_timer
      00083C 79s06            [12] 2602 	mov	r1,#(_set_dao_lifetime_timer >> 8)
      00083E 7As00            [12] 2603 	mov	r2,#(_set_dao_lifetime_timer >> 16)
      000840 12r00r00         [24] 2604 	lcall	__sdcc_banked_call
      000843                       2605 00108$:
      000843 15 81            [12] 2606 	dec	sp
      000845 15 81            [12] 2607 	dec	sp
      000847 15 81            [12] 2608 	dec	sp
      000849 02r00r00         [24] 2609 	ljmp	__sdcc_banked_ret
                                   2610 ;------------------------------------------------------------
                                   2611 ;Allocation info for local variables in function 'schedule_dao'
                                   2612 ;------------------------------------------------------------
                                   2613 ;latency                   Allocated to stack - sp -9
                                   2614 ;instance                  Allocated to stack - sp -4
                                   2615 ;expiration_time           Allocated to stack - sp -1
                                   2616 ;------------------------------------------------------------
                                   2617 ;	/opt/contiki/core/net/rpl/rpl-timers.c:284: schedule_dao(rpl_instance_t *instance, clock_time_t latency)
                                   2618 ;	-----------------------------------------
                                   2619 ;	 function schedule_dao
                                   2620 ;	-----------------------------------------
      00084C                       2621 _schedule_dao:
      00084C C0 82            [24] 2622 	push	dpl
      00084E C0 83            [24] 2623 	push	dph
      000850 C0 F0            [24] 2624 	push	b
      000852 05 81            [12] 2625 	inc	sp
      000854 05 81            [12] 2626 	inc	sp
                                   2627 ;	/opt/contiki/core/net/rpl/rpl-timers.c:288: if(rpl_get_mode() == RPL_MODE_FEATHER) {
      000856 78r00            [12] 2628 	mov	r0,#_rpl_get_mode
      000858 79s00            [12] 2629 	mov	r1,#(_rpl_get_mode >> 8)
      00085A 7As00            [12] 2630 	mov	r2,#(_rpl_get_mode >> 16)
      00085C 12r00r00         [24] 2631 	lcall	__sdcc_banked_call
      00085F AC 82            [24] 2632 	mov	r4,dpl
      000861 BC 01 03         [24] 2633 	cjne	r4,#0x01,00102$
                                   2634 ;	/opt/contiki/core/net/rpl/rpl-timers.c:289: return;
      000864 02r09r91         [24] 2635 	ljmp	00109$
      000867                       2636 00102$:
                                   2637 ;	/opt/contiki/core/net/rpl/rpl-timers.c:292: expiration_time = etimer_expiration_time(&instance->dao_timer.etimer);
      000867 E5 81            [12] 2638 	mov	a,sp
      000869 24 FC            [12] 2639 	add	a,#0xfc
      00086B F8               [12] 2640 	mov	r0,a
      00086C 74 C1            [12] 2641 	mov	a,#0xC1
      00086E 26               [12] 2642 	add	a,@r0
      00086F FA               [12] 2643 	mov	r2,a
      000870 E4               [12] 2644 	clr	a
      000871 08               [12] 2645 	inc	r0
      000872 36               [12] 2646 	addc	a,@r0
      000873 FB               [12] 2647 	mov	r3,a
      000874 08               [12] 2648 	inc	r0
      000875 86 04            [24] 2649 	mov	ar4,@r0
      000877 74 03            [12] 2650 	mov	a,#0x03
      000879 2A               [12] 2651 	add	a,r2
      00087A FD               [12] 2652 	mov	r5,a
      00087B E4               [12] 2653 	clr	a
      00087C 3B               [12] 2654 	addc	a,r3
      00087D FE               [12] 2655 	mov	r6,a
      00087E 8C 07            [24] 2656 	mov	ar7,r4
      000880 8D 82            [24] 2657 	mov	dpl,r5
      000882 8E 83            [24] 2658 	mov	dph,r6
      000884 8F F0            [24] 2659 	mov	b,r7
      000886 C0 04            [24] 2660 	push	ar4
      000888 C0 03            [24] 2661 	push	ar3
      00088A C0 02            [24] 2662 	push	ar2
      00088C 78r00            [12] 2663 	mov	r0,#_etimer_expiration_time
      00088E 79s00            [12] 2664 	mov	r1,#(_etimer_expiration_time >> 8)
      000890 7As00            [12] 2665 	mov	r2,#(_etimer_expiration_time >> 16)
      000892 12r00r00         [24] 2666 	lcall	__sdcc_banked_call
      000895 D0 02            [24] 2667 	pop	ar2
      000897 D0 03            [24] 2668 	pop	ar3
      000899 D0 04            [24] 2669 	pop	ar4
                                   2670 ;	/opt/contiki/core/net/rpl/rpl-timers.c:294: if(!etimer_expired(&instance->dao_timer.etimer)) {
      00089B 74 03            [12] 2671 	mov	a,#0x03
      00089D 2A               [12] 2672 	add	a,r2
      00089E FD               [12] 2673 	mov	r5,a
      00089F E4               [12] 2674 	clr	a
      0008A0 3B               [12] 2675 	addc	a,r3
      0008A1 FE               [12] 2676 	mov	r6,a
      0008A2 8C 07            [24] 2677 	mov	ar7,r4
      0008A4 8D 82            [24] 2678 	mov	dpl,r5
      0008A6 8E 83            [24] 2679 	mov	dph,r6
      0008A8 8F F0            [24] 2680 	mov	b,r7
      0008AA C0 04            [24] 2681 	push	ar4
      0008AC C0 03            [24] 2682 	push	ar3
      0008AE C0 02            [24] 2683 	push	ar2
      0008B0 78r00            [12] 2684 	mov	r0,#_etimer_expired
      0008B2 79s00            [12] 2685 	mov	r1,#(_etimer_expired >> 8)
      0008B4 7As00            [12] 2686 	mov	r2,#(_etimer_expired >> 16)
      0008B6 12r00r00         [24] 2687 	lcall	__sdcc_banked_call
      0008B9 E5 82            [12] 2688 	mov	a,dpl
      0008BB 85 83 F0         [24] 2689 	mov	b,dph
      0008BE D0 02            [24] 2690 	pop	ar2
      0008C0 D0 03            [24] 2691 	pop	ar3
      0008C2 D0 04            [24] 2692 	pop	ar4
      0008C4 45 F0            [12] 2693 	orl	a,b
      0008C6 70 03            [24] 2694 	jnz	00122$
      0008C8 02r09r91         [24] 2695 	ljmp	00109$
      0008CB                       2696 00122$:
                                   2697 ;	/opt/contiki/core/net/rpl/rpl-timers.c:297: if(latency != 0) {
      0008CB E5 81            [12] 2698 	mov	a,sp
      0008CD 24 F7            [12] 2699 	add	a,#0xf7
      0008CF F8               [12] 2700 	mov	r0,a
      0008D0 E6               [12] 2701 	mov	a,@r0
      0008D1 08               [12] 2702 	inc	r0
      0008D2 46               [12] 2703 	orl	a,@r0
      0008D3 60 61            [24] 2704 	jz	00104$
                                   2705 ;	/opt/contiki/core/net/rpl/rpl-timers.c:298: expiration_time = latency / 2 +
      0008D5 C0 02            [24] 2706 	push	ar2
      0008D7 C0 03            [24] 2707 	push	ar3
      0008D9 C0 04            [24] 2708 	push	ar4
      0008DB E5 81            [12] 2709 	mov	a,sp
      0008DD 24 F4            [12] 2710 	add	a,#0xf4
      0008DF F8               [12] 2711 	mov	r0,a
      0008E0 86 03            [24] 2712 	mov	ar3,@r0
      0008E2 08               [12] 2713 	inc	r0
      0008E3 E6               [12] 2714 	mov	a,@r0
      0008E4 C3               [12] 2715 	clr	c
      0008E5 13               [12] 2716 	rrc	a
      0008E6 CB               [12] 2717 	xch	a,r3
      0008E7 13               [12] 2718 	rrc	a
      0008E8 CB               [12] 2719 	xch	a,r3
      0008E9 FC               [12] 2720 	mov	r4,a
                                   2721 ;	/opt/contiki/core/net/rpl/rpl-timers.c:299: (random_rand() % (latency));
      0008EA C0 04            [24] 2722 	push	ar4
      0008EC C0 03            [24] 2723 	push	ar3
      0008EE 78r00            [12] 2724 	mov	r0,#_random_rand
      0008F0 79s00            [12] 2725 	mov	r1,#(_random_rand >> 8)
      0008F2 7As00            [12] 2726 	mov	r2,#(_random_rand >> 16)
      0008F4 12r00r00         [24] 2727 	lcall	__sdcc_banked_call
      0008F7 AA 82            [24] 2728 	mov	r2,dpl
      0008F9 AF 83            [24] 2729 	mov	r7,dph
      0008FB C0 02            [24] 2730 	push	ar2
      0008FD E5 81            [12] 2731 	mov	a,sp
      0008FF 24 F1            [12] 2732 	add	a,#0xf1
      000901 F8               [12] 2733 	mov	r0,a
      000902 E6               [12] 2734 	mov	a,@r0
      000903 C0 E0            [24] 2735 	push	acc
      000905 08               [12] 2736 	inc	r0
      000906 E6               [12] 2737 	mov	a,@r0
      000907 C0 E0            [24] 2738 	push	acc
      000909 8A 82            [24] 2739 	mov	dpl,r2
      00090B 8F 83            [24] 2740 	mov	dph,r7
      00090D 12r00r00         [24] 2741 	lcall	__moduint
      000910 AE 82            [24] 2742 	mov	r6,dpl
      000912 AF 83            [24] 2743 	mov	r7,dph
      000914 15 81            [12] 2744 	dec	sp
      000916 15 81            [12] 2745 	dec	sp
      000918 D0 02            [24] 2746 	pop	ar2
      00091A D0 03            [24] 2747 	pop	ar3
      00091C D0 04            [24] 2748 	pop	ar4
      00091E EE               [12] 2749 	mov	a,r6
      00091F 2B               [12] 2750 	add	a,r3
      000920 FB               [12] 2751 	mov	r3,a
      000921 EF               [12] 2752 	mov	a,r7
      000922 3C               [12] 2753 	addc	a,r4
      000923 FC               [12] 2754 	mov	r4,a
      000924 E5 81            [12] 2755 	mov	a,sp
      000926 24 FC            [12] 2756 	add	a,#0xfc
      000928 F8               [12] 2757 	mov	r0,a
      000929 A6 03            [24] 2758 	mov	@r0,ar3
      00092B 08               [12] 2759 	inc	r0
      00092C A6 04            [24] 2760 	mov	@r0,ar4
      00092E D0 04            [24] 2761 	pop	ar4
      000930 D0 03            [24] 2762 	pop	ar3
      000932 D0 02            [24] 2763 	pop	ar2
      000934 80 07            [24] 2764 	sjmp	00105$
      000936                       2765 00104$:
                                   2766 ;	/opt/contiki/core/net/rpl/rpl-timers.c:301: expiration_time = 0;
      000936 A8 81            [24] 2767 	mov	r0,sp
      000938 18               [12] 2768 	dec	r0
      000939 E4               [12] 2769 	clr	a
      00093A F6               [12] 2770 	mov	@r0,a
      00093B 08               [12] 2771 	inc	r0
      00093C F6               [12] 2772 	mov	@r0,a
      00093D                       2773 00105$:
                                   2774 ;	/opt/contiki/core/net/rpl/rpl-timers.c:306: handle_dao_timer, instance);
      00093D E5 81            [12] 2775 	mov	a,sp
      00093F 24 FC            [12] 2776 	add	a,#0xfc
      000941 F8               [12] 2777 	mov	r0,a
      000942 86 05            [24] 2778 	mov	ar5,@r0
      000944 08               [12] 2779 	inc	r0
      000945 86 06            [24] 2780 	mov	ar6,@r0
      000947 08               [12] 2781 	inc	r0
      000948 86 07            [24] 2782 	mov	ar7,@r0
                                   2783 ;	/opt/contiki/core/net/rpl/rpl-timers.c:305: ctimer_set(&instance->dao_timer, expiration_time,
      00094A C0 05            [24] 2784 	push	ar5
      00094C C0 06            [24] 2785 	push	ar6
      00094E C0 07            [24] 2786 	push	ar7
      000950 74rF4            [12] 2787 	mov	a,#_handle_dao_timer
      000952 C0 E0            [24] 2788 	push	acc
      000954 74s06            [12] 2789 	mov	a,#(_handle_dao_timer >> 8)
      000956 C0 E0            [24] 2790 	push	acc
      000958 74s00            [12] 2791 	mov	a,#(_handle_dao_timer >> 16)
      00095A C0 E0            [24] 2792 	push	acc
      00095C E5 81            [12] 2793 	mov	a,sp
      00095E 24 F9            [12] 2794 	add	a,#0xf9
      000960 F8               [12] 2795 	mov	r0,a
      000961 E6               [12] 2796 	mov	a,@r0
      000962 C0 E0            [24] 2797 	push	acc
      000964 08               [12] 2798 	inc	r0
      000965 E6               [12] 2799 	mov	a,@r0
      000966 C0 E0            [24] 2800 	push	acc
      000968 8A 82            [24] 2801 	mov	dpl,r2
      00096A 8B 83            [24] 2802 	mov	dph,r3
      00096C 8C F0            [24] 2803 	mov	b,r4
      00096E 78r00            [12] 2804 	mov	r0,#_ctimer_set
      000970 79s00            [12] 2805 	mov	r1,#(_ctimer_set >> 8)
      000972 7As00            [12] 2806 	mov	r2,#(_ctimer_set >> 16)
      000974 12r00r00         [24] 2807 	lcall	__sdcc_banked_call
      000977 E5 81            [12] 2808 	mov	a,sp
      000979 24 F8            [12] 2809 	add	a,#0xf8
                                   2810 ;	/opt/contiki/core/net/rpl/rpl-timers.c:308: set_dao_lifetime_timer(instance);
      00097B F5 81            [12] 2811 	mov	sp,a
      00097D 24 FC            [12] 2812 	add	a,#0xfc
      00097F F8               [12] 2813 	mov	r0,a
      000980 86 82            [24] 2814 	mov	dpl,@r0
      000982 08               [12] 2815 	inc	r0
      000983 86 83            [24] 2816 	mov	dph,@r0
      000985 08               [12] 2817 	inc	r0
      000986 86 F0            [24] 2818 	mov	b,@r0
      000988 78r06            [12] 2819 	mov	r0,#_set_dao_lifetime_timer
      00098A 79s06            [12] 2820 	mov	r1,#(_set_dao_lifetime_timer >> 8)
      00098C 7As00            [12] 2821 	mov	r2,#(_set_dao_lifetime_timer >> 16)
      00098E 12r00r00         [24] 2822 	lcall	__sdcc_banked_call
      000991                       2823 00109$:
      000991 E5 81            [12] 2824 	mov	a,sp
      000993 24 FB            [12] 2825 	add	a,#0xFB
      000995 F5 81            [12] 2826 	mov	sp,a
      000997 02r00r00         [24] 2827 	ljmp	__sdcc_banked_ret
                                   2828 ;------------------------------------------------------------
                                   2829 ;Allocation info for local variables in function 'rpl_schedule_dao'
                                   2830 ;------------------------------------------------------------
                                   2831 ;instance                  Allocated to registers r5 r6 r7 
                                   2832 ;------------------------------------------------------------
                                   2833 ;	/opt/contiki/core/net/rpl/rpl-timers.c:313: rpl_schedule_dao(rpl_instance_t *instance)
                                   2834 ;	-----------------------------------------
                                   2835 ;	 function rpl_schedule_dao
                                   2836 ;	-----------------------------------------
      00099A                       2837 _rpl_schedule_dao:
      00099A AD 82            [24] 2838 	mov	r5,dpl
      00099C AE 83            [24] 2839 	mov	r6,dph
      00099E AF F0            [24] 2840 	mov	r7,b
                                   2841 ;	/opt/contiki/core/net/rpl/rpl-timers.c:315: schedule_dao(instance, RPL_DAO_LATENCY);
      0009A0 E4               [12] 2842 	clr	a
      0009A1 C0 E0            [24] 2843 	push	acc
      0009A3 74 02            [12] 2844 	mov	a,#0x02
      0009A5 C0 E0            [24] 2845 	push	acc
      0009A7 8D 82            [24] 2846 	mov	dpl,r5
      0009A9 8E 83            [24] 2847 	mov	dph,r6
      0009AB 8F F0            [24] 2848 	mov	b,r7
      0009AD 78r4C            [12] 2849 	mov	r0,#_schedule_dao
      0009AF 79s08            [12] 2850 	mov	r1,#(_schedule_dao >> 8)
      0009B1 7As00            [12] 2851 	mov	r2,#(_schedule_dao >> 16)
      0009B3 12r00r00         [24] 2852 	lcall	__sdcc_banked_call
      0009B6 15 81            [12] 2853 	dec	sp
      0009B8 15 81            [12] 2854 	dec	sp
      0009BA 02r00r00         [24] 2855 	ljmp	__sdcc_banked_ret
                                   2856 ;------------------------------------------------------------
                                   2857 ;Allocation info for local variables in function 'rpl_schedule_dao_immediately'
                                   2858 ;------------------------------------------------------------
                                   2859 ;instance                  Allocated to registers r5 r6 r7 
                                   2860 ;------------------------------------------------------------
                                   2861 ;	/opt/contiki/core/net/rpl/rpl-timers.c:319: rpl_schedule_dao_immediately(rpl_instance_t *instance)
                                   2862 ;	-----------------------------------------
                                   2863 ;	 function rpl_schedule_dao_immediately
                                   2864 ;	-----------------------------------------
      0009BD                       2865 _rpl_schedule_dao_immediately:
      0009BD AD 82            [24] 2866 	mov	r5,dpl
      0009BF AE 83            [24] 2867 	mov	r6,dph
      0009C1 AF F0            [24] 2868 	mov	r7,b
                                   2869 ;	/opt/contiki/core/net/rpl/rpl-timers.c:321: schedule_dao(instance, 0);
      0009C3 E4               [12] 2870 	clr	a
      0009C4 C0 E0            [24] 2871 	push	acc
      0009C6 C0 E0            [24] 2872 	push	acc
      0009C8 8D 82            [24] 2873 	mov	dpl,r5
      0009CA 8E 83            [24] 2874 	mov	dph,r6
      0009CC 8F F0            [24] 2875 	mov	b,r7
      0009CE 78r4C            [12] 2876 	mov	r0,#_schedule_dao
      0009D0 79s08            [12] 2877 	mov	r1,#(_schedule_dao >> 8)
      0009D2 7As00            [12] 2878 	mov	r2,#(_schedule_dao >> 16)
      0009D4 12r00r00         [24] 2879 	lcall	__sdcc_banked_call
      0009D7 15 81            [12] 2880 	dec	sp
      0009D9 15 81            [12] 2881 	dec	sp
      0009DB 02r00r00         [24] 2882 	ljmp	__sdcc_banked_ret
                                   2883 ;------------------------------------------------------------
                                   2884 ;Allocation info for local variables in function 'rpl_cancel_dao'
                                   2885 ;------------------------------------------------------------
                                   2886 ;instance                  Allocated to registers r5 r6 r7 
                                   2887 ;------------------------------------------------------------
                                   2888 ;	/opt/contiki/core/net/rpl/rpl-timers.c:325: rpl_cancel_dao(rpl_instance_t *instance)
                                   2889 ;	-----------------------------------------
                                   2890 ;	 function rpl_cancel_dao
                                   2891 ;	-----------------------------------------
      0009DE                       2892 _rpl_cancel_dao:
      0009DE AD 82            [24] 2893 	mov	r5,dpl
      0009E0 AE 83            [24] 2894 	mov	r6,dph
      0009E2 AF F0            [24] 2895 	mov	r7,b
                                   2896 ;	/opt/contiki/core/net/rpl/rpl-timers.c:327: ctimer_stop(&instance->dao_timer);
      0009E4 74 C1            [12] 2897 	mov	a,#0xC1
      0009E6 2D               [12] 2898 	add	a,r5
      0009E7 FA               [12] 2899 	mov	r2,a
      0009E8 E4               [12] 2900 	clr	a
      0009E9 3E               [12] 2901 	addc	a,r6
      0009EA FB               [12] 2902 	mov	r3,a
      0009EB 8F 04            [24] 2903 	mov	ar4,r7
      0009ED 8A 82            [24] 2904 	mov	dpl,r2
      0009EF 8B 83            [24] 2905 	mov	dph,r3
      0009F1 8C F0            [24] 2906 	mov	b,r4
      0009F3 C0 07            [24] 2907 	push	ar7
      0009F5 C0 06            [24] 2908 	push	ar6
      0009F7 C0 05            [24] 2909 	push	ar5
      0009F9 78r00            [12] 2910 	mov	r0,#_ctimer_stop
      0009FB 79s00            [12] 2911 	mov	r1,#(_ctimer_stop >> 8)
      0009FD 7As00            [12] 2912 	mov	r2,#(_ctimer_stop >> 16)
      0009FF 12r00r00         [24] 2913 	lcall	__sdcc_banked_call
      000A02 D0 05            [24] 2914 	pop	ar5
      000A04 D0 06            [24] 2915 	pop	ar6
      000A06 D0 07            [24] 2916 	pop	ar7
                                   2917 ;	/opt/contiki/core/net/rpl/rpl-timers.c:328: ctimer_stop(&instance->dao_lifetime_timer);
      000A08 74 D7            [12] 2918 	mov	a,#0xD7
      000A0A 2D               [12] 2919 	add	a,r5
      000A0B FD               [12] 2920 	mov	r5,a
      000A0C E4               [12] 2921 	clr	a
      000A0D 3E               [12] 2922 	addc	a,r6
      000A0E FE               [12] 2923 	mov	r6,a
      000A0F 8D 82            [24] 2924 	mov	dpl,r5
      000A11 8E 83            [24] 2925 	mov	dph,r6
      000A13 8F F0            [24] 2926 	mov	b,r7
      000A15 78r00            [12] 2927 	mov	r0,#_ctimer_stop
      000A17 79s00            [12] 2928 	mov	r1,#(_ctimer_stop >> 8)
      000A19 7As00            [12] 2929 	mov	r2,#(_ctimer_stop >> 16)
      000A1B 12r00r00         [24] 2930 	lcall	__sdcc_banked_call
      000A1E 02r00r00         [24] 2931 	ljmp	__sdcc_banked_ret
                                   2932 ;------------------------------------------------------------
                                   2933 ;Allocation info for local variables in function 'get_probing_target'
                                   2934 ;------------------------------------------------------------
                                   2935 ;dag                       Allocated to stack - sp -12
                                   2936 ;p                         Allocated to stack - sp -9
                                   2937 ;probing_target            Allocated to stack - sp -6
                                   2938 ;probing_target_rank       Allocated to stack - sp -3
                                   2939 ;min_last_tx               Allocated to stack - sp -1
                                   2940 ;p_rank                    Allocated to registers r4 r3 
                                   2941 ;------------------------------------------------------------
                                   2942 ;	/opt/contiki/core/net/rpl/rpl-timers.c:333: get_probing_target(rpl_dag_t *dag)
                                   2943 ;	-----------------------------------------
                                   2944 ;	 function get_probing_target
                                   2945 ;	-----------------------------------------
      000A21                       2946 _get_probing_target:
      000A21 C0 82            [24] 2947 	push	dpl
      000A23 C0 83            [24] 2948 	push	dph
      000A25 C0 F0            [24] 2949 	push	b
      000A27 E5 81            [12] 2950 	mov	a,sp
      000A29 24 0A            [12] 2951 	add	a,#0x0A
                                   2952 ;	/opt/contiki/core/net/rpl/rpl-timers.c:343: rpl_parent_t *probing_target = NULL;
      000A2B F5 81            [12] 2953 	mov	sp,a
      000A2D 24 FA            [12] 2954 	add	a,#0xfa
      000A2F F8               [12] 2955 	mov	r0,a
      000A30 E4               [12] 2956 	clr	a
      000A31 F6               [12] 2957 	mov	@r0,a
      000A32 08               [12] 2958 	inc	r0
      000A33 F6               [12] 2959 	mov	@r0,a
      000A34 08               [12] 2960 	inc	r0
      000A35 76 00            [12] 2961 	mov	@r0,#0x00
                                   2962 ;	/opt/contiki/core/net/rpl/rpl-timers.c:344: rpl_rank_t probing_target_rank = INFINITE_RANK;
      000A37 E5 81            [12] 2963 	mov	a,sp
      000A39 24 FD            [12] 2964 	add	a,#0xfd
      000A3B F8               [12] 2965 	mov	r0,a
      000A3C 76 FF            [12] 2966 	mov	@r0,#0xFF
      000A3E 08               [12] 2967 	inc	r0
      000A3F 76 FF            [12] 2968 	mov	@r0,#0xFF
                                   2969 ;	/opt/contiki/core/net/rpl/rpl-timers.c:346: clock_time_t min_last_tx = clock_time();
      000A41 78r00            [12] 2970 	mov	r0,#_clock_time
      000A43 79s00            [12] 2971 	mov	r1,#(_clock_time >> 8)
      000A45 7As00            [12] 2972 	mov	r2,#(_clock_time >> 16)
      000A47 12r00r00         [24] 2973 	lcall	__sdcc_banked_call
      000A4A AF 82            [24] 2974 	mov	r7,dpl
      000A4C AE 83            [24] 2975 	mov	r6,dph
      000A4E A8 81            [24] 2976 	mov	r0,sp
      000A50 18               [12] 2977 	dec	r0
      000A51 A6 07            [24] 2978 	mov	@r0,ar7
      000A53 08               [12] 2979 	inc	r0
      000A54 A6 06            [24] 2980 	mov	@r0,ar6
                                   2981 ;	/opt/contiki/core/net/rpl/rpl-timers.c:348: ? min_last_tx - RPL_PROBING_EXPIRATION_TIME : 1;
      000A56 A8 81            [24] 2982 	mov	r0,sp
      000A58 18               [12] 2983 	dec	r0
      000A59 C3               [12] 2984 	clr	c
      000A5A E4               [12] 2985 	clr	a
      000A5B 96               [12] 2986 	subb	a,@r0
      000A5C 74 58            [12] 2987 	mov	a,#0x58
      000A5E 08               [12] 2988 	inc	r0
      000A5F 96               [12] 2989 	subb	a,@r0
      000A60 50 0C            [24] 2990 	jnc	00131$
      000A62 A8 81            [24] 2991 	mov	r0,sp
      000A64 18               [12] 2992 	dec	r0
      000A65 86 06            [24] 2993 	mov	ar6,@r0
      000A67 08               [12] 2994 	inc	r0
      000A68 E6               [12] 2995 	mov	a,@r0
      000A69 24 D4            [12] 2996 	add	a,#0xD4
      000A6B FF               [12] 2997 	mov	r7,a
      000A6C 80 04            [24] 2998 	sjmp	00132$
      000A6E                       2999 00131$:
      000A6E 7E 01            [12] 3000 	mov	r6,#0x01
      000A70 7F 00            [12] 3001 	mov	r7,#0x00
      000A72                       3002 00132$:
      000A72 A8 81            [24] 3003 	mov	r0,sp
      000A74 18               [12] 3004 	dec	r0
      000A75 A6 06            [24] 3005 	mov	@r0,ar6
      000A77 08               [12] 3006 	inc	r0
      000A78 A6 07            [24] 3007 	mov	@r0,ar7
                                   3008 ;	/opt/contiki/core/net/rpl/rpl-timers.c:350: if(dag == NULL ||
      000A7A E5 81            [12] 3009 	mov	a,sp
      000A7C 24 F4            [12] 3010 	add	a,#0xf4
      000A7E F8               [12] 3011 	mov	r0,a
      000A7F E6               [12] 3012 	mov	a,@r0
      000A80 08               [12] 3013 	inc	r0
      000A81 46               [12] 3014 	orl	a,@r0
      000A82 60 50            [24] 3015 	jz	00101$
                                   3016 ;	/opt/contiki/core/net/rpl/rpl-timers.c:351: dag->instance == NULL ||
      000A84 E5 81            [12] 3017 	mov	a,sp
      000A86 24 F4            [12] 3018 	add	a,#0xf4
      000A88 F8               [12] 3019 	mov	r0,a
      000A89 74 1C            [12] 3020 	mov	a,#0x1C
      000A8B 26               [12] 3021 	add	a,@r0
      000A8C FD               [12] 3022 	mov	r5,a
      000A8D E4               [12] 3023 	clr	a
      000A8E 08               [12] 3024 	inc	r0
      000A8F 36               [12] 3025 	addc	a,@r0
      000A90 FE               [12] 3026 	mov	r6,a
      000A91 08               [12] 3027 	inc	r0
      000A92 86 07            [24] 3028 	mov	ar7,@r0
      000A94 8D 82            [24] 3029 	mov	dpl,r5
      000A96 8E 83            [24] 3030 	mov	dph,r6
      000A98 8F F0            [24] 3031 	mov	b,r7
      000A9A 12r00r00         [24] 3032 	lcall	__gptrget
      000A9D FA               [12] 3033 	mov	r2,a
      000A9E A3               [24] 3034 	inc	dptr
      000A9F 12r00r00         [24] 3035 	lcall	__gptrget
      000AA2 FB               [12] 3036 	mov	r3,a
      000AA3 A3               [24] 3037 	inc	dptr
      000AA4 12r00r00         [24] 3038 	lcall	__gptrget
      000AA7 FC               [12] 3039 	mov	r4,a
      000AA8 EA               [12] 3040 	mov	a,r2
      000AA9 4B               [12] 3041 	orl	a,r3
      000AAA 60 28            [24] 3042 	jz	00101$
                                   3043 ;	/opt/contiki/core/net/rpl/rpl-timers.c:352: dag->preferred_parent == NULL) {
      000AAC E5 81            [12] 3044 	mov	a,sp
      000AAE 24 F4            [12] 3045 	add	a,#0xf4
      000AB0 F8               [12] 3046 	mov	r0,a
      000AB1 74 17            [12] 3047 	mov	a,#0x17
      000AB3 26               [12] 3048 	add	a,@r0
      000AB4 FA               [12] 3049 	mov	r2,a
      000AB5 E4               [12] 3050 	clr	a
      000AB6 08               [12] 3051 	inc	r0
      000AB7 36               [12] 3052 	addc	a,@r0
      000AB8 FB               [12] 3053 	mov	r3,a
      000AB9 08               [12] 3054 	inc	r0
      000ABA 86 04            [24] 3055 	mov	ar4,@r0
      000ABC 8A 82            [24] 3056 	mov	dpl,r2
      000ABE 8B 83            [24] 3057 	mov	dph,r3
      000AC0 8C F0            [24] 3058 	mov	b,r4
      000AC2 12r00r00         [24] 3059 	lcall	__gptrget
      000AC5 FA               [12] 3060 	mov	r2,a
      000AC6 A3               [24] 3061 	inc	dptr
      000AC7 12r00r00         [24] 3062 	lcall	__gptrget
      000ACA FB               [12] 3063 	mov	r3,a
      000ACB A3               [24] 3064 	inc	dptr
      000ACC 12r00r00         [24] 3065 	lcall	__gptrget
      000ACF FC               [12] 3066 	mov	r4,a
      000AD0 EA               [12] 3067 	mov	a,r2
      000AD1 4B               [12] 3068 	orl	a,r3
      000AD2 70 09            [24] 3069 	jnz	00102$
      000AD4                       3070 00101$:
                                   3071 ;	/opt/contiki/core/net/rpl/rpl-timers.c:353: return NULL;
      000AD4 90 00 00         [24] 3072 	mov	dptr,#0x0000
      000AD7 75 F0 00         [24] 3073 	mov	b,#0x00
      000ADA 02r0Er53         [24] 3074 	ljmp	00129$
      000ADD                       3075 00102$:
                                   3076 ;	/opt/contiki/core/net/rpl/rpl-timers.c:357: if(dag->preferred_parent->last_tx_time < min_last_tx) {
      000ADD C0 05            [24] 3077 	push	ar5
      000ADF C0 06            [24] 3078 	push	ar6
      000AE1 C0 07            [24] 3079 	push	ar7
      000AE3 74 05            [12] 3080 	mov	a,#0x05
      000AE5 2A               [12] 3081 	add	a,r2
      000AE6 FD               [12] 3082 	mov	r5,a
      000AE7 E4               [12] 3083 	clr	a
      000AE8 3B               [12] 3084 	addc	a,r3
      000AE9 FE               [12] 3085 	mov	r6,a
      000AEA 8C 07            [24] 3086 	mov	ar7,r4
      000AEC 8D 82            [24] 3087 	mov	dpl,r5
      000AEE 8E 83            [24] 3088 	mov	dph,r6
      000AF0 8F F0            [24] 3089 	mov	b,r7
      000AF2 12r00r00         [24] 3090 	lcall	__gptrget
      000AF5 FD               [12] 3091 	mov	r5,a
      000AF6 A3               [24] 3092 	inc	dptr
      000AF7 12r00r00         [24] 3093 	lcall	__gptrget
      000AFA FE               [12] 3094 	mov	r6,a
      000AFB E5 81            [12] 3095 	mov	a,sp
      000AFD 24 FC            [12] 3096 	add	a,#0xfc
      000AFF F8               [12] 3097 	mov	r0,a
      000B00 C3               [12] 3098 	clr	c
      000B01 ED               [12] 3099 	mov	a,r5
      000B02 96               [12] 3100 	subb	a,@r0
      000B03 EE               [12] 3101 	mov	a,r6
      000B04 08               [12] 3102 	inc	r0
      000B05 96               [12] 3103 	subb	a,@r0
      000B06 D0 07            [24] 3104 	pop	ar7
      000B08 D0 06            [24] 3105 	pop	ar6
      000B0A D0 05            [24] 3106 	pop	ar5
      000B0C 50 0D            [24] 3107 	jnc	00106$
                                   3108 ;	/opt/contiki/core/net/rpl/rpl-timers.c:358: probing_target = dag->preferred_parent;
      000B0E E5 81            [12] 3109 	mov	a,sp
      000B10 24 FA            [12] 3110 	add	a,#0xfa
      000B12 F8               [12] 3111 	mov	r0,a
      000B13 A6 02            [24] 3112 	mov	@r0,ar2
      000B15 08               [12] 3113 	inc	r0
      000B16 A6 03            [24] 3114 	mov	@r0,ar3
      000B18 08               [12] 3115 	inc	r0
      000B19 A6 04            [24] 3116 	mov	@r0,ar4
      000B1B                       3117 00106$:
                                   3118 ;	/opt/contiki/core/net/rpl/rpl-timers.c:362: if(probing_target == NULL && (random_rand() % 2) == 0) {
      000B1B E5 81            [12] 3119 	mov	a,sp
      000B1D 24 FA            [12] 3120 	add	a,#0xfa
      000B1F F8               [12] 3121 	mov	r0,a
      000B20 E6               [12] 3122 	mov	a,@r0
      000B21 08               [12] 3123 	inc	r0
      000B22 46               [12] 3124 	orl	a,@r0
      000B23 60 03            [24] 3125 	jz	00186$
      000B25 02r0Dr1A         [24] 3126 	ljmp	00117$
      000B28                       3127 00186$:
      000B28 C0 07            [24] 3128 	push	ar7
      000B2A C0 06            [24] 3129 	push	ar6
      000B2C C0 05            [24] 3130 	push	ar5
      000B2E 78r00            [12] 3131 	mov	r0,#_random_rand
      000B30 79s00            [12] 3132 	mov	r1,#(_random_rand >> 8)
      000B32 7As00            [12] 3133 	mov	r2,#(_random_rand >> 16)
      000B34 12r00r00         [24] 3134 	lcall	__sdcc_banked_call
      000B37 E5 82            [12] 3135 	mov	a,dpl
      000B39 85 83 F0         [24] 3136 	mov	b,dph
      000B3C D0 05            [24] 3137 	pop	ar5
      000B3E D0 06            [24] 3138 	pop	ar6
      000B40 D0 07            [24] 3139 	pop	ar7
      000B42 30 E0 03         [24] 3140 	jnb	acc.0,00187$
      000B45 02r0Dr1A         [24] 3141 	ljmp	00117$
      000B48                       3142 00187$:
                                   3143 ;	/opt/contiki/core/net/rpl/rpl-timers.c:363: p = nbr_table_head(rpl_parents);
      000B48 90r00r00         [24] 3144 	mov	dptr,#_rpl_parents
      000B4B E0               [24] 3145 	movx	a,@dptr
      000B4C FA               [12] 3146 	mov	r2,a
      000B4D A3               [24] 3147 	inc	dptr
      000B4E E0               [24] 3148 	movx	a,@dptr
      000B4F FB               [12] 3149 	mov	r3,a
      000B50 A3               [24] 3150 	inc	dptr
      000B51 E0               [24] 3151 	movx	a,@dptr
      000B52 FC               [12] 3152 	mov	r4,a
      000B53 8A 82            [24] 3153 	mov	dpl,r2
      000B55 8B 83            [24] 3154 	mov	dph,r3
      000B57 8C F0            [24] 3155 	mov	b,r4
      000B59 C0 07            [24] 3156 	push	ar7
      000B5B C0 06            [24] 3157 	push	ar6
      000B5D C0 05            [24] 3158 	push	ar5
      000B5F 78r00            [12] 3159 	mov	r0,#_nbr_table_head
      000B61 79s00            [12] 3160 	mov	r1,#(_nbr_table_head >> 8)
      000B63 7As00            [12] 3161 	mov	r2,#(_nbr_table_head >> 16)
      000B65 12r00r00         [24] 3162 	lcall	__sdcc_banked_call
      000B68 AA 82            [24] 3163 	mov	r2,dpl
      000B6A AB 83            [24] 3164 	mov	r3,dph
      000B6C AC F0            [24] 3165 	mov	r4,b
      000B6E D0 05            [24] 3166 	pop	ar5
      000B70 D0 06            [24] 3167 	pop	ar6
      000B72 D0 07            [24] 3168 	pop	ar7
      000B74 E5 81            [12] 3169 	mov	a,sp
      000B76 24 F7            [12] 3170 	add	a,#0xf7
      000B78 F8               [12] 3171 	mov	r0,a
      000B79 A6 02            [24] 3172 	mov	@r0,ar2
      000B7B 08               [12] 3173 	inc	r0
      000B7C A6 03            [24] 3174 	mov	@r0,ar3
      000B7E 08               [12] 3175 	inc	r0
      000B7F A6 04            [24] 3176 	mov	@r0,ar4
                                   3177 ;	/opt/contiki/core/net/rpl/rpl-timers.c:364: while(p != NULL) {
      000B81                       3178 00113$:
      000B81 E5 81            [12] 3179 	mov	a,sp
      000B83 24 F7            [12] 3180 	add	a,#0xf7
      000B85 F8               [12] 3181 	mov	r0,a
      000B86 E6               [12] 3182 	mov	a,@r0
      000B87 08               [12] 3183 	inc	r0
      000B88 46               [12] 3184 	orl	a,@r0
      000B89 70 03            [24] 3185 	jnz	00188$
      000B8B 02r0Dr1A         [24] 3186 	ljmp	00117$
      000B8E                       3187 00188$:
                                   3188 ;	/opt/contiki/core/net/rpl/rpl-timers.c:365: if(p->dag == dag && p->last_tx_time < min_last_tx) {
      000B8E C0 05            [24] 3189 	push	ar5
      000B90 C0 06            [24] 3190 	push	ar6
      000B92 C0 07            [24] 3191 	push	ar7
      000B94 E5 81            [12] 3192 	mov	a,sp
      000B96 24 F4            [12] 3193 	add	a,#0xf4
      000B98 F8               [12] 3194 	mov	r0,a
      000B99 86 82            [24] 3195 	mov	dpl,@r0
      000B9B 08               [12] 3196 	inc	r0
      000B9C 86 83            [24] 3197 	mov	dph,@r0
      000B9E 08               [12] 3198 	inc	r0
      000B9F 86 F0            [24] 3199 	mov	b,@r0
      000BA1 12r00r00         [24] 3200 	lcall	__gptrget
      000BA4 FD               [12] 3201 	mov	r5,a
      000BA5 A3               [24] 3202 	inc	dptr
      000BA6 12r00r00         [24] 3203 	lcall	__gptrget
      000BA9 FE               [12] 3204 	mov	r6,a
      000BAA A3               [24] 3205 	inc	dptr
      000BAB 12r00r00         [24] 3206 	lcall	__gptrget
      000BAE FF               [12] 3207 	mov	r7,a
      000BAF E5 81            [12] 3208 	mov	a,sp
      000BB1 24 F1            [12] 3209 	add	a,#0xf1
      000BB3 F8               [12] 3210 	mov	r0,a
      000BB4 C0 05            [24] 3211 	push	ar5
      000BB6 C0 06            [24] 3212 	push	ar6
      000BB8 C0 07            [24] 3213 	push	ar7
      000BBA 86 82            [24] 3214 	mov	dpl,@r0
      000BBC 08               [12] 3215 	inc	r0
      000BBD 86 83            [24] 3216 	mov	dph,@r0
      000BBF 08               [12] 3217 	inc	r0
      000BC0 86 F0            [24] 3218 	mov	b,@r0
      000BC2 12r00r00         [24] 3219 	lcall	___gptr_cmp
      000BC5 15 81            [12] 3220 	dec	sp
      000BC7 15 81            [12] 3221 	dec	sp
      000BC9 15 81            [12] 3222 	dec	sp
      000BCB 60 09            [24] 3223 	jz	00190$
      000BCD D0 07            [24] 3224 	pop	ar7
      000BCF D0 06            [24] 3225 	pop	ar6
      000BD1 D0 05            [24] 3226 	pop	ar5
      000BD3 02r0CrC5         [24] 3227 	ljmp	00111$
      000BD6                       3228 00190$:
      000BD6 E5 81            [12] 3229 	mov	a,sp
      000BD8 24 F4            [12] 3230 	add	a,#0xf4
      000BDA F8               [12] 3231 	mov	r0,a
      000BDB 74 05            [12] 3232 	mov	a,#0x05
      000BDD 26               [12] 3233 	add	a,@r0
      000BDE FD               [12] 3234 	mov	r5,a
      000BDF E4               [12] 3235 	clr	a
      000BE0 08               [12] 3236 	inc	r0
      000BE1 36               [12] 3237 	addc	a,@r0
      000BE2 FE               [12] 3238 	mov	r6,a
      000BE3 08               [12] 3239 	inc	r0
      000BE4 86 07            [24] 3240 	mov	ar7,@r0
      000BE6 8D 82            [24] 3241 	mov	dpl,r5
      000BE8 8E 83            [24] 3242 	mov	dph,r6
      000BEA 8F F0            [24] 3243 	mov	b,r7
      000BEC 12r00r00         [24] 3244 	lcall	__gptrget
      000BEF FD               [12] 3245 	mov	r5,a
      000BF0 A3               [24] 3246 	inc	dptr
      000BF1 12r00r00         [24] 3247 	lcall	__gptrget
      000BF4 FE               [12] 3248 	mov	r6,a
      000BF5 E5 81            [12] 3249 	mov	a,sp
      000BF7 24 FC            [12] 3250 	add	a,#0xfc
      000BF9 F8               [12] 3251 	mov	r0,a
      000BFA C3               [12] 3252 	clr	c
      000BFB ED               [12] 3253 	mov	a,r5
      000BFC 96               [12] 3254 	subb	a,@r0
      000BFD EE               [12] 3255 	mov	a,r6
      000BFE 08               [12] 3256 	inc	r0
      000BFF 96               [12] 3257 	subb	a,@r0
      000C00 D0 07            [24] 3258 	pop	ar7
      000C02 D0 06            [24] 3259 	pop	ar6
      000C04 D0 05            [24] 3260 	pop	ar5
      000C06 40 03            [24] 3261 	jc	00191$
      000C08 02r0CrC5         [24] 3262 	ljmp	00111$
      000C0B                       3263 00191$:
                                   3264 ;	/opt/contiki/core/net/rpl/rpl-timers.c:367: rpl_rank_t p_rank = dag->instance->of->calculate_rank(p, 0);
      000C0B 8D 82            [24] 3265 	mov	dpl,r5
      000C0D 8E 83            [24] 3266 	mov	dph,r6
      000C0F 8F F0            [24] 3267 	mov	b,r7
      000C11 12r00r00         [24] 3268 	lcall	__gptrget
      000C14 FA               [12] 3269 	mov	r2,a
      000C15 A3               [24] 3270 	inc	dptr
      000C16 12r00r00         [24] 3271 	lcall	__gptrget
      000C19 FB               [12] 3272 	mov	r3,a
      000C1A A3               [24] 3273 	inc	dptr
      000C1B 12r00r00         [24] 3274 	lcall	__gptrget
      000C1E FC               [12] 3275 	mov	r4,a
      000C1F 74 07            [12] 3276 	mov	a,#0x07
      000C21 2A               [12] 3277 	add	a,r2
      000C22 FA               [12] 3278 	mov	r2,a
      000C23 E4               [12] 3279 	clr	a
      000C24 3B               [12] 3280 	addc	a,r3
      000C25 FB               [12] 3281 	mov	r3,a
      000C26 8A 82            [24] 3282 	mov	dpl,r2
      000C28 8B 83            [24] 3283 	mov	dph,r3
      000C2A 8C F0            [24] 3284 	mov	b,r4
      000C2C 12r00r00         [24] 3285 	lcall	__gptrget
      000C2F FA               [12] 3286 	mov	r2,a
      000C30 A3               [24] 3287 	inc	dptr
      000C31 12r00r00         [24] 3288 	lcall	__gptrget
      000C34 FB               [12] 3289 	mov	r3,a
      000C35 A3               [24] 3290 	inc	dptr
      000C36 12r00r00         [24] 3291 	lcall	__gptrget
      000C39 FC               [12] 3292 	mov	r4,a
      000C3A 74 0C            [12] 3293 	mov	a,#0x0C
      000C3C 2A               [12] 3294 	add	a,r2
      000C3D FA               [12] 3295 	mov	r2,a
      000C3E E4               [12] 3296 	clr	a
      000C3F 3B               [12] 3297 	addc	a,r3
      000C40 FB               [12] 3298 	mov	r3,a
      000C41 8A 82            [24] 3299 	mov	dpl,r2
      000C43 8B 83            [24] 3300 	mov	dph,r3
      000C45 8C F0            [24] 3301 	mov	b,r4
      000C47 12r00r00         [24] 3302 	lcall	__gptrget
      000C4A FA               [12] 3303 	mov	r2,a
      000C4B A3               [24] 3304 	inc	dptr
      000C4C 12r00r00         [24] 3305 	lcall	__gptrget
      000C4F FB               [12] 3306 	mov	r3,a
      000C50 A3               [24] 3307 	inc	dptr
      000C51 12r00r00         [24] 3308 	lcall	__gptrget
      000C54 FC               [12] 3309 	mov	r4,a
      000C55 C0 07            [24] 3310 	push	ar7
      000C57 C0 06            [24] 3311 	push	ar6
      000C59 C0 05            [24] 3312 	push	ar5
      000C5B C0 04            [24] 3313 	push	ar4
      000C5D E4               [12] 3314 	clr	a
      000C5E C0 E0            [24] 3315 	push	acc
      000C60 C0 E0            [24] 3316 	push	acc
      000C62 C0 02            [24] 3317 	push	ar2
      000C64 C0 03            [24] 3318 	push	ar3
      000C66 C0 04            [24] 3319 	push	ar4
      000C68 E5 81            [12] 3320 	mov	a,sp
      000C6A 24 EE            [12] 3321 	add	a,#0xee
      000C6C F8               [12] 3322 	mov	r0,a
      000C6D 86 82            [24] 3323 	mov	dpl,@r0
      000C6F 08               [12] 3324 	inc	r0
      000C70 86 83            [24] 3325 	mov	dph,@r0
      000C72 08               [12] 3326 	inc	r0
      000C73 86 F0            [24] 3327 	mov	b,@r0
      000C75 D0 02            [24] 3328 	pop	ar2
      000C77 D0 01            [24] 3329 	pop	ar1
      000C79 D0 00            [24] 3330 	pop	ar0
      000C7B 12r00r00         [24] 3331 	lcall	__sdcc_banked_call
      000C7E AA 82            [24] 3332 	mov	r2,dpl
      000C80 AB 83            [24] 3333 	mov	r3,dph
      000C82 15 81            [12] 3334 	dec	sp
      000C84 15 81            [12] 3335 	dec	sp
      000C86 D0 04            [24] 3336 	pop	ar4
      000C88 D0 05            [24] 3337 	pop	ar5
      000C8A D0 06            [24] 3338 	pop	ar6
      000C8C D0 07            [24] 3339 	pop	ar7
      000C8E 8A 04            [24] 3340 	mov	ar4,r2
                                   3341 ;	/opt/contiki/core/net/rpl/rpl-timers.c:368: if(probing_target == NULL
      000C90 E5 81            [12] 3342 	mov	a,sp
      000C92 24 FA            [12] 3343 	add	a,#0xfa
      000C94 F8               [12] 3344 	mov	r0,a
      000C95 E6               [12] 3345 	mov	a,@r0
      000C96 08               [12] 3346 	inc	r0
      000C97 46               [12] 3347 	orl	a,@r0
      000C98 60 0D            [24] 3348 	jz	00107$
                                   3349 ;	/opt/contiki/core/net/rpl/rpl-timers.c:369: || p_rank < probing_target_rank) {
      000C9A E5 81            [12] 3350 	mov	a,sp
      000C9C 24 FD            [12] 3351 	add	a,#0xfd
      000C9E F8               [12] 3352 	mov	r0,a
      000C9F C3               [12] 3353 	clr	c
      000CA0 EC               [12] 3354 	mov	a,r4
      000CA1 96               [12] 3355 	subb	a,@r0
      000CA2 EB               [12] 3356 	mov	a,r3
      000CA3 08               [12] 3357 	inc	r0
      000CA4 96               [12] 3358 	subb	a,@r0
      000CA5 50 1E            [24] 3359 	jnc	00111$
      000CA7                       3360 00107$:
                                   3361 ;	/opt/contiki/core/net/rpl/rpl-timers.c:370: probing_target = p;
      000CA7 E5 81            [12] 3362 	mov	a,sp
      000CA9 24 F7            [12] 3363 	add	a,#0xf7
      000CAB F8               [12] 3364 	mov	r0,a
      000CAC E5 81            [12] 3365 	mov	a,sp
      000CAE 24 FA            [12] 3366 	add	a,#0xfa
      000CB0 F9               [12] 3367 	mov	r1,a
      000CB1 E6               [12] 3368 	mov	a,@r0
      000CB2 F7               [12] 3369 	mov	@r1,a
      000CB3 08               [12] 3370 	inc	r0
      000CB4 09               [12] 3371 	inc	r1
      000CB5 E6               [12] 3372 	mov	a,@r0
      000CB6 F7               [12] 3373 	mov	@r1,a
      000CB7 08               [12] 3374 	inc	r0
      000CB8 09               [12] 3375 	inc	r1
      000CB9 E6               [12] 3376 	mov	a,@r0
      000CBA F7               [12] 3377 	mov	@r1,a
                                   3378 ;	/opt/contiki/core/net/rpl/rpl-timers.c:371: probing_target_rank = p_rank;
      000CBB E5 81            [12] 3379 	mov	a,sp
      000CBD 24 FD            [12] 3380 	add	a,#0xfd
      000CBF F8               [12] 3381 	mov	r0,a
      000CC0 A6 04            [24] 3382 	mov	@r0,ar4
      000CC2 08               [12] 3383 	inc	r0
      000CC3 A6 03            [24] 3384 	mov	@r0,ar3
      000CC5                       3385 00111$:
                                   3386 ;	/opt/contiki/core/net/rpl/rpl-timers.c:374: p = nbr_table_next(rpl_parents, p);
      000CC5 C0 05            [24] 3387 	push	ar5
      000CC7 C0 06            [24] 3388 	push	ar6
      000CC9 C0 07            [24] 3389 	push	ar7
      000CCB E5 81            [12] 3390 	mov	a,sp
      000CCD 24 F4            [12] 3391 	add	a,#0xf4
      000CCF F8               [12] 3392 	mov	r0,a
      000CD0 86 02            [24] 3393 	mov	ar2,@r0
      000CD2 08               [12] 3394 	inc	r0
      000CD3 86 03            [24] 3395 	mov	ar3,@r0
      000CD5 08               [12] 3396 	inc	r0
      000CD6 86 04            [24] 3397 	mov	ar4,@r0
      000CD8 90r00r00         [24] 3398 	mov	dptr,#_rpl_parents
      000CDB E0               [24] 3399 	movx	a,@dptr
      000CDC FD               [12] 3400 	mov	r5,a
      000CDD A3               [24] 3401 	inc	dptr
      000CDE E0               [24] 3402 	movx	a,@dptr
      000CDF FE               [12] 3403 	mov	r6,a
      000CE0 A3               [24] 3404 	inc	dptr
      000CE1 E0               [24] 3405 	movx	a,@dptr
      000CE2 FF               [12] 3406 	mov	r7,a
      000CE3 C0 02            [24] 3407 	push	ar2
      000CE5 C0 03            [24] 3408 	push	ar3
      000CE7 C0 04            [24] 3409 	push	ar4
      000CE9 8D 82            [24] 3410 	mov	dpl,r5
      000CEB 8E 83            [24] 3411 	mov	dph,r6
      000CED 8F F0            [24] 3412 	mov	b,r7
      000CEF 78r00            [12] 3413 	mov	r0,#_nbr_table_next
      000CF1 79s00            [12] 3414 	mov	r1,#(_nbr_table_next >> 8)
      000CF3 7As00            [12] 3415 	mov	r2,#(_nbr_table_next >> 16)
      000CF5 12r00r00         [24] 3416 	lcall	__sdcc_banked_call
      000CF8 AD 82            [24] 3417 	mov	r5,dpl
      000CFA AE 83            [24] 3418 	mov	r6,dph
      000CFC AF F0            [24] 3419 	mov	r7,b
      000CFE 15 81            [12] 3420 	dec	sp
      000D00 15 81            [12] 3421 	dec	sp
      000D02 15 81            [12] 3422 	dec	sp
      000D04 E5 81            [12] 3423 	mov	a,sp
      000D06 24 F4            [12] 3424 	add	a,#0xf4
      000D08 F8               [12] 3425 	mov	r0,a
      000D09 A6 05            [24] 3426 	mov	@r0,ar5
      000D0B 08               [12] 3427 	inc	r0
      000D0C A6 06            [24] 3428 	mov	@r0,ar6
      000D0E 08               [12] 3429 	inc	r0
      000D0F A6 07            [24] 3430 	mov	@r0,ar7
      000D11 D0 07            [24] 3431 	pop	ar7
      000D13 D0 06            [24] 3432 	pop	ar6
      000D15 D0 05            [24] 3433 	pop	ar5
      000D17 02r0Br81         [24] 3434 	ljmp	00113$
      000D1A                       3435 00117$:
                                   3436 ;	/opt/contiki/core/net/rpl/rpl-timers.c:379: if(probing_target == NULL) {
      000D1A E5 81            [12] 3437 	mov	a,sp
      000D1C 24 FA            [12] 3438 	add	a,#0xfa
      000D1E F8               [12] 3439 	mov	r0,a
      000D1F E6               [12] 3440 	mov	a,@r0
      000D20 08               [12] 3441 	inc	r0
      000D21 46               [12] 3442 	orl	a,@r0
      000D22 60 03            [24] 3443 	jz	00194$
      000D24 02r0Er46         [24] 3444 	ljmp	00128$
      000D27                       3445 00194$:
                                   3446 ;	/opt/contiki/core/net/rpl/rpl-timers.c:380: p = nbr_table_head(rpl_parents);
      000D27 90r00r00         [24] 3447 	mov	dptr,#_rpl_parents
      000D2A E0               [24] 3448 	movx	a,@dptr
      000D2B FD               [12] 3449 	mov	r5,a
      000D2C A3               [24] 3450 	inc	dptr
      000D2D E0               [24] 3451 	movx	a,@dptr
      000D2E FE               [12] 3452 	mov	r6,a
      000D2F A3               [24] 3453 	inc	dptr
      000D30 E0               [24] 3454 	movx	a,@dptr
      000D31 FF               [12] 3455 	mov	r7,a
      000D32 8D 82            [24] 3456 	mov	dpl,r5
      000D34 8E 83            [24] 3457 	mov	dph,r6
      000D36 8F F0            [24] 3458 	mov	b,r7
      000D38 78r00            [12] 3459 	mov	r0,#_nbr_table_head
      000D3A 79s00            [12] 3460 	mov	r1,#(_nbr_table_head >> 8)
      000D3C 7As00            [12] 3461 	mov	r2,#(_nbr_table_head >> 16)
      000D3E 12r00r00         [24] 3462 	lcall	__sdcc_banked_call
      000D41 AD 82            [24] 3463 	mov	r5,dpl
      000D43 AE 83            [24] 3464 	mov	r6,dph
      000D45 AF F0            [24] 3465 	mov	r7,b
      000D47 E5 81            [12] 3466 	mov	a,sp
      000D49 24 F7            [12] 3467 	add	a,#0xf7
      000D4B F8               [12] 3468 	mov	r0,a
      000D4C A6 05            [24] 3469 	mov	@r0,ar5
      000D4E 08               [12] 3470 	inc	r0
      000D4F A6 06            [24] 3471 	mov	@r0,ar6
      000D51 08               [12] 3472 	inc	r0
      000D52 A6 07            [24] 3473 	mov	@r0,ar7
                                   3474 ;	/opt/contiki/core/net/rpl/rpl-timers.c:381: while(p != NULL) {
      000D54                       3475 00124$:
      000D54 E5 81            [12] 3476 	mov	a,sp
      000D56 24 F7            [12] 3477 	add	a,#0xf7
      000D58 F8               [12] 3478 	mov	r0,a
      000D59 E6               [12] 3479 	mov	a,@r0
      000D5A 08               [12] 3480 	inc	r0
      000D5B 46               [12] 3481 	orl	a,@r0
      000D5C 70 03            [24] 3482 	jnz	00195$
      000D5E 02r0Er46         [24] 3483 	ljmp	00128$
      000D61                       3484 00195$:
                                   3485 ;	/opt/contiki/core/net/rpl/rpl-timers.c:382: if(p->dag == dag) {
      000D61 E5 81            [12] 3486 	mov	a,sp
      000D63 24 F7            [12] 3487 	add	a,#0xf7
      000D65 F8               [12] 3488 	mov	r0,a
      000D66 86 82            [24] 3489 	mov	dpl,@r0
      000D68 08               [12] 3490 	inc	r0
      000D69 86 83            [24] 3491 	mov	dph,@r0
      000D6B 08               [12] 3492 	inc	r0
      000D6C 86 F0            [24] 3493 	mov	b,@r0
      000D6E 12r00r00         [24] 3494 	lcall	__gptrget
      000D71 FD               [12] 3495 	mov	r5,a
      000D72 A3               [24] 3496 	inc	dptr
      000D73 12r00r00         [24] 3497 	lcall	__gptrget
      000D76 FE               [12] 3498 	mov	r6,a
      000D77 A3               [24] 3499 	inc	dptr
      000D78 12r00r00         [24] 3500 	lcall	__gptrget
      000D7B FF               [12] 3501 	mov	r7,a
      000D7C E5 81            [12] 3502 	mov	a,sp
      000D7E 24 F4            [12] 3503 	add	a,#0xf4
      000D80 F8               [12] 3504 	mov	r0,a
      000D81 C0 05            [24] 3505 	push	ar5
      000D83 C0 06            [24] 3506 	push	ar6
      000D85 C0 07            [24] 3507 	push	ar7
      000D87 86 82            [24] 3508 	mov	dpl,@r0
      000D89 08               [12] 3509 	inc	r0
      000D8A 86 83            [24] 3510 	mov	dph,@r0
      000D8C 08               [12] 3511 	inc	r0
      000D8D 86 F0            [24] 3512 	mov	b,@r0
      000D8F 12r00r00         [24] 3513 	lcall	___gptr_cmp
      000D92 15 81            [12] 3514 	dec	sp
      000D94 15 81            [12] 3515 	dec	sp
      000D96 15 81            [12] 3516 	dec	sp
      000D98 70 63            [24] 3517 	jnz	00123$
                                   3518 ;	/opt/contiki/core/net/rpl/rpl-timers.c:383: if(probing_target == NULL
      000D9A E5 81            [12] 3519 	mov	a,sp
      000D9C 24 FA            [12] 3520 	add	a,#0xfa
      000D9E F8               [12] 3521 	mov	r0,a
      000D9F E6               [12] 3522 	mov	a,@r0
      000DA0 08               [12] 3523 	inc	r0
      000DA1 46               [12] 3524 	orl	a,@r0
      000DA2 60 45            [24] 3525 	jz	00119$
                                   3526 ;	/opt/contiki/core/net/rpl/rpl-timers.c:384: || p->last_tx_time < probing_target->last_tx_time) {
      000DA4 E5 81            [12] 3527 	mov	a,sp
      000DA6 24 F7            [12] 3528 	add	a,#0xf7
      000DA8 F8               [12] 3529 	mov	r0,a
      000DA9 74 05            [12] 3530 	mov	a,#0x05
      000DAB 26               [12] 3531 	add	a,@r0
      000DAC FD               [12] 3532 	mov	r5,a
      000DAD E4               [12] 3533 	clr	a
      000DAE 08               [12] 3534 	inc	r0
      000DAF 36               [12] 3535 	addc	a,@r0
      000DB0 FE               [12] 3536 	mov	r6,a
      000DB1 08               [12] 3537 	inc	r0
      000DB2 86 07            [24] 3538 	mov	ar7,@r0
      000DB4 8D 82            [24] 3539 	mov	dpl,r5
      000DB6 8E 83            [24] 3540 	mov	dph,r6
      000DB8 8F F0            [24] 3541 	mov	b,r7
      000DBA 12r00r00         [24] 3542 	lcall	__gptrget
      000DBD FD               [12] 3543 	mov	r5,a
      000DBE A3               [24] 3544 	inc	dptr
      000DBF 12r00r00         [24] 3545 	lcall	__gptrget
      000DC2 FE               [12] 3546 	mov	r6,a
      000DC3 E5 81            [12] 3547 	mov	a,sp
      000DC5 24 FA            [12] 3548 	add	a,#0xfa
      000DC7 F8               [12] 3549 	mov	r0,a
      000DC8 74 05            [12] 3550 	mov	a,#0x05
      000DCA 26               [12] 3551 	add	a,@r0
      000DCB FB               [12] 3552 	mov	r3,a
      000DCC E4               [12] 3553 	clr	a
      000DCD 08               [12] 3554 	inc	r0
      000DCE 36               [12] 3555 	addc	a,@r0
      000DCF FC               [12] 3556 	mov	r4,a
      000DD0 08               [12] 3557 	inc	r0
      000DD1 86 07            [24] 3558 	mov	ar7,@r0
      000DD3 8B 82            [24] 3559 	mov	dpl,r3
      000DD5 8C 83            [24] 3560 	mov	dph,r4
      000DD7 8F F0            [24] 3561 	mov	b,r7
      000DD9 12r00r00         [24] 3562 	lcall	__gptrget
      000DDC FB               [12] 3563 	mov	r3,a
      000DDD A3               [24] 3564 	inc	dptr
      000DDE 12r00r00         [24] 3565 	lcall	__gptrget
      000DE1 FC               [12] 3566 	mov	r4,a
      000DE2 C3               [12] 3567 	clr	c
      000DE3 ED               [12] 3568 	mov	a,r5
      000DE4 9B               [12] 3569 	subb	a,r3
      000DE5 EE               [12] 3570 	mov	a,r6
      000DE6 9C               [12] 3571 	subb	a,r4
      000DE7 50 14            [24] 3572 	jnc	00123$
      000DE9                       3573 00119$:
                                   3574 ;	/opt/contiki/core/net/rpl/rpl-timers.c:385: probing_target = p;
      000DE9 E5 81            [12] 3575 	mov	a,sp
      000DEB 24 F7            [12] 3576 	add	a,#0xf7
      000DED F8               [12] 3577 	mov	r0,a
      000DEE E5 81            [12] 3578 	mov	a,sp
      000DF0 24 FA            [12] 3579 	add	a,#0xfa
      000DF2 F9               [12] 3580 	mov	r1,a
      000DF3 E6               [12] 3581 	mov	a,@r0
      000DF4 F7               [12] 3582 	mov	@r1,a
      000DF5 08               [12] 3583 	inc	r0
      000DF6 09               [12] 3584 	inc	r1
      000DF7 E6               [12] 3585 	mov	a,@r0
      000DF8 F7               [12] 3586 	mov	@r1,a
      000DF9 08               [12] 3587 	inc	r0
      000DFA 09               [12] 3588 	inc	r1
      000DFB E6               [12] 3589 	mov	a,@r0
      000DFC F7               [12] 3590 	mov	@r1,a
      000DFD                       3591 00123$:
                                   3592 ;	/opt/contiki/core/net/rpl/rpl-timers.c:388: p = nbr_table_next(rpl_parents, p);
      000DFD E5 81            [12] 3593 	mov	a,sp
      000DFF 24 F7            [12] 3594 	add	a,#0xf7
      000E01 F8               [12] 3595 	mov	r0,a
      000E02 86 02            [24] 3596 	mov	ar2,@r0
      000E04 08               [12] 3597 	inc	r0
      000E05 86 03            [24] 3598 	mov	ar3,@r0
      000E07 08               [12] 3599 	inc	r0
      000E08 86 04            [24] 3600 	mov	ar4,@r0
      000E0A 90r00r00         [24] 3601 	mov	dptr,#_rpl_parents
      000E0D E0               [24] 3602 	movx	a,@dptr
      000E0E FD               [12] 3603 	mov	r5,a
      000E0F A3               [24] 3604 	inc	dptr
      000E10 E0               [24] 3605 	movx	a,@dptr
      000E11 FE               [12] 3606 	mov	r6,a
      000E12 A3               [24] 3607 	inc	dptr
      000E13 E0               [24] 3608 	movx	a,@dptr
      000E14 FF               [12] 3609 	mov	r7,a
      000E15 C0 02            [24] 3610 	push	ar2
      000E17 C0 03            [24] 3611 	push	ar3
      000E19 C0 04            [24] 3612 	push	ar4
      000E1B 8D 82            [24] 3613 	mov	dpl,r5
      000E1D 8E 83            [24] 3614 	mov	dph,r6
      000E1F 8F F0            [24] 3615 	mov	b,r7
      000E21 78r00            [12] 3616 	mov	r0,#_nbr_table_next
      000E23 79s00            [12] 3617 	mov	r1,#(_nbr_table_next >> 8)
      000E25 7As00            [12] 3618 	mov	r2,#(_nbr_table_next >> 16)
      000E27 12r00r00         [24] 3619 	lcall	__sdcc_banked_call
      000E2A AD 82            [24] 3620 	mov	r5,dpl
      000E2C AE 83            [24] 3621 	mov	r6,dph
      000E2E AF F0            [24] 3622 	mov	r7,b
      000E30 15 81            [12] 3623 	dec	sp
      000E32 15 81            [12] 3624 	dec	sp
      000E34 15 81            [12] 3625 	dec	sp
      000E36 E5 81            [12] 3626 	mov	a,sp
      000E38 24 F7            [12] 3627 	add	a,#0xf7
      000E3A F8               [12] 3628 	mov	r0,a
      000E3B A6 05            [24] 3629 	mov	@r0,ar5
      000E3D 08               [12] 3630 	inc	r0
      000E3E A6 06            [24] 3631 	mov	@r0,ar6
      000E40 08               [12] 3632 	inc	r0
      000E41 A6 07            [24] 3633 	mov	@r0,ar7
      000E43 02r0Dr54         [24] 3634 	ljmp	00124$
      000E46                       3635 00128$:
                                   3636 ;	/opt/contiki/core/net/rpl/rpl-timers.c:392: return probing_target;
      000E46 E5 81            [12] 3637 	mov	a,sp
      000E48 24 FA            [12] 3638 	add	a,#0xfa
      000E4A F8               [12] 3639 	mov	r0,a
      000E4B 86 82            [24] 3640 	mov	dpl,@r0
      000E4D 08               [12] 3641 	inc	r0
      000E4E 86 83            [24] 3642 	mov	dph,@r0
      000E50 08               [12] 3643 	inc	r0
      000E51 86 F0            [24] 3644 	mov	b,@r0
      000E53                       3645 00129$:
      000E53 C8               [12] 3646 	xch	a,r0
      000E54 E5 81            [12] 3647 	mov	a,sp
      000E56 24 F3            [12] 3648 	add	a,#0xF3
      000E58 F5 81            [12] 3649 	mov	sp,a
      000E5A C8               [12] 3650 	xch	a,r0
      000E5B 02r00r00         [24] 3651 	ljmp	__sdcc_banked_ret
                                   3652 ;------------------------------------------------------------
                                   3653 ;Allocation info for local variables in function 'handle_probing_timer'
                                   3654 ;------------------------------------------------------------
                                   3655 ;ptr                       Allocated to registers r5 r6 r7 
                                   3656 ;instance                  Allocated to registers r5 r6 r7 
                                   3657 ;probing_target            Allocated to stack - sp -2
                                   3658 ;------------------------------------------------------------
                                   3659 ;	/opt/contiki/core/net/rpl/rpl-timers.c:396: handle_probing_timer(void *ptr)
                                   3660 ;	-----------------------------------------
                                   3661 ;	 function handle_probing_timer
                                   3662 ;	-----------------------------------------
      000E5E                       3663 _handle_probing_timer:
      000E5E 05 81            [12] 3664 	inc	sp
      000E60 05 81            [12] 3665 	inc	sp
      000E62 05 81            [12] 3666 	inc	sp
      000E64 AD 82            [24] 3667 	mov	r5,dpl
      000E66 AE 83            [24] 3668 	mov	r6,dph
      000E68 AF F0            [24] 3669 	mov	r7,b
                                   3670 ;	/opt/contiki/core/net/rpl/rpl-timers.c:398: rpl_instance_t *instance = (rpl_instance_t *)ptr;
                                   3671 ;	/opt/contiki/core/net/rpl/rpl-timers.c:399: rpl_parent_t *probing_target = RPL_PROBING_SELECT_FUNC(instance->current_dag);
      000E6A 74 0A            [12] 3672 	mov	a,#0x0A
      000E6C 2D               [12] 3673 	add	a,r5
      000E6D FA               [12] 3674 	mov	r2,a
      000E6E E4               [12] 3675 	clr	a
      000E6F 3E               [12] 3676 	addc	a,r6
      000E70 FB               [12] 3677 	mov	r3,a
      000E71 8F 04            [24] 3678 	mov	ar4,r7
      000E73 8A 82            [24] 3679 	mov	dpl,r2
      000E75 8B 83            [24] 3680 	mov	dph,r3
      000E77 8C F0            [24] 3681 	mov	b,r4
      000E79 12r00r00         [24] 3682 	lcall	__gptrget
      000E7C FA               [12] 3683 	mov	r2,a
      000E7D A3               [24] 3684 	inc	dptr
      000E7E 12r00r00         [24] 3685 	lcall	__gptrget
      000E81 FB               [12] 3686 	mov	r3,a
      000E82 A3               [24] 3687 	inc	dptr
      000E83 12r00r00         [24] 3688 	lcall	__gptrget
      000E86 FC               [12] 3689 	mov	r4,a
      000E87 8A 82            [24] 3690 	mov	dpl,r2
      000E89 8B 83            [24] 3691 	mov	dph,r3
      000E8B 8C F0            [24] 3692 	mov	b,r4
      000E8D C0 07            [24] 3693 	push	ar7
      000E8F C0 06            [24] 3694 	push	ar6
      000E91 C0 05            [24] 3695 	push	ar5
      000E93 78r21            [12] 3696 	mov	r0,#_get_probing_target
      000E95 79s0A            [12] 3697 	mov	r1,#(_get_probing_target >> 8)
      000E97 7As00            [12] 3698 	mov	r2,#(_get_probing_target >> 16)
      000E99 12r00r00         [24] 3699 	lcall	__sdcc_banked_call
      000E9C AA 82            [24] 3700 	mov	r2,dpl
      000E9E AB 83            [24] 3701 	mov	r3,dph
      000EA0 AC F0            [24] 3702 	mov	r4,b
      000EA2 D0 05            [24] 3703 	pop	ar5
      000EA4 D0 06            [24] 3704 	pop	ar6
      000EA6 D0 07            [24] 3705 	pop	ar7
      000EA8 A8 81            [24] 3706 	mov	r0,sp
      000EAA 18               [12] 3707 	dec	r0
      000EAB 18               [12] 3708 	dec	r0
      000EAC A6 02            [24] 3709 	mov	@r0,ar2
      000EAE 08               [12] 3710 	inc	r0
      000EAF A6 03            [24] 3711 	mov	@r0,ar3
      000EB1 08               [12] 3712 	inc	r0
      000EB2 A6 04            [24] 3713 	mov	@r0,ar4
                                   3714 ;	/opt/contiki/core/net/rpl/rpl-timers.c:402: if(probing_target != NULL && rpl_get_parent_ipaddr(probing_target) != NULL) {
      000EB4 A8 81            [24] 3715 	mov	r0,sp
      000EB6 18               [12] 3716 	dec	r0
      000EB7 18               [12] 3717 	dec	r0
      000EB8 E6               [12] 3718 	mov	a,@r0
      000EB9 08               [12] 3719 	inc	r0
      000EBA 46               [12] 3720 	orl	a,@r0
      000EBB 60 79            [24] 3721 	jz	00102$
      000EBD A8 81            [24] 3722 	mov	r0,sp
      000EBF 18               [12] 3723 	dec	r0
      000EC0 18               [12] 3724 	dec	r0
      000EC1 86 82            [24] 3725 	mov	dpl,@r0
      000EC3 08               [12] 3726 	inc	r0
      000EC4 86 83            [24] 3727 	mov	dph,@r0
      000EC6 08               [12] 3728 	inc	r0
      000EC7 86 F0            [24] 3729 	mov	b,@r0
      000EC9 C0 07            [24] 3730 	push	ar7
      000ECB C0 06            [24] 3731 	push	ar6
      000ECD C0 05            [24] 3732 	push	ar5
      000ECF 78r00            [12] 3733 	mov	r0,#_rpl_get_parent_ipaddr
      000ED1 79s00            [12] 3734 	mov	r1,#(_rpl_get_parent_ipaddr >> 8)
      000ED3 7As00            [12] 3735 	mov	r2,#(_rpl_get_parent_ipaddr >> 16)
      000ED5 12r00r00         [24] 3736 	lcall	__sdcc_banked_call
      000ED8 AA 82            [24] 3737 	mov	r2,dpl
      000EDA AB 83            [24] 3738 	mov	r3,dph
      000EDC AC F0            [24] 3739 	mov	r4,b
      000EDE D0 05            [24] 3740 	pop	ar5
      000EE0 D0 06            [24] 3741 	pop	ar6
      000EE2 D0 07            [24] 3742 	pop	ar7
      000EE4 EA               [12] 3743 	mov	a,r2
      000EE5 4B               [12] 3744 	orl	a,r3
      000EE6 60 4E            [24] 3745 	jz	00102$
                                   3746 ;	/opt/contiki/core/net/rpl/rpl-timers.c:406: RPL_PROBING_SEND_FUNC(instance, rpl_get_parent_ipaddr(probing_target));
      000EE8 A8 81            [24] 3747 	mov	r0,sp
      000EEA 18               [12] 3748 	dec	r0
      000EEB 18               [12] 3749 	dec	r0
      000EEC 86 82            [24] 3750 	mov	dpl,@r0
      000EEE 08               [12] 3751 	inc	r0
      000EEF 86 83            [24] 3752 	mov	dph,@r0
      000EF1 08               [12] 3753 	inc	r0
      000EF2 86 F0            [24] 3754 	mov	b,@r0
      000EF4 C0 07            [24] 3755 	push	ar7
      000EF6 C0 06            [24] 3756 	push	ar6
      000EF8 C0 05            [24] 3757 	push	ar5
      000EFA 78r00            [12] 3758 	mov	r0,#_rpl_get_parent_ipaddr
      000EFC 79s00            [12] 3759 	mov	r1,#(_rpl_get_parent_ipaddr >> 8)
      000EFE 7As00            [12] 3760 	mov	r2,#(_rpl_get_parent_ipaddr >> 16)
      000F00 12r00r00         [24] 3761 	lcall	__sdcc_banked_call
      000F03 AA 82            [24] 3762 	mov	r2,dpl
      000F05 AB 83            [24] 3763 	mov	r3,dph
      000F07 AC F0            [24] 3764 	mov	r4,b
      000F09 D0 05            [24] 3765 	pop	ar5
      000F0B D0 06            [24] 3766 	pop	ar6
      000F0D D0 07            [24] 3767 	pop	ar7
      000F0F C0 07            [24] 3768 	push	ar7
      000F11 C0 06            [24] 3769 	push	ar6
      000F13 C0 05            [24] 3770 	push	ar5
      000F15 C0 02            [24] 3771 	push	ar2
      000F17 C0 03            [24] 3772 	push	ar3
      000F19 C0 04            [24] 3773 	push	ar4
      000F1B 8D 82            [24] 3774 	mov	dpl,r5
      000F1D 8E 83            [24] 3775 	mov	dph,r6
      000F1F 8F F0            [24] 3776 	mov	b,r7
      000F21 78r00            [12] 3777 	mov	r0,#_dio_output
      000F23 79s00            [12] 3778 	mov	r1,#(_dio_output >> 8)
      000F25 7As00            [12] 3779 	mov	r2,#(_dio_output >> 16)
      000F27 12r00r00         [24] 3780 	lcall	__sdcc_banked_call
      000F2A 15 81            [12] 3781 	dec	sp
      000F2C 15 81            [12] 3782 	dec	sp
      000F2E 15 81            [12] 3783 	dec	sp
      000F30 D0 05            [24] 3784 	pop	ar5
      000F32 D0 06            [24] 3785 	pop	ar6
      000F34 D0 07            [24] 3786 	pop	ar7
      000F36                       3787 00102$:
                                   3788 ;	/opt/contiki/core/net/rpl/rpl-timers.c:410: rpl_schedule_probing(instance);
      000F36 8D 82            [24] 3789 	mov	dpl,r5
      000F38 8E 83            [24] 3790 	mov	dph,r6
      000F3A 8F F0            [24] 3791 	mov	b,r7
      000F3C 78r4E            [12] 3792 	mov	r0,#_rpl_schedule_probing
      000F3E 79s0F            [12] 3793 	mov	r1,#(_rpl_schedule_probing >> 8)
      000F40 7As00            [12] 3794 	mov	r2,#(_rpl_schedule_probing >> 16)
      000F42 12r00r00         [24] 3795 	lcall	__sdcc_banked_call
      000F45 15 81            [12] 3796 	dec	sp
      000F47 15 81            [12] 3797 	dec	sp
      000F49 15 81            [12] 3798 	dec	sp
      000F4B 02r00r00         [24] 3799 	ljmp	__sdcc_banked_ret
                                   3800 ;------------------------------------------------------------
                                   3801 ;Allocation info for local variables in function 'rpl_schedule_probing'
                                   3802 ;------------------------------------------------------------
                                   3803 ;instance                  Allocated to registers r5 r6 r7 
                                   3804 ;------------------------------------------------------------
                                   3805 ;	/opt/contiki/core/net/rpl/rpl-timers.c:418: rpl_schedule_probing(rpl_instance_t *instance)
                                   3806 ;	-----------------------------------------
                                   3807 ;	 function rpl_schedule_probing
                                   3808 ;	-----------------------------------------
      000F4E                       3809 _rpl_schedule_probing:
      000F4E AD 82            [24] 3810 	mov	r5,dpl
      000F50 AE 83            [24] 3811 	mov	r6,dph
      000F52 AF F0            [24] 3812 	mov	r7,b
                                   3813 ;	/opt/contiki/core/net/rpl/rpl-timers.c:421: handle_probing_timer, instance);
      000F54 8D 02            [24] 3814 	mov	ar2,r5
      000F56 8E 03            [24] 3815 	mov	ar3,r6
      000F58 8F 04            [24] 3816 	mov	ar4,r7
                                   3817 ;	/opt/contiki/core/net/rpl/rpl-timers.c:420: ctimer_set(&instance->probing_timer, RPL_PROBING_DELAY_FUNC(),
      000F5A C0 07            [24] 3818 	push	ar7
      000F5C C0 06            [24] 3819 	push	ar6
      000F5E C0 05            [24] 3820 	push	ar5
      000F60 C0 04            [24] 3821 	push	ar4
      000F62 C0 03            [24] 3822 	push	ar3
      000F64 C0 02            [24] 3823 	push	ar2
      000F66 78r00            [12] 3824 	mov	r0,#_random_rand
      000F68 79s00            [12] 3825 	mov	r1,#(_random_rand >> 8)
      000F6A 7As00            [12] 3826 	mov	r2,#(_random_rand >> 16)
      000F6C 12r00r00         [24] 3827 	lcall	__sdcc_banked_call
      000F6F A8 82            [24] 3828 	mov	r0,dpl
      000F71 A9 83            [24] 3829 	mov	r1,dph
      000F73 E4               [12] 3830 	clr	a
      000F74 C0 E0            [24] 3831 	push	acc
      000F76 74 3C            [12] 3832 	mov	a,#0x3C
      000F78 C0 E0            [24] 3833 	push	acc
      000F7A 88 82            [24] 3834 	mov	dpl,r0
      000F7C 89 83            [24] 3835 	mov	dph,r1
      000F7E 12r00r00         [24] 3836 	lcall	__moduint
      000F81 A8 82            [24] 3837 	mov	r0,dpl
      000F83 A9 83            [24] 3838 	mov	r1,dph
      000F85 15 81            [12] 3839 	dec	sp
      000F87 15 81            [12] 3840 	dec	sp
      000F89 D0 02            [24] 3841 	pop	ar2
      000F8B D0 03            [24] 3842 	pop	ar3
      000F8D D0 04            [24] 3843 	pop	ar4
      000F8F D0 05            [24] 3844 	pop	ar5
      000F91 D0 06            [24] 3845 	pop	ar6
      000F93 D0 07            [24] 3846 	pop	ar7
      000F95 74 1E            [12] 3847 	mov	a,#0x1E
      000F97 29               [12] 3848 	add	a,r1
      000F98 F9               [12] 3849 	mov	r1,a
      000F99 74 95            [12] 3850 	mov	a,#0x95
      000F9B 2D               [12] 3851 	add	a,r5
      000F9C FD               [12] 3852 	mov	r5,a
      000F9D E4               [12] 3853 	clr	a
      000F9E 3E               [12] 3854 	addc	a,r6
      000F9F FE               [12] 3855 	mov	r6,a
      000FA0 C0 02            [24] 3856 	push	ar2
      000FA2 C0 03            [24] 3857 	push	ar3
      000FA4 C0 04            [24] 3858 	push	ar4
      000FA6 74r5E            [12] 3859 	mov	a,#_handle_probing_timer
      000FA8 C0 E0            [24] 3860 	push	acc
      000FAA 74s0E            [12] 3861 	mov	a,#(_handle_probing_timer >> 8)
      000FAC C0 E0            [24] 3862 	push	acc
      000FAE 74s00            [12] 3863 	mov	a,#(_handle_probing_timer >> 16)
      000FB0 C0 E0            [24] 3864 	push	acc
      000FB2 C0 00            [24] 3865 	push	ar0
      000FB4 C0 01            [24] 3866 	push	ar1
      000FB6 8D 82            [24] 3867 	mov	dpl,r5
      000FB8 8E 83            [24] 3868 	mov	dph,r6
      000FBA 8F F0            [24] 3869 	mov	b,r7
      000FBC 78r00            [12] 3870 	mov	r0,#_ctimer_set
      000FBE 79s00            [12] 3871 	mov	r1,#(_ctimer_set >> 8)
      000FC0 7As00            [12] 3872 	mov	r2,#(_ctimer_set >> 16)
      000FC2 12r00r00         [24] 3873 	lcall	__sdcc_banked_call
      000FC5 E5 81            [12] 3874 	mov	a,sp
      000FC7 24 F8            [12] 3875 	add	a,#0xf8
      000FC9 F5 81            [12] 3876 	mov	sp,a
      000FCB 02r00r00         [24] 3877 	ljmp	__sdcc_banked_ret
                                   3878 	.area CSEG    (CODE)
                                   3879 	.area CONST   (CODE)
                                   3880 	.area XINIT   (CODE)
                                   3881 	.area CABS    (ABS,CODE)
