                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.5 #9380 (Linux)
                                      4 ; This file was generated Wed Nov 18 02:57:27 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module trickle_timer
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _random_rand
                                     13 	.globl _ctimer_set
                                     14 	.globl _clock_time
                                     15 	.globl _trickle_timer_consistency
                                     16 	.globl _trickle_timer_inconsistency
                                     17 	.globl _trickle_timer_config
                                     18 	.globl _trickle_timer_set
                                     19 ;--------------------------------------------------------
                                     20 ; special function registers
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; special function bits
                                     26 ;--------------------------------------------------------
                                     27 	.area RSEG    (ABS,DATA)
      000000                         28 	.org 0x0000
                                     29 ;--------------------------------------------------------
                                     30 ; overlayable register banks
                                     31 ;--------------------------------------------------------
                                     32 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         33 	.ds 8
                                     34 ;--------------------------------------------------------
                                     35 ; internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area DSEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; overlayable items in internal ram 
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; indirectly addressable internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area ISEG    (DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; absolute internal ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area IABS    (ABS,DATA)
                                     49 	.area IABS    (ABS,DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; bit data
                                     52 ;--------------------------------------------------------
                                     53 	.area BSEG    (BIT)
                                     54 ;--------------------------------------------------------
                                     55 ; paged external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area PSEG    (PAG,XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XSEG    (XDATA)
      000000                         62 _loctt:
      000000                         63 	.ds 3
      000003                         64 _loc_clock:
      000003                         65 	.ds 2
                                     66 ;--------------------------------------------------------
                                     67 ; absolute external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XABS    (ABS,XDATA)
                                     70 ;--------------------------------------------------------
                                     71 ; external initialized ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area XISEG   (XDATA)
                                     74 	.area HOME    (CODE)
                                     75 	.area GSINIT0 (CODE)
                                     76 	.area GSINIT1 (CODE)
                                     77 	.area GSINIT2 (CODE)
                                     78 	.area GSINIT3 (CODE)
                                     79 	.area GSINIT4 (CODE)
                                     80 	.area GSINIT5 (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 	.area GSFINAL (CODE)
                                     83 	.area CSEG    (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; global & static initialisations
                                     86 ;--------------------------------------------------------
                                     87 	.area HOME    (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 	.area GSFINAL (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; Home
                                     93 ;--------------------------------------------------------
                                     94 	.area HOME    (CODE)
                                     95 	.area HOME    (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; code
                                     98 ;--------------------------------------------------------
                                     99 	.area BANK1   (CODE)
                                    100 ;------------------------------------------------------------
                                    101 ;Allocation info for local variables in function 'wide_rand'
                                    102 ;------------------------------------------------------------
                                    103 ;	/opt/contiki/core/lib/trickle-timer.c:82: wide_rand()
                                    104 ;	-----------------------------------------
                                    105 ;	 function wide_rand
                                    106 ;	-----------------------------------------
      000000                        107 _wide_rand:
                           000007   108 	ar7 = 0x07
                           000006   109 	ar6 = 0x06
                           000005   110 	ar5 = 0x05
                           000004   111 	ar4 = 0x04
                           000003   112 	ar3 = 0x03
                           000002   113 	ar2 = 0x02
                           000001   114 	ar1 = 0x01
                           000000   115 	ar0 = 0x00
                                    116 ;	/opt/contiki/core/lib/trickle-timer.c:84: return ((uint32_t)random_rand() << 16 | random_rand());
      000000 78r00            [12]  117 	mov	r0,#_random_rand
      000002 79s00            [12]  118 	mov	r1,#(_random_rand >> 8)
      000004 7As00            [12]  119 	mov	r2,#(_random_rand >> 16)
      000006 12r00r00         [24]  120 	lcall	__sdcc_banked_call
      000009 AE 82            [24]  121 	mov	r6,dpl
      00000B AF 83            [24]  122 	mov	r7,dph
      00000D 8F 04            [24]  123 	mov	ar4,r7
      00000F 8E 05            [24]  124 	mov	ar5,r6
      000011 7F 00            [12]  125 	mov	r7,#0x00
      000013 7E 00            [12]  126 	mov	r6,#0x00
      000015 C0 07            [24]  127 	push	ar7
      000017 C0 06            [24]  128 	push	ar6
      000019 C0 05            [24]  129 	push	ar5
      00001B C0 04            [24]  130 	push	ar4
      00001D 78r00            [12]  131 	mov	r0,#_random_rand
      00001F 79s00            [12]  132 	mov	r1,#(_random_rand >> 8)
      000021 7As00            [12]  133 	mov	r2,#(_random_rand >> 16)
      000023 12r00r00         [24]  134 	lcall	__sdcc_banked_call
      000026 AA 82            [24]  135 	mov	r2,dpl
      000028 AB 83            [24]  136 	mov	r3,dph
      00002A D0 04            [24]  137 	pop	ar4
      00002C D0 05            [24]  138 	pop	ar5
      00002E D0 06            [24]  139 	pop	ar6
      000030 D0 07            [24]  140 	pop	ar7
      000032 8A 00            [24]  141 	mov	ar0,r2
      000034 8B 01            [24]  142 	mov	ar1,r3
      000036 E4               [12]  143 	clr	a
      000037 FA               [12]  144 	mov	r2,a
      000038 FB               [12]  145 	mov	r3,a
      000039 E8               [12]  146 	mov	a,r0
      00003A 42 06            [12]  147 	orl	ar6,a
      00003C E9               [12]  148 	mov	a,r1
      00003D 42 07            [12]  149 	orl	ar7,a
      00003F EA               [12]  150 	mov	a,r2
      000040 42 05            [12]  151 	orl	ar5,a
      000042 EB               [12]  152 	mov	a,r3
      000043 42 04            [12]  153 	orl	ar4,a
      000045 8E 82            [24]  154 	mov	dpl,r6
      000047 8F 83            [24]  155 	mov	dph,r7
      000049 8D F0            [24]  156 	mov	b,r5
      00004B EC               [12]  157 	mov	a,r4
      00004C 02r00r00         [24]  158 	ljmp	__sdcc_banked_ret
                                    159 ;------------------------------------------------------------
                                    160 ;Allocation info for local variables in function 'max_imax'
                                    161 ;------------------------------------------------------------
                                    162 ;value                     Allocated to registers r6 r7 
                                    163 ;zeros                     Allocated to registers r5 
                                    164 ;i                         Allocated to registers r2 
                                    165 ;mask                      Allocated to stack - sp -1
                                    166 ;------------------------------------------------------------
                                    167 ;	/opt/contiki/core/lib/trickle-timer.c:98: max_imax(clock_time_t value)
                                    168 ;	-----------------------------------------
                                    169 ;	 function max_imax
                                    170 ;	-----------------------------------------
      00004F                        171 _max_imax:
      00004F 05 81            [12]  172 	inc	sp
      000051 05 81            [12]  173 	inc	sp
      000053 AE 82            [24]  174 	mov	r6,dpl
      000055 AF 83            [24]  175 	mov	r7,dph
                                    176 ;	/opt/contiki/core/lib/trickle-timer.c:100: uint8_t zeros = 0;
      000057 7D 00            [12]  177 	mov	r5,#0x00
                                    178 ;	/opt/contiki/core/lib/trickle-timer.c:103: clock_time_t mask = 0xFFFF;
      000059 A8 81            [24]  179 	mov	r0,sp
      00005B 18               [12]  180 	dec	r0
      00005C 76 FF            [12]  181 	mov	@r0,#0xFF
      00005E 08               [12]  182 	inc	r0
      00005F 76 FF            [12]  183 	mov	@r0,#0xFF
                                    184 ;	/opt/contiki/core/lib/trickle-timer.c:105: value--;
      000061 1E               [12]  185 	dec	r6
      000062 BE FF 01         [24]  186 	cjne	r6,#0xFF,00119$
      000065 1F               [12]  187 	dec	r7
      000066                        188 00119$:
                                    189 ;	/opt/contiki/core/lib/trickle-timer.c:107: for(i = sizeof(clock_time_t) << 2; i > 0; i >>= 1) {
      000066 7A 08            [12]  190 	mov	r2,#0x08
      000068                        191 00104$:
                                    192 ;	/opt/contiki/core/lib/trickle-timer.c:108: if((value & (mask <<= i)) == 0) {
      000068 C0 05            [24]  193 	push	ar5
      00006A 8A F0            [24]  194 	mov	b,r2
      00006C 05 F0            [12]  195 	inc	b
      00006E A8 81            [24]  196 	mov	r0,sp
      000070 18               [12]  197 	dec	r0
      000071 18               [12]  198 	dec	r0
      000072 86 04            [24]  199 	mov	ar4,@r0
      000074 08               [12]  200 	inc	r0
      000075 86 05            [24]  201 	mov	ar5,@r0
      000077 80 06            [24]  202 	sjmp	00121$
      000079                        203 00120$:
      000079 EC               [12]  204 	mov	a,r4
      00007A 2C               [12]  205 	add	a,r4
      00007B FC               [12]  206 	mov	r4,a
      00007C ED               [12]  207 	mov	a,r5
      00007D 33               [12]  208 	rlc	a
      00007E FD               [12]  209 	mov	r5,a
      00007F                        210 00121$:
      00007F D5 F0 F7         [24]  211 	djnz	b,00120$
      000082 A8 81            [24]  212 	mov	r0,sp
      000084 18               [12]  213 	dec	r0
      000085 18               [12]  214 	dec	r0
      000086 A6 04            [24]  215 	mov	@r0,ar4
      000088 08               [12]  216 	inc	r0
      000089 A6 05            [24]  217 	mov	@r0,ar5
      00008B EE               [12]  218 	mov	a,r6
      00008C 52 04            [12]  219 	anl	ar4,a
      00008E EF               [12]  220 	mov	a,r7
      00008F 52 05            [12]  221 	anl	ar5,a
      000091 EC               [12]  222 	mov	a,r4
      000092 4D               [12]  223 	orl	a,r5
      000093 D0 05            [24]  224 	pop	ar5
      000095 70 12            [24]  225 	jnz	00105$
                                    226 ;	/opt/contiki/core/lib/trickle-timer.c:109: zeros += i;
      000097 EA               [12]  227 	mov	a,r2
      000098 2D               [12]  228 	add	a,r5
      000099 FD               [12]  229 	mov	r5,a
                                    230 ;	/opt/contiki/core/lib/trickle-timer.c:110: value <<= i;
      00009A 8A F0            [24]  231 	mov	b,r2
      00009C 05 F0            [12]  232 	inc	b
      00009E 80 06            [24]  233 	sjmp	00124$
      0000A0                        234 00123$:
      0000A0 EE               [12]  235 	mov	a,r6
      0000A1 2E               [12]  236 	add	a,r6
      0000A2 FE               [12]  237 	mov	r6,a
      0000A3 EF               [12]  238 	mov	a,r7
      0000A4 33               [12]  239 	rlc	a
      0000A5 FF               [12]  240 	mov	r7,a
      0000A6                        241 00124$:
      0000A6 D5 F0 F7         [24]  242 	djnz	b,00123$
      0000A9                        243 00105$:
                                    244 ;	/opt/contiki/core/lib/trickle-timer.c:107: for(i = sizeof(clock_time_t) << 2; i > 0; i >>= 1) {
      0000A9 EA               [12]  245 	mov	a,r2
      0000AA C3               [12]  246 	clr	c
      0000AB 13               [12]  247 	rrc	a
      0000AC FA               [12]  248 	mov	r2,a
      0000AD 70 B9            [24]  249 	jnz	00104$
                                    250 ;	/opt/contiki/core/lib/trickle-timer.c:152: return zeros - 1; /* Always non-negative due to the range of 'value' */
      0000AF 1D               [12]  251 	dec	r5
      0000B0 8D 82            [24]  252 	mov	dpl,r5
      0000B2 15 81            [12]  253 	dec	sp
      0000B4 15 81            [12]  254 	dec	sp
      0000B6 02r00r00         [24]  255 	ljmp	__sdcc_banked_ret
                                    256 ;------------------------------------------------------------
                                    257 ;Allocation info for local variables in function 'get_t'
                                    258 ;------------------------------------------------------------
                                    259 ;i_cur                     Allocated to registers r6 r7 
                                    260 ;------------------------------------------------------------
                                    261 ;	/opt/contiki/core/lib/trickle-timer.c:158: get_t(clock_time_t i_cur)
                                    262 ;	-----------------------------------------
                                    263 ;	 function get_t
                                    264 ;	-----------------------------------------
      0000B9                        265 _get_t:
      0000B9 AE 82            [24]  266 	mov	r6,dpl
                                    267 ;	/opt/contiki/core/lib/trickle-timer.c:160: i_cur >>= 1;
      0000BB E5 83            [12]  268 	mov	a,dph
      0000BD C3               [12]  269 	clr	c
      0000BE 13               [12]  270 	rrc	a
      0000BF CE               [12]  271 	xch	a,r6
      0000C0 13               [12]  272 	rrc	a
      0000C1 CE               [12]  273 	xch	a,r6
      0000C2 FF               [12]  274 	mov	r7,a
                                    275 ;	/opt/contiki/core/lib/trickle-timer.c:165: return i_cur + (tt_rand() % i_cur);
      0000C3 C0 07            [24]  276 	push	ar7
      0000C5 C0 06            [24]  277 	push	ar6
      0000C7 78r00            [12]  278 	mov	r0,#_wide_rand
      0000C9 79s00            [12]  279 	mov	r1,#(_wide_rand >> 8)
      0000CB 7As00            [12]  280 	mov	r2,#(_wide_rand >> 16)
      0000CD 12r00r00         [24]  281 	lcall	__sdcc_banked_call
      0000D0 AA 82            [24]  282 	mov	r2,dpl
      0000D2 AB 83            [24]  283 	mov	r3,dph
      0000D4 AC F0            [24]  284 	mov	r4,b
      0000D6 FD               [12]  285 	mov	r5,a
      0000D7 D0 06            [24]  286 	pop	ar6
      0000D9 D0 07            [24]  287 	pop	ar7
      0000DB 8E 00            [24]  288 	mov	ar0,r6
      0000DD 8F 01            [24]  289 	mov	ar1,r7
      0000DF 7E 00            [12]  290 	mov	r6,#0x00
      0000E1 7F 00            [12]  291 	mov	r7,#0x00
      0000E3 C0 07            [24]  292 	push	ar7
      0000E5 C0 06            [24]  293 	push	ar6
      0000E7 C0 01            [24]  294 	push	ar1
      0000E9 C0 00            [24]  295 	push	ar0
      0000EB C0 00            [24]  296 	push	ar0
      0000ED C0 01            [24]  297 	push	ar1
      0000EF C0 06            [24]  298 	push	ar6
      0000F1 C0 07            [24]  299 	push	ar7
      0000F3 8A 82            [24]  300 	mov	dpl,r2
      0000F5 8B 83            [24]  301 	mov	dph,r3
      0000F7 8C F0            [24]  302 	mov	b,r4
      0000F9 ED               [12]  303 	mov	a,r5
      0000FA 12r00r00         [24]  304 	lcall	__modulong
      0000FD AA 82            [24]  305 	mov	r2,dpl
      0000FF AB 83            [24]  306 	mov	r3,dph
      000101 AC F0            [24]  307 	mov	r4,b
      000103 FD               [12]  308 	mov	r5,a
      000104 E5 81            [12]  309 	mov	a,sp
      000106 24 FC            [12]  310 	add	a,#0xfc
      000108 F5 81            [12]  311 	mov	sp,a
      00010A D0 00            [24]  312 	pop	ar0
      00010C D0 01            [24]  313 	pop	ar1
      00010E D0 06            [24]  314 	pop	ar6
      000110 D0 07            [24]  315 	pop	ar7
      000112 EA               [12]  316 	mov	a,r2
      000113 28               [12]  317 	add	a,r0
      000114 F8               [12]  318 	mov	r0,a
      000115 EB               [12]  319 	mov	a,r3
      000116 39               [12]  320 	addc	a,r1
      000117 F9               [12]  321 	mov	r1,a
      000118 EC               [12]  322 	mov	a,r4
      000119 3E               [12]  323 	addc	a,r6
      00011A FE               [12]  324 	mov	r6,a
      00011B ED               [12]  325 	mov	a,r5
      00011C 3F               [12]  326 	addc	a,r7
      00011D FF               [12]  327 	mov	r7,a
      00011E 88 82            [24]  328 	mov	dpl,r0
      000120 89 83            [24]  329 	mov	dph,r1
      000122 02r00r00         [24]  330 	ljmp	__sdcc_banked_ret
                                    331 ;------------------------------------------------------------
                                    332 ;Allocation info for local variables in function 'schedule_for_end'
                                    333 ;------------------------------------------------------------
                                    334 ;tt                        Allocated to stack - sp -4
                                    335 ;now                       Allocated to stack - sp -1
                                    336 ;------------------------------------------------------------
                                    337 ;	/opt/contiki/core/lib/trickle-timer.c:169: schedule_for_end(struct trickle_timer *tt)
                                    338 ;	-----------------------------------------
                                    339 ;	 function schedule_for_end
                                    340 ;	-----------------------------------------
      000125                        341 _schedule_for_end:
      000125 C0 82            [24]  342 	push	dpl
      000127 C0 83            [24]  343 	push	dph
      000129 C0 F0            [24]  344 	push	b
      00012B 05 81            [12]  345 	inc	sp
      00012D 05 81            [12]  346 	inc	sp
                                    347 ;	/opt/contiki/core/lib/trickle-timer.c:172: clock_time_t now = clock_time();
      00012F 78r00            [12]  348 	mov	r0,#_clock_time
      000131 79s00            [12]  349 	mov	r1,#(_clock_time >> 8)
      000133 7As00            [12]  350 	mov	r2,#(_clock_time >> 16)
      000135 12r00r00         [24]  351 	lcall	__sdcc_banked_call
      000138 A8 81            [24]  352 	mov	r0,sp
      00013A 18               [12]  353 	dec	r0
      00013B A6 82            [24]  354 	mov	@r0,dpl
      00013D 08               [12]  355 	inc	r0
      00013E A6 83            [24]  356 	mov	@r0,dph
                                    357 ;	/opt/contiki/core/lib/trickle-timer.c:174: loc_clock = TRICKLE_TIMER_INTERVAL_END(tt) - now;
      000140 E5 81            [12]  358 	mov	a,sp
      000142 24 FC            [12]  359 	add	a,#0xfc
      000144 F8               [12]  360 	mov	r0,a
      000145 74 04            [12]  361 	mov	a,#0x04
      000147 26               [12]  362 	add	a,@r0
      000148 FA               [12]  363 	mov	r2,a
      000149 E4               [12]  364 	clr	a
      00014A 08               [12]  365 	inc	r0
      00014B 36               [12]  366 	addc	a,@r0
      00014C FB               [12]  367 	mov	r3,a
      00014D 08               [12]  368 	inc	r0
      00014E 86 04            [24]  369 	mov	ar4,@r0
      000150 8A 82            [24]  370 	mov	dpl,r2
      000152 8B 83            [24]  371 	mov	dph,r3
      000154 8C F0            [24]  372 	mov	b,r4
      000156 12r00r00         [24]  373 	lcall	__gptrget
      000159 FA               [12]  374 	mov	r2,a
      00015A A3               [24]  375 	inc	dptr
      00015B 12r00r00         [24]  376 	lcall	__gptrget
      00015E FB               [12]  377 	mov	r3,a
      00015F E5 81            [12]  378 	mov	a,sp
      000161 24 FC            [12]  379 	add	a,#0xfc
      000163 F8               [12]  380 	mov	r0,a
      000164 74 02            [12]  381 	mov	a,#0x02
      000166 26               [12]  382 	add	a,@r0
      000167 FC               [12]  383 	mov	r4,a
      000168 E4               [12]  384 	clr	a
      000169 08               [12]  385 	inc	r0
      00016A 36               [12]  386 	addc	a,@r0
      00016B FE               [12]  387 	mov	r6,a
      00016C 08               [12]  388 	inc	r0
      00016D 86 07            [24]  389 	mov	ar7,@r0
      00016F 8C 82            [24]  390 	mov	dpl,r4
      000171 8E 83            [24]  391 	mov	dph,r6
      000173 8F F0            [24]  392 	mov	b,r7
      000175 12r00r00         [24]  393 	lcall	__gptrget
      000178 FC               [12]  394 	mov	r4,a
      000179 A3               [24]  395 	inc	dptr
      00017A 12r00r00         [24]  396 	lcall	__gptrget
      00017D FE               [12]  397 	mov	r6,a
      00017E EC               [12]  398 	mov	a,r4
      00017F 2A               [12]  399 	add	a,r2
      000180 FA               [12]  400 	mov	r2,a
      000181 EE               [12]  401 	mov	a,r6
      000182 3B               [12]  402 	addc	a,r3
      000183 FB               [12]  403 	mov	r3,a
      000184 A8 81            [24]  404 	mov	r0,sp
      000186 18               [12]  405 	dec	r0
      000187 EA               [12]  406 	mov	a,r2
      000188 C3               [12]  407 	clr	c
      000189 96               [12]  408 	subb	a,@r0
      00018A FA               [12]  409 	mov	r2,a
      00018B EB               [12]  410 	mov	a,r3
      00018C 08               [12]  411 	inc	r0
      00018D 96               [12]  412 	subb	a,@r0
      00018E FB               [12]  413 	mov	r3,a
      00018F 90r00r03         [24]  414 	mov	dptr,#_loc_clock
      000192 EA               [12]  415 	mov	a,r2
      000193 F0               [24]  416 	movx	@dptr,a
      000194 EB               [12]  417 	mov	a,r3
      000195 A3               [24]  418 	inc	dptr
      000196 F0               [24]  419 	movx	@dptr,a
                                    420 ;	/opt/contiki/core/lib/trickle-timer.c:181: if(loc_clock > (TRICKLE_TIMER_CLOCK_MAX >> 1)) {
      000197 C3               [12]  421 	clr	c
      000198 74 FF            [12]  422 	mov	a,#0xFF
      00019A 9A               [12]  423 	subb	a,r2
      00019B 74 7F            [12]  424 	mov	a,#0x7F
      00019D 9B               [12]  425 	subb	a,r3
      00019E 50 07            [24]  426 	jnc	00102$
                                    427 ;	/opt/contiki/core/lib/trickle-timer.c:182: loc_clock = 0; /* Interval ended in the past, schedule for in 0 */
      0001A0 90r00r03         [24]  428 	mov	dptr,#_loc_clock
      0001A3 E4               [12]  429 	clr	a
      0001A4 F0               [24]  430 	movx	@dptr,a
      0001A5 A3               [24]  431 	inc	dptr
      0001A6 F0               [24]  432 	movx	@dptr,a
      0001A7                        433 00102$:
                                    434 ;	/opt/contiki/core/lib/trickle-timer.c:186: ctimer_set(&tt->ct, loc_clock, double_interval, tt);
      0001A7 E5 81            [12]  435 	mov	a,sp
      0001A9 24 FC            [12]  436 	add	a,#0xfc
      0001AB F8               [12]  437 	mov	r0,a
      0001AC 86 05            [24]  438 	mov	ar5,@r0
      0001AE 08               [12]  439 	inc	r0
      0001AF 86 06            [24]  440 	mov	ar6,@r0
      0001B1 08               [12]  441 	inc	r0
      0001B2 86 07            [24]  442 	mov	ar7,@r0
      0001B4 E5 81            [12]  443 	mov	a,sp
      0001B6 24 FC            [12]  444 	add	a,#0xfc
      0001B8 F8               [12]  445 	mov	r0,a
      0001B9 74 08            [12]  446 	mov	a,#0x08
      0001BB 26               [12]  447 	add	a,@r0
      0001BC FA               [12]  448 	mov	r2,a
      0001BD E4               [12]  449 	clr	a
      0001BE 08               [12]  450 	inc	r0
      0001BF 36               [12]  451 	addc	a,@r0
      0001C0 FB               [12]  452 	mov	r3,a
      0001C1 08               [12]  453 	inc	r0
      0001C2 86 04            [24]  454 	mov	ar4,@r0
      0001C4 C0 05            [24]  455 	push	ar5
      0001C6 C0 06            [24]  456 	push	ar6
      0001C8 C0 07            [24]  457 	push	ar7
      0001CA 74rFE            [12]  458 	mov	a,#_double_interval
      0001CC C0 E0            [24]  459 	push	acc
      0001CE 74s01            [12]  460 	mov	a,#(_double_interval >> 8)
      0001D0 C0 E0            [24]  461 	push	acc
      0001D2 74s00            [12]  462 	mov	a,#(_double_interval >> 16)
      0001D4 C0 E0            [24]  463 	push	acc
      0001D6 90r00r03         [24]  464 	mov	dptr,#_loc_clock
      0001D9 E0               [24]  465 	movx	a,@dptr
      0001DA C0 E0            [24]  466 	push	acc
      0001DC A3               [24]  467 	inc	dptr
      0001DD E0               [24]  468 	movx	a,@dptr
      0001DE C0 E0            [24]  469 	push	acc
      0001E0 8A 82            [24]  470 	mov	dpl,r2
      0001E2 8B 83            [24]  471 	mov	dph,r3
      0001E4 8C F0            [24]  472 	mov	b,r4
      0001E6 78r00            [12]  473 	mov	r0,#_ctimer_set
      0001E8 79s00            [12]  474 	mov	r1,#(_ctimer_set >> 8)
      0001EA 7As00            [12]  475 	mov	r2,#(_ctimer_set >> 16)
      0001EC 12r00r00         [24]  476 	lcall	__sdcc_banked_call
      0001EF E5 81            [12]  477 	mov	a,sp
      0001F1 24 F8            [12]  478 	add	a,#0xf8
      0001F3 F5 81            [12]  479 	mov	sp,a
      0001F5 E5 81            [12]  480 	mov	a,sp
      0001F7 24 FB            [12]  481 	add	a,#0xFB
      0001F9 F5 81            [12]  482 	mov	sp,a
      0001FB 02r00r00         [24]  483 	ljmp	__sdcc_banked_ret
                                    484 ;------------------------------------------------------------
                                    485 ;Allocation info for local variables in function 'double_interval'
                                    486 ;------------------------------------------------------------
                                    487 ;ptr                       Allocated to registers r5 r6 r7 
                                    488 ;last_end                  Allocated to stack - sp -1
                                    489 ;sloc0                     Allocated to stack - sp -6
                                    490 ;sloc1                     Allocated to stack - sp -3
                                    491 ;------------------------------------------------------------
                                    492 ;	/opt/contiki/core/lib/trickle-timer.c:192: double_interval(void *ptr)
                                    493 ;	-----------------------------------------
                                    494 ;	 function double_interval
                                    495 ;	-----------------------------------------
      0001FE                        496 _double_interval:
      0001FE E5 81            [12]  497 	mov	a,sp
      000200 24 07            [12]  498 	add	a,#0x07
      000202 F5 81            [12]  499 	mov	sp,a
      000204 AD 82            [24]  500 	mov	r5,dpl
      000206 AE 83            [24]  501 	mov	r6,dph
      000208 AF F0            [24]  502 	mov	r7,b
                                    503 ;	/opt/contiki/core/lib/trickle-timer.c:197: loctt = (struct trickle_timer *)ptr;
      00020A 90r00r00         [24]  504 	mov	dptr,#_loctt
      00020D ED               [12]  505 	mov	a,r5
      00020E F0               [24]  506 	movx	@dptr,a
      00020F EE               [12]  507 	mov	a,r6
      000210 A3               [24]  508 	inc	dptr
      000211 F0               [24]  509 	movx	@dptr,a
      000212 EF               [12]  510 	mov	a,r7
      000213 A3               [24]  511 	inc	dptr
      000214 F0               [24]  512 	movx	@dptr,a
                                    513 ;	/opt/contiki/core/lib/trickle-timer.c:199: loctt->c = 0;
      000215 74 26            [12]  514 	mov	a,#0x26
      000217 2D               [12]  515 	add	a,r5
      000218 FA               [12]  516 	mov	r2,a
      000219 E4               [12]  517 	clr	a
      00021A 3E               [12]  518 	addc	a,r6
      00021B FB               [12]  519 	mov	r3,a
      00021C 8F 04            [24]  520 	mov	ar4,r7
      00021E 8A 82            [24]  521 	mov	dpl,r2
      000220 8B 83            [24]  522 	mov	dph,r3
      000222 8C F0            [24]  523 	mov	b,r4
      000224 E4               [12]  524 	clr	a
      000225 12r00r00         [24]  525 	lcall	__gptrput
                                    526 ;	/opt/contiki/core/lib/trickle-timer.c:206: last_end = TRICKLE_TIMER_INTERVAL_END(loctt);
      000228 74 04            [12]  527 	mov	a,#0x04
      00022A 2D               [12]  528 	add	a,r5
      00022B FA               [12]  529 	mov	r2,a
      00022C E4               [12]  530 	clr	a
      00022D 3E               [12]  531 	addc	a,r6
      00022E FB               [12]  532 	mov	r3,a
      00022F 8F 04            [24]  533 	mov	ar4,r7
      000231 8A 82            [24]  534 	mov	dpl,r2
      000233 8B 83            [24]  535 	mov	dph,r3
      000235 8C F0            [24]  536 	mov	b,r4
      000237 12r00r00         [24]  537 	lcall	__gptrget
      00023A FA               [12]  538 	mov	r2,a
      00023B A3               [24]  539 	inc	dptr
      00023C 12r00r00         [24]  540 	lcall	__gptrget
      00023F FB               [12]  541 	mov	r3,a
      000240 E5 81            [12]  542 	mov	a,sp
      000242 24 FA            [12]  543 	add	a,#0xfa
      000244 F8               [12]  544 	mov	r0,a
      000245 74 02            [12]  545 	mov	a,#0x02
      000247 2D               [12]  546 	add	a,r5
      000248 F6               [12]  547 	mov	@r0,a
      000249 E4               [12]  548 	clr	a
      00024A 3E               [12]  549 	addc	a,r6
      00024B 08               [12]  550 	inc	r0
      00024C F6               [12]  551 	mov	@r0,a
      00024D 08               [12]  552 	inc	r0
      00024E A6 07            [24]  553 	mov	@r0,ar7
      000250 E5 81            [12]  554 	mov	a,sp
      000252 24 FA            [12]  555 	add	a,#0xfa
      000254 F8               [12]  556 	mov	r0,a
      000255 86 82            [24]  557 	mov	dpl,@r0
      000257 08               [12]  558 	inc	r0
      000258 86 83            [24]  559 	mov	dph,@r0
      00025A 08               [12]  560 	inc	r0
      00025B 86 F0            [24]  561 	mov	b,@r0
      00025D E5 81            [12]  562 	mov	a,sp
      00025F 24 FD            [12]  563 	add	a,#0xfd
      000261 F9               [12]  564 	mov	r1,a
      000262 12r00r00         [24]  565 	lcall	__gptrget
      000265 F7               [12]  566 	mov	@r1,a
      000266 A3               [24]  567 	inc	dptr
      000267 12r00r00         [24]  568 	lcall	__gptrget
      00026A 09               [12]  569 	inc	r1
      00026B F7               [12]  570 	mov	@r1,a
      00026C E5 81            [12]  571 	mov	a,sp
      00026E 24 FD            [12]  572 	add	a,#0xfd
      000270 F8               [12]  573 	mov	r0,a
      000271 E6               [12]  574 	mov	a,@r0
      000272 2A               [12]  575 	add	a,r2
      000273 FA               [12]  576 	mov	r2,a
      000274 08               [12]  577 	inc	r0
      000275 E6               [12]  578 	mov	a,@r0
      000276 3B               [12]  579 	addc	a,r3
      000277 FB               [12]  580 	mov	r3,a
      000278 A8 81            [24]  581 	mov	r0,sp
      00027A 18               [12]  582 	dec	r0
      00027B A6 02            [24]  583 	mov	@r0,ar2
      00027D 08               [12]  584 	inc	r0
      00027E A6 03            [24]  585 	mov	@r0,ar3
                                    586 ;	/opt/contiki/core/lib/trickle-timer.c:209: if(loctt->i_cur <= TRICKLE_TIMER_INTERVAL_MAX(loctt) >> 1) {
      000280 74 06            [12]  587 	mov	a,#0x06
      000282 2D               [12]  588 	add	a,r5
      000283 FD               [12]  589 	mov	r5,a
      000284 E4               [12]  590 	clr	a
      000285 3E               [12]  591 	addc	a,r6
      000286 FE               [12]  592 	mov	r6,a
      000287 8D 82            [24]  593 	mov	dpl,r5
      000289 8E 83            [24]  594 	mov	dph,r6
      00028B 8F F0            [24]  595 	mov	b,r7
      00028D 12r00r00         [24]  596 	lcall	__gptrget
      000290 FE               [12]  597 	mov	r6,a
      000291 A3               [24]  598 	inc	dptr
      000292 12r00r00         [24]  599 	lcall	__gptrget
      000295 FF               [12]  600 	mov	r7,a
      000296 8E 02            [24]  601 	mov	ar2,r6
      000298 C3               [12]  602 	clr	c
      000299 13               [12]  603 	rrc	a
      00029A CA               [12]  604 	xch	a,r2
      00029B 13               [12]  605 	rrc	a
      00029C CA               [12]  606 	xch	a,r2
      00029D FD               [12]  607 	mov	r5,a
      00029E E5 81            [12]  608 	mov	a,sp
      0002A0 24 FD            [12]  609 	add	a,#0xfd
      0002A2 F8               [12]  610 	mov	r0,a
      0002A3 C3               [12]  611 	clr	c
      0002A4 EA               [12]  612 	mov	a,r2
      0002A5 96               [12]  613 	subb	a,@r0
      0002A6 ED               [12]  614 	mov	a,r5
      0002A7 08               [12]  615 	inc	r0
      0002A8 96               [12]  616 	subb	a,@r0
      0002A9 40 27            [24]  617 	jc	00102$
                                    618 ;	/opt/contiki/core/lib/trickle-timer.c:211: loctt->i_cur <<= 1;
      0002AB E5 81            [12]  619 	mov	a,sp
      0002AD 24 FD            [12]  620 	add	a,#0xfd
      0002AF F8               [12]  621 	mov	r0,a
      0002B0 86 02            [24]  622 	mov	ar2,@r0
      0002B2 08               [12]  623 	inc	r0
      0002B3 E6               [12]  624 	mov	a,@r0
      0002B4 CA               [12]  625 	xch	a,r2
      0002B5 25 E0            [12]  626 	add	a,acc
      0002B7 CA               [12]  627 	xch	a,r2
      0002B8 33               [12]  628 	rlc	a
      0002B9 FD               [12]  629 	mov	r5,a
      0002BA E5 81            [12]  630 	mov	a,sp
      0002BC 24 FA            [12]  631 	add	a,#0xfa
      0002BE F8               [12]  632 	mov	r0,a
      0002BF 86 82            [24]  633 	mov	dpl,@r0
      0002C1 08               [12]  634 	inc	r0
      0002C2 86 83            [24]  635 	mov	dph,@r0
      0002C4 08               [12]  636 	inc	r0
      0002C5 86 F0            [24]  637 	mov	b,@r0
      0002C7 EA               [12]  638 	mov	a,r2
      0002C8 12r00r00         [24]  639 	lcall	__gptrput
      0002CB A3               [24]  640 	inc	dptr
      0002CC ED               [12]  641 	mov	a,r5
      0002CD 12r00r00         [24]  642 	lcall	__gptrput
      0002D0 80 16            [24]  643 	sjmp	00103$
      0002D2                        644 00102$:
                                    645 ;	/opt/contiki/core/lib/trickle-timer.c:216: loctt->i_cur = TRICKLE_TIMER_INTERVAL_MAX(loctt);
      0002D2 E5 81            [12]  646 	mov	a,sp
      0002D4 24 FA            [12]  647 	add	a,#0xfa
      0002D6 F8               [12]  648 	mov	r0,a
      0002D7 86 82            [24]  649 	mov	dpl,@r0
      0002D9 08               [12]  650 	inc	r0
      0002DA 86 83            [24]  651 	mov	dph,@r0
      0002DC 08               [12]  652 	inc	r0
      0002DD 86 F0            [24]  653 	mov	b,@r0
      0002DF EE               [12]  654 	mov	a,r6
      0002E0 12r00r00         [24]  655 	lcall	__gptrput
      0002E3 A3               [24]  656 	inc	dptr
      0002E4 EF               [12]  657 	mov	a,r7
      0002E5 12r00r00         [24]  658 	lcall	__gptrput
      0002E8                        659 00103$:
                                    660 ;	/opt/contiki/core/lib/trickle-timer.c:221: loc_clock = get_t(loctt->i_cur);
      0002E8 E5 81            [12]  661 	mov	a,sp
      0002EA 24 FA            [12]  662 	add	a,#0xfa
      0002EC F8               [12]  663 	mov	r0,a
      0002ED 86 82            [24]  664 	mov	dpl,@r0
      0002EF 08               [12]  665 	inc	r0
      0002F0 86 83            [24]  666 	mov	dph,@r0
      0002F2 08               [12]  667 	inc	r0
      0002F3 86 F0            [24]  668 	mov	b,@r0
      0002F5 12r00r00         [24]  669 	lcall	__gptrget
      0002F8 FE               [12]  670 	mov	r6,a
      0002F9 A3               [24]  671 	inc	dptr
      0002FA 12r00r00         [24]  672 	lcall	__gptrget
      0002FD FF               [12]  673 	mov	r7,a
      0002FE 8E 82            [24]  674 	mov	dpl,r6
      000300 8F 83            [24]  675 	mov	dph,r7
      000302 78rB9            [12]  676 	mov	r0,#_get_t
      000304 79s00            [12]  677 	mov	r1,#(_get_t >> 8)
      000306 7As00            [12]  678 	mov	r2,#(_get_t >> 16)
      000308 12r00r00         [24]  679 	lcall	__sdcc_banked_call
      00030B AE 82            [24]  680 	mov	r6,dpl
      00030D AF 83            [24]  681 	mov	r7,dph
      00030F 90r00r03         [24]  682 	mov	dptr,#_loc_clock
      000312 EE               [12]  683 	mov	a,r6
      000313 F0               [24]  684 	movx	@dptr,a
      000314 EF               [12]  685 	mov	a,r7
      000315 A3               [24]  686 	inc	dptr
      000316 F0               [24]  687 	movx	@dptr,a
                                    688 ;	/opt/contiki/core/lib/trickle-timer.c:228: loc_clock = (last_end + loc_clock) - clock_time();
      000317 A8 81            [24]  689 	mov	r0,sp
      000319 18               [12]  690 	dec	r0
      00031A EE               [12]  691 	mov	a,r6
      00031B 26               [12]  692 	add	a,@r0
      00031C FE               [12]  693 	mov	r6,a
      00031D EF               [12]  694 	mov	a,r7
      00031E 08               [12]  695 	inc	r0
      00031F 36               [12]  696 	addc	a,@r0
      000320 FF               [12]  697 	mov	r7,a
      000321 C0 07            [24]  698 	push	ar7
      000323 C0 06            [24]  699 	push	ar6
      000325 78r00            [12]  700 	mov	r0,#_clock_time
      000327 79s00            [12]  701 	mov	r1,#(_clock_time >> 8)
      000329 7As00            [12]  702 	mov	r2,#(_clock_time >> 16)
      00032B 12r00r00         [24]  703 	lcall	__sdcc_banked_call
      00032E AA 82            [24]  704 	mov	r2,dpl
      000330 AD 83            [24]  705 	mov	r5,dph
      000332 D0 06            [24]  706 	pop	ar6
      000334 D0 07            [24]  707 	pop	ar7
      000336 EE               [12]  708 	mov	a,r6
      000337 C3               [12]  709 	clr	c
      000338 9A               [12]  710 	subb	a,r2
      000339 FE               [12]  711 	mov	r6,a
      00033A EF               [12]  712 	mov	a,r7
      00033B 9D               [12]  713 	subb	a,r5
      00033C FF               [12]  714 	mov	r7,a
      00033D 90r00r03         [24]  715 	mov	dptr,#_loc_clock
      000340 EE               [12]  716 	mov	a,r6
      000341 F0               [24]  717 	movx	@dptr,a
      000342 EF               [12]  718 	mov	a,r7
      000343 A3               [24]  719 	inc	dptr
      000344 F0               [24]  720 	movx	@dptr,a
                                    721 ;	/opt/contiki/core/lib/trickle-timer.c:231: if(loc_clock > (TRICKLE_TIMER_CLOCK_MAX >> 1)) {
      000345 C3               [12]  722 	clr	c
      000346 74 FF            [12]  723 	mov	a,#0xFF
      000348 9E               [12]  724 	subb	a,r6
      000349 74 7F            [12]  725 	mov	a,#0x7F
      00034B 9F               [12]  726 	subb	a,r7
      00034C 50 07            [24]  727 	jnc	00105$
                                    728 ;	/opt/contiki/core/lib/trickle-timer.c:233: loc_clock = 0;
      00034E 90r00r03         [24]  729 	mov	dptr,#_loc_clock
      000351 E4               [12]  730 	clr	a
      000352 F0               [24]  731 	movx	@dptr,a
      000353 A3               [24]  732 	inc	dptr
      000354 F0               [24]  733 	movx	@dptr,a
      000355                        734 00105$:
                                    735 ;	/opt/contiki/core/lib/trickle-timer.c:236: ctimer_set(&loctt->ct, loc_clock, fire, loctt);
      000355 90r00r00         [24]  736 	mov	dptr,#_loctt
      000358 E0               [24]  737 	movx	a,@dptr
      000359 FD               [12]  738 	mov	r5,a
      00035A A3               [24]  739 	inc	dptr
      00035B E0               [24]  740 	movx	a,@dptr
      00035C FE               [12]  741 	mov	r6,a
      00035D A3               [24]  742 	inc	dptr
      00035E E0               [24]  743 	movx	a,@dptr
      00035F FF               [12]  744 	mov	r7,a
      000360 8D 02            [24]  745 	mov	ar2,r5
      000362 8E 03            [24]  746 	mov	ar3,r6
      000364 8F 04            [24]  747 	mov	ar4,r7
      000366 74 08            [12]  748 	mov	a,#0x08
      000368 2D               [12]  749 	add	a,r5
      000369 FD               [12]  750 	mov	r5,a
      00036A E4               [12]  751 	clr	a
      00036B 3E               [12]  752 	addc	a,r6
      00036C FE               [12]  753 	mov	r6,a
      00036D C0 02            [24]  754 	push	ar2
      00036F C0 03            [24]  755 	push	ar3
      000371 C0 04            [24]  756 	push	ar4
      000373 74rCC            [12]  757 	mov	a,#_fire
      000375 C0 E0            [24]  758 	push	acc
      000377 74s03            [12]  759 	mov	a,#(_fire >> 8)
      000379 C0 E0            [24]  760 	push	acc
      00037B 74s00            [12]  761 	mov	a,#(_fire >> 16)
      00037D C0 E0            [24]  762 	push	acc
      00037F 90r00r03         [24]  763 	mov	dptr,#_loc_clock
      000382 E0               [24]  764 	movx	a,@dptr
      000383 C0 E0            [24]  765 	push	acc
      000385 A3               [24]  766 	inc	dptr
      000386 E0               [24]  767 	movx	a,@dptr
      000387 C0 E0            [24]  768 	push	acc
      000389 8D 82            [24]  769 	mov	dpl,r5
      00038B 8E 83            [24]  770 	mov	dph,r6
      00038D 8F F0            [24]  771 	mov	b,r7
      00038F 78r00            [12]  772 	mov	r0,#_ctimer_set
      000391 79s00            [12]  773 	mov	r1,#(_ctimer_set >> 8)
      000393 7As00            [12]  774 	mov	r2,#(_ctimer_set >> 16)
      000395 12r00r00         [24]  775 	lcall	__sdcc_banked_call
      000398 E5 81            [12]  776 	mov	a,sp
      00039A 24 F8            [12]  777 	add	a,#0xf8
      00039C F5 81            [12]  778 	mov	sp,a
                                    779 ;	/opt/contiki/core/lib/trickle-timer.c:240: loctt->i_start = last_end;
      00039E 90r00r00         [24]  780 	mov	dptr,#_loctt
      0003A1 E0               [24]  781 	movx	a,@dptr
      0003A2 FD               [12]  782 	mov	r5,a
      0003A3 A3               [24]  783 	inc	dptr
      0003A4 E0               [24]  784 	movx	a,@dptr
      0003A5 FE               [12]  785 	mov	r6,a
      0003A6 A3               [24]  786 	inc	dptr
      0003A7 E0               [24]  787 	movx	a,@dptr
      0003A8 FF               [12]  788 	mov	r7,a
      0003A9 74 04            [12]  789 	mov	a,#0x04
      0003AB 2D               [12]  790 	add	a,r5
      0003AC FD               [12]  791 	mov	r5,a
      0003AD E4               [12]  792 	clr	a
      0003AE 3E               [12]  793 	addc	a,r6
      0003AF FE               [12]  794 	mov	r6,a
      0003B0 8D 82            [24]  795 	mov	dpl,r5
      0003B2 8E 83            [24]  796 	mov	dph,r6
      0003B4 8F F0            [24]  797 	mov	b,r7
      0003B6 A8 81            [24]  798 	mov	r0,sp
      0003B8 18               [12]  799 	dec	r0
      0003B9 E6               [12]  800 	mov	a,@r0
      0003BA 12r00r00         [24]  801 	lcall	__gptrput
      0003BD A3               [24]  802 	inc	dptr
      0003BE 08               [12]  803 	inc	r0
      0003BF E6               [12]  804 	mov	a,@r0
      0003C0 12r00r00         [24]  805 	lcall	__gptrput
      0003C3 E5 81            [12]  806 	mov	a,sp
      0003C5 24 F9            [12]  807 	add	a,#0xF9
      0003C7 F5 81            [12]  808 	mov	sp,a
      0003C9 02r00r00         [24]  809 	ljmp	__sdcc_banked_ret
                                    810 ;------------------------------------------------------------
                                    811 ;Allocation info for local variables in function 'fire'
                                    812 ;------------------------------------------------------------
                                    813 ;ptr                       Allocated to registers r5 r6 r7 
                                    814 ;sloc0                     Allocated to stack - sp -5
                                    815 ;sloc1                     Allocated to stack - sp +1
                                    816 ;sloc2                     Allocated to stack - sp -2
                                    817 ;------------------------------------------------------------
                                    818 ;	/opt/contiki/core/lib/trickle-timer.c:260: fire(void *ptr)
                                    819 ;	-----------------------------------------
                                    820 ;	 function fire
                                    821 ;	-----------------------------------------
      0003CC                        822 _fire:
      0003CC E5 81            [12]  823 	mov	a,sp
      0003CE 24 06            [12]  824 	add	a,#0x06
      0003D0 F5 81            [12]  825 	mov	sp,a
      0003D2 AD 82            [24]  826 	mov	r5,dpl
      0003D4 AE 83            [24]  827 	mov	r6,dph
      0003D6 AF F0            [24]  828 	mov	r7,b
                                    829 ;	/opt/contiki/core/lib/trickle-timer.c:263: loctt = (struct trickle_timer *)ptr;
      0003D8 A8 81            [24]  830 	mov	r0,sp
      0003DA 18               [12]  831 	dec	r0
      0003DB 18               [12]  832 	dec	r0
      0003DC A6 05            [24]  833 	mov	@r0,ar5
      0003DE 08               [12]  834 	inc	r0
      0003DF A6 06            [24]  835 	mov	@r0,ar6
      0003E1 08               [12]  836 	inc	r0
      0003E2 A6 07            [24]  837 	mov	@r0,ar7
      0003E4 A8 81            [24]  838 	mov	r0,sp
      0003E6 18               [12]  839 	dec	r0
      0003E7 18               [12]  840 	dec	r0
      0003E8 90r00r00         [24]  841 	mov	dptr,#_loctt
      0003EB E6               [12]  842 	mov	a,@r0
      0003EC F0               [24]  843 	movx	@dptr,a
      0003ED 08               [12]  844 	inc	r0
      0003EE E6               [12]  845 	mov	a,@r0
      0003EF A3               [24]  846 	inc	dptr
      0003F0 F0               [24]  847 	movx	@dptr,a
      0003F1 08               [12]  848 	inc	r0
      0003F2 E6               [12]  849 	mov	a,@r0
      0003F3 A3               [24]  850 	inc	dptr
      0003F4 F0               [24]  851 	movx	@dptr,a
                                    852 ;	/opt/contiki/core/lib/trickle-timer.c:270: if(loctt->cb) {
      0003F5 A8 81            [24]  853 	mov	r0,sp
      0003F7 18               [12]  854 	dec	r0
      0003F8 18               [12]  855 	dec	r0
      0003F9 74 1E            [12]  856 	mov	a,#0x1E
      0003FB 26               [12]  857 	add	a,@r0
      0003FC FA               [12]  858 	mov	r2,a
      0003FD E4               [12]  859 	clr	a
      0003FE 08               [12]  860 	inc	r0
      0003FF 36               [12]  861 	addc	a,@r0
      000400 FB               [12]  862 	mov	r3,a
      000401 08               [12]  863 	inc	r0
      000402 86 04            [24]  864 	mov	ar4,@r0
      000404 8A 82            [24]  865 	mov	dpl,r2
      000406 8B 83            [24]  866 	mov	dph,r3
      000408 8C F0            [24]  867 	mov	b,r4
      00040A 12r00r00         [24]  868 	lcall	__gptrget
      00040D FA               [12]  869 	mov	r2,a
      00040E A3               [24]  870 	inc	dptr
      00040F 12r00r00         [24]  871 	lcall	__gptrget
      000412 FB               [12]  872 	mov	r3,a
      000413 A3               [24]  873 	inc	dptr
      000414 12r00r00         [24]  874 	lcall	__gptrget
      000417 FC               [12]  875 	mov	r4,a
      000418 EA               [12]  876 	mov	a,r2
      000419 4B               [12]  877 	orl	a,r3
      00041A 70 03            [24]  878 	jnz	00122$
      00041C 02r04rB0         [24]  879 	ljmp	00102$
      00041F                        880 00122$:
                                    881 ;	/opt/contiki/core/lib/trickle-timer.c:277: loctt->cb(loctt->cb_arg, TRICKLE_TIMER_PROTO_TX_ALLOW(loctt));
      00041F E5 81            [12]  882 	mov	a,sp
      000421 24 FB            [12]  883 	add	a,#0xfb
      000423 F8               [12]  884 	mov	r0,a
      000424 A6 02            [24]  885 	mov	@r0,ar2
      000426 08               [12]  886 	inc	r0
      000427 A6 03            [24]  887 	mov	@r0,ar3
      000429 08               [12]  888 	inc	r0
      00042A A6 04            [24]  889 	mov	@r0,ar4
      00042C A8 81            [24]  890 	mov	r0,sp
      00042E 18               [12]  891 	dec	r0
      00042F 18               [12]  892 	dec	r0
      000430 74 25            [12]  893 	mov	a,#0x25
      000432 26               [12]  894 	add	a,@r0
      000433 FF               [12]  895 	mov	r7,a
      000434 E4               [12]  896 	clr	a
      000435 08               [12]  897 	inc	r0
      000436 36               [12]  898 	addc	a,@r0
      000437 FE               [12]  899 	mov	r6,a
      000438 08               [12]  900 	inc	r0
      000439 86 05            [24]  901 	mov	ar5,@r0
      00043B 8F 82            [24]  902 	mov	dpl,r7
      00043D 8E 83            [24]  903 	mov	dph,r6
      00043F 8D F0            [24]  904 	mov	b,r5
      000441 12r00r00         [24]  905 	lcall	__gptrget
      000444 FE               [12]  906 	mov	r6,a
      000445 60 21            [24]  907 	jz	00108$
      000447 A8 81            [24]  908 	mov	r0,sp
      000449 18               [12]  909 	dec	r0
      00044A 18               [12]  910 	dec	r0
      00044B 74 26            [12]  911 	mov	a,#0x26
      00044D 26               [12]  912 	add	a,@r0
      00044E FA               [12]  913 	mov	r2,a
      00044F E4               [12]  914 	clr	a
      000450 08               [12]  915 	inc	r0
      000451 36               [12]  916 	addc	a,@r0
      000452 FB               [12]  917 	mov	r3,a
      000453 08               [12]  918 	inc	r0
      000454 86 07            [24]  919 	mov	ar7,@r0
      000456 8A 82            [24]  920 	mov	dpl,r2
      000458 8B 83            [24]  921 	mov	dph,r3
      00045A 8F F0            [24]  922 	mov	b,r7
      00045C 12r00r00         [24]  923 	lcall	__gptrget
      00045F FA               [12]  924 	mov	r2,a
      000460 C3               [12]  925 	clr	c
      000461 9E               [12]  926 	subb	a,r6
      000462 40 04            [24]  927 	jc	00108$
      000464 7F 00            [12]  928 	mov	r7,#0x00
      000466 80 02            [24]  929 	sjmp	00109$
      000468                        930 00108$:
      000468 7F 01            [12]  931 	mov	r7,#0x01
      00046A                        932 00109$:
      00046A A8 81            [24]  933 	mov	r0,sp
      00046C 18               [12]  934 	dec	r0
      00046D 18               [12]  935 	dec	r0
      00046E 74 21            [12]  936 	mov	a,#0x21
      000470 26               [12]  937 	add	a,@r0
      000471 FB               [12]  938 	mov	r3,a
      000472 E4               [12]  939 	clr	a
      000473 08               [12]  940 	inc	r0
      000474 36               [12]  941 	addc	a,@r0
      000475 FD               [12]  942 	mov	r5,a
      000476 08               [12]  943 	inc	r0
      000477 86 06            [24]  944 	mov	ar6,@r0
      000479 8B 82            [24]  945 	mov	dpl,r3
      00047B 8D 83            [24]  946 	mov	dph,r5
      00047D 8E F0            [24]  947 	mov	b,r6
      00047F 12r00r00         [24]  948 	lcall	__gptrget
      000482 FB               [12]  949 	mov	r3,a
      000483 A3               [24]  950 	inc	dptr
      000484 12r00r00         [24]  951 	lcall	__gptrget
      000487 FD               [12]  952 	mov	r5,a
      000488 A3               [24]  953 	inc	dptr
      000489 12r00r00         [24]  954 	lcall	__gptrget
      00048C FE               [12]  955 	mov	r6,a
      00048D C0 07            [24]  956 	push	ar7
      00048F E5 81            [12]  957 	mov	a,sp
      000491 24 FA            [12]  958 	add	a,#0xfa
      000493 F8               [12]  959 	mov	r0,a
      000494 E6               [12]  960 	mov	a,@r0
      000495 C0 E0            [24]  961 	push	acc
      000497 08               [12]  962 	inc	r0
      000498 E6               [12]  963 	mov	a,@r0
      000499 C0 E0            [24]  964 	push	acc
      00049B 08               [12]  965 	inc	r0
      00049C E6               [12]  966 	mov	a,@r0
      00049D C0 E0            [24]  967 	push	acc
      00049F 8B 82            [24]  968 	mov	dpl,r3
      0004A1 8D 83            [24]  969 	mov	dph,r5
      0004A3 8E F0            [24]  970 	mov	b,r6
      0004A5 D0 02            [24]  971 	pop	ar2
      0004A7 D0 01            [24]  972 	pop	ar1
      0004A9 D0 00            [24]  973 	pop	ar0
      0004AB 12r00r00         [24]  974 	lcall	__sdcc_banked_call
      0004AE 15 81            [12]  975 	dec	sp
      0004B0                        976 00102$:
                                    977 ;	/opt/contiki/core/lib/trickle-timer.c:280: if(trickle_timer_is_running(loctt)) {
      0004B0 90r00r00         [24]  978 	mov	dptr,#_loctt
      0004B3 E0               [24]  979 	movx	a,@dptr
      0004B4 FE               [12]  980 	mov	r6,a
      0004B5 A3               [24]  981 	inc	dptr
      0004B6 E0               [24]  982 	movx	a,@dptr
      0004B7 FD               [12]  983 	mov	r5,a
      0004B8 A3               [24]  984 	inc	dptr
      0004B9 E0               [24]  985 	movx	a,@dptr
      0004BA FC               [12]  986 	mov	r4,a
      0004BB 74 02            [12]  987 	mov	a,#0x02
      0004BD 2E               [12]  988 	add	a,r6
      0004BE FA               [12]  989 	mov	r2,a
      0004BF E4               [12]  990 	clr	a
      0004C0 3D               [12]  991 	addc	a,r5
      0004C1 FB               [12]  992 	mov	r3,a
      0004C2 8C 07            [24]  993 	mov	ar7,r4
      0004C4 8A 82            [24]  994 	mov	dpl,r2
      0004C6 8B 83            [24]  995 	mov	dph,r3
      0004C8 8F F0            [24]  996 	mov	b,r7
      0004CA 12r00r00         [24]  997 	lcall	__gptrget
      0004CD FA               [12]  998 	mov	r2,a
      0004CE A3               [24]  999 	inc	dptr
      0004CF 12r00r00         [24] 1000 	lcall	__gptrget
      0004D2 FB               [12] 1001 	mov	r3,a
      0004D3 4A               [12] 1002 	orl	a,r2
      0004D4 60 0F            [24] 1003 	jz	00105$
                                   1004 ;	/opt/contiki/core/lib/trickle-timer.c:281: schedule_for_end(loctt);
      0004D6 8E 82            [24] 1005 	mov	dpl,r6
      0004D8 8D 83            [24] 1006 	mov	dph,r5
      0004DA 8C F0            [24] 1007 	mov	b,r4
      0004DC 78r25            [12] 1008 	mov	r0,#_schedule_for_end
      0004DE 79s01            [12] 1009 	mov	r1,#(_schedule_for_end >> 8)
      0004E0 7As00            [12] 1010 	mov	r2,#(_schedule_for_end >> 16)
      0004E2 12r00r00         [24] 1011 	lcall	__sdcc_banked_call
      0004E5                       1012 00105$:
      0004E5 E5 81            [12] 1013 	mov	a,sp
      0004E7 24 FA            [12] 1014 	add	a,#0xFA
      0004E9 F5 81            [12] 1015 	mov	sp,a
      0004EB 02r00r00         [24] 1016 	ljmp	__sdcc_banked_ret
                                   1017 ;------------------------------------------------------------
                                   1018 ;Allocation info for local variables in function 'new_interval'
                                   1019 ;------------------------------------------------------------
                                   1020 ;tt                        Allocated to stack - sp -5
                                   1021 ;sloc0                     Allocated to stack - sp -2
                                   1022 ;------------------------------------------------------------
                                   1023 ;	/opt/contiki/core/lib/trickle-timer.c:288: new_interval(struct trickle_timer *tt)
                                   1024 ;	-----------------------------------------
                                   1025 ;	 function new_interval
                                   1026 ;	-----------------------------------------
      0004EE                       1027 _new_interval:
      0004EE C0 82            [24] 1028 	push	dpl
      0004F0 C0 83            [24] 1029 	push	dph
      0004F2 C0 F0            [24] 1030 	push	b
      0004F4 05 81            [12] 1031 	inc	sp
      0004F6 05 81            [12] 1032 	inc	sp
      0004F8 05 81            [12] 1033 	inc	sp
                                   1034 ;	/opt/contiki/core/lib/trickle-timer.c:290: tt->c = 0;
      0004FA E5 81            [12] 1035 	mov	a,sp
      0004FC 24 FB            [12] 1036 	add	a,#0xfb
      0004FE F8               [12] 1037 	mov	r0,a
      0004FF 74 26            [12] 1038 	mov	a,#0x26
      000501 26               [12] 1039 	add	a,@r0
      000502 FA               [12] 1040 	mov	r2,a
      000503 E4               [12] 1041 	clr	a
      000504 08               [12] 1042 	inc	r0
      000505 36               [12] 1043 	addc	a,@r0
      000506 FB               [12] 1044 	mov	r3,a
      000507 08               [12] 1045 	inc	r0
      000508 86 04            [24] 1046 	mov	ar4,@r0
      00050A 8A 82            [24] 1047 	mov	dpl,r2
      00050C 8B 83            [24] 1048 	mov	dph,r3
      00050E 8C F0            [24] 1049 	mov	b,r4
      000510 E4               [12] 1050 	clr	a
      000511 12r00r00         [24] 1051 	lcall	__gptrput
                                   1052 ;	/opt/contiki/core/lib/trickle-timer.c:293: loc_clock = get_t(tt->i_cur);
      000514 E5 81            [12] 1053 	mov	a,sp
      000516 24 FB            [12] 1054 	add	a,#0xfb
      000518 F8               [12] 1055 	mov	r0,a
      000519 74 02            [12] 1056 	mov	a,#0x02
      00051B 26               [12] 1057 	add	a,@r0
      00051C FA               [12] 1058 	mov	r2,a
      00051D E4               [12] 1059 	clr	a
      00051E 08               [12] 1060 	inc	r0
      00051F 36               [12] 1061 	addc	a,@r0
      000520 FB               [12] 1062 	mov	r3,a
      000521 08               [12] 1063 	inc	r0
      000522 86 04            [24] 1064 	mov	ar4,@r0
      000524 8A 82            [24] 1065 	mov	dpl,r2
      000526 8B 83            [24] 1066 	mov	dph,r3
      000528 8C F0            [24] 1067 	mov	b,r4
      00052A 12r00r00         [24] 1068 	lcall	__gptrget
      00052D FA               [12] 1069 	mov	r2,a
      00052E A3               [24] 1070 	inc	dptr
      00052F 12r00r00         [24] 1071 	lcall	__gptrget
      000532 FB               [12] 1072 	mov	r3,a
      000533 8A 82            [24] 1073 	mov	dpl,r2
      000535 8B 83            [24] 1074 	mov	dph,r3
      000537 78rB9            [12] 1075 	mov	r0,#_get_t
      000539 79s00            [12] 1076 	mov	r1,#(_get_t >> 8)
      00053B 7As00            [12] 1077 	mov	r2,#(_get_t >> 16)
      00053D 12r00r00         [24] 1078 	lcall	__sdcc_banked_call
      000540 AB 82            [24] 1079 	mov	r3,dpl
      000542 AC 83            [24] 1080 	mov	r4,dph
      000544 90r00r03         [24] 1081 	mov	dptr,#_loc_clock
      000547 EB               [12] 1082 	mov	a,r3
      000548 F0               [24] 1083 	movx	@dptr,a
      000549 EC               [12] 1084 	mov	a,r4
      00054A A3               [24] 1085 	inc	dptr
      00054B F0               [24] 1086 	movx	@dptr,a
                                   1087 ;	/opt/contiki/core/lib/trickle-timer.c:295: ctimer_set(&tt->ct, loc_clock, fire, tt);
      00054C E5 81            [12] 1088 	mov	a,sp
      00054E 24 FB            [12] 1089 	add	a,#0xfb
      000550 F8               [12] 1090 	mov	r0,a
      000551 A9 81            [24] 1091 	mov	r1,sp
      000553 19               [12] 1092 	dec	r1
      000554 19               [12] 1093 	dec	r1
      000555 E6               [12] 1094 	mov	a,@r0
      000556 F7               [12] 1095 	mov	@r1,a
      000557 08               [12] 1096 	inc	r0
      000558 09               [12] 1097 	inc	r1
      000559 E6               [12] 1098 	mov	a,@r0
      00055A F7               [12] 1099 	mov	@r1,a
      00055B 08               [12] 1100 	inc	r0
      00055C 09               [12] 1101 	inc	r1
      00055D E6               [12] 1102 	mov	a,@r0
      00055E F7               [12] 1103 	mov	@r1,a
      00055F E5 81            [12] 1104 	mov	a,sp
      000561 24 FB            [12] 1105 	add	a,#0xfb
      000563 F8               [12] 1106 	mov	r0,a
      000564 74 08            [12] 1107 	mov	a,#0x08
      000566 26               [12] 1108 	add	a,@r0
      000567 FD               [12] 1109 	mov	r5,a
      000568 E4               [12] 1110 	clr	a
      000569 08               [12] 1111 	inc	r0
      00056A 36               [12] 1112 	addc	a,@r0
      00056B FE               [12] 1113 	mov	r6,a
      00056C 08               [12] 1114 	inc	r0
      00056D 86 07            [24] 1115 	mov	ar7,@r0
      00056F A8 81            [24] 1116 	mov	r0,sp
      000571 18               [12] 1117 	dec	r0
      000572 18               [12] 1118 	dec	r0
      000573 E6               [12] 1119 	mov	a,@r0
      000574 C0 E0            [24] 1120 	push	acc
      000576 08               [12] 1121 	inc	r0
      000577 E6               [12] 1122 	mov	a,@r0
      000578 C0 E0            [24] 1123 	push	acc
      00057A 08               [12] 1124 	inc	r0
      00057B E6               [12] 1125 	mov	a,@r0
      00057C C0 E0            [24] 1126 	push	acc
      00057E 74rCC            [12] 1127 	mov	a,#_fire
      000580 C0 E0            [24] 1128 	push	acc
      000582 74s03            [12] 1129 	mov	a,#(_fire >> 8)
      000584 C0 E0            [24] 1130 	push	acc
      000586 74s00            [12] 1131 	mov	a,#(_fire >> 16)
      000588 C0 E0            [24] 1132 	push	acc
      00058A C0 03            [24] 1133 	push	ar3
      00058C C0 04            [24] 1134 	push	ar4
      00058E 8D 82            [24] 1135 	mov	dpl,r5
      000590 8E 83            [24] 1136 	mov	dph,r6
      000592 8F F0            [24] 1137 	mov	b,r7
      000594 78r00            [12] 1138 	mov	r0,#_ctimer_set
      000596 79s00            [12] 1139 	mov	r1,#(_ctimer_set >> 8)
      000598 7As00            [12] 1140 	mov	r2,#(_ctimer_set >> 16)
      00059A 12r00r00         [24] 1141 	lcall	__sdcc_banked_call
      00059D E5 81            [12] 1142 	mov	a,sp
      00059F 24 F8            [12] 1143 	add	a,#0xf8
                                   1144 ;	/opt/contiki/core/lib/trickle-timer.c:298: tt->i_start = tt->ct.etimer.timer.start;
      0005A1 F5 81            [12] 1145 	mov	sp,a
      0005A3 24 FB            [12] 1146 	add	a,#0xfb
      0005A5 F8               [12] 1147 	mov	r0,a
      0005A6 74 04            [12] 1148 	mov	a,#0x04
      0005A8 26               [12] 1149 	add	a,@r0
      0005A9 FD               [12] 1150 	mov	r5,a
      0005AA E4               [12] 1151 	clr	a
      0005AB 08               [12] 1152 	inc	r0
      0005AC 36               [12] 1153 	addc	a,@r0
      0005AD FE               [12] 1154 	mov	r6,a
      0005AE 08               [12] 1155 	inc	r0
      0005AF 86 07            [24] 1156 	mov	ar7,@r0
      0005B1 E5 81            [12] 1157 	mov	a,sp
      0005B3 24 FB            [12] 1158 	add	a,#0xfb
      0005B5 F8               [12] 1159 	mov	r0,a
      0005B6 74 08            [12] 1160 	mov	a,#0x08
      0005B8 26               [12] 1161 	add	a,@r0
      0005B9 FA               [12] 1162 	mov	r2,a
      0005BA E4               [12] 1163 	clr	a
      0005BB 08               [12] 1164 	inc	r0
      0005BC 36               [12] 1165 	addc	a,@r0
      0005BD FB               [12] 1166 	mov	r3,a
      0005BE 08               [12] 1167 	inc	r0
      0005BF 86 04            [24] 1168 	mov	ar4,@r0
      0005C1 74 03            [12] 1169 	mov	a,#0x03
      0005C3 2A               [12] 1170 	add	a,r2
      0005C4 FA               [12] 1171 	mov	r2,a
      0005C5 E4               [12] 1172 	clr	a
      0005C6 3B               [12] 1173 	addc	a,r3
      0005C7 FB               [12] 1174 	mov	r3,a
      0005C8 8A 82            [24] 1175 	mov	dpl,r2
      0005CA 8B 83            [24] 1176 	mov	dph,r3
      0005CC 8C F0            [24] 1177 	mov	b,r4
      0005CE 12r00r00         [24] 1178 	lcall	__gptrget
      0005D1 FA               [12] 1179 	mov	r2,a
      0005D2 A3               [24] 1180 	inc	dptr
      0005D3 12r00r00         [24] 1181 	lcall	__gptrget
      0005D6 FB               [12] 1182 	mov	r3,a
      0005D7 8D 82            [24] 1183 	mov	dpl,r5
      0005D9 8E 83            [24] 1184 	mov	dph,r6
      0005DB 8F F0            [24] 1185 	mov	b,r7
      0005DD EA               [12] 1186 	mov	a,r2
      0005DE 12r00r00         [24] 1187 	lcall	__gptrput
      0005E1 A3               [24] 1188 	inc	dptr
      0005E2 EB               [12] 1189 	mov	a,r3
      0005E3 12r00r00         [24] 1190 	lcall	__gptrput
      0005E6 E5 81            [12] 1191 	mov	a,sp
      0005E8 24 FA            [12] 1192 	add	a,#0xFA
      0005EA F5 81            [12] 1193 	mov	sp,a
      0005EC 02r00r00         [24] 1194 	ljmp	__sdcc_banked_ret
                                   1195 ;------------------------------------------------------------
                                   1196 ;Allocation info for local variables in function 'trickle_timer_consistency'
                                   1197 ;------------------------------------------------------------
                                   1198 ;tt                        Allocated to registers r5 r6 r7 
                                   1199 ;------------------------------------------------------------
                                   1200 ;	/opt/contiki/core/lib/trickle-timer.c:308: trickle_timer_consistency(struct trickle_timer *tt)
                                   1201 ;	-----------------------------------------
                                   1202 ;	 function trickle_timer_consistency
                                   1203 ;	-----------------------------------------
      0005EF                       1204 _trickle_timer_consistency:
      0005EF AD 82            [24] 1205 	mov	r5,dpl
      0005F1 AE 83            [24] 1206 	mov	r6,dph
      0005F3 AF F0            [24] 1207 	mov	r7,b
                                   1208 ;	/opt/contiki/core/lib/trickle-timer.c:310: if(tt->c < 0xFF) {
      0005F5 74 26            [12] 1209 	mov	a,#0x26
      0005F7 2D               [12] 1210 	add	a,r5
      0005F8 FD               [12] 1211 	mov	r5,a
      0005F9 E4               [12] 1212 	clr	a
      0005FA 3E               [12] 1213 	addc	a,r6
      0005FB FE               [12] 1214 	mov	r6,a
      0005FC 8D 82            [24] 1215 	mov	dpl,r5
      0005FE 8E 83            [24] 1216 	mov	dph,r6
      000600 8F F0            [24] 1217 	mov	b,r7
      000602 12r00r00         [24] 1218 	lcall	__gptrget
      000605 FC               [12] 1219 	mov	r4,a
      000606 BC FF 00         [24] 1220 	cjne	r4,#0xFF,00108$
      000609                       1221 00108$:
      000609 50 0B            [24] 1222 	jnc	00103$
                                   1223 ;	/opt/contiki/core/lib/trickle-timer.c:311: tt->c++;
      00060B 0C               [12] 1224 	inc	r4
      00060C 8D 82            [24] 1225 	mov	dpl,r5
      00060E 8E 83            [24] 1226 	mov	dph,r6
      000610 8F F0            [24] 1227 	mov	b,r7
      000612 EC               [12] 1228 	mov	a,r4
      000613 12r00r00         [24] 1229 	lcall	__gptrput
      000616                       1230 00103$:
      000616 02r00r00         [24] 1231 	ljmp	__sdcc_banked_ret
                                   1232 ;------------------------------------------------------------
                                   1233 ;Allocation info for local variables in function 'trickle_timer_inconsistency'
                                   1234 ;------------------------------------------------------------
                                   1235 ;tt                        Allocated to registers r5 r6 r7 
                                   1236 ;sloc0                     Allocated to stack - sp -3
                                   1237 ;sloc1                     Allocated to stack - sp -1
                                   1238 ;------------------------------------------------------------
                                   1239 ;	/opt/contiki/core/lib/trickle-timer.c:317: trickle_timer_inconsistency(struct trickle_timer *tt)
                                   1240 ;	-----------------------------------------
                                   1241 ;	 function trickle_timer_inconsistency
                                   1242 ;	-----------------------------------------
      000619                       1243 _trickle_timer_inconsistency:
      000619 E5 81            [12] 1244 	mov	a,sp
      00061B 24 04            [12] 1245 	add	a,#0x04
      00061D F5 81            [12] 1246 	mov	sp,a
      00061F AD 82            [24] 1247 	mov	r5,dpl
      000621 AE 83            [24] 1248 	mov	r6,dph
      000623 AF F0            [24] 1249 	mov	r7,b
                                   1250 ;	/opt/contiki/core/lib/trickle-timer.c:321: if(tt->i_cur != tt->i_min) {
      000625 74 02            [12] 1251 	mov	a,#0x02
      000627 2D               [12] 1252 	add	a,r5
      000628 FA               [12] 1253 	mov	r2,a
      000629 E4               [12] 1254 	clr	a
      00062A 3E               [12] 1255 	addc	a,r6
      00062B FB               [12] 1256 	mov	r3,a
      00062C 8F 04            [24] 1257 	mov	ar4,r7
      00062E 8A 82            [24] 1258 	mov	dpl,r2
      000630 8B 83            [24] 1259 	mov	dph,r3
      000632 8C F0            [24] 1260 	mov	b,r4
      000634 A8 81            [24] 1261 	mov	r0,sp
      000636 18               [12] 1262 	dec	r0
      000637 12r00r00         [24] 1263 	lcall	__gptrget
      00063A F6               [12] 1264 	mov	@r0,a
      00063B A3               [24] 1265 	inc	dptr
      00063C 12r00r00         [24] 1266 	lcall	__gptrget
      00063F 08               [12] 1267 	inc	r0
      000640 F6               [12] 1268 	mov	@r0,a
      000641 8D 82            [24] 1269 	mov	dpl,r5
      000643 8E 83            [24] 1270 	mov	dph,r6
      000645 8F F0            [24] 1271 	mov	b,r7
      000647 E5 81            [12] 1272 	mov	a,sp
      000649 24 FD            [12] 1273 	add	a,#0xfd
      00064B F8               [12] 1274 	mov	r0,a
      00064C 12r00r00         [24] 1275 	lcall	__gptrget
      00064F F6               [12] 1276 	mov	@r0,a
      000650 A3               [24] 1277 	inc	dptr
      000651 12r00r00         [24] 1278 	lcall	__gptrget
      000654 08               [12] 1279 	inc	r0
      000655 F6               [12] 1280 	mov	@r0,a
      000656 A8 81            [24] 1281 	mov	r0,sp
      000658 18               [12] 1282 	dec	r0
      000659 E5 81            [12] 1283 	mov	a,sp
      00065B 24 FD            [12] 1284 	add	a,#0xfd
      00065D F9               [12] 1285 	mov	r1,a
      00065E 86 F0            [24] 1286 	mov	b,@r0
      000660 E7               [12] 1287 	mov	a,@r1
      000661 B5 F0 0A         [24] 1288 	cjne	a,b,00108$
      000664 08               [12] 1289 	inc	r0
      000665 86 F0            [24] 1290 	mov	b,@r0
      000667 09               [12] 1291 	inc	r1
      000668 E7               [12] 1292 	mov	a,@r1
      000669 B5 F0 02         [24] 1293 	cjne	a,b,00108$
      00066C 80 24            [24] 1294 	sjmp	00103$
      00066E                       1295 00108$:
                                   1296 ;	/opt/contiki/core/lib/trickle-timer.c:323: tt->i_cur = tt->i_min;
      00066E 8A 82            [24] 1297 	mov	dpl,r2
      000670 8B 83            [24] 1298 	mov	dph,r3
      000672 8C F0            [24] 1299 	mov	b,r4
      000674 E5 81            [12] 1300 	mov	a,sp
      000676 24 FD            [12] 1301 	add	a,#0xfd
      000678 F8               [12] 1302 	mov	r0,a
      000679 E6               [12] 1303 	mov	a,@r0
      00067A 12r00r00         [24] 1304 	lcall	__gptrput
      00067D A3               [24] 1305 	inc	dptr
      00067E 08               [12] 1306 	inc	r0
      00067F E6               [12] 1307 	mov	a,@r0
      000680 12r00r00         [24] 1308 	lcall	__gptrput
                                   1309 ;	/opt/contiki/core/lib/trickle-timer.c:325: new_interval(tt);
      000683 8D 82            [24] 1310 	mov	dpl,r5
      000685 8E 83            [24] 1311 	mov	dph,r6
      000687 8F F0            [24] 1312 	mov	b,r7
      000689 78rEE            [12] 1313 	mov	r0,#_new_interval
      00068B 79s04            [12] 1314 	mov	r1,#(_new_interval >> 8)
      00068D 7As00            [12] 1315 	mov	r2,#(_new_interval >> 16)
      00068F 12r00r00         [24] 1316 	lcall	__sdcc_banked_call
      000692                       1317 00103$:
      000692 E5 81            [12] 1318 	mov	a,sp
      000694 24 FC            [12] 1319 	add	a,#0xFC
      000696 F5 81            [12] 1320 	mov	sp,a
      000698 02r00r00         [24] 1321 	ljmp	__sdcc_banked_ret
                                   1322 ;------------------------------------------------------------
                                   1323 ;Allocation info for local variables in function 'trickle_timer_config'
                                   1324 ;------------------------------------------------------------
                                   1325 ;i_min                     Allocated to stack - sp -7
                                   1326 ;i_max                     Allocated to stack - sp -8
                                   1327 ;k                         Allocated to stack - sp -9
                                   1328 ;tt                        Allocated to stack - sp -2
                                   1329 ;------------------------------------------------------------
                                   1330 ;	/opt/contiki/core/lib/trickle-timer.c:330: trickle_timer_config(struct trickle_timer *tt, clock_time_t i_min,
                                   1331 ;	-----------------------------------------
                                   1332 ;	 function trickle_timer_config
                                   1333 ;	-----------------------------------------
      00069B                       1334 _trickle_timer_config:
      00069B C0 82            [24] 1335 	push	dpl
      00069D C0 83            [24] 1336 	push	dph
      00069F C0 F0            [24] 1337 	push	b
                                   1338 ;	/opt/contiki/core/lib/trickle-timer.c:339: if(TRICKLE_TIMER_IMIN_IS_BAD(i_min)) {
      0006A1 E5 81            [12] 1339 	mov	a,sp
      0006A3 24 F9            [12] 1340 	add	a,#0xf9
      0006A5 F8               [12] 1341 	mov	r0,a
      0006A6 C3               [12] 1342 	clr	c
      0006A7 E6               [12] 1343 	mov	a,@r0
      0006A8 94 02            [12] 1344 	subb	a,#0x02
      0006AA 08               [12] 1345 	inc	r0
      0006AB E6               [12] 1346 	mov	a,@r0
      0006AC 94 00            [12] 1347 	subb	a,#0x00
      0006AE 40 0F            [24] 1348 	jc	00101$
      0006B0 E5 81            [12] 1349 	mov	a,sp
      0006B2 24 F9            [12] 1350 	add	a,#0xf9
      0006B4 F8               [12] 1351 	mov	r0,a
      0006B5 C3               [12] 1352 	clr	c
      0006B6 74 FF            [12] 1353 	mov	a,#0xFF
      0006B8 96               [12] 1354 	subb	a,@r0
      0006B9 74 7F            [12] 1355 	mov	a,#0x7F
      0006BB 08               [12] 1356 	inc	r0
      0006BC 96               [12] 1357 	subb	a,@r0
      0006BD 50 06            [24] 1358 	jnc	00102$
      0006BF                       1359 00101$:
                                   1360 ;	/opt/contiki/core/lib/trickle-timer.c:341: return TRICKLE_TIMER_ERROR;
      0006BF 75 82 00         [24] 1361 	mov	dpl,#0x00
      0006C2 02r07rCD         [24] 1362 	ljmp	00110$
      0006C5                       1363 00102$:
                                   1364 ;	/opt/contiki/core/lib/trickle-timer.c:344: if(tt == NULL || i_max == 0 || k == 0) {
      0006C5 A8 81            [24] 1365 	mov	r0,sp
      0006C7 18               [12] 1366 	dec	r0
      0006C8 18               [12] 1367 	dec	r0
      0006C9 E6               [12] 1368 	mov	a,@r0
      0006CA 08               [12] 1369 	inc	r0
      0006CB 46               [12] 1370 	orl	a,@r0
      0006CC 60 10            [24] 1371 	jz	00104$
      0006CE E5 81            [12] 1372 	mov	a,sp
      0006D0 24 F8            [12] 1373 	add	a,#0xf8
      0006D2 F8               [12] 1374 	mov	r0,a
      0006D3 E6               [12] 1375 	mov	a,@r0
      0006D4 60 08            [24] 1376 	jz	00104$
      0006D6 E5 81            [12] 1377 	mov	a,sp
      0006D8 24 F7            [12] 1378 	add	a,#0xf7
      0006DA F8               [12] 1379 	mov	r0,a
      0006DB E6               [12] 1380 	mov	a,@r0
      0006DC 70 06            [24] 1381 	jnz	00105$
      0006DE                       1382 00104$:
                                   1383 ;	/opt/contiki/core/lib/trickle-timer.c:346: return TRICKLE_TIMER_ERROR;
      0006DE 75 82 00         [24] 1384 	mov	dpl,#0x00
      0006E1 02r07rCD         [24] 1385 	ljmp	00110$
      0006E4                       1386 00105$:
                                   1387 ;	/opt/contiki/core/lib/trickle-timer.c:355: if(TRICKLE_TIMER_IPAIR_IS_BAD(i_min, i_max)) {
      0006E4 E5 81            [12] 1388 	mov	a,sp
      0006E6 24 F8            [12] 1389 	add	a,#0xf8
      0006E8 F8               [12] 1390 	mov	r0,a
      0006E9 86 03            [24] 1391 	mov	ar3,@r0
      0006EB 7C 00            [12] 1392 	mov	r4,#0x00
      0006ED 0B               [12] 1393 	inc	r3
      0006EE BB 00 01         [24] 1394 	cjne	r3,#0x00,00129$
      0006F1 0C               [12] 1395 	inc	r4
      0006F2                       1396 00129$:
      0006F2 8B F0            [24] 1397 	mov	b,r3
      0006F4 05 F0            [12] 1398 	inc	b
      0006F6 7B FF            [12] 1399 	mov	r3,#0xFF
      0006F8 7C FF            [12] 1400 	mov	r4,#0xFF
      0006FA 80 07            [24] 1401 	sjmp	00131$
      0006FC                       1402 00130$:
      0006FC C3               [12] 1403 	clr	c
      0006FD EC               [12] 1404 	mov	a,r4
      0006FE 13               [12] 1405 	rrc	a
      0006FF FC               [12] 1406 	mov	r4,a
      000700 EB               [12] 1407 	mov	a,r3
      000701 13               [12] 1408 	rrc	a
      000702 FB               [12] 1409 	mov	r3,a
      000703                       1410 00131$:
      000703 D5 F0 F6         [24] 1411 	djnz	b,00130$
      000706 E5 81            [12] 1412 	mov	a,sp
      000708 24 F9            [12] 1413 	add	a,#0xf9
      00070A F8               [12] 1414 	mov	r0,a
      00070B E6               [12] 1415 	mov	a,@r0
      00070C 24 FF            [12] 1416 	add	a,#0xFF
      00070E FA               [12] 1417 	mov	r2,a
      00070F 08               [12] 1418 	inc	r0
      000710 E6               [12] 1419 	mov	a,@r0
      000711 34 FF            [12] 1420 	addc	a,#0xFF
      000713 FF               [12] 1421 	mov	r7,a
      000714 C3               [12] 1422 	clr	c
      000715 EB               [12] 1423 	mov	a,r3
      000716 9A               [12] 1424 	subb	a,r2
      000717 EC               [12] 1425 	mov	a,r4
      000718 9F               [12] 1426 	subb	a,r7
      000719 50 1C            [24] 1427 	jnc	00109$
                                   1428 ;	/opt/contiki/core/lib/trickle-timer.c:360: i_max = max_imax(i_min);
      00071B E5 81            [12] 1429 	mov	a,sp
      00071D 24 F9            [12] 1430 	add	a,#0xf9
      00071F F8               [12] 1431 	mov	r0,a
      000720 86 82            [24] 1432 	mov	dpl,@r0
      000722 08               [12] 1433 	inc	r0
      000723 86 83            [24] 1434 	mov	dph,@r0
      000725 78r4F            [12] 1435 	mov	r0,#_max_imax
      000727 79s00            [12] 1436 	mov	r1,#(_max_imax >> 8)
      000729 7As00            [12] 1437 	mov	r2,#(_max_imax >> 16)
      00072B 12r00r00         [24] 1438 	lcall	__sdcc_banked_call
      00072E AC 82            [24] 1439 	mov	r4,dpl
      000730 E5 81            [12] 1440 	mov	a,sp
      000732 24 F8            [12] 1441 	add	a,#0xf8
      000734 F8               [12] 1442 	mov	r0,a
      000735 A6 04            [24] 1443 	mov	@r0,ar4
      000737                       1444 00109$:
                                   1445 ;	/opt/contiki/core/lib/trickle-timer.c:365: tt->i_min = i_min;
      000737 A8 81            [24] 1446 	mov	r0,sp
      000739 18               [12] 1447 	dec	r0
      00073A 18               [12] 1448 	dec	r0
      00073B 86 82            [24] 1449 	mov	dpl,@r0
      00073D 08               [12] 1450 	inc	r0
      00073E 86 83            [24] 1451 	mov	dph,@r0
      000740 08               [12] 1452 	inc	r0
      000741 86 F0            [24] 1453 	mov	b,@r0
      000743 E5 81            [12] 1454 	mov	a,sp
      000745 24 F9            [12] 1455 	add	a,#0xf9
      000747 F9               [12] 1456 	mov	r1,a
      000748 E7               [12] 1457 	mov	a,@r1
      000749 12r00r00         [24] 1458 	lcall	__gptrput
      00074C A3               [24] 1459 	inc	dptr
      00074D 09               [12] 1460 	inc	r1
      00074E E7               [12] 1461 	mov	a,@r1
      00074F 12r00r00         [24] 1462 	lcall	__gptrput
                                   1463 ;	/opt/contiki/core/lib/trickle-timer.c:366: tt->i_max = i_max;
      000752 A8 81            [24] 1464 	mov	r0,sp
      000754 18               [12] 1465 	dec	r0
      000755 18               [12] 1466 	dec	r0
      000756 74 24            [12] 1467 	mov	a,#0x24
      000758 26               [12] 1468 	add	a,@r0
      000759 FA               [12] 1469 	mov	r2,a
      00075A E4               [12] 1470 	clr	a
      00075B 08               [12] 1471 	inc	r0
      00075C 36               [12] 1472 	addc	a,@r0
      00075D FB               [12] 1473 	mov	r3,a
      00075E 08               [12] 1474 	inc	r0
      00075F 86 04            [24] 1475 	mov	ar4,@r0
      000761 8A 82            [24] 1476 	mov	dpl,r2
      000763 8B 83            [24] 1477 	mov	dph,r3
      000765 8C F0            [24] 1478 	mov	b,r4
      000767 E5 81            [12] 1479 	mov	a,sp
      000769 24 F8            [12] 1480 	add	a,#0xf8
      00076B F8               [12] 1481 	mov	r0,a
      00076C E6               [12] 1482 	mov	a,@r0
      00076D 12r00r00         [24] 1483 	lcall	__gptrput
                                   1484 ;	/opt/contiki/core/lib/trickle-timer.c:367: tt->i_max_abs = i_min << i_max;
      000770 A8 81            [24] 1485 	mov	r0,sp
      000772 18               [12] 1486 	dec	r0
      000773 18               [12] 1487 	dec	r0
      000774 74 06            [12] 1488 	mov	a,#0x06
      000776 26               [12] 1489 	add	a,@r0
      000777 FA               [12] 1490 	mov	r2,a
      000778 E4               [12] 1491 	clr	a
      000779 08               [12] 1492 	inc	r0
      00077A 36               [12] 1493 	addc	a,@r0
      00077B FB               [12] 1494 	mov	r3,a
      00077C 08               [12] 1495 	inc	r0
      00077D 86 04            [24] 1496 	mov	ar4,@r0
      00077F E5 81            [12] 1497 	mov	a,sp
      000781 24 F8            [12] 1498 	add	a,#0xf8
      000783 F8               [12] 1499 	mov	r0,a
      000784 86 F0            [24] 1500 	mov	b,@r0
      000786 05 F0            [12] 1501 	inc	b
      000788 E5 81            [12] 1502 	mov	a,sp
      00078A 24 F9            [12] 1503 	add	a,#0xf9
      00078C F8               [12] 1504 	mov	r0,a
      00078D 86 06            [24] 1505 	mov	ar6,@r0
      00078F 08               [12] 1506 	inc	r0
      000790 86 07            [24] 1507 	mov	ar7,@r0
      000792 80 06            [24] 1508 	sjmp	00134$
      000794                       1509 00133$:
      000794 EE               [12] 1510 	mov	a,r6
      000795 2E               [12] 1511 	add	a,r6
      000796 FE               [12] 1512 	mov	r6,a
      000797 EF               [12] 1513 	mov	a,r7
      000798 33               [12] 1514 	rlc	a
      000799 FF               [12] 1515 	mov	r7,a
      00079A                       1516 00134$:
      00079A D5 F0 F7         [24] 1517 	djnz	b,00133$
      00079D 8A 82            [24] 1518 	mov	dpl,r2
      00079F 8B 83            [24] 1519 	mov	dph,r3
      0007A1 8C F0            [24] 1520 	mov	b,r4
      0007A3 EE               [12] 1521 	mov	a,r6
      0007A4 12r00r00         [24] 1522 	lcall	__gptrput
      0007A7 A3               [24] 1523 	inc	dptr
      0007A8 EF               [12] 1524 	mov	a,r7
      0007A9 12r00r00         [24] 1525 	lcall	__gptrput
                                   1526 ;	/opt/contiki/core/lib/trickle-timer.c:368: tt->k = k;
      0007AC A8 81            [24] 1527 	mov	r0,sp
      0007AE 18               [12] 1528 	dec	r0
      0007AF 18               [12] 1529 	dec	r0
      0007B0 74 25            [12] 1530 	mov	a,#0x25
      0007B2 26               [12] 1531 	add	a,@r0
      0007B3 FD               [12] 1532 	mov	r5,a
      0007B4 E4               [12] 1533 	clr	a
      0007B5 08               [12] 1534 	inc	r0
      0007B6 36               [12] 1535 	addc	a,@r0
      0007B7 FE               [12] 1536 	mov	r6,a
      0007B8 08               [12] 1537 	inc	r0
      0007B9 86 07            [24] 1538 	mov	ar7,@r0
      0007BB 8D 82            [24] 1539 	mov	dpl,r5
      0007BD 8E 83            [24] 1540 	mov	dph,r6
      0007BF 8F F0            [24] 1541 	mov	b,r7
      0007C1 E5 81            [12] 1542 	mov	a,sp
      0007C3 24 F7            [12] 1543 	add	a,#0xf7
      0007C5 F8               [12] 1544 	mov	r0,a
      0007C6 E6               [12] 1545 	mov	a,@r0
      0007C7 12r00r00         [24] 1546 	lcall	__gptrput
                                   1547 ;	/opt/contiki/core/lib/trickle-timer.c:373: return TRICKLE_TIMER_SUCCESS;
      0007CA 75 82 01         [24] 1548 	mov	dpl,#0x01
      0007CD                       1549 00110$:
      0007CD 15 81            [12] 1550 	dec	sp
      0007CF 15 81            [12] 1551 	dec	sp
      0007D1 15 81            [12] 1552 	dec	sp
      0007D3 02r00r00         [24] 1553 	ljmp	__sdcc_banked_ret
                                   1554 ;------------------------------------------------------------
                                   1555 ;Allocation info for local variables in function 'trickle_timer_set'
                                   1556 ;------------------------------------------------------------
                                   1557 ;proto_cb                  Allocated to stack - sp -15
                                   1558 ;ptr                       Allocated to stack - sp -18
                                   1559 ;tt                        Allocated to stack - sp -9
                                   1560 ;sloc0                     Allocated to stack - sp -6
                                   1561 ;sloc1                     Allocated to stack - sp -6
                                   1562 ;sloc2                     Allocated to stack - sp -3
                                   1563 ;------------------------------------------------------------
                                   1564 ;	/opt/contiki/core/lib/trickle-timer.c:377: trickle_timer_set(struct trickle_timer *tt, trickle_timer_cb_t proto_cb,
                                   1565 ;	-----------------------------------------
                                   1566 ;	 function trickle_timer_set
                                   1567 ;	-----------------------------------------
      0007D6                       1568 _trickle_timer_set:
      0007D6 C0 82            [24] 1569 	push	dpl
      0007D8 C0 83            [24] 1570 	push	dph
      0007DA C0 F0            [24] 1571 	push	b
      0007DC E5 81            [12] 1572 	mov	a,sp
      0007DE 24 07            [12] 1573 	add	a,#0x07
                                   1574 ;	/opt/contiki/core/lib/trickle-timer.c:382: if(tt == NULL || proto_cb == NULL) {
      0007E0 F5 81            [12] 1575 	mov	sp,a
      0007E2 24 F7            [12] 1576 	add	a,#0xf7
      0007E4 F8               [12] 1577 	mov	r0,a
      0007E5 E6               [12] 1578 	mov	a,@r0
      0007E6 08               [12] 1579 	inc	r0
      0007E7 46               [12] 1580 	orl	a,@r0
      0007E8 60 0A            [24] 1581 	jz	00101$
      0007EA E5 81            [12] 1582 	mov	a,sp
      0007EC 24 F1            [12] 1583 	add	a,#0xf1
      0007EE F8               [12] 1584 	mov	r0,a
      0007EF E6               [12] 1585 	mov	a,@r0
      0007F0 08               [12] 1586 	inc	r0
      0007F1 46               [12] 1587 	orl	a,@r0
      0007F2 70 06            [24] 1588 	jnz	00102$
      0007F4                       1589 00101$:
                                   1590 ;	/opt/contiki/core/lib/trickle-timer.c:384: return TRICKLE_TIMER_ERROR;
      0007F4 75 82 00         [24] 1591 	mov	dpl,#0x00
      0007F7 02r09r63         [24] 1592 	ljmp	00104$
      0007FA                       1593 00102$:
                                   1594 ;	/opt/contiki/core/lib/trickle-timer.c:388: tt->cb = proto_cb;
      0007FA E5 81            [12] 1595 	mov	a,sp
      0007FC 24 F7            [12] 1596 	add	a,#0xf7
      0007FE F8               [12] 1597 	mov	r0,a
      0007FF 74 1E            [12] 1598 	mov	a,#0x1E
      000801 26               [12] 1599 	add	a,@r0
      000802 FA               [12] 1600 	mov	r2,a
      000803 E4               [12] 1601 	clr	a
      000804 08               [12] 1602 	inc	r0
      000805 36               [12] 1603 	addc	a,@r0
      000806 FB               [12] 1604 	mov	r3,a
      000807 08               [12] 1605 	inc	r0
      000808 86 04            [24] 1606 	mov	ar4,@r0
      00080A 8A 82            [24] 1607 	mov	dpl,r2
      00080C 8B 83            [24] 1608 	mov	dph,r3
      00080E 8C F0            [24] 1609 	mov	b,r4
      000810 E5 81            [12] 1610 	mov	a,sp
      000812 24 F1            [12] 1611 	add	a,#0xf1
      000814 F8               [12] 1612 	mov	r0,a
      000815 E6               [12] 1613 	mov	a,@r0
      000816 12r00r00         [24] 1614 	lcall	__gptrput
      000819 A3               [24] 1615 	inc	dptr
      00081A 08               [12] 1616 	inc	r0
      00081B E6               [12] 1617 	mov	a,@r0
      00081C 12r00r00         [24] 1618 	lcall	__gptrput
      00081F A3               [24] 1619 	inc	dptr
      000820 08               [12] 1620 	inc	r0
      000821 E6               [12] 1621 	mov	a,@r0
      000822 12r00r00         [24] 1622 	lcall	__gptrput
                                   1623 ;	/opt/contiki/core/lib/trickle-timer.c:389: tt->cb_arg = ptr;
      000825 E5 81            [12] 1624 	mov	a,sp
      000827 24 F7            [12] 1625 	add	a,#0xf7
      000829 F8               [12] 1626 	mov	r0,a
      00082A 74 21            [12] 1627 	mov	a,#0x21
      00082C 26               [12] 1628 	add	a,@r0
      00082D FA               [12] 1629 	mov	r2,a
      00082E E4               [12] 1630 	clr	a
      00082F 08               [12] 1631 	inc	r0
      000830 36               [12] 1632 	addc	a,@r0
      000831 FB               [12] 1633 	mov	r3,a
      000832 08               [12] 1634 	inc	r0
      000833 86 04            [24] 1635 	mov	ar4,@r0
      000835 8A 82            [24] 1636 	mov	dpl,r2
      000837 8B 83            [24] 1637 	mov	dph,r3
      000839 8C F0            [24] 1638 	mov	b,r4
      00083B E5 81            [12] 1639 	mov	a,sp
      00083D 24 EE            [12] 1640 	add	a,#0xee
      00083F F8               [12] 1641 	mov	r0,a
      000840 E6               [12] 1642 	mov	a,@r0
      000841 12r00r00         [24] 1643 	lcall	__gptrput
      000844 A3               [24] 1644 	inc	dptr
      000845 08               [12] 1645 	inc	r0
      000846 E6               [12] 1646 	mov	a,@r0
      000847 12r00r00         [24] 1647 	lcall	__gptrput
      00084A A3               [24] 1648 	inc	dptr
      00084B 08               [12] 1649 	inc	r0
      00084C E6               [12] 1650 	mov	a,@r0
      00084D 12r00r00         [24] 1651 	lcall	__gptrput
                                   1652 ;	/opt/contiki/core/lib/trickle-timer.c:392: tt->i_cur = tt->i_min +
      000850 E5 81            [12] 1653 	mov	a,sp
      000852 24 F7            [12] 1654 	add	a,#0xf7
      000854 F8               [12] 1655 	mov	r0,a
      000855 E5 81            [12] 1656 	mov	a,sp
      000857 24 FA            [12] 1657 	add	a,#0xfa
      000859 F9               [12] 1658 	mov	r1,a
      00085A 74 02            [12] 1659 	mov	a,#0x02
      00085C 26               [12] 1660 	add	a,@r0
      00085D F7               [12] 1661 	mov	@r1,a
      00085E E4               [12] 1662 	clr	a
      00085F 08               [12] 1663 	inc	r0
      000860 36               [12] 1664 	addc	a,@r0
      000861 09               [12] 1665 	inc	r1
      000862 F7               [12] 1666 	mov	@r1,a
      000863 08               [12] 1667 	inc	r0
      000864 09               [12] 1668 	inc	r1
      000865 E6               [12] 1669 	mov	a,@r0
      000866 F7               [12] 1670 	mov	@r1,a
      000867 E5 81            [12] 1671 	mov	a,sp
      000869 24 F7            [12] 1672 	add	a,#0xf7
      00086B F8               [12] 1673 	mov	r0,a
      00086C 86 82            [24] 1674 	mov	dpl,@r0
      00086E 08               [12] 1675 	inc	r0
      00086F 86 83            [24] 1676 	mov	dph,@r0
      000871 08               [12] 1677 	inc	r0
      000872 86 F0            [24] 1678 	mov	b,@r0
      000874 12r00r00         [24] 1679 	lcall	__gptrget
      000877 FD               [12] 1680 	mov	r5,a
      000878 A3               [24] 1681 	inc	dptr
      000879 12r00r00         [24] 1682 	lcall	__gptrget
      00087C FC               [12] 1683 	mov	r4,a
                                   1684 ;	/opt/contiki/core/lib/trickle-timer.c:393: (tt_rand() % (TRICKLE_TIMER_INTERVAL_MAX(tt) - tt->i_min + 1));
      00087D C0 05            [24] 1685 	push	ar5
      00087F C0 04            [24] 1686 	push	ar4
      000881 78r00            [12] 1687 	mov	r0,#_wide_rand
      000883 79s00            [12] 1688 	mov	r1,#(_wide_rand >> 8)
      000885 7As00            [12] 1689 	mov	r2,#(_wide_rand >> 16)
      000887 12r00r00         [24] 1690 	lcall	__sdcc_banked_call
      00088A C8               [12] 1691 	xch	a,r0
      00088B E5 81            [12] 1692 	mov	a,sp
      00088D 24 FB            [12] 1693 	add	a,#0xfb
      00088F C8               [12] 1694 	xch	a,r0
      000890 A6 82            [24] 1695 	mov	@r0,dpl
      000892 08               [12] 1696 	inc	r0
      000893 A6 83            [24] 1697 	mov	@r0,dph
      000895 08               [12] 1698 	inc	r0
      000896 A6 F0            [24] 1699 	mov	@r0,b
      000898 08               [12] 1700 	inc	r0
      000899 F6               [12] 1701 	mov	@r0,a
      00089A D0 04            [24] 1702 	pop	ar4
      00089C D0 05            [24] 1703 	pop	ar5
      00089E E5 81            [12] 1704 	mov	a,sp
      0008A0 24 F7            [12] 1705 	add	a,#0xf7
      0008A2 F8               [12] 1706 	mov	r0,a
      0008A3 74 06            [12] 1707 	mov	a,#0x06
      0008A5 26               [12] 1708 	add	a,@r0
      0008A6 FA               [12] 1709 	mov	r2,a
      0008A7 E4               [12] 1710 	clr	a
      0008A8 08               [12] 1711 	inc	r0
      0008A9 36               [12] 1712 	addc	a,@r0
      0008AA FB               [12] 1713 	mov	r3,a
      0008AB 08               [12] 1714 	inc	r0
      0008AC 86 07            [24] 1715 	mov	ar7,@r0
      0008AE 8A 82            [24] 1716 	mov	dpl,r2
      0008B0 8B 83            [24] 1717 	mov	dph,r3
      0008B2 8F F0            [24] 1718 	mov	b,r7
      0008B4 12r00r00         [24] 1719 	lcall	__gptrget
      0008B7 FA               [12] 1720 	mov	r2,a
      0008B8 A3               [24] 1721 	inc	dptr
      0008B9 12r00r00         [24] 1722 	lcall	__gptrget
      0008BC FB               [12] 1723 	mov	r3,a
      0008BD E5 81            [12] 1724 	mov	a,sp
      0008BF 24 F7            [12] 1725 	add	a,#0xf7
      0008C1 F8               [12] 1726 	mov	r0,a
      0008C2 86 82            [24] 1727 	mov	dpl,@r0
      0008C4 08               [12] 1728 	inc	r0
      0008C5 86 83            [24] 1729 	mov	dph,@r0
      0008C7 08               [12] 1730 	inc	r0
      0008C8 86 F0            [24] 1731 	mov	b,@r0
      0008CA 12r00r00         [24] 1732 	lcall	__gptrget
      0008CD FE               [12] 1733 	mov	r6,a
      0008CE A3               [24] 1734 	inc	dptr
      0008CF 12r00r00         [24] 1735 	lcall	__gptrget
      0008D2 FF               [12] 1736 	mov	r7,a
      0008D3 EA               [12] 1737 	mov	a,r2
      0008D4 C3               [12] 1738 	clr	c
      0008D5 9E               [12] 1739 	subb	a,r6
      0008D6 FA               [12] 1740 	mov	r2,a
      0008D7 EB               [12] 1741 	mov	a,r3
      0008D8 9F               [12] 1742 	subb	a,r7
      0008D9 FB               [12] 1743 	mov	r3,a
      0008DA 0A               [12] 1744 	inc	r2
      0008DB BA 00 01         [24] 1745 	cjne	r2,#0x00,00111$
      0008DE 0B               [12] 1746 	inc	r3
      0008DF                       1747 00111$:
      0008DF 7F 00            [12] 1748 	mov	r7,#0x00
      0008E1 7E 00            [12] 1749 	mov	r6,#0x00
      0008E3 C0 05            [24] 1750 	push	ar5
      0008E5 C0 04            [24] 1751 	push	ar4
      0008E7 C0 02            [24] 1752 	push	ar2
      0008E9 C0 03            [24] 1753 	push	ar3
      0008EB C0 07            [24] 1754 	push	ar7
      0008ED C0 06            [24] 1755 	push	ar6
      0008EF E5 81            [12] 1756 	mov	a,sp
      0008F1 24 F7            [12] 1757 	add	a,#0xf7
      0008F3 F8               [12] 1758 	mov	r0,a
      0008F4 86 82            [24] 1759 	mov	dpl,@r0
      0008F6 08               [12] 1760 	inc	r0
      0008F7 86 83            [24] 1761 	mov	dph,@r0
      0008F9 08               [12] 1762 	inc	r0
      0008FA 86 F0            [24] 1763 	mov	b,@r0
      0008FC 08               [12] 1764 	inc	r0
      0008FD E6               [12] 1765 	mov	a,@r0
      0008FE 12r00r00         [24] 1766 	lcall	__modulong
      000901 C8               [12] 1767 	xch	a,r0
      000902 E5 81            [12] 1768 	mov	a,sp
      000904 24 F7            [12] 1769 	add	a,#0xf7
      000906 C8               [12] 1770 	xch	a,r0
      000907 A6 82            [24] 1771 	mov	@r0,dpl
      000909 08               [12] 1772 	inc	r0
      00090A A6 83            [24] 1773 	mov	@r0,dph
      00090C 08               [12] 1774 	inc	r0
      00090D A6 F0            [24] 1775 	mov	@r0,b
      00090F 08               [12] 1776 	inc	r0
      000910 F6               [12] 1777 	mov	@r0,a
      000911 E5 81            [12] 1778 	mov	a,sp
      000913 24 FC            [12] 1779 	add	a,#0xfc
      000915 F5 81            [12] 1780 	mov	sp,a
      000917 D0 04            [24] 1781 	pop	ar4
      000919 D0 05            [24] 1782 	pop	ar5
      00091B 8D 02            [24] 1783 	mov	ar2,r5
      00091D 8C 03            [24] 1784 	mov	ar3,r4
      00091F E4               [12] 1785 	clr	a
      000920 FE               [12] 1786 	mov	r6,a
      000921 FF               [12] 1787 	mov	r7,a
      000922 E5 81            [12] 1788 	mov	a,sp
      000924 24 FD            [12] 1789 	add	a,#0xfd
      000926 F8               [12] 1790 	mov	r0,a
      000927 E6               [12] 1791 	mov	a,@r0
      000928 2A               [12] 1792 	add	a,r2
      000929 FA               [12] 1793 	mov	r2,a
      00092A 08               [12] 1794 	inc	r0
      00092B E6               [12] 1795 	mov	a,@r0
      00092C 3B               [12] 1796 	addc	a,r3
      00092D FB               [12] 1797 	mov	r3,a
      00092E 08               [12] 1798 	inc	r0
      00092F E6               [12] 1799 	mov	a,@r0
      000930 3E               [12] 1800 	addc	a,r6
      000931 08               [12] 1801 	inc	r0
      000932 E6               [12] 1802 	mov	a,@r0
      000933 3F               [12] 1803 	addc	a,r7
      000934 E5 81            [12] 1804 	mov	a,sp
      000936 24 FA            [12] 1805 	add	a,#0xfa
      000938 F8               [12] 1806 	mov	r0,a
      000939 86 82            [24] 1807 	mov	dpl,@r0
      00093B 08               [12] 1808 	inc	r0
      00093C 86 83            [24] 1809 	mov	dph,@r0
      00093E 08               [12] 1810 	inc	r0
      00093F 86 F0            [24] 1811 	mov	b,@r0
      000941 EA               [12] 1812 	mov	a,r2
      000942 12r00r00         [24] 1813 	lcall	__gptrput
      000945 A3               [24] 1814 	inc	dptr
      000946 EB               [12] 1815 	mov	a,r3
      000947 12r00r00         [24] 1816 	lcall	__gptrput
                                   1817 ;	/opt/contiki/core/lib/trickle-timer.c:399: new_interval(tt);
      00094A E5 81            [12] 1818 	mov	a,sp
      00094C 24 F7            [12] 1819 	add	a,#0xf7
      00094E F8               [12] 1820 	mov	r0,a
      00094F 86 82            [24] 1821 	mov	dpl,@r0
      000951 08               [12] 1822 	inc	r0
      000952 86 83            [24] 1823 	mov	dph,@r0
      000954 08               [12] 1824 	inc	r0
      000955 86 F0            [24] 1825 	mov	b,@r0
      000957 78rEE            [12] 1826 	mov	r0,#_new_interval
      000959 79s04            [12] 1827 	mov	r1,#(_new_interval >> 8)
      00095B 7As00            [12] 1828 	mov	r2,#(_new_interval >> 16)
      00095D 12r00r00         [24] 1829 	lcall	__sdcc_banked_call
                                   1830 ;	/opt/contiki/core/lib/trickle-timer.c:407: return TRICKLE_TIMER_SUCCESS;
      000960 75 82 01         [24] 1831 	mov	dpl,#0x01
      000963                       1832 00104$:
      000963 E5 81            [12] 1833 	mov	a,sp
      000965 24 F6            [12] 1834 	add	a,#0xF6
      000967 F5 81            [12] 1835 	mov	sp,a
      000969 02r00r00         [24] 1836 	ljmp	__sdcc_banked_ret
                                   1837 	.area CSEG    (CODE)
                                   1838 	.area CONST   (CODE)
                                   1839 	.area XINIT   (CODE)
                                   1840 	.area CABS    (ABS,CODE)
