                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.5 #9380 (Linux)
                                      4 ; This file was generated Wed Nov 18 02:57:36 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module queuebuf
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _packetbuf_attr_copyfrom
                                     13 	.globl _packetbuf_attr_copyto
                                     14 	.globl _packetbuf_copyto
                                     15 	.globl _packetbuf_copyfrom
                                     16 	.globl _memb_numfree
                                     17 	.globl _memb_inmemb
                                     18 	.globl _memb_free
                                     19 	.globl _memb_alloc
                                     20 	.globl _memb_init
                                     21 	.globl _ACTIVE
                                     22 	.globl _TX_BYTE
                                     23 	.globl _RX_BYTE
                                     24 	.globl _ERR
                                     25 	.globl _FE
                                     26 	.globl _SLAVE
                                     27 	.globl _RE
                                     28 	.globl _MODE
                                     29 	.globl _T3OVFIF
                                     30 	.globl _T3CH0IF
                                     31 	.globl _T3CH1IF
                                     32 	.globl _T4OVFIF
                                     33 	.globl _T4CH0IF
                                     34 	.globl _T4CH1IF
                                     35 	.globl _OVFIM
                                     36 	.globl _B_0
                                     37 	.globl _B_1
                                     38 	.globl _B_2
                                     39 	.globl _B_3
                                     40 	.globl _B_4
                                     41 	.globl _B_5
                                     42 	.globl _B_6
                                     43 	.globl _B_7
                                     44 	.globl _P2IF
                                     45 	.globl _UTX0IF
                                     46 	.globl _UTX1IF
                                     47 	.globl _P1IF
                                     48 	.globl _WDTIF
                                     49 	.globl _ACC_0
                                     50 	.globl _ACC_1
                                     51 	.globl _ACC_2
                                     52 	.globl _ACC_3
                                     53 	.globl _ACC_4
                                     54 	.globl _ACC_5
                                     55 	.globl _ACC_6
                                     56 	.globl _ACC_7
                                     57 	.globl _P
                                     58 	.globl _F1
                                     59 	.globl _OV
                                     60 	.globl _RS0
                                     61 	.globl _RS1
                                     62 	.globl _F0
                                     63 	.globl _AC
                                     64 	.globl _CY
                                     65 	.globl _DMAIF
                                     66 	.globl _T1IF
                                     67 	.globl _T2IF
                                     68 	.globl _T3IF
                                     69 	.globl _T4IF
                                     70 	.globl _P0IF
                                     71 	.globl _STIF
                                     72 	.globl _DMAIE
                                     73 	.globl _T1IE
                                     74 	.globl _T2IE
                                     75 	.globl _T3IE
                                     76 	.globl _T4IE
                                     77 	.globl _P0IE
                                     78 	.globl _RFERRIE
                                     79 	.globl _ADCIE
                                     80 	.globl _URX0IE
                                     81 	.globl _URX1IE
                                     82 	.globl _ENCIE
                                     83 	.globl _STIE
                                     84 	.globl _EA
                                     85 	.globl _P2_0
                                     86 	.globl _P2_1
                                     87 	.globl _P2_2
                                     88 	.globl _P2_3
                                     89 	.globl _P2_4
                                     90 	.globl _P2_5
                                     91 	.globl _P2_6
                                     92 	.globl _P2_7
                                     93 	.globl _ENCIF_0
                                     94 	.globl _ENCIF_1
                                     95 	.globl _P1_0
                                     96 	.globl _P1_1
                                     97 	.globl _P1_2
                                     98 	.globl _P1_3
                                     99 	.globl _P1_4
                                    100 	.globl _P1_5
                                    101 	.globl _P1_6
                                    102 	.globl _P1_7
                                    103 	.globl _IT0
                                    104 	.globl _RFERRIF
                                    105 	.globl _IT1
                                    106 	.globl _URX0IF
                                    107 	.globl _ADCIF
                                    108 	.globl _URX1IF
                                    109 	.globl _P0_0
                                    110 	.globl _P0_1
                                    111 	.globl _P0_2
                                    112 	.globl _P0_3
                                    113 	.globl _P0_4
                                    114 	.globl _P0_5
                                    115 	.globl _P0_6
                                    116 	.globl _P0_7
                                    117 	.globl _WDCTL
                                    118 	.globl _U1GCR
                                    119 	.globl _U1UCR
                                    120 	.globl _U1BAUD
                                    121 	.globl _U1DBUF
                                    122 	.globl _U1CSR
                                    123 	.globl _U0GCR
                                    124 	.globl _U0UCR
                                    125 	.globl _U0BAUD
                                    126 	.globl _U0DBUF
                                    127 	.globl _U0CSR
                                    128 	.globl _TIMIF
                                    129 	.globl _T4CC1
                                    130 	.globl _T4CCTL1
                                    131 	.globl _T4CC0
                                    132 	.globl _T4CCTL0
                                    133 	.globl _T4CTL
                                    134 	.globl _T4CNT
                                    135 	.globl _T3CC1
                                    136 	.globl _T3CCTL1
                                    137 	.globl _T3CC0
                                    138 	.globl _T3CCTL0
                                    139 	.globl _T3CTL
                                    140 	.globl _T3CNT
                                    141 	.globl _T2MSEL
                                    142 	.globl _T2IRQM
                                    143 	.globl _T2MOVF2
                                    144 	.globl _T2MOVF1
                                    145 	.globl _T2MOVF0
                                    146 	.globl _T2M1
                                    147 	.globl _T2M0
                                    148 	.globl _T2IRQF
                                    149 	.globl _T2EVTCFG
                                    150 	.globl _T2CTRL
                                    151 	.globl _T1STAT
                                    152 	.globl _T1CCTL2
                                    153 	.globl _T1CCTL1
                                    154 	.globl _T1CCTL0
                                    155 	.globl _T1CTL
                                    156 	.globl _T1CNTH
                                    157 	.globl _T1CNTL
                                    158 	.globl _T1CC2H
                                    159 	.globl _T1CC2L
                                    160 	.globl _T1CC1H
                                    161 	.globl _T1CC1L
                                    162 	.globl _T1CC0H
                                    163 	.globl _T1CC0L
                                    164 	.globl _CLKCONSTA
                                    165 	.globl _CLKCONCMD
                                    166 	.globl _SLEEPSTA
                                    167 	.globl _SLEEPCMD
                                    168 	.globl _STLOAD
                                    169 	.globl _ST2
                                    170 	.globl _ST1
                                    171 	.globl _ST0
                                    172 	.globl _RFERRF
                                    173 	.globl _RFIRQF0
                                    174 	.globl _RFST
                                    175 	.globl _RFD
                                    176 	.globl _RFIRQF1
                                    177 	.globl _PSBANK
                                    178 	.globl _FMAP
                                    179 	.globl _MEMCTR
                                    180 	.globl __XPAGE
                                    181 	.globl _MPAGE
                                    182 	.globl _PMUX
                                    183 	.globl _P2DIR
                                    184 	.globl _P1DIR
                                    185 	.globl _P0DIR
                                    186 	.globl _P2INP
                                    187 	.globl _P1INP
                                    188 	.globl _P2SEL
                                    189 	.globl _P1SEL
                                    190 	.globl _P0SEL
                                    191 	.globl _APCFG
                                    192 	.globl _PERCFG
                                    193 	.globl _P0INP
                                    194 	.globl _P2IEN
                                    195 	.globl _P1IEN
                                    196 	.globl _P0IEN
                                    197 	.globl _PICTL
                                    198 	.globl _P2IFG
                                    199 	.globl _P1IFG
                                    200 	.globl _P0IFG
                                    201 	.globl _DMAREQ
                                    202 	.globl _DMAARM
                                    203 	.globl _DMA0CFGH
                                    204 	.globl _DMA0CFGL
                                    205 	.globl _DMA1CFGH
                                    206 	.globl _DMA1CFGL
                                    207 	.globl _DMAIRQ
                                    208 	.globl _ENCCS
                                    209 	.globl _ENCDO
                                    210 	.globl _ENCDI
                                    211 	.globl _RNDH
                                    212 	.globl _RNDL
                                    213 	.globl _ADCH
                                    214 	.globl _ADCL
                                    215 	.globl _ADCCON3
                                    216 	.globl _ADCCON2
                                    217 	.globl _ADCCON1
                                    218 	.globl _B
                                    219 	.globl _IRCON2
                                    220 	.globl _ACC
                                    221 	.globl _PSW
                                    222 	.globl _IRCON
                                    223 	.globl _IP1
                                    224 	.globl _IEN1
                                    225 	.globl _IP0
                                    226 	.globl _IEN0
                                    227 	.globl _P2
                                    228 	.globl _S1CON
                                    229 	.globl _IEN2
                                    230 	.globl _S0CON
                                    231 	.globl _DPS
                                    232 	.globl _P1
                                    233 	.globl _TCON
                                    234 	.globl _PCON
                                    235 	.globl _DPH1
                                    236 	.globl _DPL1
                                    237 	.globl _DPH0
                                    238 	.globl _DPL0
                                    239 	.globl _SP
                                    240 	.globl _P0
                                    241 	.globl _X_IEEE_ADDR
                                    242 	.globl _X_INFOPAGE
                                    243 	.globl _X_P2DIR
                                    244 	.globl _X_P1DIR
                                    245 	.globl _X_P0DIR
                                    246 	.globl _X_U1GCR
                                    247 	.globl _X_U1UCR
                                    248 	.globl _X_U1BAUD
                                    249 	.globl _X_U1DBUF
                                    250 	.globl _X_U1CSR
                                    251 	.globl _X_P2INP
                                    252 	.globl _X_P1INP
                                    253 	.globl _X_P2SEL
                                    254 	.globl _X_P1SEL
                                    255 	.globl _X_P0SEL
                                    256 	.globl _X_APCFG
                                    257 	.globl _X_PERCFG
                                    258 	.globl _X_T4CC1
                                    259 	.globl _X_T4CCTL1
                                    260 	.globl _X_T4CC0
                                    261 	.globl _X_T4CCTL0
                                    262 	.globl _X_T4CTL
                                    263 	.globl _X_T4CNT
                                    264 	.globl _X_RFIRQF0
                                    265 	.globl _X_T1CCTL2
                                    266 	.globl _X_T1CCTL1
                                    267 	.globl _X_T1CCTL0
                                    268 	.globl _X_T1CTL
                                    269 	.globl _X_T1CNTH
                                    270 	.globl _X_T1CNTL
                                    271 	.globl _X_RFST
                                    272 	.globl _X_T1CC2H
                                    273 	.globl _X_T1CC2L
                                    274 	.globl _X_T1CC1H
                                    275 	.globl _X_T1CC1L
                                    276 	.globl _X_T1CC0H
                                    277 	.globl _X_T1CC0L
                                    278 	.globl _X_RFD
                                    279 	.globl _X_TIMIF
                                    280 	.globl _X_DMAREQ
                                    281 	.globl _X_DMAARM
                                    282 	.globl _X_DMA0CFGH
                                    283 	.globl _X_DMA0CFGL
                                    284 	.globl _X_DMA1CFGH
                                    285 	.globl _X_DMA1CFGL
                                    286 	.globl _X_DMAIRQ
                                    287 	.globl _X_T3CC1
                                    288 	.globl _X_T3CCTL1
                                    289 	.globl _X_T3CC0
                                    290 	.globl _X_T3CCTL0
                                    291 	.globl _X_T3CTL
                                    292 	.globl _X_T3CNT
                                    293 	.globl _X_WDCTL
                                    294 	.globl _X_MEMCTR
                                    295 	.globl _X_CLKCONCMD
                                    296 	.globl _X_U0GCR
                                    297 	.globl _X_U0UCR
                                    298 	.globl _X_T2MSEL
                                    299 	.globl _X_U0BAUD
                                    300 	.globl _X_U0DBUF
                                    301 	.globl _X_RFERRF
                                    302 	.globl _X_SLEEPCMD
                                    303 	.globl _X_RNDH
                                    304 	.globl _X_RNDL
                                    305 	.globl _X_ADCH
                                    306 	.globl _X_ADCL
                                    307 	.globl _X_ADCCON3
                                    308 	.globl _X_ADCCON2
                                    309 	.globl _X_ADCCON1
                                    310 	.globl _X_ENCCS
                                    311 	.globl _X_ENCDO
                                    312 	.globl _X_ENCDI
                                    313 	.globl _X_T1STAT
                                    314 	.globl _X_PMUX
                                    315 	.globl _X_STLOAD
                                    316 	.globl _X_P2IEN
                                    317 	.globl _X_P0IEN
                                    318 	.globl _X_T2IRQM
                                    319 	.globl _X_T2MOVF2
                                    320 	.globl _X_T2MOVF1
                                    321 	.globl _X_T2MOVF0
                                    322 	.globl _X_T2M1
                                    323 	.globl _X_T2M0
                                    324 	.globl _X_T2IRQF
                                    325 	.globl _X_P2
                                    326 	.globl _X_PSBANK
                                    327 	.globl _X_FMAP
                                    328 	.globl _X_CLKCONSTA
                                    329 	.globl _X_SLEEPSTA
                                    330 	.globl _X_T2EVTCFG
                                    331 	.globl _X_ST2
                                    332 	.globl _X_ST1
                                    333 	.globl _X_ST0
                                    334 	.globl _X_T2CTRL
                                    335 	.globl _X__XPAGE
                                    336 	.globl _X_MPAGE
                                    337 	.globl _X_RFIRQF1
                                    338 	.globl _X_P1
                                    339 	.globl _X_P0INP
                                    340 	.globl _X_P1IEN
                                    341 	.globl _X_PICTL
                                    342 	.globl _X_P2IFG
                                    343 	.globl _X_P1IFG
                                    344 	.globl _X_P0IFG
                                    345 	.globl _X_U0CSR
                                    346 	.globl _X_P0
                                    347 	.globl _USBF5
                                    348 	.globl _USBF4
                                    349 	.globl _USBF3
                                    350 	.globl _USBF2
                                    351 	.globl _USBF1
                                    352 	.globl _USBF0
                                    353 	.globl _USBCNTH
                                    354 	.globl _USBCNTL
                                    355 	.globl _USBCNT0
                                    356 	.globl _USBCSOH
                                    357 	.globl _USBCSOL
                                    358 	.globl _USBMAXO
                                    359 	.globl _USBCSIH
                                    360 	.globl _USBCSIL
                                    361 	.globl _USBCS0
                                    362 	.globl _USBMAXI
                                    363 	.globl _USBCTRL
                                    364 	.globl _USBINDEX
                                    365 	.globl _USBFRMH
                                    366 	.globl _USBFRML
                                    367 	.globl _USBCIE
                                    368 	.globl _USBOIE
                                    369 	.globl _USBIIE
                                    370 	.globl _USBCIF
                                    371 	.globl _USBOIF
                                    372 	.globl _USBIIF
                                    373 	.globl _USBPOW
                                    374 	.globl _USBADDR
                                    375 	.globl _CSPT
                                    376 	.globl _CSPZ
                                    377 	.globl _CSPY
                                    378 	.globl _CSPX
                                    379 	.globl _CSPSTAT
                                    380 	.globl _CSPCTRL
                                    381 	.globl _CSPPROG23
                                    382 	.globl _CSPPROG22
                                    383 	.globl _CSPPROG21
                                    384 	.globl _CSPPROG20
                                    385 	.globl _CSPPROG19
                                    386 	.globl _CSPPROG18
                                    387 	.globl _CSPPROG17
                                    388 	.globl _CSPPROG16
                                    389 	.globl _CSPPROG15
                                    390 	.globl _CSPPROG14
                                    391 	.globl _CSPPROG13
                                    392 	.globl _CSPPROG12
                                    393 	.globl _CSPPROG11
                                    394 	.globl _CSPPROG10
                                    395 	.globl _CSPPROG9
                                    396 	.globl _CSPPROG8
                                    397 	.globl _CSPPROG7
                                    398 	.globl _CSPPROG6
                                    399 	.globl _CSPPROG5
                                    400 	.globl _CSPPROG4
                                    401 	.globl _CSPPROG3
                                    402 	.globl _CSPPROG2
                                    403 	.globl _CSPPROG1
                                    404 	.globl _CSPPROG0
                                    405 	.globl _RFC_OBS_CTRL2
                                    406 	.globl _RFC_OBS_CTRL1
                                    407 	.globl _RFC_OBS_CTRL0
                                    408 	.globl _TXFILTCFG
                                    409 	.globl _PTEST1
                                    410 	.globl _PTEST0
                                    411 	.globl _ATEST
                                    412 	.globl _DACTEST2
                                    413 	.globl _DACTEST1
                                    414 	.globl _DACTEST0
                                    415 	.globl _MDMTEST1
                                    416 	.globl _MDMTEST0
                                    417 	.globl _ADCTEST2
                                    418 	.globl _ADCTEST1
                                    419 	.globl _ADCTEST0
                                    420 	.globl _AGCCTRL3
                                    421 	.globl _AGCCTRL2
                                    422 	.globl _AGCCTRL1
                                    423 	.globl _AGCCTRL0
                                    424 	.globl _FSCAL3
                                    425 	.globl _FSCAL2
                                    426 	.globl _FSCAL1
                                    427 	.globl _FSCAL0
                                    428 	.globl _FSCTRL
                                    429 	.globl _RXCTRL
                                    430 	.globl _FREQEST
                                    431 	.globl _MDMCTRL1
                                    432 	.globl _MDMCTRL0
                                    433 	.globl _RFRND
                                    434 	.globl _RFERRM
                                    435 	.globl _RFIRQM1
                                    436 	.globl _RFIRQM0
                                    437 	.globl _TXLAST_PTR
                                    438 	.globl _TXFIRST_PTR
                                    439 	.globl _RXP1_PTR
                                    440 	.globl _RXLAST_PTR
                                    441 	.globl _RXFIRST_PTR
                                    442 	.globl _TXFIFOCNT
                                    443 	.globl _RXFIFOCNT
                                    444 	.globl _RXFIRST
                                    445 	.globl _RSSISTAT
                                    446 	.globl _RSSI
                                    447 	.globl _CCACTRL1
                                    448 	.globl _CCACTRL0
                                    449 	.globl _FSMCTRL
                                    450 	.globl _FIFOPCTRL
                                    451 	.globl _FSMSTAT1
                                    452 	.globl _FSMSTAT0
                                    453 	.globl _TXCTRL
                                    454 	.globl _TXPOWER
                                    455 	.globl _FREQCTRL
                                    456 	.globl _FREQTUNE
                                    457 	.globl _RXMASKCLR
                                    458 	.globl _RXMASKSET
                                    459 	.globl _RXENABLE
                                    460 	.globl _FRMCTRL1
                                    461 	.globl _FRMCTRL0
                                    462 	.globl _SRCEXTEN2
                                    463 	.globl _SRCEXTEN1
                                    464 	.globl _SRCEXTEN0
                                    465 	.globl _SRCSHORTEN2
                                    466 	.globl _SRCSHORTEN1
                                    467 	.globl _SRCSHORTEN0
                                    468 	.globl _SRCMATCH
                                    469 	.globl _FRMFILT1
                                    470 	.globl _FRMFILT0
                                    471 	.globl _SHORT_ADDR1
                                    472 	.globl _SHORT_ADDR0
                                    473 	.globl _PAN_ID1
                                    474 	.globl _PAN_ID0
                                    475 	.globl _EXT_ADDR7
                                    476 	.globl _EXT_ADDR6
                                    477 	.globl _EXT_ADDR5
                                    478 	.globl _EXT_ADDR4
                                    479 	.globl _EXT_ADDR3
                                    480 	.globl _EXT_ADDR2
                                    481 	.globl _EXT_ADDR1
                                    482 	.globl _EXT_ADDR0
                                    483 	.globl _SRCSHORTPENDEN2
                                    484 	.globl _SRCSHORTPENDEN1
                                    485 	.globl _SRCSHORTPENDEN0
                                    486 	.globl _SRCEXTPENDEN2
                                    487 	.globl _SRCEXTPENDEN1
                                    488 	.globl _SRCEXTPENDEN0
                                    489 	.globl _SRCRESINDEX
                                    490 	.globl _SRCRESMASK2
                                    491 	.globl _SRCRESMASK1
                                    492 	.globl _SRCRESMASK0
                                    493 	.globl _SRC_ADDR_TABLE
                                    494 	.globl _TXFIFO
                                    495 	.globl _RXFIFO
                                    496 	.globl _RFCORE_RAM
                                    497 	.globl _CMPCTL
                                    498 	.globl _OPAMPS
                                    499 	.globl _OPAMPC
                                    500 	.globl _STCV2
                                    501 	.globl _STCV1
                                    502 	.globl _STCV0
                                    503 	.globl _STCS
                                    504 	.globl _STCC
                                    505 	.globl _T1CC4H
                                    506 	.globl _T1CC4L
                                    507 	.globl _T1CC3H
                                    508 	.globl _T1CC3L
                                    509 	.globl _XX_T1CC2H
                                    510 	.globl _XX_T1CC2L
                                    511 	.globl _XX_T1CC1H
                                    512 	.globl _XX_T1CC1L
                                    513 	.globl _XX_T1CC0H
                                    514 	.globl _XX_T1CC0L
                                    515 	.globl _T1CCTL4
                                    516 	.globl _T1CCTL3
                                    517 	.globl _XX_T1CCTL2
                                    518 	.globl _XX_T1CCTL1
                                    519 	.globl _XX_T1CCTL0
                                    520 	.globl _CLD
                                    521 	.globl _IRCTL
                                    522 	.globl _CHIPINFO1
                                    523 	.globl _CHIPINFO0
                                    524 	.globl _FWDATA
                                    525 	.globl _FADDRH
                                    526 	.globl _FADDRL
                                    527 	.globl _FCTL
                                    528 	.globl _IVCTRL
                                    529 	.globl _BATTMON
                                    530 	.globl _SRCRC
                                    531 	.globl _DBGDATA
                                    532 	.globl _TESTREG0
                                    533 	.globl _CHIPID
                                    534 	.globl _CHVER
                                    535 	.globl _OBSSEL5
                                    536 	.globl _OBSSEL4
                                    537 	.globl _OBSSEL3
                                    538 	.globl _OBSSEL2
                                    539 	.globl _OBSSEL1
                                    540 	.globl _OBSSEL0
                                    541 	.globl _I2CIO
                                    542 	.globl _I2CWC
                                    543 	.globl _I2CADDR
                                    544 	.globl _I2CDATA
                                    545 	.globl _I2CSTAT
                                    546 	.globl _I2CCFG
                                    547 	.globl _OPAMPMC
                                    548 	.globl _MONMUX
                                    549 	.globl _queuebuf_init
                                    550 	.globl _queuebuf_numfree
                                    551 	.globl _queuebuf_new_from_packetbuf
                                    552 	.globl _queuebuf_update_attr_from_packetbuf
                                    553 	.globl _queuebuf_update_from_packetbuf
                                    554 	.globl _queuebuf_free
                                    555 	.globl _queuebuf_to_packetbuf
                                    556 	.globl _queuebuf_dataptr
                                    557 	.globl _queuebuf_datalen
                                    558 	.globl _queuebuf_addr
                                    559 	.globl _queuebuf_attr
                                    560 	.globl _queuebuf_debug_print
                                    561 ;--------------------------------------------------------
                                    562 ; special function registers
                                    563 ;--------------------------------------------------------
                                    564 	.area RSEG    (ABS,DATA)
      000000                        565 	.org 0x0000
                           000080   566 _P0	=	0x0080
                           000081   567 _SP	=	0x0081
                           000082   568 _DPL0	=	0x0082
                           000083   569 _DPH0	=	0x0083
                           000084   570 _DPL1	=	0x0084
                           000085   571 _DPH1	=	0x0085
                           000087   572 _PCON	=	0x0087
                           000088   573 _TCON	=	0x0088
                           000090   574 _P1	=	0x0090
                           000092   575 _DPS	=	0x0092
                           000098   576 _S0CON	=	0x0098
                           00009A   577 _IEN2	=	0x009a
                           00009B   578 _S1CON	=	0x009b
                           0000A0   579 _P2	=	0x00a0
                           0000A8   580 _IEN0	=	0x00a8
                           0000A9   581 _IP0	=	0x00a9
                           0000B8   582 _IEN1	=	0x00b8
                           0000B9   583 _IP1	=	0x00b9
                           0000C0   584 _IRCON	=	0x00c0
                           0000D0   585 _PSW	=	0x00d0
                           0000E0   586 _ACC	=	0x00e0
                           0000E8   587 _IRCON2	=	0x00e8
                           0000F0   588 _B	=	0x00f0
                           0000B4   589 _ADCCON1	=	0x00b4
                           0000B5   590 _ADCCON2	=	0x00b5
                           0000B6   591 _ADCCON3	=	0x00b6
                           0000BA   592 _ADCL	=	0x00ba
                           0000BB   593 _ADCH	=	0x00bb
                           0000BC   594 _RNDL	=	0x00bc
                           0000BD   595 _RNDH	=	0x00bd
                           0000B1   596 _ENCDI	=	0x00b1
                           0000B2   597 _ENCDO	=	0x00b2
                           0000B3   598 _ENCCS	=	0x00b3
                           0000D1   599 _DMAIRQ	=	0x00d1
                           0000D2   600 _DMA1CFGL	=	0x00d2
                           0000D3   601 _DMA1CFGH	=	0x00d3
                           0000D4   602 _DMA0CFGL	=	0x00d4
                           0000D5   603 _DMA0CFGH	=	0x00d5
                           0000D6   604 _DMAARM	=	0x00d6
                           0000D7   605 _DMAREQ	=	0x00d7
                           000089   606 _P0IFG	=	0x0089
                           00008A   607 _P1IFG	=	0x008a
                           00008B   608 _P2IFG	=	0x008b
                           00008C   609 _PICTL	=	0x008c
                           0000AB   610 _P0IEN	=	0x00ab
                           00008D   611 _P1IEN	=	0x008d
                           0000AC   612 _P2IEN	=	0x00ac
                           00008F   613 _P0INP	=	0x008f
                           0000F1   614 _PERCFG	=	0x00f1
                           0000F2   615 _APCFG	=	0x00f2
                           0000F3   616 _P0SEL	=	0x00f3
                           0000F4   617 _P1SEL	=	0x00f4
                           0000F5   618 _P2SEL	=	0x00f5
                           0000F6   619 _P1INP	=	0x00f6
                           0000F7   620 _P2INP	=	0x00f7
                           0000FD   621 _P0DIR	=	0x00fd
                           0000FE   622 _P1DIR	=	0x00fe
                           0000FF   623 _P2DIR	=	0x00ff
                           0000AE   624 _PMUX	=	0x00ae
                           000093   625 _MPAGE	=	0x0093
                           000093   626 __XPAGE	=	0x0093
                           0000C7   627 _MEMCTR	=	0x00c7
                           00009F   628 _FMAP	=	0x009f
                           00009F   629 _PSBANK	=	0x009f
                           000091   630 _RFIRQF1	=	0x0091
                           0000D9   631 _RFD	=	0x00d9
                           0000E1   632 _RFST	=	0x00e1
                           0000E9   633 _RFIRQF0	=	0x00e9
                           0000BF   634 _RFERRF	=	0x00bf
                           000095   635 _ST0	=	0x0095
                           000096   636 _ST1	=	0x0096
                           000097   637 _ST2	=	0x0097
                           0000AD   638 _STLOAD	=	0x00ad
                           0000BE   639 _SLEEPCMD	=	0x00be
                           00009D   640 _SLEEPSTA	=	0x009d
                           0000C6   641 _CLKCONCMD	=	0x00c6
                           00009E   642 _CLKCONSTA	=	0x009e
                           0000DA   643 _T1CC0L	=	0x00da
                           0000DB   644 _T1CC0H	=	0x00db
                           0000DC   645 _T1CC1L	=	0x00dc
                           0000DD   646 _T1CC1H	=	0x00dd
                           0000DE   647 _T1CC2L	=	0x00de
                           0000DF   648 _T1CC2H	=	0x00df
                           0000E2   649 _T1CNTL	=	0x00e2
                           0000E3   650 _T1CNTH	=	0x00e3
                           0000E4   651 _T1CTL	=	0x00e4
                           0000E5   652 _T1CCTL0	=	0x00e5
                           0000E6   653 _T1CCTL1	=	0x00e6
                           0000E7   654 _T1CCTL2	=	0x00e7
                           0000AF   655 _T1STAT	=	0x00af
                           000094   656 _T2CTRL	=	0x0094
                           00009C   657 _T2EVTCFG	=	0x009c
                           0000A1   658 _T2IRQF	=	0x00a1
                           0000A2   659 _T2M0	=	0x00a2
                           0000A3   660 _T2M1	=	0x00a3
                           0000A4   661 _T2MOVF0	=	0x00a4
                           0000A5   662 _T2MOVF1	=	0x00a5
                           0000A6   663 _T2MOVF2	=	0x00a6
                           0000A7   664 _T2IRQM	=	0x00a7
                           0000C3   665 _T2MSEL	=	0x00c3
                           0000CA   666 _T3CNT	=	0x00ca
                           0000CB   667 _T3CTL	=	0x00cb
                           0000CC   668 _T3CCTL0	=	0x00cc
                           0000CD   669 _T3CC0	=	0x00cd
                           0000CE   670 _T3CCTL1	=	0x00ce
                           0000CF   671 _T3CC1	=	0x00cf
                           0000EA   672 _T4CNT	=	0x00ea
                           0000EB   673 _T4CTL	=	0x00eb
                           0000EC   674 _T4CCTL0	=	0x00ec
                           0000ED   675 _T4CC0	=	0x00ed
                           0000EE   676 _T4CCTL1	=	0x00ee
                           0000EF   677 _T4CC1	=	0x00ef
                           0000D8   678 _TIMIF	=	0x00d8
                           000086   679 _U0CSR	=	0x0086
                           0000C1   680 _U0DBUF	=	0x00c1
                           0000C2   681 _U0BAUD	=	0x00c2
                           0000C4   682 _U0UCR	=	0x00c4
                           0000C5   683 _U0GCR	=	0x00c5
                           0000F8   684 _U1CSR	=	0x00f8
                           0000F9   685 _U1DBUF	=	0x00f9
                           0000FA   686 _U1BAUD	=	0x00fa
                           0000FB   687 _U1UCR	=	0x00fb
                           0000FC   688 _U1GCR	=	0x00fc
                           0000C9   689 _WDCTL	=	0x00c9
                                    690 ;--------------------------------------------------------
                                    691 ; special function bits
                                    692 ;--------------------------------------------------------
                                    693 	.area RSEG    (ABS,DATA)
      000000                        694 	.org 0x0000
                           000087   695 _P0_7	=	0x0087
                           000086   696 _P0_6	=	0x0086
                           000085   697 _P0_5	=	0x0085
                           000084   698 _P0_4	=	0x0084
                           000083   699 _P0_3	=	0x0083
                           000082   700 _P0_2	=	0x0082
                           000081   701 _P0_1	=	0x0081
                           000080   702 _P0_0	=	0x0080
                           00008F   703 _URX1IF	=	0x008f
                           00008D   704 _ADCIF	=	0x008d
                           00008B   705 _URX0IF	=	0x008b
                           00008A   706 _IT1	=	0x008a
                           000089   707 _RFERRIF	=	0x0089
                           000088   708 _IT0	=	0x0088
                           000097   709 _P1_7	=	0x0097
                           000096   710 _P1_6	=	0x0096
                           000095   711 _P1_5	=	0x0095
                           000094   712 _P1_4	=	0x0094
                           000093   713 _P1_3	=	0x0093
                           000092   714 _P1_2	=	0x0092
                           000091   715 _P1_1	=	0x0091
                           000090   716 _P1_0	=	0x0090
                           000099   717 _ENCIF_1	=	0x0099
                           000098   718 _ENCIF_0	=	0x0098
                           0000A7   719 _P2_7	=	0x00a7
                           0000A6   720 _P2_6	=	0x00a6
                           0000A5   721 _P2_5	=	0x00a5
                           0000A4   722 _P2_4	=	0x00a4
                           0000A3   723 _P2_3	=	0x00a3
                           0000A2   724 _P2_2	=	0x00a2
                           0000A1   725 _P2_1	=	0x00a1
                           0000A0   726 _P2_0	=	0x00a0
                           0000AF   727 _EA	=	0x00af
                           0000AD   728 _STIE	=	0x00ad
                           0000AC   729 _ENCIE	=	0x00ac
                           0000AB   730 _URX1IE	=	0x00ab
                           0000AA   731 _URX0IE	=	0x00aa
                           0000A9   732 _ADCIE	=	0x00a9
                           0000A8   733 _RFERRIE	=	0x00a8
                           0000BD   734 _P0IE	=	0x00bd
                           0000BC   735 _T4IE	=	0x00bc
                           0000BB   736 _T3IE	=	0x00bb
                           0000BA   737 _T2IE	=	0x00ba
                           0000B9   738 _T1IE	=	0x00b9
                           0000B8   739 _DMAIE	=	0x00b8
                           0000C7   740 _STIF	=	0x00c7
                           0000C5   741 _P0IF	=	0x00c5
                           0000C4   742 _T4IF	=	0x00c4
                           0000C3   743 _T3IF	=	0x00c3
                           0000C2   744 _T2IF	=	0x00c2
                           0000C1   745 _T1IF	=	0x00c1
                           0000C0   746 _DMAIF	=	0x00c0
                           0000D7   747 _CY	=	0x00d7
                           0000D6   748 _AC	=	0x00d6
                           0000D5   749 _F0	=	0x00d5
                           0000D4   750 _RS1	=	0x00d4
                           0000D3   751 _RS0	=	0x00d3
                           0000D2   752 _OV	=	0x00d2
                           0000D1   753 _F1	=	0x00d1
                           0000D0   754 _P	=	0x00d0
                           0000E7   755 _ACC_7	=	0x00e7
                           0000E6   756 _ACC_6	=	0x00e6
                           0000E5   757 _ACC_5	=	0x00e5
                           0000E4   758 _ACC_4	=	0x00e4
                           0000E3   759 _ACC_3	=	0x00e3
                           0000E2   760 _ACC_2	=	0x00e2
                           0000E1   761 _ACC_1	=	0x00e1
                           0000E0   762 _ACC_0	=	0x00e0
                           0000EC   763 _WDTIF	=	0x00ec
                           0000EB   764 _P1IF	=	0x00eb
                           0000EA   765 _UTX1IF	=	0x00ea
                           0000E9   766 _UTX0IF	=	0x00e9
                           0000E8   767 _P2IF	=	0x00e8
                           0000F7   768 _B_7	=	0x00f7
                           0000F6   769 _B_6	=	0x00f6
                           0000F5   770 _B_5	=	0x00f5
                           0000F4   771 _B_4	=	0x00f4
                           0000F3   772 _B_3	=	0x00f3
                           0000F2   773 _B_2	=	0x00f2
                           0000F1   774 _B_1	=	0x00f1
                           0000F0   775 _B_0	=	0x00f0
                           0000DE   776 _OVFIM	=	0x00de
                           0000DD   777 _T4CH1IF	=	0x00dd
                           0000DC   778 _T4CH0IF	=	0x00dc
                           0000DB   779 _T4OVFIF	=	0x00db
                           0000DA   780 _T3CH1IF	=	0x00da
                           0000D9   781 _T3CH0IF	=	0x00d9
                           0000D8   782 _T3OVFIF	=	0x00d8
                           0000FF   783 _MODE	=	0x00ff
                           0000FE   784 _RE	=	0x00fe
                           0000FD   785 _SLAVE	=	0x00fd
                           0000FC   786 _FE	=	0x00fc
                           0000FB   787 _ERR	=	0x00fb
                           0000FA   788 _RX_BYTE	=	0x00fa
                           0000F9   789 _TX_BYTE	=	0x00f9
                           0000F8   790 _ACTIVE	=	0x00f8
                                    791 ;--------------------------------------------------------
                                    792 ; overlayable register banks
                                    793 ;--------------------------------------------------------
                                    794 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        795 	.ds 8
                                    796 ;--------------------------------------------------------
                                    797 ; internal ram data
                                    798 ;--------------------------------------------------------
                                    799 	.area DSEG    (DATA)
                                    800 ;--------------------------------------------------------
                                    801 ; overlayable items in internal ram 
                                    802 ;--------------------------------------------------------
                                    803 ;--------------------------------------------------------
                                    804 ; indirectly addressable internal ram data
                                    805 ;--------------------------------------------------------
                                    806 	.area ISEG    (DATA)
                                    807 ;--------------------------------------------------------
                                    808 ; absolute internal ram data
                                    809 ;--------------------------------------------------------
                                    810 	.area IABS    (ABS,DATA)
                                    811 	.area IABS    (ABS,DATA)
                                    812 ;--------------------------------------------------------
                                    813 ; bit data
                                    814 ;--------------------------------------------------------
                                    815 	.area BSEG    (BIT)
                                    816 ;--------------------------------------------------------
                                    817 ; paged external ram data
                                    818 ;--------------------------------------------------------
                                    819 	.area PSEG    (PAG,XDATA)
                                    820 ;--------------------------------------------------------
                                    821 ; external ram data
                                    822 ;--------------------------------------------------------
                                    823 	.area XSEG    (XDATA)
                           0061A6   824 _MONMUX	=	0x61a6
                           0061A6   825 _OPAMPMC	=	0x61a6
                           006230   826 _I2CCFG	=	0x6230
                           006231   827 _I2CSTAT	=	0x6231
                           006232   828 _I2CDATA	=	0x6232
                           006233   829 _I2CADDR	=	0x6233
                           006234   830 _I2CWC	=	0x6234
                           006235   831 _I2CIO	=	0x6235
                           006243   832 _OBSSEL0	=	0x6243
                           006244   833 _OBSSEL1	=	0x6244
                           006245   834 _OBSSEL2	=	0x6245
                           006246   835 _OBSSEL3	=	0x6246
                           006247   836 _OBSSEL4	=	0x6247
                           006248   837 _OBSSEL5	=	0x6248
                           006249   838 _CHVER	=	0x6249
                           00624A   839 _CHIPID	=	0x624a
                           00624B   840 _TESTREG0	=	0x624b
                           006260   841 _DBGDATA	=	0x6260
                           006262   842 _SRCRC	=	0x6262
                           006264   843 _BATTMON	=	0x6264
                           006265   844 _IVCTRL	=	0x6265
                           006270   845 _FCTL	=	0x6270
                           006271   846 _FADDRL	=	0x6271
                           006272   847 _FADDRH	=	0x6272
                           006273   848 _FWDATA	=	0x6273
                           006276   849 _CHIPINFO0	=	0x6276
                           006277   850 _CHIPINFO1	=	0x6277
                           006281   851 _IRCTL	=	0x6281
                           006290   852 _CLD	=	0x6290
                           0062A0   853 _XX_T1CCTL0	=	0x62a0
                           0062A1   854 _XX_T1CCTL1	=	0x62a1
                           0062A2   855 _XX_T1CCTL2	=	0x62a2
                           0062A3   856 _T1CCTL3	=	0x62a3
                           0062A4   857 _T1CCTL4	=	0x62a4
                           0062A6   858 _XX_T1CC0L	=	0x62a6
                           0062A7   859 _XX_T1CC0H	=	0x62a7
                           0062A8   860 _XX_T1CC1L	=	0x62a8
                           0062A9   861 _XX_T1CC1H	=	0x62a9
                           0062AA   862 _XX_T1CC2L	=	0x62aa
                           0062AB   863 _XX_T1CC2H	=	0x62ab
                           0062AC   864 _T1CC3L	=	0x62ac
                           0062AD   865 _T1CC3H	=	0x62ad
                           0062AE   866 _T1CC4L	=	0x62ae
                           0062AF   867 _T1CC4H	=	0x62af
                           0062B0   868 _STCC	=	0x62b0
                           0062B1   869 _STCS	=	0x62b1
                           0062B2   870 _STCV0	=	0x62b2
                           0062B3   871 _STCV1	=	0x62b3
                           0062B4   872 _STCV2	=	0x62b4
                           0062C0   873 _OPAMPC	=	0x62c0
                           0062C1   874 _OPAMPS	=	0x62c1
                           0062D0   875 _CMPCTL	=	0x62d0
                           006000   876 _RFCORE_RAM	=	0x6000
                           006000   877 _RXFIFO	=	0x6000
                           006080   878 _TXFIFO	=	0x6080
                           006100   879 _SRC_ADDR_TABLE	=	0x6100
                           006160   880 _SRCRESMASK0	=	0x6160
                           006161   881 _SRCRESMASK1	=	0x6161
                           006162   882 _SRCRESMASK2	=	0x6162
                           006163   883 _SRCRESINDEX	=	0x6163
                           006164   884 _SRCEXTPENDEN0	=	0x6164
                           006165   885 _SRCEXTPENDEN1	=	0x6165
                           006166   886 _SRCEXTPENDEN2	=	0x6166
                           006167   887 _SRCSHORTPENDEN0	=	0x6167
                           006168   888 _SRCSHORTPENDEN1	=	0x6168
                           006169   889 _SRCSHORTPENDEN2	=	0x6169
                           00616A   890 _EXT_ADDR0	=	0x616a
                           00616B   891 _EXT_ADDR1	=	0x616b
                           00616C   892 _EXT_ADDR2	=	0x616c
                           00616D   893 _EXT_ADDR3	=	0x616d
                           00616E   894 _EXT_ADDR4	=	0x616e
                           00616F   895 _EXT_ADDR5	=	0x616f
                           006170   896 _EXT_ADDR6	=	0x6170
                           006171   897 _EXT_ADDR7	=	0x6171
                           006172   898 _PAN_ID0	=	0x6172
                           006173   899 _PAN_ID1	=	0x6173
                           006174   900 _SHORT_ADDR0	=	0x6174
                           006175   901 _SHORT_ADDR1	=	0x6175
                           006180   902 _FRMFILT0	=	0x6180
                           006181   903 _FRMFILT1	=	0x6181
                           006182   904 _SRCMATCH	=	0x6182
                           006183   905 _SRCSHORTEN0	=	0x6183
                           006184   906 _SRCSHORTEN1	=	0x6184
                           006185   907 _SRCSHORTEN2	=	0x6185
                           006186   908 _SRCEXTEN0	=	0x6186
                           006187   909 _SRCEXTEN1	=	0x6187
                           006188   910 _SRCEXTEN2	=	0x6188
                           006189   911 _FRMCTRL0	=	0x6189
                           00618A   912 _FRMCTRL1	=	0x618a
                           00618B   913 _RXENABLE	=	0x618b
                           00618C   914 _RXMASKSET	=	0x618c
                           00618D   915 _RXMASKCLR	=	0x618d
                           00618E   916 _FREQTUNE	=	0x618e
                           00618F   917 _FREQCTRL	=	0x618f
                           006190   918 _TXPOWER	=	0x6190
                           006191   919 _TXCTRL	=	0x6191
                           006192   920 _FSMSTAT0	=	0x6192
                           006193   921 _FSMSTAT1	=	0x6193
                           006194   922 _FIFOPCTRL	=	0x6194
                           006195   923 _FSMCTRL	=	0x6195
                           006196   924 _CCACTRL0	=	0x6196
                           006197   925 _CCACTRL1	=	0x6197
                           006198   926 _RSSI	=	0x6198
                           006199   927 _RSSISTAT	=	0x6199
                           00619A   928 _RXFIRST	=	0x619a
                           00619B   929 _RXFIFOCNT	=	0x619b
                           00619C   930 _TXFIFOCNT	=	0x619c
                           00619D   931 _RXFIRST_PTR	=	0x619d
                           00619E   932 _RXLAST_PTR	=	0x619e
                           00619F   933 _RXP1_PTR	=	0x619f
                           0061A1   934 _TXFIRST_PTR	=	0x61a1
                           0061A2   935 _TXLAST_PTR	=	0x61a2
                           0061A3   936 _RFIRQM0	=	0x61a3
                           0061A4   937 _RFIRQM1	=	0x61a4
                           0061A5   938 _RFERRM	=	0x61a5
                           0061A7   939 _RFRND	=	0x61a7
                           0061A8   940 _MDMCTRL0	=	0x61a8
                           0061A9   941 _MDMCTRL1	=	0x61a9
                           0061AA   942 _FREQEST	=	0x61aa
                           0061AB   943 _RXCTRL	=	0x61ab
                           0061AC   944 _FSCTRL	=	0x61ac
                           0061AD   945 _FSCAL0	=	0x61ad
                           0061AE   946 _FSCAL1	=	0x61ae
                           0061AF   947 _FSCAL2	=	0x61af
                           0061B0   948 _FSCAL3	=	0x61b0
                           0061B1   949 _AGCCTRL0	=	0x61b1
                           0061B2   950 _AGCCTRL1	=	0x61b2
                           0061B3   951 _AGCCTRL2	=	0x61b3
                           0061B4   952 _AGCCTRL3	=	0x61b4
                           0061B5   953 _ADCTEST0	=	0x61b5
                           0061B6   954 _ADCTEST1	=	0x61b6
                           0061B7   955 _ADCTEST2	=	0x61b7
                           0061B8   956 _MDMTEST0	=	0x61b8
                           0061B9   957 _MDMTEST1	=	0x61b9
                           0061BA   958 _DACTEST0	=	0x61ba
                           0061BB   959 _DACTEST1	=	0x61bb
                           0061BC   960 _DACTEST2	=	0x61bc
                           0061BD   961 _ATEST	=	0x61bd
                           0061BE   962 _PTEST0	=	0x61be
                           0061BF   963 _PTEST1	=	0x61bf
                           0061FA   964 _TXFILTCFG	=	0x61fa
                           0061EB   965 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   966 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   967 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   968 _CSPPROG0	=	0x61c0
                           0061C1   969 _CSPPROG1	=	0x61c1
                           0061C2   970 _CSPPROG2	=	0x61c2
                           0061C3   971 _CSPPROG3	=	0x61c3
                           0061C4   972 _CSPPROG4	=	0x61c4
                           0061C5   973 _CSPPROG5	=	0x61c5
                           0061C6   974 _CSPPROG6	=	0x61c6
                           0061C7   975 _CSPPROG7	=	0x61c7
                           0061C8   976 _CSPPROG8	=	0x61c8
                           0061C9   977 _CSPPROG9	=	0x61c9
                           0061CA   978 _CSPPROG10	=	0x61ca
                           0061CB   979 _CSPPROG11	=	0x61cb
                           0061CC   980 _CSPPROG12	=	0x61cc
                           0061CD   981 _CSPPROG13	=	0x61cd
                           0061CE   982 _CSPPROG14	=	0x61ce
                           0061CF   983 _CSPPROG15	=	0x61cf
                           0061D0   984 _CSPPROG16	=	0x61d0
                           0061D1   985 _CSPPROG17	=	0x61d1
                           0061D2   986 _CSPPROG18	=	0x61d2
                           0061D3   987 _CSPPROG19	=	0x61d3
                           0061D4   988 _CSPPROG20	=	0x61d4
                           0061D5   989 _CSPPROG21	=	0x61d5
                           0061D6   990 _CSPPROG22	=	0x61d6
                           0061D7   991 _CSPPROG23	=	0x61d7
                           0061E0   992 _CSPCTRL	=	0x61e0
                           0061E1   993 _CSPSTAT	=	0x61e1
                           0061E2   994 _CSPX	=	0x61e2
                           0061E3   995 _CSPY	=	0x61e3
                           0061E4   996 _CSPZ	=	0x61e4
                           0061E5   997 _CSPT	=	0x61e5
                           006200   998 _USBADDR	=	0x6200
                           006201   999 _USBPOW	=	0x6201
                           006202  1000 _USBIIF	=	0x6202
                           006204  1001 _USBOIF	=	0x6204
                           006206  1002 _USBCIF	=	0x6206
                           006207  1003 _USBIIE	=	0x6207
                           006209  1004 _USBOIE	=	0x6209
                           00620B  1005 _USBCIE	=	0x620b
                           00620C  1006 _USBFRML	=	0x620c
                           00620D  1007 _USBFRMH	=	0x620d
                           00620E  1008 _USBINDEX	=	0x620e
                           00620F  1009 _USBCTRL	=	0x620f
                           006210  1010 _USBMAXI	=	0x6210
                           006211  1011 _USBCS0	=	0x6211
                           006211  1012 _USBCSIL	=	0x6211
                           006212  1013 _USBCSIH	=	0x6212
                           006213  1014 _USBMAXO	=	0x6213
                           006214  1015 _USBCSOL	=	0x6214
                           006215  1016 _USBCSOH	=	0x6215
                           006216  1017 _USBCNT0	=	0x6216
                           006216  1018 _USBCNTL	=	0x6216
                           006217  1019 _USBCNTH	=	0x6217
                           006220  1020 _USBF0	=	0x6220
                           006222  1021 _USBF1	=	0x6222
                           006224  1022 _USBF2	=	0x6224
                           006226  1023 _USBF3	=	0x6226
                           006228  1024 _USBF4	=	0x6228
                           00622A  1025 _USBF5	=	0x622a
                           007080  1026 _X_P0	=	0x7080
                           007086  1027 _X_U0CSR	=	0x7086
                           007089  1028 _X_P0IFG	=	0x7089
                           00708A  1029 _X_P1IFG	=	0x708a
                           00708B  1030 _X_P2IFG	=	0x708b
                           00708C  1031 _X_PICTL	=	0x708c
                           00708D  1032 _X_P1IEN	=	0x708d
                           00708F  1033 _X_P0INP	=	0x708f
                           007090  1034 _X_P1	=	0x7090
                           007091  1035 _X_RFIRQF1	=	0x7091
                           007093  1036 _X_MPAGE	=	0x7093
                           007093  1037 _X__XPAGE	=	0x7093
                           007094  1038 _X_T2CTRL	=	0x7094
                           007095  1039 _X_ST0	=	0x7095
                           007096  1040 _X_ST1	=	0x7096
                           007097  1041 _X_ST2	=	0x7097
                           00709C  1042 _X_T2EVTCFG	=	0x709c
                           00709D  1043 _X_SLEEPSTA	=	0x709d
                           00709E  1044 _X_CLKCONSTA	=	0x709e
                           00709F  1045 _X_FMAP	=	0x709f
                           00709F  1046 _X_PSBANK	=	0x709f
                           0070A0  1047 _X_P2	=	0x70a0
                           0070A1  1048 _X_T2IRQF	=	0x70a1
                           0070A2  1049 _X_T2M0	=	0x70a2
                           0070A3  1050 _X_T2M1	=	0x70a3
                           0070A4  1051 _X_T2MOVF0	=	0x70a4
                           0070A5  1052 _X_T2MOVF1	=	0x70a5
                           0070A6  1053 _X_T2MOVF2	=	0x70a6
                           0070A7  1054 _X_T2IRQM	=	0x70a7
                           0070AB  1055 _X_P0IEN	=	0x70ab
                           0070AC  1056 _X_P2IEN	=	0x70ac
                           0070AD  1057 _X_STLOAD	=	0x70ad
                           0070AE  1058 _X_PMUX	=	0x70ae
                           0070AF  1059 _X_T1STAT	=	0x70af
                           0070B1  1060 _X_ENCDI	=	0x70b1
                           0070B2  1061 _X_ENCDO	=	0x70b2
                           0070B3  1062 _X_ENCCS	=	0x70b3
                           0070B4  1063 _X_ADCCON1	=	0x70b4
                           0070B5  1064 _X_ADCCON2	=	0x70b5
                           0070B6  1065 _X_ADCCON3	=	0x70b6
                           0070BA  1066 _X_ADCL	=	0x70ba
                           0070BB  1067 _X_ADCH	=	0x70bb
                           0070BC  1068 _X_RNDL	=	0x70bc
                           0070BD  1069 _X_RNDH	=	0x70bd
                           0070BE  1070 _X_SLEEPCMD	=	0x70be
                           0070BF  1071 _X_RFERRF	=	0x70bf
                           0070C1  1072 _X_U0DBUF	=	0x70c1
                           0070C2  1073 _X_U0BAUD	=	0x70c2
                           0070C3  1074 _X_T2MSEL	=	0x70c3
                           0070C4  1075 _X_U0UCR	=	0x70c4
                           0070C5  1076 _X_U0GCR	=	0x70c5
                           0070C6  1077 _X_CLKCONCMD	=	0x70c6
                           0070C7  1078 _X_MEMCTR	=	0x70c7
                           0070C9  1079 _X_WDCTL	=	0x70c9
                           0070CA  1080 _X_T3CNT	=	0x70ca
                           0070CB  1081 _X_T3CTL	=	0x70cb
                           0070CC  1082 _X_T3CCTL0	=	0x70cc
                           0070CD  1083 _X_T3CC0	=	0x70cd
                           0070CE  1084 _X_T3CCTL1	=	0x70ce
                           0070CF  1085 _X_T3CC1	=	0x70cf
                           0070D1  1086 _X_DMAIRQ	=	0x70d1
                           0070D2  1087 _X_DMA1CFGL	=	0x70d2
                           0070D3  1088 _X_DMA1CFGH	=	0x70d3
                           0070D4  1089 _X_DMA0CFGL	=	0x70d4
                           0070D5  1090 _X_DMA0CFGH	=	0x70d5
                           0070D6  1091 _X_DMAARM	=	0x70d6
                           0070D7  1092 _X_DMAREQ	=	0x70d7
                           0070D8  1093 _X_TIMIF	=	0x70d8
                           0070D9  1094 _X_RFD	=	0x70d9
                           0070DA  1095 _X_T1CC0L	=	0x70da
                           0070DB  1096 _X_T1CC0H	=	0x70db
                           0070DC  1097 _X_T1CC1L	=	0x70dc
                           0070DD  1098 _X_T1CC1H	=	0x70dd
                           0070DE  1099 _X_T1CC2L	=	0x70de
                           0070DF  1100 _X_T1CC2H	=	0x70df
                           0070E1  1101 _X_RFST	=	0x70e1
                           0070E2  1102 _X_T1CNTL	=	0x70e2
                           0070E3  1103 _X_T1CNTH	=	0x70e3
                           0070E4  1104 _X_T1CTL	=	0x70e4
                           0070E5  1105 _X_T1CCTL0	=	0x70e5
                           0070E6  1106 _X_T1CCTL1	=	0x70e6
                           0070E7  1107 _X_T1CCTL2	=	0x70e7
                           0070E9  1108 _X_RFIRQF0	=	0x70e9
                           0070EA  1109 _X_T4CNT	=	0x70ea
                           0070EB  1110 _X_T4CTL	=	0x70eb
                           0070EC  1111 _X_T4CCTL0	=	0x70ec
                           0070ED  1112 _X_T4CC0	=	0x70ed
                           0070EE  1113 _X_T4CCTL1	=	0x70ee
                           0070EF  1114 _X_T4CC1	=	0x70ef
                           0070F1  1115 _X_PERCFG	=	0x70f1
                           0070F2  1116 _X_APCFG	=	0x70f2
                           0070F3  1117 _X_P0SEL	=	0x70f3
                           0070F4  1118 _X_P1SEL	=	0x70f4
                           0070F5  1119 _X_P2SEL	=	0x70f5
                           0070F6  1120 _X_P1INP	=	0x70f6
                           0070F7  1121 _X_P2INP	=	0x70f7
                           0070F8  1122 _X_U1CSR	=	0x70f8
                           0070F9  1123 _X_U1DBUF	=	0x70f9
                           0070FA  1124 _X_U1BAUD	=	0x70fa
                           0070FB  1125 _X_U1UCR	=	0x70fb
                           0070FC  1126 _X_U1GCR	=	0x70fc
                           0070FD  1127 _X_P0DIR	=	0x70fd
                           0070FE  1128 _X_P1DIR	=	0x70fe
                           0070FF  1129 _X_P2DIR	=	0x70ff
                           007800  1130 _X_INFOPAGE	=	0x7800
                           00780C  1131 _X_IEEE_ADDR	=	0x780c
      000000                       1132 _bufmem_memb_count:
      000000                       1133 	.ds 6
      000006                       1134 _bufmem_memb_mem:
      000006                       1135 	.ds 18
      000018                       1136 _buframmem_memb_count:
      000018                       1137 	.ds 6
      00001E                       1138 _buframmem_memb_mem:
      00001E                       1139 	.ds 1284
                                   1140 ;--------------------------------------------------------
                                   1141 ; absolute external ram data
                                   1142 ;--------------------------------------------------------
                                   1143 	.area XABS    (ABS,XDATA)
                                   1144 ;--------------------------------------------------------
                                   1145 ; external initialized ram data
                                   1146 ;--------------------------------------------------------
                                   1147 	.area XISEG   (XDATA)
      000000                       1148 _bufmem:
      000000                       1149 	.ds 10
      00000A                       1150 _buframmem:
      00000A                       1151 	.ds 10
                                   1152 	.area HOME    (CODE)
                                   1153 	.area GSINIT0 (CODE)
                                   1154 	.area GSINIT1 (CODE)
                                   1155 	.area GSINIT2 (CODE)
                                   1156 	.area GSINIT3 (CODE)
                                   1157 	.area GSINIT4 (CODE)
                                   1158 	.area GSINIT5 (CODE)
                                   1159 	.area GSINIT  (CODE)
                                   1160 	.area GSFINAL (CODE)
                                   1161 	.area CSEG    (CODE)
                                   1162 ;--------------------------------------------------------
                                   1163 ; global & static initialisations
                                   1164 ;--------------------------------------------------------
                                   1165 	.area HOME    (CODE)
                                   1166 	.area GSINIT  (CODE)
                                   1167 	.area GSFINAL (CODE)
                                   1168 	.area GSINIT  (CODE)
                                   1169 ;--------------------------------------------------------
                                   1170 ; Home
                                   1171 ;--------------------------------------------------------
                                   1172 	.area HOME    (CODE)
                                   1173 	.area HOME    (CODE)
                                   1174 ;--------------------------------------------------------
                                   1175 ; code
                                   1176 ;--------------------------------------------------------
                                   1177 	.area BANK1   (CODE)
                                   1178 ;------------------------------------------------------------
                                   1179 ;Allocation info for local variables in function 'queuebuf_load_to_ram'
                                   1180 ;------------------------------------------------------------
                                   1181 ;b                         Allocated to registers r5 r6 r7 
                                   1182 ;------------------------------------------------------------
                                   1183 ;	/opt/contiki/core/net/queuebuf.c:273: queuebuf_load_to_ram(struct queuebuf *b)
                                   1184 ;	-----------------------------------------
                                   1185 ;	 function queuebuf_load_to_ram
                                   1186 ;	-----------------------------------------
      000000                       1187 _queuebuf_load_to_ram:
                           000007  1188 	ar7 = 0x07
                           000006  1189 	ar6 = 0x06
                           000005  1190 	ar5 = 0x05
                           000004  1191 	ar4 = 0x04
                           000003  1192 	ar3 = 0x03
                           000002  1193 	ar2 = 0x02
                           000001  1194 	ar1 = 0x01
                           000000  1195 	ar0 = 0x00
                                   1196 ;	/opt/contiki/core/net/queuebuf.c:275: return b->ram_ptr;
      000000 12r00r00         [24] 1197 	lcall	__gptrget
      000003 FD               [12] 1198 	mov	r5,a
      000004 A3               [24] 1199 	inc	dptr
      000005 12r00r00         [24] 1200 	lcall	__gptrget
      000008 FE               [12] 1201 	mov	r6,a
      000009 A3               [24] 1202 	inc	dptr
      00000A 12r00r00         [24] 1203 	lcall	__gptrget
      00000D FF               [12] 1204 	mov	r7,a
      00000E 8D 82            [24] 1205 	mov	dpl,r5
      000010 8E 83            [24] 1206 	mov	dph,r6
      000012 8F F0            [24] 1207 	mov	b,r7
      000014 02r00r00         [24] 1208 	ljmp	__sdcc_banked_ret
                                   1209 ;------------------------------------------------------------
                                   1210 ;Allocation info for local variables in function 'queuebuf_init'
                                   1211 ;------------------------------------------------------------
                                   1212 ;	/opt/contiki/core/net/queuebuf.c:280: queuebuf_init(void)
                                   1213 ;	-----------------------------------------
                                   1214 ;	 function queuebuf_init
                                   1215 ;	-----------------------------------------
      000017                       1216 _queuebuf_init:
                                   1217 ;	/opt/contiki/core/net/queuebuf.c:289: memb_init(&buframmem);
      000017 90r00r0A         [24] 1218 	mov	dptr,#_buframmem
      00001A 75 F0 00         [24] 1219 	mov	b,#0x00
      00001D 78r00            [12] 1220 	mov	r0,#_memb_init
      00001F 79s00            [12] 1221 	mov	r1,#(_memb_init >> 8)
      000021 7As00            [12] 1222 	mov	r2,#(_memb_init >> 16)
      000023 12r00r00         [24] 1223 	lcall	__sdcc_banked_call
                                   1224 ;	/opt/contiki/core/net/queuebuf.c:290: memb_init(&bufmem);
      000026 90r00r00         [24] 1225 	mov	dptr,#_bufmem
      000029 75 F0 00         [24] 1226 	mov	b,#0x00
      00002C 78r00            [12] 1227 	mov	r0,#_memb_init
      00002E 79s00            [12] 1228 	mov	r1,#(_memb_init >> 8)
      000030 7As00            [12] 1229 	mov	r2,#(_memb_init >> 16)
      000032 12r00r00         [24] 1230 	lcall	__sdcc_banked_call
      000035 02r00r00         [24] 1231 	ljmp	__sdcc_banked_ret
                                   1232 ;------------------------------------------------------------
                                   1233 ;Allocation info for local variables in function 'queuebuf_numfree'
                                   1234 ;------------------------------------------------------------
                                   1235 ;	/opt/contiki/core/net/queuebuf.c:297: queuebuf_numfree(void)
                                   1236 ;	-----------------------------------------
                                   1237 ;	 function queuebuf_numfree
                                   1238 ;	-----------------------------------------
      000038                       1239 _queuebuf_numfree:
                                   1240 ;	/opt/contiki/core/net/queuebuf.c:299: return memb_numfree(&bufmem);
      000038 90r00r00         [24] 1241 	mov	dptr,#_bufmem
      00003B 75 F0 00         [24] 1242 	mov	b,#0x00
      00003E 78r00            [12] 1243 	mov	r0,#_memb_numfree
      000040 79s00            [12] 1244 	mov	r1,#(_memb_numfree >> 8)
      000042 7As00            [12] 1245 	mov	r2,#(_memb_numfree >> 16)
      000044 12r00r00         [24] 1246 	lcall	__sdcc_banked_call
      000047 AE 82            [24] 1247 	mov	r6,dpl
      000049 AF 83            [24] 1248 	mov  r7,dph
      00004B 02r00r00         [24] 1249 	ljmp	__sdcc_banked_ret
                                   1250 ;------------------------------------------------------------
                                   1251 ;Allocation info for local variables in function 'queuebuf_new_from_packetbuf'
                                   1252 ;------------------------------------------------------------
                                   1253 ;buf                       Allocated to registers r5 r6 r7 
                                   1254 ;buframptr                 Allocated to stack - sp -2
                                   1255 ;sloc0                     Allocated to stack - sp -5
                                   1256 ;------------------------------------------------------------
                                   1257 ;	/opt/contiki/core/net/queuebuf.c:307: queuebuf_new_from_packetbuf(void)
                                   1258 ;	-----------------------------------------
                                   1259 ;	 function queuebuf_new_from_packetbuf
                                   1260 ;	-----------------------------------------
      00004E                       1261 _queuebuf_new_from_packetbuf:
      00004E E5 81            [12] 1262 	mov	a,sp
      000050 24 06            [12] 1263 	add	a,#0x06
      000052 F5 81            [12] 1264 	mov	sp,a
                                   1265 ;	/opt/contiki/core/net/queuebuf.c:313: buf = memb_alloc(&bufmem);
      000054 90r00r00         [24] 1266 	mov	dptr,#_bufmem
      000057 75 F0 00         [24] 1267 	mov	b,#0x00
      00005A 78r00            [12] 1268 	mov	r0,#_memb_alloc
      00005C 79s00            [12] 1269 	mov	r1,#(_memb_alloc >> 8)
      00005E 7As00            [12] 1270 	mov	r2,#(_memb_alloc >> 16)
      000060 12r00r00         [24] 1271 	lcall	__sdcc_banked_call
      000063 AD 82            [24] 1272 	mov	r5,dpl
      000065 AE 83            [24] 1273 	mov	r6,dph
      000067 AF F0            [24] 1274 	mov	r7,b
                                   1275 ;	/opt/contiki/core/net/queuebuf.c:314: if(buf != NULL) {
      000069 ED               [12] 1276 	mov	a,r5
      00006A 4E               [12] 1277 	orl	a,r6
      00006B 70 03            [24] 1278 	jnz	00113$
      00006D 02r01rA6         [24] 1279 	ljmp	00104$
      000070                       1280 00113$:
                                   1281 ;	/opt/contiki/core/net/queuebuf.c:321: buf->ram_ptr = memb_alloc(&buframmem);
      000070 90r00r0A         [24] 1282 	mov	dptr,#_buframmem
      000073 75 F0 00         [24] 1283 	mov	b,#0x00
      000076 C0 07            [24] 1284 	push	ar7
      000078 C0 06            [24] 1285 	push	ar6
      00007A C0 05            [24] 1286 	push	ar5
      00007C 78r00            [12] 1287 	mov	r0,#_memb_alloc
      00007E 79s00            [12] 1288 	mov	r1,#(_memb_alloc >> 8)
      000080 7As00            [12] 1289 	mov	r2,#(_memb_alloc >> 16)
      000082 12r00r00         [24] 1290 	lcall	__sdcc_banked_call
      000085 AA 82            [24] 1291 	mov	r2,dpl
      000087 AB 83            [24] 1292 	mov	r3,dph
      000089 AC F0            [24] 1293 	mov	r4,b
      00008B D0 05            [24] 1294 	pop	ar5
      00008D D0 06            [24] 1295 	pop	ar6
      00008F D0 07            [24] 1296 	pop	ar7
      000091 8D 82            [24] 1297 	mov	dpl,r5
      000093 8E 83            [24] 1298 	mov	dph,r6
      000095 8F F0            [24] 1299 	mov	b,r7
      000097 EA               [12] 1300 	mov	a,r2
      000098 12r00r00         [24] 1301 	lcall	__gptrput
      00009B A3               [24] 1302 	inc	dptr
      00009C EB               [12] 1303 	mov	a,r3
      00009D 12r00r00         [24] 1304 	lcall	__gptrput
      0000A0 A3               [24] 1305 	inc	dptr
      0000A1 EC               [12] 1306 	mov	a,r4
      0000A2 12r00r00         [24] 1307 	lcall	__gptrput
                                   1308 ;	/opt/contiki/core/net/queuebuf.c:334: if(buf->ram_ptr == NULL) {
      0000A5 8D 82            [24] 1309 	mov	dpl,r5
      0000A7 8E 83            [24] 1310 	mov	dph,r6
      0000A9 8F F0            [24] 1311 	mov	b,r7
      0000AB E5 81            [12] 1312 	mov	a,sp
      0000AD 24 FB            [12] 1313 	add	a,#0xfb
      0000AF F8               [12] 1314 	mov	r0,a
      0000B0 12r00r00         [24] 1315 	lcall	__gptrget
      0000B3 F6               [12] 1316 	mov	@r0,a
      0000B4 A3               [24] 1317 	inc	dptr
      0000B5 12r00r00         [24] 1318 	lcall	__gptrget
      0000B8 08               [12] 1319 	inc	r0
      0000B9 F6               [12] 1320 	mov	@r0,a
      0000BA A3               [24] 1321 	inc	dptr
      0000BB 12r00r00         [24] 1322 	lcall	__gptrget
      0000BE 08               [12] 1323 	inc	r0
      0000BF F6               [12] 1324 	mov	@r0,a
      0000C0 EA               [12] 1325 	mov	a,r2
      0000C1 4B               [12] 1326 	orl	a,r3
      0000C2 70 2A            [24] 1327 	jnz	00102$
                                   1328 ;	/opt/contiki/core/net/queuebuf.c:336: memb_free(&bufmem, buf);
      0000C4 8D 02            [24] 1329 	mov	ar2,r5
      0000C6 8E 03            [24] 1330 	mov	ar3,r6
      0000C8 8F 04            [24] 1331 	mov	ar4,r7
      0000CA C0 02            [24] 1332 	push	ar2
      0000CC C0 03            [24] 1333 	push	ar3
      0000CE C0 04            [24] 1334 	push	ar4
      0000D0 90r00r00         [24] 1335 	mov	dptr,#_bufmem
      0000D3 75 F0 00         [24] 1336 	mov	b,#0x00
      0000D6 78r00            [12] 1337 	mov	r0,#_memb_free
      0000D8 79s00            [12] 1338 	mov	r1,#(_memb_free >> 8)
      0000DA 7As00            [12] 1339 	mov	r2,#(_memb_free >> 16)
      0000DC 12r00r00         [24] 1340 	lcall	__sdcc_banked_call
      0000DF 15 81            [12] 1341 	dec	sp
      0000E1 15 81            [12] 1342 	dec	sp
      0000E3 15 81            [12] 1343 	dec	sp
                                   1344 ;	/opt/contiki/core/net/queuebuf.c:337: return NULL;
      0000E5 90 00 00         [24] 1345 	mov	dptr,#0x0000
      0000E8 75 F0 00         [24] 1346 	mov	b,#0x00
      0000EB 02r01rAC         [24] 1347 	ljmp	00105$
      0000EE                       1348 00102$:
                                   1349 ;	/opt/contiki/core/net/queuebuf.c:339: buframptr = buf->ram_ptr;
      0000EE C0 05            [24] 1350 	push	ar5
      0000F0 C0 06            [24] 1351 	push	ar6
      0000F2 C0 07            [24] 1352 	push	ar7
      0000F4 E5 81            [12] 1353 	mov	a,sp
      0000F6 24 F8            [12] 1354 	add	a,#0xf8
      0000F8 F8               [12] 1355 	mov	r0,a
      0000F9 86 02            [24] 1356 	mov	ar2,@r0
      0000FB 08               [12] 1357 	inc	r0
      0000FC 86 03            [24] 1358 	mov	ar3,@r0
      0000FE 08               [12] 1359 	inc	r0
      0000FF 86 04            [24] 1360 	mov	ar4,@r0
      000101 E5 81            [12] 1361 	mov	a,sp
      000103 24 FB            [12] 1362 	add	a,#0xfb
      000105 F8               [12] 1363 	mov	r0,a
      000106 A6 02            [24] 1364 	mov	@r0,ar2
      000108 08               [12] 1365 	inc	r0
      000109 A6 03            [24] 1366 	mov	@r0,ar3
      00010B 08               [12] 1367 	inc	r0
      00010C A6 04            [24] 1368 	mov	@r0,ar4
                                   1369 ;	/opt/contiki/core/net/queuebuf.c:342: buframptr->len = packetbuf_copyto(buframptr->data);
      00010E E5 81            [12] 1370 	mov	a,sp
      000110 24 FB            [12] 1371 	add	a,#0xfb
      000112 F8               [12] 1372 	mov	r0,a
      000113 74 80            [12] 1373 	mov	a,#0x80
      000115 26               [12] 1374 	add	a,@r0
      000116 FD               [12] 1375 	mov	r5,a
      000117 E4               [12] 1376 	clr	a
      000118 08               [12] 1377 	inc	r0
      000119 36               [12] 1378 	addc	a,@r0
      00011A FE               [12] 1379 	mov	r6,a
      00011B 08               [12] 1380 	inc	r0
      00011C 86 07            [24] 1381 	mov	ar7,@r0
      00011E E5 81            [12] 1382 	mov	a,sp
      000120 24 FB            [12] 1383 	add	a,#0xfb
      000122 F8               [12] 1384 	mov	r0,a
      000123 86 02            [24] 1385 	mov	ar2,@r0
      000125 08               [12] 1386 	inc	r0
      000126 86 03            [24] 1387 	mov	ar3,@r0
      000128 08               [12] 1388 	inc	r0
      000129 86 04            [24] 1389 	mov	ar4,@r0
      00012B 8A 82            [24] 1390 	mov	dpl,r2
      00012D 8B 83            [24] 1391 	mov	dph,r3
      00012F 8C F0            [24] 1392 	mov	b,r4
      000131 C0 07            [24] 1393 	push	ar7
      000133 C0 06            [24] 1394 	push	ar6
      000135 C0 05            [24] 1395 	push	ar5
      000137 78r00            [12] 1396 	mov	r0,#_packetbuf_copyto
      000139 79s00            [12] 1397 	mov	r1,#(_packetbuf_copyto >> 8)
      00013B 7As00            [12] 1398 	mov	r2,#(_packetbuf_copyto >> 16)
      00013D 12r00r00         [24] 1399 	lcall	__sdcc_banked_call
      000140 AB 82            [24] 1400 	mov	r3,dpl
      000142 AC 83            [24] 1401 	mov	r4,dph
      000144 D0 05            [24] 1402 	pop	ar5
      000146 D0 06            [24] 1403 	pop	ar6
      000148 D0 07            [24] 1404 	pop	ar7
      00014A 8D 82            [24] 1405 	mov	dpl,r5
      00014C 8E 83            [24] 1406 	mov	dph,r6
      00014E 8F F0            [24] 1407 	mov	b,r7
      000150 EB               [12] 1408 	mov	a,r3
      000151 12r00r00         [24] 1409 	lcall	__gptrput
      000154 A3               [24] 1410 	inc	dptr
      000155 EC               [12] 1411 	mov	a,r4
      000156 12r00r00         [24] 1412 	lcall	__gptrput
                                   1413 ;	/opt/contiki/core/net/queuebuf.c:343: packetbuf_attr_copyto(buframptr->attrs, buframptr->addrs);
      000159 E5 81            [12] 1414 	mov	a,sp
      00015B 24 FB            [12] 1415 	add	a,#0xfb
      00015D F8               [12] 1416 	mov	r0,a
      00015E 74 B6            [12] 1417 	mov	a,#0xB6
      000160 26               [12] 1418 	add	a,@r0
      000161 FD               [12] 1419 	mov	r5,a
      000162 E4               [12] 1420 	clr	a
      000163 08               [12] 1421 	inc	r0
      000164 36               [12] 1422 	addc	a,@r0
      000165 FE               [12] 1423 	mov	r6,a
      000166 08               [12] 1424 	inc	r0
      000167 86 07            [24] 1425 	mov	ar7,@r0
      000169 E5 81            [12] 1426 	mov	a,sp
      00016B 24 FB            [12] 1427 	add	a,#0xfb
      00016D F8               [12] 1428 	mov	r0,a
      00016E 74 82            [12] 1429 	mov	a,#0x82
      000170 26               [12] 1430 	add	a,@r0
      000171 FA               [12] 1431 	mov	r2,a
      000172 E4               [12] 1432 	clr	a
      000173 08               [12] 1433 	inc	r0
      000174 36               [12] 1434 	addc	a,@r0
      000175 FB               [12] 1435 	mov	r3,a
      000176 08               [12] 1436 	inc	r0
      000177 86 04            [24] 1437 	mov	ar4,@r0
      000179 C0 07            [24] 1438 	push	ar7
      00017B C0 06            [24] 1439 	push	ar6
      00017D C0 05            [24] 1440 	push	ar5
      00017F C0 05            [24] 1441 	push	ar5
      000181 C0 06            [24] 1442 	push	ar6
      000183 C0 07            [24] 1443 	push	ar7
      000185 8A 82            [24] 1444 	mov	dpl,r2
      000187 8B 83            [24] 1445 	mov	dph,r3
      000189 8C F0            [24] 1446 	mov	b,r4
      00018B 78r00            [12] 1447 	mov	r0,#_packetbuf_attr_copyto
      00018D 79s00            [12] 1448 	mov	r1,#(_packetbuf_attr_copyto >> 8)
      00018F 7As00            [12] 1449 	mov	r2,#(_packetbuf_attr_copyto >> 16)
      000191 12r00r00         [24] 1450 	lcall	__sdcc_banked_call
      000194 15 81            [12] 1451 	dec	sp
      000196 15 81            [12] 1452 	dec	sp
      000198 15 81            [12] 1453 	dec	sp
      00019A D0 05            [24] 1454 	pop	ar5
      00019C D0 06            [24] 1455 	pop	ar6
      00019E D0 07            [24] 1456 	pop	ar7
                                   1457 ;	/opt/contiki/core/net/queuebuf.c:366: return buf;
      0001A0 D0 07            [24] 1458 	pop	ar7
      0001A2 D0 06            [24] 1459 	pop	ar6
      0001A4 D0 05            [24] 1460 	pop	ar5
                                   1461 ;	/opt/contiki/core/net/queuebuf.c:343: packetbuf_attr_copyto(buframptr->attrs, buframptr->addrs);
      0001A6                       1462 00104$:
                                   1463 ;	/opt/contiki/core/net/queuebuf.c:366: return buf;
      0001A6 8D 82            [24] 1464 	mov	dpl,r5
      0001A8 8E 83            [24] 1465 	mov	dph,r6
      0001AA 8F F0            [24] 1466 	mov	b,r7
      0001AC                       1467 00105$:
      0001AC E5 81            [12] 1468 	mov	a,sp
      0001AE 24 FA            [12] 1469 	add	a,#0xFA
      0001B0 F5 81            [12] 1470 	mov	sp,a
      0001B2 02r00r00         [24] 1471 	ljmp	__sdcc_banked_ret
                                   1472 ;------------------------------------------------------------
                                   1473 ;Allocation info for local variables in function 'queuebuf_update_attr_from_packetbuf'
                                   1474 ;------------------------------------------------------------
                                   1475 ;buf                       Allocated to registers r5 r6 r7 
                                   1476 ;buframptr                 Allocated to registers r5 r6 r7 
                                   1477 ;------------------------------------------------------------
                                   1478 ;	/opt/contiki/core/net/queuebuf.c:370: queuebuf_update_attr_from_packetbuf(struct queuebuf *buf)
                                   1479 ;	-----------------------------------------
                                   1480 ;	 function queuebuf_update_attr_from_packetbuf
                                   1481 ;	-----------------------------------------
      0001B5                       1482 _queuebuf_update_attr_from_packetbuf:
                                   1483 ;	/opt/contiki/core/net/queuebuf.c:372: struct queuebuf_data *buframptr = queuebuf_load_to_ram(buf);
      0001B5 78r00            [12] 1484 	mov	r0,#_queuebuf_load_to_ram
      0001B7 79s00            [12] 1485 	mov	r1,#(_queuebuf_load_to_ram >> 8)
      0001B9 7As00            [12] 1486 	mov	r2,#(_queuebuf_load_to_ram >> 16)
      0001BB 12r00r00         [24] 1487 	lcall	__sdcc_banked_call
      0001BE AD 82            [24] 1488 	mov	r5,dpl
      0001C0 AE 83            [24] 1489 	mov	r6,dph
      0001C2 AF F0            [24] 1490 	mov	r7,b
                                   1491 ;	/opt/contiki/core/net/queuebuf.c:373: packetbuf_attr_copyto(buframptr->attrs, buframptr->addrs);
      0001C4 74 B6            [12] 1492 	mov	a,#0xB6
      0001C6 2D               [12] 1493 	add	a,r5
      0001C7 FA               [12] 1494 	mov	r2,a
      0001C8 E4               [12] 1495 	clr	a
      0001C9 3E               [12] 1496 	addc	a,r6
      0001CA FB               [12] 1497 	mov	r3,a
      0001CB 8F 04            [24] 1498 	mov	ar4,r7
      0001CD 74 82            [12] 1499 	mov	a,#0x82
      0001CF 2D               [12] 1500 	add	a,r5
      0001D0 FD               [12] 1501 	mov	r5,a
      0001D1 E4               [12] 1502 	clr	a
      0001D2 3E               [12] 1503 	addc	a,r6
      0001D3 FE               [12] 1504 	mov	r6,a
      0001D4 C0 02            [24] 1505 	push	ar2
      0001D6 C0 03            [24] 1506 	push	ar3
      0001D8 C0 04            [24] 1507 	push	ar4
      0001DA 8D 82            [24] 1508 	mov	dpl,r5
      0001DC 8E 83            [24] 1509 	mov	dph,r6
      0001DE 8F F0            [24] 1510 	mov	b,r7
      0001E0 78r00            [12] 1511 	mov	r0,#_packetbuf_attr_copyto
      0001E2 79s00            [12] 1512 	mov	r1,#(_packetbuf_attr_copyto >> 8)
      0001E4 7As00            [12] 1513 	mov	r2,#(_packetbuf_attr_copyto >> 16)
      0001E6 12r00r00         [24] 1514 	lcall	__sdcc_banked_call
      0001E9 15 81            [12] 1515 	dec	sp
      0001EB 15 81            [12] 1516 	dec	sp
      0001ED 15 81            [12] 1517 	dec	sp
      0001EF 02r00r00         [24] 1518 	ljmp	__sdcc_banked_ret
                                   1519 ;------------------------------------------------------------
                                   1520 ;Allocation info for local variables in function 'queuebuf_update_from_packetbuf'
                                   1521 ;------------------------------------------------------------
                                   1522 ;buf                       Allocated to registers r5 r6 r7 
                                   1523 ;buframptr                 Allocated to stack - sp -2
                                   1524 ;------------------------------------------------------------
                                   1525 ;	/opt/contiki/core/net/queuebuf.c:382: queuebuf_update_from_packetbuf(struct queuebuf *buf)
                                   1526 ;	-----------------------------------------
                                   1527 ;	 function queuebuf_update_from_packetbuf
                                   1528 ;	-----------------------------------------
      0001F2                       1529 _queuebuf_update_from_packetbuf:
      0001F2 05 81            [12] 1530 	inc	sp
      0001F4 05 81            [12] 1531 	inc	sp
      0001F6 05 81            [12] 1532 	inc	sp
                                   1533 ;	/opt/contiki/core/net/queuebuf.c:384: struct queuebuf_data *buframptr = queuebuf_load_to_ram(buf);
      0001F8 78r00            [12] 1534 	mov	r0,#_queuebuf_load_to_ram
      0001FA 79s00            [12] 1535 	mov	r1,#(_queuebuf_load_to_ram >> 8)
      0001FC 7As00            [12] 1536 	mov	r2,#(_queuebuf_load_to_ram >> 16)
      0001FE 12r00r00         [24] 1537 	lcall	__sdcc_banked_call
      000201 AD 82            [24] 1538 	mov	r5,dpl
      000203 AE 83            [24] 1539 	mov	r6,dph
      000205 AF F0            [24] 1540 	mov	r7,b
      000207 A8 81            [24] 1541 	mov	r0,sp
      000209 18               [12] 1542 	dec	r0
      00020A 18               [12] 1543 	dec	r0
      00020B A6 05            [24] 1544 	mov	@r0,ar5
      00020D 08               [12] 1545 	inc	r0
      00020E A6 06            [24] 1546 	mov	@r0,ar6
      000210 08               [12] 1547 	inc	r0
      000211 A6 07            [24] 1548 	mov	@r0,ar7
                                   1549 ;	/opt/contiki/core/net/queuebuf.c:385: packetbuf_attr_copyto(buframptr->attrs, buframptr->addrs);
      000213 A8 81            [24] 1550 	mov	r0,sp
      000215 18               [12] 1551 	dec	r0
      000216 18               [12] 1552 	dec	r0
      000217 74 B6            [12] 1553 	mov	a,#0xB6
      000219 26               [12] 1554 	add	a,@r0
      00021A FA               [12] 1555 	mov	r2,a
      00021B E4               [12] 1556 	clr	a
      00021C 08               [12] 1557 	inc	r0
      00021D 36               [12] 1558 	addc	a,@r0
      00021E FB               [12] 1559 	mov	r3,a
      00021F 08               [12] 1560 	inc	r0
      000220 86 04            [24] 1561 	mov	ar4,@r0
      000222 A8 81            [24] 1562 	mov	r0,sp
      000224 18               [12] 1563 	dec	r0
      000225 18               [12] 1564 	dec	r0
      000226 74 82            [12] 1565 	mov	a,#0x82
      000228 26               [12] 1566 	add	a,@r0
      000229 FD               [12] 1567 	mov	r5,a
      00022A E4               [12] 1568 	clr	a
      00022B 08               [12] 1569 	inc	r0
      00022C 36               [12] 1570 	addc	a,@r0
      00022D FE               [12] 1571 	mov	r6,a
      00022E 08               [12] 1572 	inc	r0
      00022F 86 07            [24] 1573 	mov	ar7,@r0
      000231 C0 02            [24] 1574 	push	ar2
      000233 C0 03            [24] 1575 	push	ar3
      000235 C0 04            [24] 1576 	push	ar4
      000237 8D 82            [24] 1577 	mov	dpl,r5
      000239 8E 83            [24] 1578 	mov	dph,r6
      00023B 8F F0            [24] 1579 	mov	b,r7
      00023D 78r00            [12] 1580 	mov	r0,#_packetbuf_attr_copyto
      00023F 79s00            [12] 1581 	mov	r1,#(_packetbuf_attr_copyto >> 8)
      000241 7As00            [12] 1582 	mov	r2,#(_packetbuf_attr_copyto >> 16)
      000243 12r00r00         [24] 1583 	lcall	__sdcc_banked_call
      000246 15 81            [12] 1584 	dec	sp
      000248 15 81            [12] 1585 	dec	sp
      00024A 15 81            [12] 1586 	dec	sp
                                   1587 ;	/opt/contiki/core/net/queuebuf.c:386: buframptr->len = packetbuf_copyto(buframptr->data);
      00024C A8 81            [24] 1588 	mov	r0,sp
      00024E 18               [12] 1589 	dec	r0
      00024F 18               [12] 1590 	dec	r0
      000250 74 80            [12] 1591 	mov	a,#0x80
      000252 26               [12] 1592 	add	a,@r0
      000253 FD               [12] 1593 	mov	r5,a
      000254 E4               [12] 1594 	clr	a
      000255 08               [12] 1595 	inc	r0
      000256 36               [12] 1596 	addc	a,@r0
      000257 FE               [12] 1597 	mov	r6,a
      000258 08               [12] 1598 	inc	r0
      000259 86 07            [24] 1599 	mov	ar7,@r0
      00025B A8 81            [24] 1600 	mov	r0,sp
      00025D 18               [12] 1601 	dec	r0
      00025E 18               [12] 1602 	dec	r0
      00025F 86 02            [24] 1603 	mov	ar2,@r0
      000261 08               [12] 1604 	inc	r0
      000262 86 03            [24] 1605 	mov	ar3,@r0
      000264 08               [12] 1606 	inc	r0
      000265 86 04            [24] 1607 	mov	ar4,@r0
      000267 8A 82            [24] 1608 	mov	dpl,r2
      000269 8B 83            [24] 1609 	mov	dph,r3
      00026B 8C F0            [24] 1610 	mov	b,r4
      00026D C0 07            [24] 1611 	push	ar7
      00026F C0 06            [24] 1612 	push	ar6
      000271 C0 05            [24] 1613 	push	ar5
      000273 78r00            [12] 1614 	mov	r0,#_packetbuf_copyto
      000275 79s00            [12] 1615 	mov	r1,#(_packetbuf_copyto >> 8)
      000277 7As00            [12] 1616 	mov	r2,#(_packetbuf_copyto >> 16)
      000279 12r00r00         [24] 1617 	lcall	__sdcc_banked_call
      00027C AB 82            [24] 1618 	mov	r3,dpl
      00027E AC 83            [24] 1619 	mov	r4,dph
      000280 D0 05            [24] 1620 	pop	ar5
      000282 D0 06            [24] 1621 	pop	ar6
      000284 D0 07            [24] 1622 	pop	ar7
      000286 8D 82            [24] 1623 	mov	dpl,r5
      000288 8E 83            [24] 1624 	mov	dph,r6
      00028A 8F F0            [24] 1625 	mov	b,r7
      00028C EB               [12] 1626 	mov	a,r3
      00028D 12r00r00         [24] 1627 	lcall	__gptrput
      000290 A3               [24] 1628 	inc	dptr
      000291 EC               [12] 1629 	mov	a,r4
      000292 12r00r00         [24] 1630 	lcall	__gptrput
      000295 15 81            [12] 1631 	dec	sp
      000297 15 81            [12] 1632 	dec	sp
      000299 15 81            [12] 1633 	dec	sp
      00029B 02r00r00         [24] 1634 	ljmp	__sdcc_banked_ret
                                   1635 ;------------------------------------------------------------
                                   1636 ;Allocation info for local variables in function 'queuebuf_free'
                                   1637 ;------------------------------------------------------------
                                   1638 ;buf                       Allocated to registers r5 r6 r7 
                                   1639 ;------------------------------------------------------------
                                   1640 ;	/opt/contiki/core/net/queuebuf.c:395: queuebuf_free(struct queuebuf *buf)
                                   1641 ;	-----------------------------------------
                                   1642 ;	 function queuebuf_free
                                   1643 ;	-----------------------------------------
      00029E                       1644 _queuebuf_free:
      00029E AD 82            [24] 1645 	mov	r5,dpl
      0002A0 AE 83            [24] 1646 	mov	r6,dph
      0002A2 AF F0            [24] 1647 	mov	r7,b
                                   1648 ;	/opt/contiki/core/net/queuebuf.c:397: if(memb_inmemb(&bufmem, buf)) {
      0002A4 8D 02            [24] 1649 	mov	ar2,r5
      0002A6 8E 03            [24] 1650 	mov	ar3,r6
      0002A8 8F 04            [24] 1651 	mov	ar4,r7
      0002AA C0 07            [24] 1652 	push	ar7
      0002AC C0 06            [24] 1653 	push	ar6
      0002AE C0 05            [24] 1654 	push	ar5
      0002B0 C0 02            [24] 1655 	push	ar2
      0002B2 C0 03            [24] 1656 	push	ar3
      0002B4 C0 04            [24] 1657 	push	ar4
      0002B6 90r00r00         [24] 1658 	mov	dptr,#_bufmem
      0002B9 75 F0 00         [24] 1659 	mov	b,#0x00
      0002BC 78r00            [12] 1660 	mov	r0,#_memb_inmemb
      0002BE 79s00            [12] 1661 	mov	r1,#(_memb_inmemb >> 8)
      0002C0 7As00            [12] 1662 	mov	r2,#(_memb_inmemb >> 16)
      0002C2 12r00r00         [24] 1663 	lcall	__sdcc_banked_call
      0002C5 AB 82            [24] 1664 	mov	r3,dpl
      0002C7 AC 83            [24] 1665 	mov	r4,dph
      0002C9 15 81            [12] 1666 	dec	sp
      0002CB 15 81            [12] 1667 	dec	sp
      0002CD 15 81            [12] 1668 	dec	sp
      0002CF D0 05            [24] 1669 	pop	ar5
      0002D1 D0 06            [24] 1670 	pop	ar6
      0002D3 D0 07            [24] 1671 	pop	ar7
      0002D5 EB               [12] 1672 	mov	a,r3
      0002D6 4C               [12] 1673 	orl	a,r4
      0002D7 60 56            [24] 1674 	jz	00103$
                                   1675 ;	/opt/contiki/core/net/queuebuf.c:405: memb_free(&buframmem, buf->ram_ptr);
      0002D9 8D 82            [24] 1676 	mov	dpl,r5
      0002DB 8E 83            [24] 1677 	mov	dph,r6
      0002DD 8F F0            [24] 1678 	mov	b,r7
      0002DF 12r00r00         [24] 1679 	lcall	__gptrget
      0002E2 FA               [12] 1680 	mov	r2,a
      0002E3 A3               [24] 1681 	inc	dptr
      0002E4 12r00r00         [24] 1682 	lcall	__gptrget
      0002E7 FB               [12] 1683 	mov	r3,a
      0002E8 A3               [24] 1684 	inc	dptr
      0002E9 12r00r00         [24] 1685 	lcall	__gptrget
      0002EC FC               [12] 1686 	mov	r4,a
      0002ED C0 07            [24] 1687 	push	ar7
      0002EF C0 06            [24] 1688 	push	ar6
      0002F1 C0 05            [24] 1689 	push	ar5
      0002F3 C0 02            [24] 1690 	push	ar2
      0002F5 C0 03            [24] 1691 	push	ar3
      0002F7 C0 04            [24] 1692 	push	ar4
      0002F9 90r00r0A         [24] 1693 	mov	dptr,#_buframmem
      0002FC 75 F0 00         [24] 1694 	mov	b,#0x00
      0002FF 78r00            [12] 1695 	mov	r0,#_memb_free
      000301 79s00            [12] 1696 	mov	r1,#(_memb_free >> 8)
      000303 7As00            [12] 1697 	mov	r2,#(_memb_free >> 16)
      000305 12r00r00         [24] 1698 	lcall	__sdcc_banked_call
      000308 15 81            [12] 1699 	dec	sp
      00030A 15 81            [12] 1700 	dec	sp
      00030C 15 81            [12] 1701 	dec	sp
      00030E D0 05            [24] 1702 	pop	ar5
      000310 D0 06            [24] 1703 	pop	ar6
      000312 D0 07            [24] 1704 	pop	ar7
                                   1705 ;	/opt/contiki/core/net/queuebuf.c:407: memb_free(&bufmem, buf);
      000314 C0 05            [24] 1706 	push	ar5
      000316 C0 06            [24] 1707 	push	ar6
      000318 C0 07            [24] 1708 	push	ar7
      00031A 90r00r00         [24] 1709 	mov	dptr,#_bufmem
      00031D 75 F0 00         [24] 1710 	mov	b,#0x00
      000320 78r00            [12] 1711 	mov	r0,#_memb_free
      000322 79s00            [12] 1712 	mov	r1,#(_memb_free >> 8)
      000324 7As00            [12] 1713 	mov	r2,#(_memb_free >> 16)
      000326 12r00r00         [24] 1714 	lcall	__sdcc_banked_call
      000329 15 81            [12] 1715 	dec	sp
      00032B 15 81            [12] 1716 	dec	sp
      00032D 15 81            [12] 1717 	dec	sp
      00032F                       1718 00103$:
      00032F 02r00r00         [24] 1719 	ljmp	__sdcc_banked_ret
                                   1720 ;------------------------------------------------------------
                                   1721 ;Allocation info for local variables in function 'queuebuf_to_packetbuf'
                                   1722 ;------------------------------------------------------------
                                   1723 ;b                         Allocated to registers r5 r6 r7 
                                   1724 ;buframptr                 Allocated to stack - sp -2
                                   1725 ;------------------------------------------------------------
                                   1726 ;	/opt/contiki/core/net/queuebuf.c:419: queuebuf_to_packetbuf(struct queuebuf *b)
                                   1727 ;	-----------------------------------------
                                   1728 ;	 function queuebuf_to_packetbuf
                                   1729 ;	-----------------------------------------
      000332                       1730 _queuebuf_to_packetbuf:
      000332 05 81            [12] 1731 	inc	sp
      000334 05 81            [12] 1732 	inc	sp
      000336 05 81            [12] 1733 	inc	sp
      000338 AD 82            [24] 1734 	mov	r5,dpl
      00033A AE 83            [24] 1735 	mov	r6,dph
      00033C AF F0            [24] 1736 	mov	r7,b
                                   1737 ;	/opt/contiki/core/net/queuebuf.c:421: if(memb_inmemb(&bufmem, b)) {
      00033E 8D 02            [24] 1738 	mov	ar2,r5
      000340 8E 03            [24] 1739 	mov	ar3,r6
      000342 8F 04            [24] 1740 	mov	ar4,r7
      000344 C0 07            [24] 1741 	push	ar7
      000346 C0 06            [24] 1742 	push	ar6
      000348 C0 05            [24] 1743 	push	ar5
      00034A C0 02            [24] 1744 	push	ar2
      00034C C0 03            [24] 1745 	push	ar3
      00034E C0 04            [24] 1746 	push	ar4
      000350 90r00r00         [24] 1747 	mov	dptr,#_bufmem
      000353 75 F0 00         [24] 1748 	mov	b,#0x00
      000356 78r00            [12] 1749 	mov	r0,#_memb_inmemb
      000358 79s00            [12] 1750 	mov	r1,#(_memb_inmemb >> 8)
      00035A 7As00            [12] 1751 	mov	r2,#(_memb_inmemb >> 16)
      00035C 12r00r00         [24] 1752 	lcall	__sdcc_banked_call
      00035F AB 82            [24] 1753 	mov	r3,dpl
      000361 AC 83            [24] 1754 	mov	r4,dph
      000363 15 81            [12] 1755 	dec	sp
      000365 15 81            [12] 1756 	dec	sp
      000367 15 81            [12] 1757 	dec	sp
      000369 D0 05            [24] 1758 	pop	ar5
      00036B D0 06            [24] 1759 	pop	ar6
      00036D D0 07            [24] 1760 	pop	ar7
      00036F EB               [12] 1761 	mov	a,r3
      000370 4C               [12] 1762 	orl	a,r4
      000371 70 03            [24] 1763 	jnz	00108$
      000373 02r04r11         [24] 1764 	ljmp	00103$
      000376                       1765 00108$:
                                   1766 ;	/opt/contiki/core/net/queuebuf.c:422: struct queuebuf_data *buframptr = queuebuf_load_to_ram(b);
      000376 8D 82            [24] 1767 	mov	dpl,r5
      000378 8E 83            [24] 1768 	mov	dph,r6
      00037A 8F F0            [24] 1769 	mov	b,r7
      00037C 78r00            [12] 1770 	mov	r0,#_queuebuf_load_to_ram
      00037E 79s00            [12] 1771 	mov	r1,#(_queuebuf_load_to_ram >> 8)
      000380 7As00            [12] 1772 	mov	r2,#(_queuebuf_load_to_ram >> 16)
      000382 12r00r00         [24] 1773 	lcall	__sdcc_banked_call
      000385 AD 82            [24] 1774 	mov	r5,dpl
      000387 AE 83            [24] 1775 	mov	r6,dph
      000389 AF F0            [24] 1776 	mov	r7,b
      00038B A8 81            [24] 1777 	mov	r0,sp
      00038D 18               [12] 1778 	dec	r0
      00038E 18               [12] 1779 	dec	r0
      00038F A6 05            [24] 1780 	mov	@r0,ar5
      000391 08               [12] 1781 	inc	r0
      000392 A6 06            [24] 1782 	mov	@r0,ar6
      000394 08               [12] 1783 	inc	r0
      000395 A6 07            [24] 1784 	mov	@r0,ar7
                                   1785 ;	/opt/contiki/core/net/queuebuf.c:423: packetbuf_copyfrom(buframptr->data, buframptr->len);
      000397 A8 81            [24] 1786 	mov	r0,sp
      000399 18               [12] 1787 	dec	r0
      00039A 18               [12] 1788 	dec	r0
      00039B 74 80            [12] 1789 	mov	a,#0x80
      00039D 26               [12] 1790 	add	a,@r0
      00039E FA               [12] 1791 	mov	r2,a
      00039F E4               [12] 1792 	clr	a
      0003A0 08               [12] 1793 	inc	r0
      0003A1 36               [12] 1794 	addc	a,@r0
      0003A2 FB               [12] 1795 	mov	r3,a
      0003A3 08               [12] 1796 	inc	r0
      0003A4 86 04            [24] 1797 	mov	ar4,@r0
      0003A6 8A 82            [24] 1798 	mov	dpl,r2
      0003A8 8B 83            [24] 1799 	mov	dph,r3
      0003AA 8C F0            [24] 1800 	mov	b,r4
      0003AC 12r00r00         [24] 1801 	lcall	__gptrget
      0003AF FA               [12] 1802 	mov	r2,a
      0003B0 A3               [24] 1803 	inc	dptr
      0003B1 12r00r00         [24] 1804 	lcall	__gptrget
      0003B4 FB               [12] 1805 	mov	r3,a
      0003B5 A8 81            [24] 1806 	mov	r0,sp
      0003B7 18               [12] 1807 	dec	r0
      0003B8 18               [12] 1808 	dec	r0
      0003B9 86 04            [24] 1809 	mov	ar4,@r0
      0003BB 08               [12] 1810 	inc	r0
      0003BC 86 06            [24] 1811 	mov	ar6,@r0
      0003BE 08               [12] 1812 	inc	r0
      0003BF 86 07            [24] 1813 	mov	ar7,@r0
      0003C1 C0 02            [24] 1814 	push	ar2
      0003C3 C0 03            [24] 1815 	push	ar3
      0003C5 8C 82            [24] 1816 	mov	dpl,r4
      0003C7 8E 83            [24] 1817 	mov	dph,r6
      0003C9 8F F0            [24] 1818 	mov	b,r7
      0003CB 78r00            [12] 1819 	mov	r0,#_packetbuf_copyfrom
      0003CD 79s00            [12] 1820 	mov	r1,#(_packetbuf_copyfrom >> 8)
      0003CF 7As00            [12] 1821 	mov	r2,#(_packetbuf_copyfrom >> 16)
      0003D1 12r00r00         [24] 1822 	lcall	__sdcc_banked_call
      0003D4 15 81            [12] 1823 	dec	sp
      0003D6 15 81            [12] 1824 	dec	sp
                                   1825 ;	/opt/contiki/core/net/queuebuf.c:424: packetbuf_attr_copyfrom(buframptr->attrs, buframptr->addrs);
      0003D8 A8 81            [24] 1826 	mov	r0,sp
      0003DA 18               [12] 1827 	dec	r0
      0003DB 18               [12] 1828 	dec	r0
      0003DC 74 B6            [12] 1829 	mov	a,#0xB6
      0003DE 26               [12] 1830 	add	a,@r0
      0003DF FD               [12] 1831 	mov	r5,a
      0003E0 E4               [12] 1832 	clr	a
      0003E1 08               [12] 1833 	inc	r0
      0003E2 36               [12] 1834 	addc	a,@r0
      0003E3 FE               [12] 1835 	mov	r6,a
      0003E4 08               [12] 1836 	inc	r0
      0003E5 86 07            [24] 1837 	mov	ar7,@r0
      0003E7 A8 81            [24] 1838 	mov	r0,sp
      0003E9 18               [12] 1839 	dec	r0
      0003EA 18               [12] 1840 	dec	r0
      0003EB 74 82            [12] 1841 	mov	a,#0x82
      0003ED 26               [12] 1842 	add	a,@r0
      0003EE FA               [12] 1843 	mov	r2,a
      0003EF E4               [12] 1844 	clr	a
      0003F0 08               [12] 1845 	inc	r0
      0003F1 36               [12] 1846 	addc	a,@r0
      0003F2 FB               [12] 1847 	mov	r3,a
      0003F3 08               [12] 1848 	inc	r0
      0003F4 86 04            [24] 1849 	mov	ar4,@r0
      0003F6 C0 05            [24] 1850 	push	ar5
      0003F8 C0 06            [24] 1851 	push	ar6
      0003FA C0 07            [24] 1852 	push	ar7
      0003FC 8A 82            [24] 1853 	mov	dpl,r2
      0003FE 8B 83            [24] 1854 	mov	dph,r3
      000400 8C F0            [24] 1855 	mov	b,r4
      000402 78r00            [12] 1856 	mov	r0,#_packetbuf_attr_copyfrom
      000404 79s00            [12] 1857 	mov	r1,#(_packetbuf_attr_copyfrom >> 8)
      000406 7As00            [12] 1858 	mov	r2,#(_packetbuf_attr_copyfrom >> 16)
      000408 12r00r00         [24] 1859 	lcall	__sdcc_banked_call
      00040B 15 81            [12] 1860 	dec	sp
      00040D 15 81            [12] 1861 	dec	sp
      00040F 15 81            [12] 1862 	dec	sp
      000411                       1863 00103$:
      000411 15 81            [12] 1864 	dec	sp
      000413 15 81            [12] 1865 	dec	sp
      000415 15 81            [12] 1866 	dec	sp
      000417 02r00r00         [24] 1867 	ljmp	__sdcc_banked_ret
                                   1868 ;------------------------------------------------------------
                                   1869 ;Allocation info for local variables in function 'queuebuf_dataptr'
                                   1870 ;------------------------------------------------------------
                                   1871 ;b                         Allocated to registers r5 r6 r7 
                                   1872 ;buframptr                 Allocated to registers 
                                   1873 ;------------------------------------------------------------
                                   1874 ;	/opt/contiki/core/net/queuebuf.c:429: queuebuf_dataptr(struct queuebuf *b)
                                   1875 ;	-----------------------------------------
                                   1876 ;	 function queuebuf_dataptr
                                   1877 ;	-----------------------------------------
      00041A                       1878 _queuebuf_dataptr:
      00041A AD 82            [24] 1879 	mov	r5,dpl
      00041C AE 83            [24] 1880 	mov	r6,dph
      00041E AF F0            [24] 1881 	mov	r7,b
                                   1882 ;	/opt/contiki/core/net/queuebuf.c:431: if(memb_inmemb(&bufmem, b)) {
      000420 8D 02            [24] 1883 	mov	ar2,r5
      000422 8E 03            [24] 1884 	mov	ar3,r6
      000424 8F 04            [24] 1885 	mov	ar4,r7
      000426 C0 07            [24] 1886 	push	ar7
      000428 C0 06            [24] 1887 	push	ar6
      00042A C0 05            [24] 1888 	push	ar5
      00042C C0 02            [24] 1889 	push	ar2
      00042E C0 03            [24] 1890 	push	ar3
      000430 C0 04            [24] 1891 	push	ar4
      000432 90r00r00         [24] 1892 	mov	dptr,#_bufmem
      000435 75 F0 00         [24] 1893 	mov	b,#0x00
      000438 78r00            [12] 1894 	mov	r0,#_memb_inmemb
      00043A 79s00            [12] 1895 	mov	r1,#(_memb_inmemb >> 8)
      00043C 7As00            [12] 1896 	mov	r2,#(_memb_inmemb >> 16)
      00043E 12r00r00         [24] 1897 	lcall	__sdcc_banked_call
      000441 AB 82            [24] 1898 	mov	r3,dpl
      000443 AC 83            [24] 1899 	mov	r4,dph
      000445 15 81            [12] 1900 	dec	sp
      000447 15 81            [12] 1901 	dec	sp
      000449 15 81            [12] 1902 	dec	sp
      00044B D0 05            [24] 1903 	pop	ar5
      00044D D0 06            [24] 1904 	pop	ar6
      00044F D0 07            [24] 1905 	pop	ar7
      000451 EB               [12] 1906 	mov	a,r3
      000452 4C               [12] 1907 	orl	a,r4
      000453 60 17            [24] 1908 	jz	00102$
                                   1909 ;	/opt/contiki/core/net/queuebuf.c:432: struct queuebuf_data *buframptr = queuebuf_load_to_ram(b);
      000455 8D 82            [24] 1910 	mov	dpl,r5
      000457 8E 83            [24] 1911 	mov	dph,r6
      000459 8F F0            [24] 1912 	mov	b,r7
      00045B 78r00            [12] 1913 	mov	r0,#_queuebuf_load_to_ram
      00045D 79s00            [12] 1914 	mov	r1,#(_queuebuf_load_to_ram >> 8)
      00045F 7As00            [12] 1915 	mov	r2,#(_queuebuf_load_to_ram >> 16)
      000461 12r00r00         [24] 1916 	lcall	__sdcc_banked_call
                                   1917 ;	/opt/contiki/core/net/queuebuf.c:433: return buframptr->data;
      000464 AD 82            [24] 1918 	mov	r5,dpl
      000466 AE 83            [24] 1919 	mov	r6,dph
      000468 AF F0            [24] 1920 	mov	r7,b
      00046A 80 06            [24] 1921 	sjmp	00103$
      00046C                       1922 00102$:
                                   1923 ;	/opt/contiki/core/net/queuebuf.c:435: return NULL;
      00046C 90 00 00         [24] 1924 	mov	dptr,#0x0000
      00046F 75 F0 00         [24] 1925 	mov	b,#0x00
      000472                       1926 00103$:
      000472 02r00r00         [24] 1927 	ljmp	__sdcc_banked_ret
                                   1928 ;------------------------------------------------------------
                                   1929 ;Allocation info for local variables in function 'queuebuf_datalen'
                                   1930 ;------------------------------------------------------------
                                   1931 ;b                         Allocated to registers r5 r6 r7 
                                   1932 ;buframptr                 Allocated to registers 
                                   1933 ;------------------------------------------------------------
                                   1934 ;	/opt/contiki/core/net/queuebuf.c:439: queuebuf_datalen(struct queuebuf *b)
                                   1935 ;	-----------------------------------------
                                   1936 ;	 function queuebuf_datalen
                                   1937 ;	-----------------------------------------
      000475                       1938 _queuebuf_datalen:
                                   1939 ;	/opt/contiki/core/net/queuebuf.c:441: struct queuebuf_data *buframptr = queuebuf_load_to_ram(b);
      000475 78r00            [12] 1940 	mov	r0,#_queuebuf_load_to_ram
      000477 79s00            [12] 1941 	mov	r1,#(_queuebuf_load_to_ram >> 8)
      000479 7As00            [12] 1942 	mov	r2,#(_queuebuf_load_to_ram >> 16)
      00047B 12r00r00         [24] 1943 	lcall	__sdcc_banked_call
      00047E AD 82            [24] 1944 	mov	r5,dpl
      000480 AE 83            [24] 1945 	mov	r6,dph
      000482 AF F0            [24] 1946 	mov	r7,b
                                   1947 ;	/opt/contiki/core/net/queuebuf.c:442: return buframptr->len;
      000484 74 80            [12] 1948 	mov	a,#0x80
      000486 2D               [12] 1949 	add	a,r5
      000487 FD               [12] 1950 	mov	r5,a
      000488 E4               [12] 1951 	clr	a
      000489 3E               [12] 1952 	addc	a,r6
      00048A FE               [12] 1953 	mov	r6,a
      00048B 8D 82            [24] 1954 	mov	dpl,r5
      00048D 8E 83            [24] 1955 	mov	dph,r6
      00048F 8F F0            [24] 1956 	mov	b,r7
      000491 12r00r00         [24] 1957 	lcall	__gptrget
      000494 FD               [12] 1958 	mov	r5,a
      000495 A3               [24] 1959 	inc	dptr
      000496 12r00r00         [24] 1960 	lcall	__gptrget
      000499 FE               [12] 1961 	mov	r6,a
      00049A 8D 82            [24] 1962 	mov	dpl,r5
      00049C 8E 83            [24] 1963 	mov	dph,r6
      00049E 02r00r00         [24] 1964 	ljmp	__sdcc_banked_ret
                                   1965 ;------------------------------------------------------------
                                   1966 ;Allocation info for local variables in function 'queuebuf_addr'
                                   1967 ;------------------------------------------------------------
                                   1968 ;type                      Allocated to stack - sp -3
                                   1969 ;b                         Allocated to registers r5 r6 r7 
                                   1970 ;buframptr                 Allocated to registers 
                                   1971 ;------------------------------------------------------------
                                   1972 ;	/opt/contiki/core/net/queuebuf.c:446: queuebuf_addr(struct queuebuf *b, uint8_t type)
                                   1973 ;	-----------------------------------------
                                   1974 ;	 function queuebuf_addr
                                   1975 ;	-----------------------------------------
      0004A1                       1976 _queuebuf_addr:
                                   1977 ;	/opt/contiki/core/net/queuebuf.c:448: struct queuebuf_data *buframptr = queuebuf_load_to_ram(b);
      0004A1 78r00            [12] 1978 	mov	r0,#_queuebuf_load_to_ram
      0004A3 79s00            [12] 1979 	mov	r1,#(_queuebuf_load_to_ram >> 8)
      0004A5 7As00            [12] 1980 	mov	r2,#(_queuebuf_load_to_ram >> 16)
      0004A7 12r00r00         [24] 1981 	lcall	__sdcc_banked_call
      0004AA AD 82            [24] 1982 	mov	r5,dpl
      0004AC AE 83            [24] 1983 	mov	r6,dph
      0004AE AF F0            [24] 1984 	mov	r7,b
                                   1985 ;	/opt/contiki/core/net/queuebuf.c:449: return &buframptr->addrs[type - PACKETBUF_ADDR_FIRST].addr;
      0004B0 74 B6            [12] 1986 	mov	a,#0xB6
      0004B2 2D               [12] 1987 	add	a,r5
      0004B3 FD               [12] 1988 	mov	r5,a
      0004B4 E4               [12] 1989 	clr	a
      0004B5 3E               [12] 1990 	addc	a,r6
      0004B6 FE               [12] 1991 	mov	r6,a
      0004B7 E5 81            [12] 1992 	mov	a,sp
      0004B9 24 FD            [12] 1993 	add	a,#0xfd
      0004BB F8               [12] 1994 	mov	r0,a
      0004BC E6               [12] 1995 	mov	a,@r0
      0004BD 24 E6            [12] 1996 	add	a,#0xE6
      0004BF C4               [12] 1997 	swap	a
      0004C0 03               [12] 1998 	rr	a
      0004C1 54 F8            [12] 1999 	anl	a,#0xF8
      0004C3 FC               [12] 2000 	mov	r4,a
      0004C4 2D               [12] 2001 	add	a,r5
      0004C5 FD               [12] 2002 	mov	r5,a
      0004C6 E4               [12] 2003 	clr	a
      0004C7 3E               [12] 2004 	addc	a,r6
      0004C8 FE               [12] 2005 	mov	r6,a
      0004C9 8D 82            [24] 2006 	mov	dpl,r5
      0004CB 8E 83            [24] 2007 	mov	dph,r6
      0004CD 8F F0            [24] 2008 	mov	b,r7
      0004CF 02r00r00         [24] 2009 	ljmp	__sdcc_banked_ret
                                   2010 ;------------------------------------------------------------
                                   2011 ;Allocation info for local variables in function 'queuebuf_attr'
                                   2012 ;------------------------------------------------------------
                                   2013 ;type                      Allocated to stack - sp -3
                                   2014 ;b                         Allocated to registers r5 r6 r7 
                                   2015 ;buframptr                 Allocated to registers 
                                   2016 ;------------------------------------------------------------
                                   2017 ;	/opt/contiki/core/net/queuebuf.c:453: queuebuf_attr(struct queuebuf *b, uint8_t type)
                                   2018 ;	-----------------------------------------
                                   2019 ;	 function queuebuf_attr
                                   2020 ;	-----------------------------------------
      0004D2                       2021 _queuebuf_attr:
                                   2022 ;	/opt/contiki/core/net/queuebuf.c:455: struct queuebuf_data *buframptr = queuebuf_load_to_ram(b);
      0004D2 78r00            [12] 2023 	mov	r0,#_queuebuf_load_to_ram
      0004D4 79s00            [12] 2024 	mov	r1,#(_queuebuf_load_to_ram >> 8)
      0004D6 7As00            [12] 2025 	mov	r2,#(_queuebuf_load_to_ram >> 16)
      0004D8 12r00r00         [24] 2026 	lcall	__sdcc_banked_call
      0004DB AD 82            [24] 2027 	mov	r5,dpl
      0004DD AE 83            [24] 2028 	mov	r6,dph
      0004DF AF F0            [24] 2029 	mov	r7,b
                                   2030 ;	/opt/contiki/core/net/queuebuf.c:456: return buframptr->attrs[type].val;
      0004E1 74 82            [12] 2031 	mov	a,#0x82
      0004E3 2D               [12] 2032 	add	a,r5
      0004E4 FD               [12] 2033 	mov	r5,a
      0004E5 E4               [12] 2034 	clr	a
      0004E6 3E               [12] 2035 	addc	a,r6
      0004E7 FE               [12] 2036 	mov	r6,a
      0004E8 E5 81            [12] 2037 	mov	a,sp
      0004EA 24 FD            [12] 2038 	add	a,#0xfd
      0004EC F8               [12] 2039 	mov	r0,a
      0004ED E6               [12] 2040 	mov	a,@r0
      0004EE 25 E0            [12] 2041 	add	a,acc
      0004F0 FC               [12] 2042 	mov	r4,a
      0004F1 2D               [12] 2043 	add	a,r5
      0004F2 FD               [12] 2044 	mov	r5,a
      0004F3 E4               [12] 2045 	clr	a
      0004F4 3E               [12] 2046 	addc	a,r6
      0004F5 FE               [12] 2047 	mov	r6,a
      0004F6 8D 82            [24] 2048 	mov	dpl,r5
      0004F8 8E 83            [24] 2049 	mov	dph,r6
      0004FA 8F F0            [24] 2050 	mov	b,r7
      0004FC 12r00r00         [24] 2051 	lcall	__gptrget
      0004FF FD               [12] 2052 	mov	r5,a
      000500 A3               [24] 2053 	inc	dptr
      000501 12r00r00         [24] 2054 	lcall	__gptrget
      000504 FE               [12] 2055 	mov	r6,a
      000505 8D 82            [24] 2056 	mov	dpl,r5
      000507 8E 83            [24] 2057 	mov	dph,r6
      000509 02r00r00         [24] 2058 	ljmp	__sdcc_banked_ret
                                   2059 ;------------------------------------------------------------
                                   2060 ;Allocation info for local variables in function 'queuebuf_debug_print'
                                   2061 ;------------------------------------------------------------
                                   2062 ;	/opt/contiki/core/net/queuebuf.c:460: queuebuf_debug_print(void)
                                   2063 ;	-----------------------------------------
                                   2064 ;	 function queuebuf_debug_print
                                   2065 ;	-----------------------------------------
      00050C                       2066 _queuebuf_debug_print:
                                   2067 ;	/opt/contiki/core/net/queuebuf.c:471: }
      00050C 02r00r00         [24] 2068 	ljmp	__sdcc_banked_ret
                                   2069 	.area CSEG    (CODE)
                                   2070 	.area CONST   (CODE)
                                   2071 	.area XINIT   (CODE)
      000000                       2072 __xinit__bufmem:
      000000 03 00                 2073 	.byte #0x03,#0x00	; 3
      000002 06 00                 2074 	.byte #0x06,#0x00	; 6
      000004r00s00 00              2075 	.byte _bufmem_memb_count, (_bufmem_memb_count >> 8),#0x00
      000007r06s00 00              2076 	.byte _bufmem_memb_mem, (_bufmem_memb_mem >> 8),#0x00
      00000A                       2077 __xinit__buframmem:
      00000A D6 00                 2078 	.byte #0xD6,#0x00	; 214
      00000C 06 00                 2079 	.byte #0x06,#0x00	; 6
      00000Er18s00 00              2080 	.byte _buframmem_memb_count, (_buframmem_memb_count >> 8),#0x00
      000011r1Es00 00              2081 	.byte _buframmem_memb_mem, (_buframmem_memb_mem >> 8),#0x00
                                   2082 	.area CABS    (ABS,CODE)
