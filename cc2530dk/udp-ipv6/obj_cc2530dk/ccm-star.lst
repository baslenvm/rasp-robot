                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.5 #9380 (Linux)
                                      4 ; This file was generated Wed Nov 18 02:57:27 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module ccm_star
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _ccm_star_driver
                                     13 	.globl _memcpy
                                     14 	.globl _ACTIVE
                                     15 	.globl _TX_BYTE
                                     16 	.globl _RX_BYTE
                                     17 	.globl _ERR
                                     18 	.globl _FE
                                     19 	.globl _SLAVE
                                     20 	.globl _RE
                                     21 	.globl _MODE
                                     22 	.globl _T3OVFIF
                                     23 	.globl _T3CH0IF
                                     24 	.globl _T3CH1IF
                                     25 	.globl _T4OVFIF
                                     26 	.globl _T4CH0IF
                                     27 	.globl _T4CH1IF
                                     28 	.globl _OVFIM
                                     29 	.globl _B_0
                                     30 	.globl _B_1
                                     31 	.globl _B_2
                                     32 	.globl _B_3
                                     33 	.globl _B_4
                                     34 	.globl _B_5
                                     35 	.globl _B_6
                                     36 	.globl _B_7
                                     37 	.globl _P2IF
                                     38 	.globl _UTX0IF
                                     39 	.globl _UTX1IF
                                     40 	.globl _P1IF
                                     41 	.globl _WDTIF
                                     42 	.globl _ACC_0
                                     43 	.globl _ACC_1
                                     44 	.globl _ACC_2
                                     45 	.globl _ACC_3
                                     46 	.globl _ACC_4
                                     47 	.globl _ACC_5
                                     48 	.globl _ACC_6
                                     49 	.globl _ACC_7
                                     50 	.globl _P
                                     51 	.globl _F1
                                     52 	.globl _OV
                                     53 	.globl _RS0
                                     54 	.globl _RS1
                                     55 	.globl _F0
                                     56 	.globl _AC
                                     57 	.globl _CY
                                     58 	.globl _DMAIF
                                     59 	.globl _T1IF
                                     60 	.globl _T2IF
                                     61 	.globl _T3IF
                                     62 	.globl _T4IF
                                     63 	.globl _P0IF
                                     64 	.globl _STIF
                                     65 	.globl _DMAIE
                                     66 	.globl _T1IE
                                     67 	.globl _T2IE
                                     68 	.globl _T3IE
                                     69 	.globl _T4IE
                                     70 	.globl _P0IE
                                     71 	.globl _RFERRIE
                                     72 	.globl _ADCIE
                                     73 	.globl _URX0IE
                                     74 	.globl _URX1IE
                                     75 	.globl _ENCIE
                                     76 	.globl _STIE
                                     77 	.globl _EA
                                     78 	.globl _P2_0
                                     79 	.globl _P2_1
                                     80 	.globl _P2_2
                                     81 	.globl _P2_3
                                     82 	.globl _P2_4
                                     83 	.globl _P2_5
                                     84 	.globl _P2_6
                                     85 	.globl _P2_7
                                     86 	.globl _ENCIF_0
                                     87 	.globl _ENCIF_1
                                     88 	.globl _P1_0
                                     89 	.globl _P1_1
                                     90 	.globl _P1_2
                                     91 	.globl _P1_3
                                     92 	.globl _P1_4
                                     93 	.globl _P1_5
                                     94 	.globl _P1_6
                                     95 	.globl _P1_7
                                     96 	.globl _IT0
                                     97 	.globl _RFERRIF
                                     98 	.globl _IT1
                                     99 	.globl _URX0IF
                                    100 	.globl _ADCIF
                                    101 	.globl _URX1IF
                                    102 	.globl _P0_0
                                    103 	.globl _P0_1
                                    104 	.globl _P0_2
                                    105 	.globl _P0_3
                                    106 	.globl _P0_4
                                    107 	.globl _P0_5
                                    108 	.globl _P0_6
                                    109 	.globl _P0_7
                                    110 	.globl _WDCTL
                                    111 	.globl _U1GCR
                                    112 	.globl _U1UCR
                                    113 	.globl _U1BAUD
                                    114 	.globl _U1DBUF
                                    115 	.globl _U1CSR
                                    116 	.globl _U0GCR
                                    117 	.globl _U0UCR
                                    118 	.globl _U0BAUD
                                    119 	.globl _U0DBUF
                                    120 	.globl _U0CSR
                                    121 	.globl _TIMIF
                                    122 	.globl _T4CC1
                                    123 	.globl _T4CCTL1
                                    124 	.globl _T4CC0
                                    125 	.globl _T4CCTL0
                                    126 	.globl _T4CTL
                                    127 	.globl _T4CNT
                                    128 	.globl _T3CC1
                                    129 	.globl _T3CCTL1
                                    130 	.globl _T3CC0
                                    131 	.globl _T3CCTL0
                                    132 	.globl _T3CTL
                                    133 	.globl _T3CNT
                                    134 	.globl _T2MSEL
                                    135 	.globl _T2IRQM
                                    136 	.globl _T2MOVF2
                                    137 	.globl _T2MOVF1
                                    138 	.globl _T2MOVF0
                                    139 	.globl _T2M1
                                    140 	.globl _T2M0
                                    141 	.globl _T2IRQF
                                    142 	.globl _T2EVTCFG
                                    143 	.globl _T2CTRL
                                    144 	.globl _T1STAT
                                    145 	.globl _T1CCTL2
                                    146 	.globl _T1CCTL1
                                    147 	.globl _T1CCTL0
                                    148 	.globl _T1CTL
                                    149 	.globl _T1CNTH
                                    150 	.globl _T1CNTL
                                    151 	.globl _T1CC2H
                                    152 	.globl _T1CC2L
                                    153 	.globl _T1CC1H
                                    154 	.globl _T1CC1L
                                    155 	.globl _T1CC0H
                                    156 	.globl _T1CC0L
                                    157 	.globl _CLKCONSTA
                                    158 	.globl _CLKCONCMD
                                    159 	.globl _SLEEPSTA
                                    160 	.globl _SLEEPCMD
                                    161 	.globl _STLOAD
                                    162 	.globl _ST2
                                    163 	.globl _ST1
                                    164 	.globl _ST0
                                    165 	.globl _RFERRF
                                    166 	.globl _RFIRQF0
                                    167 	.globl _RFST
                                    168 	.globl _RFD
                                    169 	.globl _RFIRQF1
                                    170 	.globl _PSBANK
                                    171 	.globl _FMAP
                                    172 	.globl _MEMCTR
                                    173 	.globl __XPAGE
                                    174 	.globl _MPAGE
                                    175 	.globl _PMUX
                                    176 	.globl _P2DIR
                                    177 	.globl _P1DIR
                                    178 	.globl _P0DIR
                                    179 	.globl _P2INP
                                    180 	.globl _P1INP
                                    181 	.globl _P2SEL
                                    182 	.globl _P1SEL
                                    183 	.globl _P0SEL
                                    184 	.globl _APCFG
                                    185 	.globl _PERCFG
                                    186 	.globl _P0INP
                                    187 	.globl _P2IEN
                                    188 	.globl _P1IEN
                                    189 	.globl _P0IEN
                                    190 	.globl _PICTL
                                    191 	.globl _P2IFG
                                    192 	.globl _P1IFG
                                    193 	.globl _P0IFG
                                    194 	.globl _DMAREQ
                                    195 	.globl _DMAARM
                                    196 	.globl _DMA0CFGH
                                    197 	.globl _DMA0CFGL
                                    198 	.globl _DMA1CFGH
                                    199 	.globl _DMA1CFGL
                                    200 	.globl _DMAIRQ
                                    201 	.globl _ENCCS
                                    202 	.globl _ENCDO
                                    203 	.globl _ENCDI
                                    204 	.globl _RNDH
                                    205 	.globl _RNDL
                                    206 	.globl _ADCH
                                    207 	.globl _ADCL
                                    208 	.globl _ADCCON3
                                    209 	.globl _ADCCON2
                                    210 	.globl _ADCCON1
                                    211 	.globl _B
                                    212 	.globl _IRCON2
                                    213 	.globl _ACC
                                    214 	.globl _PSW
                                    215 	.globl _IRCON
                                    216 	.globl _IP1
                                    217 	.globl _IEN1
                                    218 	.globl _IP0
                                    219 	.globl _IEN0
                                    220 	.globl _P2
                                    221 	.globl _S1CON
                                    222 	.globl _IEN2
                                    223 	.globl _S0CON
                                    224 	.globl _DPS
                                    225 	.globl _P1
                                    226 	.globl _TCON
                                    227 	.globl _PCON
                                    228 	.globl _DPH1
                                    229 	.globl _DPL1
                                    230 	.globl _DPH0
                                    231 	.globl _DPL0
                                    232 	.globl _SP
                                    233 	.globl _P0
                                    234 	.globl _X_IEEE_ADDR
                                    235 	.globl _X_INFOPAGE
                                    236 	.globl _X_P2DIR
                                    237 	.globl _X_P1DIR
                                    238 	.globl _X_P0DIR
                                    239 	.globl _X_U1GCR
                                    240 	.globl _X_U1UCR
                                    241 	.globl _X_U1BAUD
                                    242 	.globl _X_U1DBUF
                                    243 	.globl _X_U1CSR
                                    244 	.globl _X_P2INP
                                    245 	.globl _X_P1INP
                                    246 	.globl _X_P2SEL
                                    247 	.globl _X_P1SEL
                                    248 	.globl _X_P0SEL
                                    249 	.globl _X_APCFG
                                    250 	.globl _X_PERCFG
                                    251 	.globl _X_T4CC1
                                    252 	.globl _X_T4CCTL1
                                    253 	.globl _X_T4CC0
                                    254 	.globl _X_T4CCTL0
                                    255 	.globl _X_T4CTL
                                    256 	.globl _X_T4CNT
                                    257 	.globl _X_RFIRQF0
                                    258 	.globl _X_T1CCTL2
                                    259 	.globl _X_T1CCTL1
                                    260 	.globl _X_T1CCTL0
                                    261 	.globl _X_T1CTL
                                    262 	.globl _X_T1CNTH
                                    263 	.globl _X_T1CNTL
                                    264 	.globl _X_RFST
                                    265 	.globl _X_T1CC2H
                                    266 	.globl _X_T1CC2L
                                    267 	.globl _X_T1CC1H
                                    268 	.globl _X_T1CC1L
                                    269 	.globl _X_T1CC0H
                                    270 	.globl _X_T1CC0L
                                    271 	.globl _X_RFD
                                    272 	.globl _X_TIMIF
                                    273 	.globl _X_DMAREQ
                                    274 	.globl _X_DMAARM
                                    275 	.globl _X_DMA0CFGH
                                    276 	.globl _X_DMA0CFGL
                                    277 	.globl _X_DMA1CFGH
                                    278 	.globl _X_DMA1CFGL
                                    279 	.globl _X_DMAIRQ
                                    280 	.globl _X_T3CC1
                                    281 	.globl _X_T3CCTL1
                                    282 	.globl _X_T3CC0
                                    283 	.globl _X_T3CCTL0
                                    284 	.globl _X_T3CTL
                                    285 	.globl _X_T3CNT
                                    286 	.globl _X_WDCTL
                                    287 	.globl _X_MEMCTR
                                    288 	.globl _X_CLKCONCMD
                                    289 	.globl _X_U0GCR
                                    290 	.globl _X_U0UCR
                                    291 	.globl _X_T2MSEL
                                    292 	.globl _X_U0BAUD
                                    293 	.globl _X_U0DBUF
                                    294 	.globl _X_RFERRF
                                    295 	.globl _X_SLEEPCMD
                                    296 	.globl _X_RNDH
                                    297 	.globl _X_RNDL
                                    298 	.globl _X_ADCH
                                    299 	.globl _X_ADCL
                                    300 	.globl _X_ADCCON3
                                    301 	.globl _X_ADCCON2
                                    302 	.globl _X_ADCCON1
                                    303 	.globl _X_ENCCS
                                    304 	.globl _X_ENCDO
                                    305 	.globl _X_ENCDI
                                    306 	.globl _X_T1STAT
                                    307 	.globl _X_PMUX
                                    308 	.globl _X_STLOAD
                                    309 	.globl _X_P2IEN
                                    310 	.globl _X_P0IEN
                                    311 	.globl _X_T2IRQM
                                    312 	.globl _X_T2MOVF2
                                    313 	.globl _X_T2MOVF1
                                    314 	.globl _X_T2MOVF0
                                    315 	.globl _X_T2M1
                                    316 	.globl _X_T2M0
                                    317 	.globl _X_T2IRQF
                                    318 	.globl _X_P2
                                    319 	.globl _X_PSBANK
                                    320 	.globl _X_FMAP
                                    321 	.globl _X_CLKCONSTA
                                    322 	.globl _X_SLEEPSTA
                                    323 	.globl _X_T2EVTCFG
                                    324 	.globl _X_ST2
                                    325 	.globl _X_ST1
                                    326 	.globl _X_ST0
                                    327 	.globl _X_T2CTRL
                                    328 	.globl _X__XPAGE
                                    329 	.globl _X_MPAGE
                                    330 	.globl _X_RFIRQF1
                                    331 	.globl _X_P1
                                    332 	.globl _X_P0INP
                                    333 	.globl _X_P1IEN
                                    334 	.globl _X_PICTL
                                    335 	.globl _X_P2IFG
                                    336 	.globl _X_P1IFG
                                    337 	.globl _X_P0IFG
                                    338 	.globl _X_U0CSR
                                    339 	.globl _X_P0
                                    340 	.globl _USBF5
                                    341 	.globl _USBF4
                                    342 	.globl _USBF3
                                    343 	.globl _USBF2
                                    344 	.globl _USBF1
                                    345 	.globl _USBF0
                                    346 	.globl _USBCNTH
                                    347 	.globl _USBCNTL
                                    348 	.globl _USBCNT0
                                    349 	.globl _USBCSOH
                                    350 	.globl _USBCSOL
                                    351 	.globl _USBMAXO
                                    352 	.globl _USBCSIH
                                    353 	.globl _USBCSIL
                                    354 	.globl _USBCS0
                                    355 	.globl _USBMAXI
                                    356 	.globl _USBCTRL
                                    357 	.globl _USBINDEX
                                    358 	.globl _USBFRMH
                                    359 	.globl _USBFRML
                                    360 	.globl _USBCIE
                                    361 	.globl _USBOIE
                                    362 	.globl _USBIIE
                                    363 	.globl _USBCIF
                                    364 	.globl _USBOIF
                                    365 	.globl _USBIIF
                                    366 	.globl _USBPOW
                                    367 	.globl _USBADDR
                                    368 	.globl _CSPT
                                    369 	.globl _CSPZ
                                    370 	.globl _CSPY
                                    371 	.globl _CSPX
                                    372 	.globl _CSPSTAT
                                    373 	.globl _CSPCTRL
                                    374 	.globl _CSPPROG23
                                    375 	.globl _CSPPROG22
                                    376 	.globl _CSPPROG21
                                    377 	.globl _CSPPROG20
                                    378 	.globl _CSPPROG19
                                    379 	.globl _CSPPROG18
                                    380 	.globl _CSPPROG17
                                    381 	.globl _CSPPROG16
                                    382 	.globl _CSPPROG15
                                    383 	.globl _CSPPROG14
                                    384 	.globl _CSPPROG13
                                    385 	.globl _CSPPROG12
                                    386 	.globl _CSPPROG11
                                    387 	.globl _CSPPROG10
                                    388 	.globl _CSPPROG9
                                    389 	.globl _CSPPROG8
                                    390 	.globl _CSPPROG7
                                    391 	.globl _CSPPROG6
                                    392 	.globl _CSPPROG5
                                    393 	.globl _CSPPROG4
                                    394 	.globl _CSPPROG3
                                    395 	.globl _CSPPROG2
                                    396 	.globl _CSPPROG1
                                    397 	.globl _CSPPROG0
                                    398 	.globl _RFC_OBS_CTRL2
                                    399 	.globl _RFC_OBS_CTRL1
                                    400 	.globl _RFC_OBS_CTRL0
                                    401 	.globl _TXFILTCFG
                                    402 	.globl _PTEST1
                                    403 	.globl _PTEST0
                                    404 	.globl _ATEST
                                    405 	.globl _DACTEST2
                                    406 	.globl _DACTEST1
                                    407 	.globl _DACTEST0
                                    408 	.globl _MDMTEST1
                                    409 	.globl _MDMTEST0
                                    410 	.globl _ADCTEST2
                                    411 	.globl _ADCTEST1
                                    412 	.globl _ADCTEST0
                                    413 	.globl _AGCCTRL3
                                    414 	.globl _AGCCTRL2
                                    415 	.globl _AGCCTRL1
                                    416 	.globl _AGCCTRL0
                                    417 	.globl _FSCAL3
                                    418 	.globl _FSCAL2
                                    419 	.globl _FSCAL1
                                    420 	.globl _FSCAL0
                                    421 	.globl _FSCTRL
                                    422 	.globl _RXCTRL
                                    423 	.globl _FREQEST
                                    424 	.globl _MDMCTRL1
                                    425 	.globl _MDMCTRL0
                                    426 	.globl _RFRND
                                    427 	.globl _RFERRM
                                    428 	.globl _RFIRQM1
                                    429 	.globl _RFIRQM0
                                    430 	.globl _TXLAST_PTR
                                    431 	.globl _TXFIRST_PTR
                                    432 	.globl _RXP1_PTR
                                    433 	.globl _RXLAST_PTR
                                    434 	.globl _RXFIRST_PTR
                                    435 	.globl _TXFIFOCNT
                                    436 	.globl _RXFIFOCNT
                                    437 	.globl _RXFIRST
                                    438 	.globl _RSSISTAT
                                    439 	.globl _RSSI
                                    440 	.globl _CCACTRL1
                                    441 	.globl _CCACTRL0
                                    442 	.globl _FSMCTRL
                                    443 	.globl _FIFOPCTRL
                                    444 	.globl _FSMSTAT1
                                    445 	.globl _FSMSTAT0
                                    446 	.globl _TXCTRL
                                    447 	.globl _TXPOWER
                                    448 	.globl _FREQCTRL
                                    449 	.globl _FREQTUNE
                                    450 	.globl _RXMASKCLR
                                    451 	.globl _RXMASKSET
                                    452 	.globl _RXENABLE
                                    453 	.globl _FRMCTRL1
                                    454 	.globl _FRMCTRL0
                                    455 	.globl _SRCEXTEN2
                                    456 	.globl _SRCEXTEN1
                                    457 	.globl _SRCEXTEN0
                                    458 	.globl _SRCSHORTEN2
                                    459 	.globl _SRCSHORTEN1
                                    460 	.globl _SRCSHORTEN0
                                    461 	.globl _SRCMATCH
                                    462 	.globl _FRMFILT1
                                    463 	.globl _FRMFILT0
                                    464 	.globl _SHORT_ADDR1
                                    465 	.globl _SHORT_ADDR0
                                    466 	.globl _PAN_ID1
                                    467 	.globl _PAN_ID0
                                    468 	.globl _EXT_ADDR7
                                    469 	.globl _EXT_ADDR6
                                    470 	.globl _EXT_ADDR5
                                    471 	.globl _EXT_ADDR4
                                    472 	.globl _EXT_ADDR3
                                    473 	.globl _EXT_ADDR2
                                    474 	.globl _EXT_ADDR1
                                    475 	.globl _EXT_ADDR0
                                    476 	.globl _SRCSHORTPENDEN2
                                    477 	.globl _SRCSHORTPENDEN1
                                    478 	.globl _SRCSHORTPENDEN0
                                    479 	.globl _SRCEXTPENDEN2
                                    480 	.globl _SRCEXTPENDEN1
                                    481 	.globl _SRCEXTPENDEN0
                                    482 	.globl _SRCRESINDEX
                                    483 	.globl _SRCRESMASK2
                                    484 	.globl _SRCRESMASK1
                                    485 	.globl _SRCRESMASK0
                                    486 	.globl _SRC_ADDR_TABLE
                                    487 	.globl _TXFIFO
                                    488 	.globl _RXFIFO
                                    489 	.globl _RFCORE_RAM
                                    490 	.globl _CMPCTL
                                    491 	.globl _OPAMPS
                                    492 	.globl _OPAMPC
                                    493 	.globl _STCV2
                                    494 	.globl _STCV1
                                    495 	.globl _STCV0
                                    496 	.globl _STCS
                                    497 	.globl _STCC
                                    498 	.globl _T1CC4H
                                    499 	.globl _T1CC4L
                                    500 	.globl _T1CC3H
                                    501 	.globl _T1CC3L
                                    502 	.globl _XX_T1CC2H
                                    503 	.globl _XX_T1CC2L
                                    504 	.globl _XX_T1CC1H
                                    505 	.globl _XX_T1CC1L
                                    506 	.globl _XX_T1CC0H
                                    507 	.globl _XX_T1CC0L
                                    508 	.globl _T1CCTL4
                                    509 	.globl _T1CCTL3
                                    510 	.globl _XX_T1CCTL2
                                    511 	.globl _XX_T1CCTL1
                                    512 	.globl _XX_T1CCTL0
                                    513 	.globl _CLD
                                    514 	.globl _IRCTL
                                    515 	.globl _CHIPINFO1
                                    516 	.globl _CHIPINFO0
                                    517 	.globl _FWDATA
                                    518 	.globl _FADDRH
                                    519 	.globl _FADDRL
                                    520 	.globl _FCTL
                                    521 	.globl _IVCTRL
                                    522 	.globl _BATTMON
                                    523 	.globl _SRCRC
                                    524 	.globl _DBGDATA
                                    525 	.globl _TESTREG0
                                    526 	.globl _CHIPID
                                    527 	.globl _CHVER
                                    528 	.globl _OBSSEL5
                                    529 	.globl _OBSSEL4
                                    530 	.globl _OBSSEL3
                                    531 	.globl _OBSSEL2
                                    532 	.globl _OBSSEL1
                                    533 	.globl _OBSSEL0
                                    534 	.globl _I2CIO
                                    535 	.globl _I2CWC
                                    536 	.globl _I2CADDR
                                    537 	.globl _I2CDATA
                                    538 	.globl _I2CSTAT
                                    539 	.globl _I2CCFG
                                    540 	.globl _OPAMPMC
                                    541 	.globl _MONMUX
                                    542 ;--------------------------------------------------------
                                    543 ; special function registers
                                    544 ;--------------------------------------------------------
                                    545 	.area RSEG    (ABS,DATA)
      000000                        546 	.org 0x0000
                           000080   547 _P0	=	0x0080
                           000081   548 _SP	=	0x0081
                           000082   549 _DPL0	=	0x0082
                           000083   550 _DPH0	=	0x0083
                           000084   551 _DPL1	=	0x0084
                           000085   552 _DPH1	=	0x0085
                           000087   553 _PCON	=	0x0087
                           000088   554 _TCON	=	0x0088
                           000090   555 _P1	=	0x0090
                           000092   556 _DPS	=	0x0092
                           000098   557 _S0CON	=	0x0098
                           00009A   558 _IEN2	=	0x009a
                           00009B   559 _S1CON	=	0x009b
                           0000A0   560 _P2	=	0x00a0
                           0000A8   561 _IEN0	=	0x00a8
                           0000A9   562 _IP0	=	0x00a9
                           0000B8   563 _IEN1	=	0x00b8
                           0000B9   564 _IP1	=	0x00b9
                           0000C0   565 _IRCON	=	0x00c0
                           0000D0   566 _PSW	=	0x00d0
                           0000E0   567 _ACC	=	0x00e0
                           0000E8   568 _IRCON2	=	0x00e8
                           0000F0   569 _B	=	0x00f0
                           0000B4   570 _ADCCON1	=	0x00b4
                           0000B5   571 _ADCCON2	=	0x00b5
                           0000B6   572 _ADCCON3	=	0x00b6
                           0000BA   573 _ADCL	=	0x00ba
                           0000BB   574 _ADCH	=	0x00bb
                           0000BC   575 _RNDL	=	0x00bc
                           0000BD   576 _RNDH	=	0x00bd
                           0000B1   577 _ENCDI	=	0x00b1
                           0000B2   578 _ENCDO	=	0x00b2
                           0000B3   579 _ENCCS	=	0x00b3
                           0000D1   580 _DMAIRQ	=	0x00d1
                           0000D2   581 _DMA1CFGL	=	0x00d2
                           0000D3   582 _DMA1CFGH	=	0x00d3
                           0000D4   583 _DMA0CFGL	=	0x00d4
                           0000D5   584 _DMA0CFGH	=	0x00d5
                           0000D6   585 _DMAARM	=	0x00d6
                           0000D7   586 _DMAREQ	=	0x00d7
                           000089   587 _P0IFG	=	0x0089
                           00008A   588 _P1IFG	=	0x008a
                           00008B   589 _P2IFG	=	0x008b
                           00008C   590 _PICTL	=	0x008c
                           0000AB   591 _P0IEN	=	0x00ab
                           00008D   592 _P1IEN	=	0x008d
                           0000AC   593 _P2IEN	=	0x00ac
                           00008F   594 _P0INP	=	0x008f
                           0000F1   595 _PERCFG	=	0x00f1
                           0000F2   596 _APCFG	=	0x00f2
                           0000F3   597 _P0SEL	=	0x00f3
                           0000F4   598 _P1SEL	=	0x00f4
                           0000F5   599 _P2SEL	=	0x00f5
                           0000F6   600 _P1INP	=	0x00f6
                           0000F7   601 _P2INP	=	0x00f7
                           0000FD   602 _P0DIR	=	0x00fd
                           0000FE   603 _P1DIR	=	0x00fe
                           0000FF   604 _P2DIR	=	0x00ff
                           0000AE   605 _PMUX	=	0x00ae
                           000093   606 _MPAGE	=	0x0093
                           000093   607 __XPAGE	=	0x0093
                           0000C7   608 _MEMCTR	=	0x00c7
                           00009F   609 _FMAP	=	0x009f
                           00009F   610 _PSBANK	=	0x009f
                           000091   611 _RFIRQF1	=	0x0091
                           0000D9   612 _RFD	=	0x00d9
                           0000E1   613 _RFST	=	0x00e1
                           0000E9   614 _RFIRQF0	=	0x00e9
                           0000BF   615 _RFERRF	=	0x00bf
                           000095   616 _ST0	=	0x0095
                           000096   617 _ST1	=	0x0096
                           000097   618 _ST2	=	0x0097
                           0000AD   619 _STLOAD	=	0x00ad
                           0000BE   620 _SLEEPCMD	=	0x00be
                           00009D   621 _SLEEPSTA	=	0x009d
                           0000C6   622 _CLKCONCMD	=	0x00c6
                           00009E   623 _CLKCONSTA	=	0x009e
                           0000DA   624 _T1CC0L	=	0x00da
                           0000DB   625 _T1CC0H	=	0x00db
                           0000DC   626 _T1CC1L	=	0x00dc
                           0000DD   627 _T1CC1H	=	0x00dd
                           0000DE   628 _T1CC2L	=	0x00de
                           0000DF   629 _T1CC2H	=	0x00df
                           0000E2   630 _T1CNTL	=	0x00e2
                           0000E3   631 _T1CNTH	=	0x00e3
                           0000E4   632 _T1CTL	=	0x00e4
                           0000E5   633 _T1CCTL0	=	0x00e5
                           0000E6   634 _T1CCTL1	=	0x00e6
                           0000E7   635 _T1CCTL2	=	0x00e7
                           0000AF   636 _T1STAT	=	0x00af
                           000094   637 _T2CTRL	=	0x0094
                           00009C   638 _T2EVTCFG	=	0x009c
                           0000A1   639 _T2IRQF	=	0x00a1
                           0000A2   640 _T2M0	=	0x00a2
                           0000A3   641 _T2M1	=	0x00a3
                           0000A4   642 _T2MOVF0	=	0x00a4
                           0000A5   643 _T2MOVF1	=	0x00a5
                           0000A6   644 _T2MOVF2	=	0x00a6
                           0000A7   645 _T2IRQM	=	0x00a7
                           0000C3   646 _T2MSEL	=	0x00c3
                           0000CA   647 _T3CNT	=	0x00ca
                           0000CB   648 _T3CTL	=	0x00cb
                           0000CC   649 _T3CCTL0	=	0x00cc
                           0000CD   650 _T3CC0	=	0x00cd
                           0000CE   651 _T3CCTL1	=	0x00ce
                           0000CF   652 _T3CC1	=	0x00cf
                           0000EA   653 _T4CNT	=	0x00ea
                           0000EB   654 _T4CTL	=	0x00eb
                           0000EC   655 _T4CCTL0	=	0x00ec
                           0000ED   656 _T4CC0	=	0x00ed
                           0000EE   657 _T4CCTL1	=	0x00ee
                           0000EF   658 _T4CC1	=	0x00ef
                           0000D8   659 _TIMIF	=	0x00d8
                           000086   660 _U0CSR	=	0x0086
                           0000C1   661 _U0DBUF	=	0x00c1
                           0000C2   662 _U0BAUD	=	0x00c2
                           0000C4   663 _U0UCR	=	0x00c4
                           0000C5   664 _U0GCR	=	0x00c5
                           0000F8   665 _U1CSR	=	0x00f8
                           0000F9   666 _U1DBUF	=	0x00f9
                           0000FA   667 _U1BAUD	=	0x00fa
                           0000FB   668 _U1UCR	=	0x00fb
                           0000FC   669 _U1GCR	=	0x00fc
                           0000C9   670 _WDCTL	=	0x00c9
                                    671 ;--------------------------------------------------------
                                    672 ; special function bits
                                    673 ;--------------------------------------------------------
                                    674 	.area RSEG    (ABS,DATA)
      000000                        675 	.org 0x0000
                           000087   676 _P0_7	=	0x0087
                           000086   677 _P0_6	=	0x0086
                           000085   678 _P0_5	=	0x0085
                           000084   679 _P0_4	=	0x0084
                           000083   680 _P0_3	=	0x0083
                           000082   681 _P0_2	=	0x0082
                           000081   682 _P0_1	=	0x0081
                           000080   683 _P0_0	=	0x0080
                           00008F   684 _URX1IF	=	0x008f
                           00008D   685 _ADCIF	=	0x008d
                           00008B   686 _URX0IF	=	0x008b
                           00008A   687 _IT1	=	0x008a
                           000089   688 _RFERRIF	=	0x0089
                           000088   689 _IT0	=	0x0088
                           000097   690 _P1_7	=	0x0097
                           000096   691 _P1_6	=	0x0096
                           000095   692 _P1_5	=	0x0095
                           000094   693 _P1_4	=	0x0094
                           000093   694 _P1_3	=	0x0093
                           000092   695 _P1_2	=	0x0092
                           000091   696 _P1_1	=	0x0091
                           000090   697 _P1_0	=	0x0090
                           000099   698 _ENCIF_1	=	0x0099
                           000098   699 _ENCIF_0	=	0x0098
                           0000A7   700 _P2_7	=	0x00a7
                           0000A6   701 _P2_6	=	0x00a6
                           0000A5   702 _P2_5	=	0x00a5
                           0000A4   703 _P2_4	=	0x00a4
                           0000A3   704 _P2_3	=	0x00a3
                           0000A2   705 _P2_2	=	0x00a2
                           0000A1   706 _P2_1	=	0x00a1
                           0000A0   707 _P2_0	=	0x00a0
                           0000AF   708 _EA	=	0x00af
                           0000AD   709 _STIE	=	0x00ad
                           0000AC   710 _ENCIE	=	0x00ac
                           0000AB   711 _URX1IE	=	0x00ab
                           0000AA   712 _URX0IE	=	0x00aa
                           0000A9   713 _ADCIE	=	0x00a9
                           0000A8   714 _RFERRIE	=	0x00a8
                           0000BD   715 _P0IE	=	0x00bd
                           0000BC   716 _T4IE	=	0x00bc
                           0000BB   717 _T3IE	=	0x00bb
                           0000BA   718 _T2IE	=	0x00ba
                           0000B9   719 _T1IE	=	0x00b9
                           0000B8   720 _DMAIE	=	0x00b8
                           0000C7   721 _STIF	=	0x00c7
                           0000C5   722 _P0IF	=	0x00c5
                           0000C4   723 _T4IF	=	0x00c4
                           0000C3   724 _T3IF	=	0x00c3
                           0000C2   725 _T2IF	=	0x00c2
                           0000C1   726 _T1IF	=	0x00c1
                           0000C0   727 _DMAIF	=	0x00c0
                           0000D7   728 _CY	=	0x00d7
                           0000D6   729 _AC	=	0x00d6
                           0000D5   730 _F0	=	0x00d5
                           0000D4   731 _RS1	=	0x00d4
                           0000D3   732 _RS0	=	0x00d3
                           0000D2   733 _OV	=	0x00d2
                           0000D1   734 _F1	=	0x00d1
                           0000D0   735 _P	=	0x00d0
                           0000E7   736 _ACC_7	=	0x00e7
                           0000E6   737 _ACC_6	=	0x00e6
                           0000E5   738 _ACC_5	=	0x00e5
                           0000E4   739 _ACC_4	=	0x00e4
                           0000E3   740 _ACC_3	=	0x00e3
                           0000E2   741 _ACC_2	=	0x00e2
                           0000E1   742 _ACC_1	=	0x00e1
                           0000E0   743 _ACC_0	=	0x00e0
                           0000EC   744 _WDTIF	=	0x00ec
                           0000EB   745 _P1IF	=	0x00eb
                           0000EA   746 _UTX1IF	=	0x00ea
                           0000E9   747 _UTX0IF	=	0x00e9
                           0000E8   748 _P2IF	=	0x00e8
                           0000F7   749 _B_7	=	0x00f7
                           0000F6   750 _B_6	=	0x00f6
                           0000F5   751 _B_5	=	0x00f5
                           0000F4   752 _B_4	=	0x00f4
                           0000F3   753 _B_3	=	0x00f3
                           0000F2   754 _B_2	=	0x00f2
                           0000F1   755 _B_1	=	0x00f1
                           0000F0   756 _B_0	=	0x00f0
                           0000DE   757 _OVFIM	=	0x00de
                           0000DD   758 _T4CH1IF	=	0x00dd
                           0000DC   759 _T4CH0IF	=	0x00dc
                           0000DB   760 _T4OVFIF	=	0x00db
                           0000DA   761 _T3CH1IF	=	0x00da
                           0000D9   762 _T3CH0IF	=	0x00d9
                           0000D8   763 _T3OVFIF	=	0x00d8
                           0000FF   764 _MODE	=	0x00ff
                           0000FE   765 _RE	=	0x00fe
                           0000FD   766 _SLAVE	=	0x00fd
                           0000FC   767 _FE	=	0x00fc
                           0000FB   768 _ERR	=	0x00fb
                           0000FA   769 _RX_BYTE	=	0x00fa
                           0000F9   770 _TX_BYTE	=	0x00f9
                           0000F8   771 _ACTIVE	=	0x00f8
                                    772 ;--------------------------------------------------------
                                    773 ; overlayable register banks
                                    774 ;--------------------------------------------------------
                                    775 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        776 	.ds 8
                                    777 ;--------------------------------------------------------
                                    778 ; internal ram data
                                    779 ;--------------------------------------------------------
                                    780 	.area DSEG    (DATA)
                                    781 ;--------------------------------------------------------
                                    782 ; overlayable items in internal ram 
                                    783 ;--------------------------------------------------------
                                    784 ;--------------------------------------------------------
                                    785 ; indirectly addressable internal ram data
                                    786 ;--------------------------------------------------------
                                    787 	.area ISEG    (DATA)
                                    788 ;--------------------------------------------------------
                                    789 ; absolute internal ram data
                                    790 ;--------------------------------------------------------
                                    791 	.area IABS    (ABS,DATA)
                                    792 	.area IABS    (ABS,DATA)
                                    793 ;--------------------------------------------------------
                                    794 ; bit data
                                    795 ;--------------------------------------------------------
                                    796 	.area BSEG    (BIT)
                                    797 ;--------------------------------------------------------
                                    798 ; paged external ram data
                                    799 ;--------------------------------------------------------
                                    800 	.area PSEG    (PAG,XDATA)
                                    801 ;--------------------------------------------------------
                                    802 ; external ram data
                                    803 ;--------------------------------------------------------
                                    804 	.area XSEG    (XDATA)
                           0061A6   805 _MONMUX	=	0x61a6
                           0061A6   806 _OPAMPMC	=	0x61a6
                           006230   807 _I2CCFG	=	0x6230
                           006231   808 _I2CSTAT	=	0x6231
                           006232   809 _I2CDATA	=	0x6232
                           006233   810 _I2CADDR	=	0x6233
                           006234   811 _I2CWC	=	0x6234
                           006235   812 _I2CIO	=	0x6235
                           006243   813 _OBSSEL0	=	0x6243
                           006244   814 _OBSSEL1	=	0x6244
                           006245   815 _OBSSEL2	=	0x6245
                           006246   816 _OBSSEL3	=	0x6246
                           006247   817 _OBSSEL4	=	0x6247
                           006248   818 _OBSSEL5	=	0x6248
                           006249   819 _CHVER	=	0x6249
                           00624A   820 _CHIPID	=	0x624a
                           00624B   821 _TESTREG0	=	0x624b
                           006260   822 _DBGDATA	=	0x6260
                           006262   823 _SRCRC	=	0x6262
                           006264   824 _BATTMON	=	0x6264
                           006265   825 _IVCTRL	=	0x6265
                           006270   826 _FCTL	=	0x6270
                           006271   827 _FADDRL	=	0x6271
                           006272   828 _FADDRH	=	0x6272
                           006273   829 _FWDATA	=	0x6273
                           006276   830 _CHIPINFO0	=	0x6276
                           006277   831 _CHIPINFO1	=	0x6277
                           006281   832 _IRCTL	=	0x6281
                           006290   833 _CLD	=	0x6290
                           0062A0   834 _XX_T1CCTL0	=	0x62a0
                           0062A1   835 _XX_T1CCTL1	=	0x62a1
                           0062A2   836 _XX_T1CCTL2	=	0x62a2
                           0062A3   837 _T1CCTL3	=	0x62a3
                           0062A4   838 _T1CCTL4	=	0x62a4
                           0062A6   839 _XX_T1CC0L	=	0x62a6
                           0062A7   840 _XX_T1CC0H	=	0x62a7
                           0062A8   841 _XX_T1CC1L	=	0x62a8
                           0062A9   842 _XX_T1CC1H	=	0x62a9
                           0062AA   843 _XX_T1CC2L	=	0x62aa
                           0062AB   844 _XX_T1CC2H	=	0x62ab
                           0062AC   845 _T1CC3L	=	0x62ac
                           0062AD   846 _T1CC3H	=	0x62ad
                           0062AE   847 _T1CC4L	=	0x62ae
                           0062AF   848 _T1CC4H	=	0x62af
                           0062B0   849 _STCC	=	0x62b0
                           0062B1   850 _STCS	=	0x62b1
                           0062B2   851 _STCV0	=	0x62b2
                           0062B3   852 _STCV1	=	0x62b3
                           0062B4   853 _STCV2	=	0x62b4
                           0062C0   854 _OPAMPC	=	0x62c0
                           0062C1   855 _OPAMPS	=	0x62c1
                           0062D0   856 _CMPCTL	=	0x62d0
                           006000   857 _RFCORE_RAM	=	0x6000
                           006000   858 _RXFIFO	=	0x6000
                           006080   859 _TXFIFO	=	0x6080
                           006100   860 _SRC_ADDR_TABLE	=	0x6100
                           006160   861 _SRCRESMASK0	=	0x6160
                           006161   862 _SRCRESMASK1	=	0x6161
                           006162   863 _SRCRESMASK2	=	0x6162
                           006163   864 _SRCRESINDEX	=	0x6163
                           006164   865 _SRCEXTPENDEN0	=	0x6164
                           006165   866 _SRCEXTPENDEN1	=	0x6165
                           006166   867 _SRCEXTPENDEN2	=	0x6166
                           006167   868 _SRCSHORTPENDEN0	=	0x6167
                           006168   869 _SRCSHORTPENDEN1	=	0x6168
                           006169   870 _SRCSHORTPENDEN2	=	0x6169
                           00616A   871 _EXT_ADDR0	=	0x616a
                           00616B   872 _EXT_ADDR1	=	0x616b
                           00616C   873 _EXT_ADDR2	=	0x616c
                           00616D   874 _EXT_ADDR3	=	0x616d
                           00616E   875 _EXT_ADDR4	=	0x616e
                           00616F   876 _EXT_ADDR5	=	0x616f
                           006170   877 _EXT_ADDR6	=	0x6170
                           006171   878 _EXT_ADDR7	=	0x6171
                           006172   879 _PAN_ID0	=	0x6172
                           006173   880 _PAN_ID1	=	0x6173
                           006174   881 _SHORT_ADDR0	=	0x6174
                           006175   882 _SHORT_ADDR1	=	0x6175
                           006180   883 _FRMFILT0	=	0x6180
                           006181   884 _FRMFILT1	=	0x6181
                           006182   885 _SRCMATCH	=	0x6182
                           006183   886 _SRCSHORTEN0	=	0x6183
                           006184   887 _SRCSHORTEN1	=	0x6184
                           006185   888 _SRCSHORTEN2	=	0x6185
                           006186   889 _SRCEXTEN0	=	0x6186
                           006187   890 _SRCEXTEN1	=	0x6187
                           006188   891 _SRCEXTEN2	=	0x6188
                           006189   892 _FRMCTRL0	=	0x6189
                           00618A   893 _FRMCTRL1	=	0x618a
                           00618B   894 _RXENABLE	=	0x618b
                           00618C   895 _RXMASKSET	=	0x618c
                           00618D   896 _RXMASKCLR	=	0x618d
                           00618E   897 _FREQTUNE	=	0x618e
                           00618F   898 _FREQCTRL	=	0x618f
                           006190   899 _TXPOWER	=	0x6190
                           006191   900 _TXCTRL	=	0x6191
                           006192   901 _FSMSTAT0	=	0x6192
                           006193   902 _FSMSTAT1	=	0x6193
                           006194   903 _FIFOPCTRL	=	0x6194
                           006195   904 _FSMCTRL	=	0x6195
                           006196   905 _CCACTRL0	=	0x6196
                           006197   906 _CCACTRL1	=	0x6197
                           006198   907 _RSSI	=	0x6198
                           006199   908 _RSSISTAT	=	0x6199
                           00619A   909 _RXFIRST	=	0x619a
                           00619B   910 _RXFIFOCNT	=	0x619b
                           00619C   911 _TXFIFOCNT	=	0x619c
                           00619D   912 _RXFIRST_PTR	=	0x619d
                           00619E   913 _RXLAST_PTR	=	0x619e
                           00619F   914 _RXP1_PTR	=	0x619f
                           0061A1   915 _TXFIRST_PTR	=	0x61a1
                           0061A2   916 _TXLAST_PTR	=	0x61a2
                           0061A3   917 _RFIRQM0	=	0x61a3
                           0061A4   918 _RFIRQM1	=	0x61a4
                           0061A5   919 _RFERRM	=	0x61a5
                           0061A7   920 _RFRND	=	0x61a7
                           0061A8   921 _MDMCTRL0	=	0x61a8
                           0061A9   922 _MDMCTRL1	=	0x61a9
                           0061AA   923 _FREQEST	=	0x61aa
                           0061AB   924 _RXCTRL	=	0x61ab
                           0061AC   925 _FSCTRL	=	0x61ac
                           0061AD   926 _FSCAL0	=	0x61ad
                           0061AE   927 _FSCAL1	=	0x61ae
                           0061AF   928 _FSCAL2	=	0x61af
                           0061B0   929 _FSCAL3	=	0x61b0
                           0061B1   930 _AGCCTRL0	=	0x61b1
                           0061B2   931 _AGCCTRL1	=	0x61b2
                           0061B3   932 _AGCCTRL2	=	0x61b3
                           0061B4   933 _AGCCTRL3	=	0x61b4
                           0061B5   934 _ADCTEST0	=	0x61b5
                           0061B6   935 _ADCTEST1	=	0x61b6
                           0061B7   936 _ADCTEST2	=	0x61b7
                           0061B8   937 _MDMTEST0	=	0x61b8
                           0061B9   938 _MDMTEST1	=	0x61b9
                           0061BA   939 _DACTEST0	=	0x61ba
                           0061BB   940 _DACTEST1	=	0x61bb
                           0061BC   941 _DACTEST2	=	0x61bc
                           0061BD   942 _ATEST	=	0x61bd
                           0061BE   943 _PTEST0	=	0x61be
                           0061BF   944 _PTEST1	=	0x61bf
                           0061FA   945 _TXFILTCFG	=	0x61fa
                           0061EB   946 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   947 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   948 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   949 _CSPPROG0	=	0x61c0
                           0061C1   950 _CSPPROG1	=	0x61c1
                           0061C2   951 _CSPPROG2	=	0x61c2
                           0061C3   952 _CSPPROG3	=	0x61c3
                           0061C4   953 _CSPPROG4	=	0x61c4
                           0061C5   954 _CSPPROG5	=	0x61c5
                           0061C6   955 _CSPPROG6	=	0x61c6
                           0061C7   956 _CSPPROG7	=	0x61c7
                           0061C8   957 _CSPPROG8	=	0x61c8
                           0061C9   958 _CSPPROG9	=	0x61c9
                           0061CA   959 _CSPPROG10	=	0x61ca
                           0061CB   960 _CSPPROG11	=	0x61cb
                           0061CC   961 _CSPPROG12	=	0x61cc
                           0061CD   962 _CSPPROG13	=	0x61cd
                           0061CE   963 _CSPPROG14	=	0x61ce
                           0061CF   964 _CSPPROG15	=	0x61cf
                           0061D0   965 _CSPPROG16	=	0x61d0
                           0061D1   966 _CSPPROG17	=	0x61d1
                           0061D2   967 _CSPPROG18	=	0x61d2
                           0061D3   968 _CSPPROG19	=	0x61d3
                           0061D4   969 _CSPPROG20	=	0x61d4
                           0061D5   970 _CSPPROG21	=	0x61d5
                           0061D6   971 _CSPPROG22	=	0x61d6
                           0061D7   972 _CSPPROG23	=	0x61d7
                           0061E0   973 _CSPCTRL	=	0x61e0
                           0061E1   974 _CSPSTAT	=	0x61e1
                           0061E2   975 _CSPX	=	0x61e2
                           0061E3   976 _CSPY	=	0x61e3
                           0061E4   977 _CSPZ	=	0x61e4
                           0061E5   978 _CSPT	=	0x61e5
                           006200   979 _USBADDR	=	0x6200
                           006201   980 _USBPOW	=	0x6201
                           006202   981 _USBIIF	=	0x6202
                           006204   982 _USBOIF	=	0x6204
                           006206   983 _USBCIF	=	0x6206
                           006207   984 _USBIIE	=	0x6207
                           006209   985 _USBOIE	=	0x6209
                           00620B   986 _USBCIE	=	0x620b
                           00620C   987 _USBFRML	=	0x620c
                           00620D   988 _USBFRMH	=	0x620d
                           00620E   989 _USBINDEX	=	0x620e
                           00620F   990 _USBCTRL	=	0x620f
                           006210   991 _USBMAXI	=	0x6210
                           006211   992 _USBCS0	=	0x6211
                           006211   993 _USBCSIL	=	0x6211
                           006212   994 _USBCSIH	=	0x6212
                           006213   995 _USBMAXO	=	0x6213
                           006214   996 _USBCSOL	=	0x6214
                           006215   997 _USBCSOH	=	0x6215
                           006216   998 _USBCNT0	=	0x6216
                           006216   999 _USBCNTL	=	0x6216
                           006217  1000 _USBCNTH	=	0x6217
                           006220  1001 _USBF0	=	0x6220
                           006222  1002 _USBF1	=	0x6222
                           006224  1003 _USBF2	=	0x6224
                           006226  1004 _USBF3	=	0x6226
                           006228  1005 _USBF4	=	0x6228
                           00622A  1006 _USBF5	=	0x622a
                           007080  1007 _X_P0	=	0x7080
                           007086  1008 _X_U0CSR	=	0x7086
                           007089  1009 _X_P0IFG	=	0x7089
                           00708A  1010 _X_P1IFG	=	0x708a
                           00708B  1011 _X_P2IFG	=	0x708b
                           00708C  1012 _X_PICTL	=	0x708c
                           00708D  1013 _X_P1IEN	=	0x708d
                           00708F  1014 _X_P0INP	=	0x708f
                           007090  1015 _X_P1	=	0x7090
                           007091  1016 _X_RFIRQF1	=	0x7091
                           007093  1017 _X_MPAGE	=	0x7093
                           007093  1018 _X__XPAGE	=	0x7093
                           007094  1019 _X_T2CTRL	=	0x7094
                           007095  1020 _X_ST0	=	0x7095
                           007096  1021 _X_ST1	=	0x7096
                           007097  1022 _X_ST2	=	0x7097
                           00709C  1023 _X_T2EVTCFG	=	0x709c
                           00709D  1024 _X_SLEEPSTA	=	0x709d
                           00709E  1025 _X_CLKCONSTA	=	0x709e
                           00709F  1026 _X_FMAP	=	0x709f
                           00709F  1027 _X_PSBANK	=	0x709f
                           0070A0  1028 _X_P2	=	0x70a0
                           0070A1  1029 _X_T2IRQF	=	0x70a1
                           0070A2  1030 _X_T2M0	=	0x70a2
                           0070A3  1031 _X_T2M1	=	0x70a3
                           0070A4  1032 _X_T2MOVF0	=	0x70a4
                           0070A5  1033 _X_T2MOVF1	=	0x70a5
                           0070A6  1034 _X_T2MOVF2	=	0x70a6
                           0070A7  1035 _X_T2IRQM	=	0x70a7
                           0070AB  1036 _X_P0IEN	=	0x70ab
                           0070AC  1037 _X_P2IEN	=	0x70ac
                           0070AD  1038 _X_STLOAD	=	0x70ad
                           0070AE  1039 _X_PMUX	=	0x70ae
                           0070AF  1040 _X_T1STAT	=	0x70af
                           0070B1  1041 _X_ENCDI	=	0x70b1
                           0070B2  1042 _X_ENCDO	=	0x70b2
                           0070B3  1043 _X_ENCCS	=	0x70b3
                           0070B4  1044 _X_ADCCON1	=	0x70b4
                           0070B5  1045 _X_ADCCON2	=	0x70b5
                           0070B6  1046 _X_ADCCON3	=	0x70b6
                           0070BA  1047 _X_ADCL	=	0x70ba
                           0070BB  1048 _X_ADCH	=	0x70bb
                           0070BC  1049 _X_RNDL	=	0x70bc
                           0070BD  1050 _X_RNDH	=	0x70bd
                           0070BE  1051 _X_SLEEPCMD	=	0x70be
                           0070BF  1052 _X_RFERRF	=	0x70bf
                           0070C1  1053 _X_U0DBUF	=	0x70c1
                           0070C2  1054 _X_U0BAUD	=	0x70c2
                           0070C3  1055 _X_T2MSEL	=	0x70c3
                           0070C4  1056 _X_U0UCR	=	0x70c4
                           0070C5  1057 _X_U0GCR	=	0x70c5
                           0070C6  1058 _X_CLKCONCMD	=	0x70c6
                           0070C7  1059 _X_MEMCTR	=	0x70c7
                           0070C9  1060 _X_WDCTL	=	0x70c9
                           0070CA  1061 _X_T3CNT	=	0x70ca
                           0070CB  1062 _X_T3CTL	=	0x70cb
                           0070CC  1063 _X_T3CCTL0	=	0x70cc
                           0070CD  1064 _X_T3CC0	=	0x70cd
                           0070CE  1065 _X_T3CCTL1	=	0x70ce
                           0070CF  1066 _X_T3CC1	=	0x70cf
                           0070D1  1067 _X_DMAIRQ	=	0x70d1
                           0070D2  1068 _X_DMA1CFGL	=	0x70d2
                           0070D3  1069 _X_DMA1CFGH	=	0x70d3
                           0070D4  1070 _X_DMA0CFGL	=	0x70d4
                           0070D5  1071 _X_DMA0CFGH	=	0x70d5
                           0070D6  1072 _X_DMAARM	=	0x70d6
                           0070D7  1073 _X_DMAREQ	=	0x70d7
                           0070D8  1074 _X_TIMIF	=	0x70d8
                           0070D9  1075 _X_RFD	=	0x70d9
                           0070DA  1076 _X_T1CC0L	=	0x70da
                           0070DB  1077 _X_T1CC0H	=	0x70db
                           0070DC  1078 _X_T1CC1L	=	0x70dc
                           0070DD  1079 _X_T1CC1H	=	0x70dd
                           0070DE  1080 _X_T1CC2L	=	0x70de
                           0070DF  1081 _X_T1CC2H	=	0x70df
                           0070E1  1082 _X_RFST	=	0x70e1
                           0070E2  1083 _X_T1CNTL	=	0x70e2
                           0070E3  1084 _X_T1CNTH	=	0x70e3
                           0070E4  1085 _X_T1CTL	=	0x70e4
                           0070E5  1086 _X_T1CCTL0	=	0x70e5
                           0070E6  1087 _X_T1CCTL1	=	0x70e6
                           0070E7  1088 _X_T1CCTL2	=	0x70e7
                           0070E9  1089 _X_RFIRQF0	=	0x70e9
                           0070EA  1090 _X_T4CNT	=	0x70ea
                           0070EB  1091 _X_T4CTL	=	0x70eb
                           0070EC  1092 _X_T4CCTL0	=	0x70ec
                           0070ED  1093 _X_T4CC0	=	0x70ed
                           0070EE  1094 _X_T4CCTL1	=	0x70ee
                           0070EF  1095 _X_T4CC1	=	0x70ef
                           0070F1  1096 _X_PERCFG	=	0x70f1
                           0070F2  1097 _X_APCFG	=	0x70f2
                           0070F3  1098 _X_P0SEL	=	0x70f3
                           0070F4  1099 _X_P1SEL	=	0x70f4
                           0070F5  1100 _X_P2SEL	=	0x70f5
                           0070F6  1101 _X_P1INP	=	0x70f6
                           0070F7  1102 _X_P2INP	=	0x70f7
                           0070F8  1103 _X_U1CSR	=	0x70f8
                           0070F9  1104 _X_U1DBUF	=	0x70f9
                           0070FA  1105 _X_U1BAUD	=	0x70fa
                           0070FB  1106 _X_U1UCR	=	0x70fb
                           0070FC  1107 _X_U1GCR	=	0x70fc
                           0070FD  1108 _X_P0DIR	=	0x70fd
                           0070FE  1109 _X_P1DIR	=	0x70fe
                           0070FF  1110 _X_P2DIR	=	0x70ff
                           007800  1111 _X_INFOPAGE	=	0x7800
                           00780C  1112 _X_IEEE_ADDR	=	0x780c
                                   1113 ;--------------------------------------------------------
                                   1114 ; absolute external ram data
                                   1115 ;--------------------------------------------------------
                                   1116 	.area XABS    (ABS,XDATA)
                                   1117 ;--------------------------------------------------------
                                   1118 ; external initialized ram data
                                   1119 ;--------------------------------------------------------
                                   1120 	.area XISEG   (XDATA)
                                   1121 	.area HOME    (CODE)
                                   1122 	.area GSINIT0 (CODE)
                                   1123 	.area GSINIT1 (CODE)
                                   1124 	.area GSINIT2 (CODE)
                                   1125 	.area GSINIT3 (CODE)
                                   1126 	.area GSINIT4 (CODE)
                                   1127 	.area GSINIT5 (CODE)
                                   1128 	.area GSINIT  (CODE)
                                   1129 	.area GSFINAL (CODE)
                                   1130 	.area CSEG    (CODE)
                                   1131 ;--------------------------------------------------------
                                   1132 ; global & static initialisations
                                   1133 ;--------------------------------------------------------
                                   1134 	.area HOME    (CODE)
                                   1135 	.area GSINIT  (CODE)
                                   1136 	.area GSFINAL (CODE)
                                   1137 	.area GSINIT  (CODE)
                                   1138 ;--------------------------------------------------------
                                   1139 ; Home
                                   1140 ;--------------------------------------------------------
                                   1141 	.area HOME    (CODE)
                                   1142 	.area HOME    (CODE)
                                   1143 ;--------------------------------------------------------
                                   1144 ; code
                                   1145 ;--------------------------------------------------------
                                   1146 	.area BANK1   (CODE)
                                   1147 ;------------------------------------------------------------
                                   1148 ;Allocation info for local variables in function 'set_iv'
                                   1149 ;------------------------------------------------------------
                                   1150 ;flags                     Allocated to stack - sp -6
                                   1151 ;nonce                     Allocated to stack - sp -9
                                   1152 ;counter                   Allocated to stack - sp -10
                                   1153 ;iv                        Allocated to stack - sp -2
                                   1154 ;------------------------------------------------------------
                                   1155 ;	/opt/contiki/core/lib/ccm-star.c:51: set_iv(uint8_t *iv,
                                   1156 ;	-----------------------------------------
                                   1157 ;	 function set_iv
                                   1158 ;	-----------------------------------------
      000000                       1159 _set_iv:
                           000007  1160 	ar7 = 0x07
                           000006  1161 	ar6 = 0x06
                           000005  1162 	ar5 = 0x05
                           000004  1163 	ar4 = 0x04
                           000003  1164 	ar3 = 0x03
                           000002  1165 	ar2 = 0x02
                           000001  1166 	ar1 = 0x01
                           000000  1167 	ar0 = 0x00
      000000 C0 82            [24] 1168 	push	dpl
      000002 C0 83            [24] 1169 	push	dph
      000004 C0 F0            [24] 1170 	push	b
                                   1171 ;	/opt/contiki/core/lib/ccm-star.c:56: iv[0] = flags;
      000006 A8 81            [24] 1172 	mov	r0,sp
      000008 18               [12] 1173 	dec	r0
      000009 18               [12] 1174 	dec	r0
      00000A 86 82            [24] 1175 	mov	dpl,@r0
      00000C 08               [12] 1176 	inc	r0
      00000D 86 83            [24] 1177 	mov	dph,@r0
      00000F 08               [12] 1178 	inc	r0
      000010 86 F0            [24] 1179 	mov	b,@r0
      000012 E5 81            [12] 1180 	mov	a,sp
      000014 24 FA            [12] 1181 	add	a,#0xfa
      000016 F9               [12] 1182 	mov	r1,a
      000017 E7               [12] 1183 	mov	a,@r1
      000018 12r00r00         [24] 1184 	lcall	__gptrput
                                   1185 ;	/opt/contiki/core/lib/ccm-star.c:57: memcpy(iv + 1, nonce, CCM_STAR_NONCE_LENGTH);
      00001B E5 81            [12] 1186 	mov	a,sp
      00001D 24 F7            [12] 1187 	add	a,#0xf7
      00001F F8               [12] 1188 	mov	r0,a
      000020 86 02            [24] 1189 	mov	ar2,@r0
      000022 08               [12] 1190 	inc	r0
      000023 86 03            [24] 1191 	mov	ar3,@r0
      000025 08               [12] 1192 	inc	r0
      000026 86 04            [24] 1193 	mov	ar4,@r0
      000028 A8 81            [24] 1194 	mov	r0,sp
      00002A 18               [12] 1195 	dec	r0
      00002B 18               [12] 1196 	dec	r0
      00002C 74 01            [12] 1197 	mov	a,#0x01
      00002E 26               [12] 1198 	add	a,@r0
      00002F FD               [12] 1199 	mov	r5,a
      000030 E4               [12] 1200 	clr	a
      000031 08               [12] 1201 	inc	r0
      000032 36               [12] 1202 	addc	a,@r0
      000033 FE               [12] 1203 	mov	r6,a
      000034 08               [12] 1204 	inc	r0
      000035 86 07            [24] 1205 	mov	ar7,@r0
      000037 74 0D            [12] 1206 	mov	a,#0x0D
      000039 C0 E0            [24] 1207 	push	acc
      00003B E4               [12] 1208 	clr	a
      00003C C0 E0            [24] 1209 	push	acc
      00003E C0 02            [24] 1210 	push	ar2
      000040 C0 03            [24] 1211 	push	ar3
      000042 C0 04            [24] 1212 	push	ar4
      000044 8D 82            [24] 1213 	mov	dpl,r5
      000046 8E 83            [24] 1214 	mov	dph,r6
      000048 8F F0            [24] 1215 	mov	b,r7
      00004A 78r00            [12] 1216 	mov	r0,#_memcpy
      00004C 79s00            [12] 1217 	mov	r1,#(_memcpy >> 8)
      00004E 7As00            [12] 1218 	mov	r2,#(_memcpy >> 16)
      000050 12r00r00         [24] 1219 	lcall	__sdcc_banked_call
      000053 E5 81            [12] 1220 	mov	a,sp
      000055 24 FB            [12] 1221 	add	a,#0xfb
      000057 F5 81            [12] 1222 	mov	sp,a
                                   1223 ;	/opt/contiki/core/lib/ccm-star.c:58: iv[14] = 0;
      000059 A8 81            [24] 1224 	mov	r0,sp
      00005B 18               [12] 1225 	dec	r0
      00005C 18               [12] 1226 	dec	r0
      00005D 74 0E            [12] 1227 	mov	a,#0x0E
      00005F 26               [12] 1228 	add	a,@r0
      000060 FD               [12] 1229 	mov	r5,a
      000061 E4               [12] 1230 	clr	a
      000062 08               [12] 1231 	inc	r0
      000063 36               [12] 1232 	addc	a,@r0
      000064 FE               [12] 1233 	mov	r6,a
      000065 08               [12] 1234 	inc	r0
      000066 86 07            [24] 1235 	mov	ar7,@r0
      000068 8D 82            [24] 1236 	mov	dpl,r5
      00006A 8E 83            [24] 1237 	mov	dph,r6
      00006C 8F F0            [24] 1238 	mov	b,r7
      00006E E4               [12] 1239 	clr	a
      00006F 12r00r00         [24] 1240 	lcall	__gptrput
                                   1241 ;	/opt/contiki/core/lib/ccm-star.c:59: iv[15] = counter;
      000072 A8 81            [24] 1242 	mov	r0,sp
      000074 18               [12] 1243 	dec	r0
      000075 18               [12] 1244 	dec	r0
      000076 74 0F            [12] 1245 	mov	a,#0x0F
      000078 26               [12] 1246 	add	a,@r0
      000079 FD               [12] 1247 	mov	r5,a
      00007A E4               [12] 1248 	clr	a
      00007B 08               [12] 1249 	inc	r0
      00007C 36               [12] 1250 	addc	a,@r0
      00007D FE               [12] 1251 	mov	r6,a
      00007E 08               [12] 1252 	inc	r0
      00007F 86 07            [24] 1253 	mov	ar7,@r0
      000081 8D 82            [24] 1254 	mov	dpl,r5
      000083 8E 83            [24] 1255 	mov	dph,r6
      000085 8F F0            [24] 1256 	mov	b,r7
      000087 E5 81            [12] 1257 	mov	a,sp
      000089 24 F6            [12] 1258 	add	a,#0xf6
      00008B F8               [12] 1259 	mov	r0,a
      00008C E6               [12] 1260 	mov	a,@r0
      00008D 12r00r00         [24] 1261 	lcall	__gptrput
      000090 15 81            [12] 1262 	dec	sp
      000092 15 81            [12] 1263 	dec	sp
      000094 15 81            [12] 1264 	dec	sp
      000096 02r00r00         [24] 1265 	ljmp	__sdcc_banked_ret
                                   1266 ;------------------------------------------------------------
                                   1267 ;Allocation info for local variables in function 'ctr_step'
                                   1268 ;------------------------------------------------------------
                                   1269 ;pos                       Allocated to stack - sp -26
                                   1270 ;m_and_result              Allocated to stack - sp -29
                                   1271 ;m_len                     Allocated to stack - sp -30
                                   1272 ;counter                   Allocated to stack - sp -31
                                   1273 ;nonce                     Allocated to stack - sp -22
                                   1274 ;a                         Allocated to stack - sp -15
                                   1275 ;i                         Allocated to stack - sp -16
                                   1276 ;sloc0                     Allocated to stack - sp -19
                                   1277 ;------------------------------------------------------------
                                   1278 ;	/opt/contiki/core/lib/ccm-star.c:64: ctr_step(const uint8_t *nonce,
                                   1279 ;	-----------------------------------------
                                   1280 ;	 function ctr_step
                                   1281 ;	-----------------------------------------
      000099                       1282 _ctr_step:
      000099 C0 82            [24] 1283 	push	dpl
      00009B C0 83            [24] 1284 	push	dph
      00009D C0 F0            [24] 1285 	push	b
      00009F E5 81            [12] 1286 	mov	a,sp
      0000A1 24 14            [12] 1287 	add	a,#0x14
                                   1288 ;	/opt/contiki/core/lib/ccm-star.c:73: set_iv(a, CCM_STAR_ENCRYPTION_FLAGS, nonce, counter);
      0000A3 F5 81            [12] 1289 	mov	sp,a
      0000A5 24 F1            [12] 1290 	add	a,#0xF1
      0000A7 FC               [12] 1291 	mov	r4,a
      0000A8 FA               [12] 1292 	mov	r2,a
      0000A9 7B 00            [12] 1293 	mov	r3,#0x00
      0000AB 7F 40            [12] 1294 	mov	r7,#0x40
      0000AD C0 04            [24] 1295 	push	ar4
      0000AF E5 81            [12] 1296 	mov	a,sp
      0000B1 24 E0            [12] 1297 	add	a,#0xe0
      0000B3 F8               [12] 1298 	mov	r0,a
      0000B4 E6               [12] 1299 	mov	a,@r0
      0000B5 C0 E0            [24] 1300 	push	acc
      0000B7 E5 81            [12] 1301 	mov	a,sp
      0000B9 24 E8            [12] 1302 	add	a,#0xe8
      0000BB F8               [12] 1303 	mov	r0,a
      0000BC E6               [12] 1304 	mov	a,@r0
      0000BD C0 E0            [24] 1305 	push	acc
      0000BF 08               [12] 1306 	inc	r0
      0000C0 E6               [12] 1307 	mov	a,@r0
      0000C1 C0 E0            [24] 1308 	push	acc
      0000C3 08               [12] 1309 	inc	r0
      0000C4 E6               [12] 1310 	mov	a,@r0
      0000C5 C0 E0            [24] 1311 	push	acc
      0000C7 74 01            [12] 1312 	mov	a,#0x01
      0000C9 C0 E0            [24] 1313 	push	acc
      0000CB 8A 82            [24] 1314 	mov	dpl,r2
      0000CD 8B 83            [24] 1315 	mov	dph,r3
      0000CF 8F F0            [24] 1316 	mov	b,r7
      0000D1 78r00            [12] 1317 	mov	r0,#_set_iv
      0000D3 79s00            [12] 1318 	mov	r1,#(_set_iv >> 8)
      0000D5 7As00            [12] 1319 	mov	r2,#(_set_iv >> 16)
      0000D7 12r00r00         [24] 1320 	lcall	__sdcc_banked_call
      0000DA E5 81            [12] 1321 	mov	a,sp
      0000DC 24 FB            [12] 1322 	add	a,#0xfb
      0000DE F5 81            [12] 1323 	mov	sp,a
      0000E0 D0 04            [24] 1324 	pop	ar4
                                   1325 ;	/opt/contiki/core/lib/ccm-star.c:74: AES_128.encrypt(a);
      0000E2 90r00r03         [24] 1326 	mov	dptr,#(_aes_128_driver + 0x0003)
      0000E5 E5 81            [12] 1327 	mov	a,sp
      0000E7 24 ED            [12] 1328 	add	a,#0xed
      0000E9 F8               [12] 1329 	mov	r0,a
      0000EA E4               [12] 1330 	clr	a
      0000EB 93               [24] 1331 	movc	a,@a+dptr
      0000EC F6               [12] 1332 	mov	@r0,a
      0000ED A3               [24] 1333 	inc	dptr
      0000EE E4               [12] 1334 	clr	a
      0000EF 93               [24] 1335 	movc	a,@a+dptr
      0000F0 08               [12] 1336 	inc	r0
      0000F1 F6               [12] 1337 	mov	@r0,a
      0000F2 A3               [24] 1338 	inc	dptr
      0000F3 E4               [12] 1339 	clr	a
      0000F4 93               [24] 1340 	movc	a,@a+dptr
      0000F5 08               [12] 1341 	inc	r0
      0000F6 F6               [12] 1342 	mov	@r0,a
      0000F7 8C 03            [24] 1343 	mov	ar3,r4
      0000F9 8B 02            [24] 1344 	mov	ar2,r3
      0000FB 7B 00            [12] 1345 	mov	r3,#0x00
      0000FD 7F 40            [12] 1346 	mov	r7,#0x40
      0000FF C0 04            [24] 1347 	push	ar4
      000101 E5 81            [12] 1348 	mov	a,sp
      000103 24 EC            [12] 1349 	add	a,#0xec
      000105 F8               [12] 1350 	mov	r0,a
      000106 E6               [12] 1351 	mov	a,@r0
      000107 C0 E0            [24] 1352 	push	acc
      000109 08               [12] 1353 	inc	r0
      00010A E6               [12] 1354 	mov	a,@r0
      00010B C0 E0            [24] 1355 	push	acc
      00010D 08               [12] 1356 	inc	r0
      00010E E6               [12] 1357 	mov	a,@r0
      00010F C0 E0            [24] 1358 	push	acc
      000111 8A 82            [24] 1359 	mov	dpl,r2
      000113 8B 83            [24] 1360 	mov	dph,r3
      000115 8F F0            [24] 1361 	mov	b,r7
      000117 D0 02            [24] 1362 	pop	ar2
      000119 D0 01            [24] 1363 	pop	ar1
      00011B D0 00            [24] 1364 	pop	ar0
      00011D 12r00r00         [24] 1365 	lcall	__sdcc_banked_call
      000120 D0 04            [24] 1366 	pop	ar4
                                   1367 ;	/opt/contiki/core/lib/ccm-star.c:76: for(i = 0; (pos + i < m_len) && (i < AES_128_BLOCK_SIZE); i++) {
      000122 E5 81            [12] 1368 	mov	a,sp
      000124 24 F0            [12] 1369 	add	a,#0xf0
      000126 F8               [12] 1370 	mov	r0,a
      000127 76 00            [12] 1371 	mov	@r0,#0x00
      000129                       1372 00104$:
      000129 C0 04            [24] 1373 	push	ar4
      00012B E5 81            [12] 1374 	mov	a,sp
      00012D 24 E5            [12] 1375 	add	a,#0xe5
      00012F F8               [12] 1376 	mov	r0,a
      000130 86 05            [24] 1377 	mov	ar5,@r0
      000132 7E 00            [12] 1378 	mov	r6,#0x00
      000134 E5 81            [12] 1379 	mov	a,sp
      000136 24 EF            [12] 1380 	add	a,#0xef
      000138 F8               [12] 1381 	mov	r0,a
      000139 86 02            [24] 1382 	mov	ar2,@r0
      00013B 7B 00            [12] 1383 	mov	r3,#0x00
      00013D E5 81            [12] 1384 	mov	a,sp
      00013F 24 EC            [12] 1385 	add	a,#0xec
      000141 F8               [12] 1386 	mov	r0,a
      000142 EA               [12] 1387 	mov	a,r2
      000143 2D               [12] 1388 	add	a,r5
      000144 F6               [12] 1389 	mov	@r0,a
      000145 EB               [12] 1390 	mov	a,r3
      000146 3E               [12] 1391 	addc	a,r6
      000147 08               [12] 1392 	inc	r0
      000148 F6               [12] 1393 	mov	@r0,a
      000149 E5 81            [12] 1394 	mov	a,sp
      00014B 24 E1            [12] 1395 	add	a,#0xe1
      00014D F8               [12] 1396 	mov	r0,a
      00014E 86 04            [24] 1397 	mov	ar4,@r0
      000150 7F 00            [12] 1398 	mov	r7,#0x00
      000152 E5 81            [12] 1399 	mov	a,sp
      000154 24 EC            [12] 1400 	add	a,#0xec
      000156 F8               [12] 1401 	mov	r0,a
      000157 C3               [12] 1402 	clr	c
      000158 E6               [12] 1403 	mov	a,@r0
      000159 9C               [12] 1404 	subb	a,r4
      00015A 08               [12] 1405 	inc	r0
      00015B E6               [12] 1406 	mov	a,@r0
      00015C 64 80            [12] 1407 	xrl	a,#0x80
      00015E 8F F0            [24] 1408 	mov	b,r7
      000160 63 F0 80         [24] 1409 	xrl	b,#0x80
      000163 95 F0            [12] 1410 	subb	a,b
      000165 D0 04            [24] 1411 	pop	ar4
      000167 50 48            [24] 1412 	jnc	00106$
      000169 E5 81            [12] 1413 	mov	a,sp
      00016B 24 F0            [12] 1414 	add	a,#0xf0
      00016D F8               [12] 1415 	mov	r0,a
      00016E B6 10 00         [24] 1416 	cjne	@r0,#0x10,00119$
      000171                       1417 00119$:
      000171 50 3E            [24] 1418 	jnc	00106$
                                   1419 ;	/opt/contiki/core/lib/ccm-star.c:77: m_and_result[pos + i] ^= a[i];
      000173 EA               [12] 1420 	mov	a,r2
      000174 2D               [12] 1421 	add	a,r5
      000175 FD               [12] 1422 	mov	r5,a
      000176 EB               [12] 1423 	mov	a,r3
      000177 3E               [12] 1424 	addc	a,r6
      000178 FE               [12] 1425 	mov	r6,a
      000179 E5 81            [12] 1426 	mov	a,sp
      00017B 24 E3            [12] 1427 	add	a,#0xe3
      00017D F8               [12] 1428 	mov	r0,a
      00017E ED               [12] 1429 	mov	a,r5
      00017F 26               [12] 1430 	add	a,@r0
      000180 FD               [12] 1431 	mov	r5,a
      000181 EE               [12] 1432 	mov	a,r6
      000182 08               [12] 1433 	inc	r0
      000183 36               [12] 1434 	addc	a,@r0
      000184 FE               [12] 1435 	mov	r6,a
      000185 08               [12] 1436 	inc	r0
      000186 86 07            [24] 1437 	mov	ar7,@r0
      000188 8D 82            [24] 1438 	mov	dpl,r5
      00018A 8E 83            [24] 1439 	mov	dph,r6
      00018C 8F F0            [24] 1440 	mov	b,r7
      00018E 12r00r00         [24] 1441 	lcall	__gptrget
      000191 FB               [12] 1442 	mov	r3,a
      000192 E5 81            [12] 1443 	mov	a,sp
      000194 24 F0            [12] 1444 	add	a,#0xf0
      000196 F8               [12] 1445 	mov	r0,a
      000197 E6               [12] 1446 	mov	a,@r0
      000198 2C               [12] 1447 	add	a,r4
      000199 F9               [12] 1448 	mov	r1,a
      00019A E7               [12] 1449 	mov	a,@r1
      00019B FA               [12] 1450 	mov	r2,a
      00019C 62 03            [12] 1451 	xrl	ar3,a
      00019E 8D 82            [24] 1452 	mov	dpl,r5
      0001A0 8E 83            [24] 1453 	mov	dph,r6
      0001A2 8F F0            [24] 1454 	mov	b,r7
      0001A4 EB               [12] 1455 	mov	a,r3
      0001A5 12r00r00         [24] 1456 	lcall	__gptrput
                                   1457 ;	/opt/contiki/core/lib/ccm-star.c:76: for(i = 0; (pos + i < m_len) && (i < AES_128_BLOCK_SIZE); i++) {
      0001A8 E5 81            [12] 1458 	mov	a,sp
      0001AA 24 F0            [12] 1459 	add	a,#0xf0
      0001AC F8               [12] 1460 	mov	r0,a
      0001AD 06               [12] 1461 	inc	@r0
      0001AE 02r01r29         [24] 1462 	ljmp	00104$
      0001B1                       1463 00106$:
      0001B1 E5 81            [12] 1464 	mov	a,sp
      0001B3 24 E9            [12] 1465 	add	a,#0xE9
      0001B5 F5 81            [12] 1466 	mov	sp,a
      0001B7 02r00r00         [24] 1467 	ljmp	__sdcc_banked_ret
                                   1468 ;------------------------------------------------------------
                                   1469 ;Allocation info for local variables in function 'mic'
                                   1470 ;------------------------------------------------------------
                                   1471 ;m                         Allocated to stack - sp -33
                                   1472 ;m_len                     Allocated to stack - sp -34
                                   1473 ;a                         Allocated to stack - sp -37
                                   1474 ;a_len                     Allocated to stack - sp -38
                                   1475 ;result                    Allocated to stack - sp -41
                                   1476 ;mic_len                   Allocated to stack - sp -42
                                   1477 ;nonce                     Allocated to stack - sp -27
                                   1478 ;x                         Allocated to stack - sp -17
                                   1479 ;pos                       Allocated to stack - sp -1
                                   1480 ;i                         Allocated to stack - sp +0
                                   1481 ;sloc0                     Allocated to stack - sp -24
                                   1482 ;sloc1                     Allocated to stack - sp -21
                                   1483 ;sloc2                     Allocated to stack - sp -18
                                   1484 ;------------------------------------------------------------
                                   1485 ;	/opt/contiki/core/lib/ccm-star.c:82: mic(const uint8_t *nonce,
                                   1486 ;	-----------------------------------------
                                   1487 ;	 function mic
                                   1488 ;	-----------------------------------------
      0001BA                       1489 _mic:
      0001BA C0 82            [24] 1490 	push	dpl
      0001BC C0 83            [24] 1491 	push	dph
      0001BE C0 F0            [24] 1492 	push	b
      0001C0 E5 81            [12] 1493 	mov	a,sp
      0001C2 24 19            [12] 1494 	add	a,#0x19
                                   1495 ;	/opt/contiki/core/lib/ccm-star.c:92: set_iv(x, CCM_STAR_AUTH_FLAGS(a_len, mic_len), nonce, m_len);
      0001C4 F5 81            [12] 1496 	mov	sp,a
      0001C6 24 DA            [12] 1497 	add	a,#0xda
      0001C8 F8               [12] 1498 	mov	r0,a
      0001C9 E6               [12] 1499 	mov	a,@r0
      0001CA 60 04            [24] 1500 	jz	00128$
      0001CC 7C 40            [12] 1501 	mov	r4,#0x40
      0001CE 80 02            [24] 1502 	sjmp	00129$
      0001D0                       1503 00128$:
      0001D0 7C 00            [12] 1504 	mov	r4,#0x00
      0001D2                       1505 00129$:
      0001D2 E5 81            [12] 1506 	mov	a,sp
      0001D4 24 D6            [12] 1507 	add	a,#0xd6
      0001D6 F8               [12] 1508 	mov	r0,a
      0001D7 86 02            [24] 1509 	mov	ar2,@r0
      0001D9 7B 00            [12] 1510 	mov	r3,#0x00
      0001DB EA               [12] 1511 	mov	a,r2
      0001DC 24 FE            [12] 1512 	add	a,#0xFE
      0001DE FA               [12] 1513 	mov	r2,a
      0001DF EB               [12] 1514 	mov	a,r3
      0001E0 34 FF            [12] 1515 	addc	a,#0xFF
      0001E2 C3               [12] 1516 	clr	c
      0001E3 13               [12] 1517 	rrc	a
      0001E4 CA               [12] 1518 	xch	a,r2
      0001E5 13               [12] 1519 	rrc	a
      0001E6 CA               [12] 1520 	xch	a,r2
      0001E7 EA               [12] 1521 	mov	a,r2
      0001E8 C4               [12] 1522 	swap	a
      0001E9 03               [12] 1523 	rr	a
      0001EA 54 F8            [12] 1524 	anl	a,#0xF8
      0001EC 42 04            [12] 1525 	orl	ar4,a
      0001EE 43 04 01         [24] 1526 	orl	ar4,#0x01
      0001F1 E5 81            [12] 1527 	mov	a,sp
      0001F3 24 EF            [12] 1528 	add	a,#0xEF
      0001F5 FB               [12] 1529 	mov	r3,a
      0001F6 FA               [12] 1530 	mov	r2,a
      0001F7 7E 00            [12] 1531 	mov	r6,#0x00
      0001F9 7F 40            [12] 1532 	mov	r7,#0x40
      0001FB C0 03            [24] 1533 	push	ar3
      0001FD E5 81            [12] 1534 	mov	a,sp
      0001FF 24 DD            [12] 1535 	add	a,#0xdd
      000201 F8               [12] 1536 	mov	r0,a
      000202 E6               [12] 1537 	mov	a,@r0
      000203 C0 E0            [24] 1538 	push	acc
      000205 E5 81            [12] 1539 	mov	a,sp
      000207 24 E3            [12] 1540 	add	a,#0xe3
      000209 F8               [12] 1541 	mov	r0,a
      00020A E6               [12] 1542 	mov	a,@r0
      00020B C0 E0            [24] 1543 	push	acc
      00020D 08               [12] 1544 	inc	r0
      00020E E6               [12] 1545 	mov	a,@r0
      00020F C0 E0            [24] 1546 	push	acc
      000211 08               [12] 1547 	inc	r0
      000212 E6               [12] 1548 	mov	a,@r0
      000213 C0 E0            [24] 1549 	push	acc
      000215 C0 04            [24] 1550 	push	ar4
      000217 8A 82            [24] 1551 	mov	dpl,r2
      000219 8E 83            [24] 1552 	mov	dph,r6
      00021B 8F F0            [24] 1553 	mov	b,r7
      00021D 78r00            [12] 1554 	mov	r0,#_set_iv
      00021F 79s00            [12] 1555 	mov	r1,#(_set_iv >> 8)
      000221 7As00            [12] 1556 	mov	r2,#(_set_iv >> 16)
      000223 12r00r00         [24] 1557 	lcall	__sdcc_banked_call
      000226 E5 81            [12] 1558 	mov	a,sp
      000228 24 FB            [12] 1559 	add	a,#0xfb
      00022A F5 81            [12] 1560 	mov	sp,a
      00022C D0 03            [24] 1561 	pop	ar3
                                   1562 ;	/opt/contiki/core/lib/ccm-star.c:93: AES_128.encrypt(x);
      00022E 90r00r03         [24] 1563 	mov	dptr,#(_aes_128_driver + 0x0003)
      000231 E5 81            [12] 1564 	mov	a,sp
      000233 24 E8            [12] 1565 	add	a,#0xe8
      000235 F8               [12] 1566 	mov	r0,a
      000236 E4               [12] 1567 	clr	a
      000237 93               [24] 1568 	movc	a,@a+dptr
      000238 F6               [12] 1569 	mov	@r0,a
      000239 A3               [24] 1570 	inc	dptr
      00023A E4               [12] 1571 	clr	a
      00023B 93               [24] 1572 	movc	a,@a+dptr
      00023C 08               [12] 1573 	inc	r0
      00023D F6               [12] 1574 	mov	@r0,a
      00023E A3               [24] 1575 	inc	dptr
      00023F E4               [12] 1576 	clr	a
      000240 93               [24] 1577 	movc	a,@a+dptr
      000241 08               [12] 1578 	inc	r0
      000242 F6               [12] 1579 	mov	@r0,a
      000243 8B 04            [24] 1580 	mov	ar4,r3
      000245 8C 02            [24] 1581 	mov	ar2,r4
      000247 7C 00            [12] 1582 	mov	r4,#0x00
      000249 7F 40            [12] 1583 	mov	r7,#0x40
      00024B C0 03            [24] 1584 	push	ar3
      00024D E5 81            [12] 1585 	mov	a,sp
      00024F 24 E7            [12] 1586 	add	a,#0xe7
      000251 F8               [12] 1587 	mov	r0,a
      000252 E6               [12] 1588 	mov	a,@r0
      000253 C0 E0            [24] 1589 	push	acc
      000255 08               [12] 1590 	inc	r0
      000256 E6               [12] 1591 	mov	a,@r0
      000257 C0 E0            [24] 1592 	push	acc
      000259 08               [12] 1593 	inc	r0
      00025A E6               [12] 1594 	mov	a,@r0
      00025B C0 E0            [24] 1595 	push	acc
      00025D 8A 82            [24] 1596 	mov	dpl,r2
      00025F 8C 83            [24] 1597 	mov	dph,r4
      000261 8F F0            [24] 1598 	mov	b,r7
      000263 D0 02            [24] 1599 	pop	ar2
      000265 D0 01            [24] 1600 	pop	ar1
      000267 D0 00            [24] 1601 	pop	ar0
      000269 12r00r00         [24] 1602 	lcall	__sdcc_banked_call
      00026C D0 03            [24] 1603 	pop	ar3
                                   1604 ;	/opt/contiki/core/lib/ccm-star.c:95: if(a_len) {
      00026E E5 81            [12] 1605 	mov	a,sp
      000270 24 DA            [12] 1606 	add	a,#0xda
      000272 F8               [12] 1607 	mov	r0,a
      000273 E6               [12] 1608 	mov	a,@r0
      000274 70 03            [24] 1609 	jnz	00184$
      000276 02r03rF9         [24] 1610 	ljmp	00107$
      000279                       1611 00184$:
                                   1612 ;	/opt/contiki/core/lib/ccm-star.c:96: x[1] = x[1] ^ a_len;
      000279 EB               [12] 1613 	mov	a,r3
      00027A 04               [12] 1614 	inc	a
      00027B F9               [12] 1615 	mov	r1,a
      00027C 87 07            [24] 1616 	mov	ar7,@r1
      00027E E5 81            [12] 1617 	mov	a,sp
      000280 24 DA            [12] 1618 	add	a,#0xda
      000282 F8               [12] 1619 	mov	r0,a
      000283 E6               [12] 1620 	mov	a,@r0
      000284 6F               [12] 1621 	xrl	a,r7
      000285 F7               [12] 1622 	mov	@r1,a
                                   1623 ;	/opt/contiki/core/lib/ccm-star.c:97: for(i = 2; (i - 2 < a_len) && (i < AES_128_BLOCK_SIZE); i++) {
      000286 7F 02            [12] 1624 	mov	r7,#0x02
      000288                       1625 00116$:
      000288 8F 05            [24] 1626 	mov	ar5,r7
      00028A 7E 00            [12] 1627 	mov	r6,#0x00
      00028C ED               [12] 1628 	mov	a,r5
      00028D 24 FE            [12] 1629 	add	a,#0xFE
      00028F FA               [12] 1630 	mov	r2,a
      000290 EE               [12] 1631 	mov	a,r6
      000291 34 FF            [12] 1632 	addc	a,#0xFF
      000293 FC               [12] 1633 	mov	r4,a
      000294 E5 81            [12] 1634 	mov	a,sp
      000296 24 DA            [12] 1635 	add	a,#0xda
      000298 F8               [12] 1636 	mov	r0,a
      000299 E5 81            [12] 1637 	mov	a,sp
      00029B 24 E8            [12] 1638 	add	a,#0xe8
      00029D F9               [12] 1639 	mov	r1,a
      00029E E6               [12] 1640 	mov	a,@r0
      00029F F7               [12] 1641 	mov	@r1,a
      0002A0 09               [12] 1642 	inc	r1
      0002A1 77 00            [12] 1643 	mov	@r1,#0x00
      0002A3 E5 81            [12] 1644 	mov	a,sp
      0002A5 24 E8            [12] 1645 	add	a,#0xe8
      0002A7 F8               [12] 1646 	mov	r0,a
      0002A8 C3               [12] 1647 	clr	c
      0002A9 EA               [12] 1648 	mov	a,r2
      0002AA 96               [12] 1649 	subb	a,@r0
      0002AB EC               [12] 1650 	mov	a,r4
      0002AC 64 80            [12] 1651 	xrl	a,#0x80
      0002AE 08               [12] 1652 	inc	r0
      0002AF 86 F0            [24] 1653 	mov	b,@r0
      0002B1 63 F0 80         [24] 1654 	xrl	b,#0x80
      0002B4 95 F0            [12] 1655 	subb	a,b
      0002B6 50 30            [24] 1656 	jnc	00101$
      0002B8 BF 10 00         [24] 1657 	cjne	r7,#0x10,00186$
      0002BB                       1658 00186$:
      0002BB 50 2B            [24] 1659 	jnc	00101$
                                   1660 ;	/opt/contiki/core/lib/ccm-star.c:98: x[i] ^= a[i - 2];
      0002BD EF               [12] 1661 	mov	a,r7
      0002BE 2B               [12] 1662 	add	a,r3
      0002BF F9               [12] 1663 	mov	r1,a
      0002C0 87 04            [24] 1664 	mov	ar4,@r1
      0002C2 ED               [12] 1665 	mov	a,r5
      0002C3 24 FE            [12] 1666 	add	a,#0xFE
      0002C5 FD               [12] 1667 	mov	r5,a
      0002C6 EE               [12] 1668 	mov	a,r6
      0002C7 34 FF            [12] 1669 	addc	a,#0xFF
      0002C9 FE               [12] 1670 	mov	r6,a
      0002CA E5 81            [12] 1671 	mov	a,sp
      0002CC 24 DB            [12] 1672 	add	a,#0xdb
      0002CE F8               [12] 1673 	mov	r0,a
      0002CF ED               [12] 1674 	mov	a,r5
      0002D0 26               [12] 1675 	add	a,@r0
      0002D1 FD               [12] 1676 	mov	r5,a
      0002D2 EE               [12] 1677 	mov	a,r6
      0002D3 08               [12] 1678 	inc	r0
      0002D4 36               [12] 1679 	addc	a,@r0
      0002D5 FE               [12] 1680 	mov	r6,a
      0002D6 08               [12] 1681 	inc	r0
      0002D7 86 02            [24] 1682 	mov	ar2,@r0
      0002D9 8D 82            [24] 1683 	mov	dpl,r5
      0002DB 8E 83            [24] 1684 	mov	dph,r6
      0002DD 8A F0            [24] 1685 	mov	b,r2
      0002DF 12r00r00         [24] 1686 	lcall	__gptrget
      0002E2 FD               [12] 1687 	mov	r5,a
      0002E3 6C               [12] 1688 	xrl	a,r4
      0002E4 F7               [12] 1689 	mov	@r1,a
                                   1690 ;	/opt/contiki/core/lib/ccm-star.c:97: for(i = 2; (i - 2 < a_len) && (i < AES_128_BLOCK_SIZE); i++) {
      0002E5 0F               [12] 1691 	inc	r7
      0002E6 80 A0            [24] 1692 	sjmp	00116$
      0002E8                       1693 00101$:
                                   1694 ;	/opt/contiki/core/lib/ccm-star.c:101: AES_128.encrypt(x);
      0002E8 90r00r03         [24] 1695 	mov	dptr,#(_aes_128_driver + 0x0003)
      0002EB E5 81            [12] 1696 	mov	a,sp
      0002ED 24 EB            [12] 1697 	add	a,#0xeb
      0002EF F8               [12] 1698 	mov	r0,a
      0002F0 E4               [12] 1699 	clr	a
      0002F1 93               [24] 1700 	movc	a,@a+dptr
      0002F2 F6               [12] 1701 	mov	@r0,a
      0002F3 A3               [24] 1702 	inc	dptr
      0002F4 E4               [12] 1703 	clr	a
      0002F5 93               [24] 1704 	movc	a,@a+dptr
      0002F6 08               [12] 1705 	inc	r0
      0002F7 F6               [12] 1706 	mov	@r0,a
      0002F8 A3               [24] 1707 	inc	dptr
      0002F9 E4               [12] 1708 	clr	a
      0002FA 93               [24] 1709 	movc	a,@a+dptr
      0002FB 08               [12] 1710 	inc	r0
      0002FC F6               [12] 1711 	mov	@r0,a
      0002FD 8B 04            [24] 1712 	mov	ar4,r3
      0002FF 8C 02            [24] 1713 	mov	ar2,r4
      000301 7C 00            [12] 1714 	mov	r4,#0x00
      000303 7F 40            [12] 1715 	mov	r7,#0x40
      000305 C0 03            [24] 1716 	push	ar3
      000307 E5 81            [12] 1717 	mov	a,sp
      000309 24 EA            [12] 1718 	add	a,#0xea
      00030B F8               [12] 1719 	mov	r0,a
      00030C E6               [12] 1720 	mov	a,@r0
      00030D C0 E0            [24] 1721 	push	acc
      00030F 08               [12] 1722 	inc	r0
      000310 E6               [12] 1723 	mov	a,@r0
      000311 C0 E0            [24] 1724 	push	acc
      000313 08               [12] 1725 	inc	r0
      000314 E6               [12] 1726 	mov	a,@r0
      000315 C0 E0            [24] 1727 	push	acc
      000317 8A 82            [24] 1728 	mov	dpl,r2
      000319 8C 83            [24] 1729 	mov	dph,r4
      00031B 8F F0            [24] 1730 	mov	b,r7
      00031D D0 02            [24] 1731 	pop	ar2
      00031F D0 01            [24] 1732 	pop	ar1
      000321 D0 00            [24] 1733 	pop	ar0
      000323 12r00r00         [24] 1734 	lcall	__sdcc_banked_call
      000326 D0 03            [24] 1735 	pop	ar3
                                   1736 ;	/opt/contiki/core/lib/ccm-star.c:104: while(pos < a_len) {
      000328 E5 81            [12] 1737 	mov	a,sp
      00032A 24 EE            [12] 1738 	add	a,#0xee
      00032C F8               [12] 1739 	mov	r0,a
      00032D A6 03            [24] 1740 	mov	@r0,ar3
      00032F A8 81            [24] 1741 	mov	r0,sp
      000331 18               [12] 1742 	dec	r0
      000332 76 0E            [12] 1743 	mov	@r0,#0x0E
      000334                       1744 00103$:
      000334 A8 81            [24] 1745 	mov	r0,sp
      000336 18               [12] 1746 	dec	r0
      000337 E5 81            [12] 1747 	mov	a,sp
      000339 24 DA            [12] 1748 	add	a,#0xda
      00033B F9               [12] 1749 	mov	r1,a
      00033C C3               [12] 1750 	clr	c
      00033D E6               [12] 1751 	mov	a,@r0
      00033E 97               [12] 1752 	subb	a,@r1
      00033F 40 03            [24] 1753 	jc	00188$
      000341 02r03rF9         [24] 1754 	ljmp	00107$
      000344                       1755 00188$:
                                   1756 ;	/opt/contiki/core/lib/ccm-star.c:105: for(i = 0; (pos + i < a_len) && (i < AES_128_BLOCK_SIZE); i++) {
      000344 7D 00            [12] 1757 	mov	r5,#0x00
      000346                       1758 00120$:
      000346 A8 81            [24] 1759 	mov	r0,sp
      000348 18               [12] 1760 	dec	r0
      000349 86 02            [24] 1761 	mov	ar2,@r0
      00034B 7C 00            [12] 1762 	mov	r4,#0x00
      00034D E5 81            [12] 1763 	mov	a,sp
      00034F 24 EB            [12] 1764 	add	a,#0xeb
      000351 F8               [12] 1765 	mov	r0,a
      000352 A6 05            [24] 1766 	mov	@r0,ar5
      000354 08               [12] 1767 	inc	r0
      000355 76 00            [12] 1768 	mov	@r0,#0x00
      000357 E5 81            [12] 1769 	mov	a,sp
      000359 24 EB            [12] 1770 	add	a,#0xeb
      00035B F8               [12] 1771 	mov	r0,a
      00035C E6               [12] 1772 	mov	a,@r0
      00035D 2A               [12] 1773 	add	a,r2
      00035E FE               [12] 1774 	mov	r6,a
      00035F 08               [12] 1775 	inc	r0
      000360 E6               [12] 1776 	mov	a,@r0
      000361 3C               [12] 1777 	addc	a,r4
      000362 FF               [12] 1778 	mov	r7,a
      000363 E5 81            [12] 1779 	mov	a,sp
      000365 24 E8            [12] 1780 	add	a,#0xe8
      000367 F8               [12] 1781 	mov	r0,a
      000368 C3               [12] 1782 	clr	c
      000369 EE               [12] 1783 	mov	a,r6
      00036A 96               [12] 1784 	subb	a,@r0
      00036B EF               [12] 1785 	mov	a,r7
      00036C 64 80            [12] 1786 	xrl	a,#0x80
      00036E 08               [12] 1787 	inc	r0
      00036F 86 F0            [24] 1788 	mov	b,@r0
      000371 63 F0 80         [24] 1789 	xrl	b,#0x80
      000374 95 F0            [12] 1790 	subb	a,b
      000376 50 34            [24] 1791 	jnc	00102$
      000378 BD 10 00         [24] 1792 	cjne	r5,#0x10,00190$
      00037B                       1793 00190$:
      00037B 50 2F            [24] 1794 	jnc	00102$
                                   1795 ;	/opt/contiki/core/lib/ccm-star.c:106: x[i] ^= a[pos + i];
      00037D ED               [12] 1796 	mov	a,r5
      00037E 2B               [12] 1797 	add	a,r3
      00037F F9               [12] 1798 	mov	r1,a
      000380 87 06            [24] 1799 	mov	ar6,@r1
      000382 E5 81            [12] 1800 	mov	a,sp
      000384 24 EB            [12] 1801 	add	a,#0xeb
      000386 F8               [12] 1802 	mov	r0,a
      000387 E6               [12] 1803 	mov	a,@r0
      000388 2A               [12] 1804 	add	a,r2
      000389 FA               [12] 1805 	mov	r2,a
      00038A 08               [12] 1806 	inc	r0
      00038B E6               [12] 1807 	mov	a,@r0
      00038C 3C               [12] 1808 	addc	a,r4
      00038D FC               [12] 1809 	mov	r4,a
      00038E E5 81            [12] 1810 	mov	a,sp
      000390 24 DB            [12] 1811 	add	a,#0xdb
      000392 F8               [12] 1812 	mov	r0,a
      000393 EA               [12] 1813 	mov	a,r2
      000394 26               [12] 1814 	add	a,@r0
      000395 FA               [12] 1815 	mov	r2,a
      000396 EC               [12] 1816 	mov	a,r4
      000397 08               [12] 1817 	inc	r0
      000398 36               [12] 1818 	addc	a,@r0
      000399 FC               [12] 1819 	mov	r4,a
      00039A 08               [12] 1820 	inc	r0
      00039B 86 07            [24] 1821 	mov	ar7,@r0
      00039D 8A 82            [24] 1822 	mov	dpl,r2
      00039F 8C 83            [24] 1823 	mov	dph,r4
      0003A1 8F F0            [24] 1824 	mov	b,r7
      0003A3 12r00r00         [24] 1825 	lcall	__gptrget
      0003A6 FA               [12] 1826 	mov	r2,a
      0003A7 6E               [12] 1827 	xrl	a,r6
      0003A8 F7               [12] 1828 	mov	@r1,a
                                   1829 ;	/opt/contiki/core/lib/ccm-star.c:105: for(i = 0; (pos + i < a_len) && (i < AES_128_BLOCK_SIZE); i++) {
      0003A9 0D               [12] 1830 	inc	r5
      0003AA 80 9A            [24] 1831 	sjmp	00120$
      0003AC                       1832 00102$:
                                   1833 ;	/opt/contiki/core/lib/ccm-star.c:108: pos += AES_128_BLOCK_SIZE;
      0003AC C0 03            [24] 1834 	push	ar3
      0003AE A8 81            [24] 1835 	mov	r0,sp
      0003B0 18               [12] 1836 	dec	r0
      0003B1 18               [12] 1837 	dec	r0
      0003B2 74 10            [12] 1838 	mov	a,#0x10
      0003B4 26               [12] 1839 	add	a,@r0
      0003B5 F6               [12] 1840 	mov	@r0,a
                                   1841 ;	/opt/contiki/core/lib/ccm-star.c:109: AES_128.encrypt(x);
      0003B6 90r00r03         [24] 1842 	mov	dptr,#(_aes_128_driver + 0x0003)
      0003B9 E4               [12] 1843 	clr	a
      0003BA 93               [24] 1844 	movc	a,@a+dptr
      0003BB FC               [12] 1845 	mov	r4,a
      0003BC A3               [24] 1846 	inc	dptr
      0003BD E4               [12] 1847 	clr	a
      0003BE 93               [24] 1848 	movc	a,@a+dptr
      0003BF FD               [12] 1849 	mov	r5,a
      0003C0 A3               [24] 1850 	inc	dptr
      0003C1 E4               [12] 1851 	clr	a
      0003C2 93               [24] 1852 	movc	a,@a+dptr
      0003C3 FE               [12] 1853 	mov	r6,a
      0003C4 E5 81            [12] 1854 	mov	a,sp
      0003C6 24 ED            [12] 1855 	add	a,#0xed
      0003C8 F8               [12] 1856 	mov	r0,a
      0003C9 86 02            [24] 1857 	mov	ar2,@r0
      0003CB 7B 00            [12] 1858 	mov	r3,#0x00
      0003CD 7F 40            [12] 1859 	mov	r7,#0x40
      0003CF C0 06            [24] 1860 	push	ar6
      0003D1 C0 05            [24] 1861 	push	ar5
      0003D3 C0 04            [24] 1862 	push	ar4
      0003D5 C0 03            [24] 1863 	push	ar3
      0003D7 C0 04            [24] 1864 	push	ar4
      0003D9 C0 05            [24] 1865 	push	ar5
      0003DB C0 06            [24] 1866 	push	ar6
      0003DD 8A 82            [24] 1867 	mov	dpl,r2
      0003DF 8B 83            [24] 1868 	mov	dph,r3
      0003E1 8F F0            [24] 1869 	mov	b,r7
      0003E3 D0 02            [24] 1870 	pop	ar2
      0003E5 D0 01            [24] 1871 	pop	ar1
      0003E7 D0 00            [24] 1872 	pop	ar0
      0003E9 12r00r00         [24] 1873 	lcall	__sdcc_banked_call
      0003EC D0 03            [24] 1874 	pop	ar3
      0003EE D0 04            [24] 1875 	pop	ar4
      0003F0 D0 05            [24] 1876 	pop	ar5
      0003F2 D0 06            [24] 1877 	pop	ar6
      0003F4 D0 03            [24] 1878 	pop	ar3
      0003F6 02r03r34         [24] 1879 	ljmp	00103$
      0003F9                       1880 00107$:
                                   1881 ;	/opt/contiki/core/lib/ccm-star.c:113: if(m_len) {
      0003F9 E5 81            [12] 1882 	mov	a,sp
      0003FB 24 DE            [12] 1883 	add	a,#0xde
      0003FD F8               [12] 1884 	mov	r0,a
      0003FE E6               [12] 1885 	mov	a,@r0
      0003FF 70 03            [24] 1886 	jnz	00192$
      000401 02r04rED         [24] 1887 	ljmp	00113$
      000404                       1888 00192$:
                                   1889 ;	/opt/contiki/core/lib/ccm-star.c:115: while(pos < m_len) {
      000404 E5 81            [12] 1890 	mov	a,sp
      000406 24 EE            [12] 1891 	add	a,#0xee
      000408 F8               [12] 1892 	mov	r0,a
      000409 A6 03            [24] 1893 	mov	@r0,ar3
      00040B A8 81            [24] 1894 	mov	r0,sp
      00040D 18               [12] 1895 	dec	r0
      00040E 76 00            [12] 1896 	mov	@r0,#0x00
      000410                       1897 00109$:
      000410 A8 81            [24] 1898 	mov	r0,sp
      000412 18               [12] 1899 	dec	r0
      000413 E5 81            [12] 1900 	mov	a,sp
      000415 24 DE            [12] 1901 	add	a,#0xde
      000417 F9               [12] 1902 	mov	r1,a
      000418 C3               [12] 1903 	clr	c
      000419 E6               [12] 1904 	mov	a,@r0
      00041A 97               [12] 1905 	subb	a,@r1
      00041B 40 03            [24] 1906 	jc	00193$
      00041D 02r04rED         [24] 1907 	ljmp	00113$
      000420                       1908 00193$:
                                   1909 ;	/opt/contiki/core/lib/ccm-star.c:116: for(i = 0; (pos + i < m_len) && (i < AES_128_BLOCK_SIZE); i++) {
      000420 A8 81            [24] 1910 	mov	r0,sp
      000422 76 00            [12] 1911 	mov	@r0,#0x00
      000424                       1912 00124$:
      000424 A8 81            [24] 1913 	mov	r0,sp
      000426 18               [12] 1914 	dec	r0
      000427 86 02            [24] 1915 	mov	ar2,@r0
      000429 7C 00            [12] 1916 	mov	r4,#0x00
      00042B E5 81            [12] 1917 	mov	a,sp
      00042D F8               [12] 1918 	mov	r0,a
      00042E 24 EB            [12] 1919 	add	a,#0xeb
      000430 F9               [12] 1920 	mov	r1,a
      000431 E6               [12] 1921 	mov	a,@r0
      000432 F7               [12] 1922 	mov	@r1,a
      000433 09               [12] 1923 	inc	r1
      000434 77 00            [12] 1924 	mov	@r1,#0x00
      000436 E5 81            [12] 1925 	mov	a,sp
      000438 24 EB            [12] 1926 	add	a,#0xeb
      00043A F8               [12] 1927 	mov	r0,a
      00043B E5 81            [12] 1928 	mov	a,sp
      00043D 24 E8            [12] 1929 	add	a,#0xe8
      00043F F9               [12] 1930 	mov	r1,a
      000440 E6               [12] 1931 	mov	a,@r0
      000441 2A               [12] 1932 	add	a,r2
      000442 F7               [12] 1933 	mov	@r1,a
      000443 08               [12] 1934 	inc	r0
      000444 E6               [12] 1935 	mov	a,@r0
      000445 3C               [12] 1936 	addc	a,r4
      000446 09               [12] 1937 	inc	r1
      000447 F7               [12] 1938 	mov	@r1,a
      000448 E5 81            [12] 1939 	mov	a,sp
      00044A 24 DE            [12] 1940 	add	a,#0xde
      00044C F8               [12] 1941 	mov	r0,a
      00044D 86 05            [24] 1942 	mov	ar5,@r0
      00044F 7F 00            [12] 1943 	mov	r7,#0x00
      000451 E5 81            [12] 1944 	mov	a,sp
      000453 24 E8            [12] 1945 	add	a,#0xe8
      000455 F8               [12] 1946 	mov	r0,a
      000456 C3               [12] 1947 	clr	c
      000457 E6               [12] 1948 	mov	a,@r0
      000458 9D               [12] 1949 	subb	a,r5
      000459 08               [12] 1950 	inc	r0
      00045A E6               [12] 1951 	mov	a,@r0
      00045B 64 80            [12] 1952 	xrl	a,#0x80
      00045D 8F F0            [24] 1953 	mov	b,r7
      00045F 63 F0 80         [24] 1954 	xrl	b,#0x80
      000462 95 F0            [12] 1955 	subb	a,b
      000464 50 3A            [24] 1956 	jnc	00108$
      000466 A8 81            [24] 1957 	mov	r0,sp
      000468 B6 10 00         [24] 1958 	cjne	@r0,#0x10,00195$
      00046B                       1959 00195$:
      00046B 50 33            [24] 1960 	jnc	00108$
                                   1961 ;	/opt/contiki/core/lib/ccm-star.c:117: x[i] ^= m[pos + i];
      00046D A8 81            [24] 1962 	mov	r0,sp
      00046F E6               [12] 1963 	mov	a,@r0
      000470 2B               [12] 1964 	add	a,r3
      000471 F9               [12] 1965 	mov	r1,a
      000472 87 06            [24] 1966 	mov	ar6,@r1
      000474 E5 81            [12] 1967 	mov	a,sp
      000476 24 EB            [12] 1968 	add	a,#0xeb
      000478 F8               [12] 1969 	mov	r0,a
      000479 E6               [12] 1970 	mov	a,@r0
      00047A 2A               [12] 1971 	add	a,r2
      00047B FA               [12] 1972 	mov	r2,a
      00047C 08               [12] 1973 	inc	r0
      00047D E6               [12] 1974 	mov	a,@r0
      00047E 3C               [12] 1975 	addc	a,r4
      00047F FC               [12] 1976 	mov	r4,a
      000480 E5 81            [12] 1977 	mov	a,sp
      000482 24 DF            [12] 1978 	add	a,#0xdf
      000484 F8               [12] 1979 	mov	r0,a
      000485 EA               [12] 1980 	mov	a,r2
      000486 26               [12] 1981 	add	a,@r0
      000487 FA               [12] 1982 	mov	r2,a
      000488 EC               [12] 1983 	mov	a,r4
      000489 08               [12] 1984 	inc	r0
      00048A 36               [12] 1985 	addc	a,@r0
      00048B FC               [12] 1986 	mov	r4,a
      00048C 08               [12] 1987 	inc	r0
      00048D 86 05            [24] 1988 	mov	ar5,@r0
      00048F 8A 82            [24] 1989 	mov	dpl,r2
      000491 8C 83            [24] 1990 	mov	dph,r4
      000493 8D F0            [24] 1991 	mov	b,r5
      000495 12r00r00         [24] 1992 	lcall	__gptrget
      000498 FA               [12] 1993 	mov	r2,a
      000499 6E               [12] 1994 	xrl	a,r6
      00049A F7               [12] 1995 	mov	@r1,a
                                   1996 ;	/opt/contiki/core/lib/ccm-star.c:116: for(i = 0; (pos + i < m_len) && (i < AES_128_BLOCK_SIZE); i++) {
      00049B A8 81            [24] 1997 	mov	r0,sp
      00049D 06               [12] 1998 	inc	@r0
      00049E 80 84            [24] 1999 	sjmp	00124$
      0004A0                       2000 00108$:
                                   2001 ;	/opt/contiki/core/lib/ccm-star.c:119: pos += AES_128_BLOCK_SIZE;
      0004A0 C0 03            [24] 2002 	push	ar3
      0004A2 A8 81            [24] 2003 	mov	r0,sp
      0004A4 18               [12] 2004 	dec	r0
      0004A5 18               [12] 2005 	dec	r0
      0004A6 74 10            [12] 2006 	mov	a,#0x10
      0004A8 26               [12] 2007 	add	a,@r0
      0004A9 F6               [12] 2008 	mov	@r0,a
                                   2009 ;	/opt/contiki/core/lib/ccm-star.c:120: AES_128.encrypt(x);
      0004AA 90r00r03         [24] 2010 	mov	dptr,#(_aes_128_driver + 0x0003)
      0004AD E4               [12] 2011 	clr	a
      0004AE 93               [24] 2012 	movc	a,@a+dptr
      0004AF FC               [12] 2013 	mov	r4,a
      0004B0 A3               [24] 2014 	inc	dptr
      0004B1 E4               [12] 2015 	clr	a
      0004B2 93               [24] 2016 	movc	a,@a+dptr
      0004B3 FD               [12] 2017 	mov	r5,a
      0004B4 A3               [24] 2018 	inc	dptr
      0004B5 E4               [12] 2019 	clr	a
      0004B6 93               [24] 2020 	movc	a,@a+dptr
      0004B7 FE               [12] 2021 	mov	r6,a
      0004B8 E5 81            [12] 2022 	mov	a,sp
      0004BA 24 ED            [12] 2023 	add	a,#0xed
      0004BC F8               [12] 2024 	mov	r0,a
      0004BD 86 02            [24] 2025 	mov	ar2,@r0
      0004BF 7B 00            [12] 2026 	mov	r3,#0x00
      0004C1 7F 40            [12] 2027 	mov	r7,#0x40
      0004C3 C0 06            [24] 2028 	push	ar6
      0004C5 C0 05            [24] 2029 	push	ar5
      0004C7 C0 04            [24] 2030 	push	ar4
      0004C9 C0 03            [24] 2031 	push	ar3
      0004CB C0 04            [24] 2032 	push	ar4
      0004CD C0 05            [24] 2033 	push	ar5
      0004CF C0 06            [24] 2034 	push	ar6
      0004D1 8A 82            [24] 2035 	mov	dpl,r2
      0004D3 8B 83            [24] 2036 	mov	dph,r3
      0004D5 8F F0            [24] 2037 	mov	b,r7
      0004D7 D0 02            [24] 2038 	pop	ar2
      0004D9 D0 01            [24] 2039 	pop	ar1
      0004DB D0 00            [24] 2040 	pop	ar0
      0004DD 12r00r00         [24] 2041 	lcall	__sdcc_banked_call
      0004E0 D0 03            [24] 2042 	pop	ar3
      0004E2 D0 04            [24] 2043 	pop	ar4
      0004E4 D0 05            [24] 2044 	pop	ar5
      0004E6 D0 06            [24] 2045 	pop	ar6
      0004E8 D0 03            [24] 2046 	pop	ar3
      0004EA 02r04r10         [24] 2047 	ljmp	00109$
      0004ED                       2048 00113$:
                                   2049 ;	/opt/contiki/core/lib/ccm-star.c:124: ctr_step(nonce, 0, x, AES_128_BLOCK_SIZE, 0);
      0004ED 8B 07            [24] 2050 	mov	ar7,r3
      0004EF 7E 00            [12] 2051 	mov	r6,#0x00
      0004F1 7D 40            [12] 2052 	mov	r5,#0x40
      0004F3 C0 03            [24] 2053 	push	ar3
      0004F5 E4               [12] 2054 	clr	a
      0004F6 C0 E0            [24] 2055 	push	acc
      0004F8 74 10            [12] 2056 	mov	a,#0x10
      0004FA C0 E0            [24] 2057 	push	acc
      0004FC C0 07            [24] 2058 	push	ar7
      0004FE C0 06            [24] 2059 	push	ar6
      000500 C0 05            [24] 2060 	push	ar5
      000502 E4               [12] 2061 	clr	a
      000503 C0 E0            [24] 2062 	push	acc
      000505 E5 81            [12] 2063 	mov	a,sp
      000507 24 DE            [12] 2064 	add	a,#0xde
      000509 F8               [12] 2065 	mov	r0,a
      00050A 86 82            [24] 2066 	mov	dpl,@r0
      00050C 08               [12] 2067 	inc	r0
      00050D 86 83            [24] 2068 	mov	dph,@r0
      00050F 08               [12] 2069 	inc	r0
      000510 86 F0            [24] 2070 	mov	b,@r0
      000512 78r99            [12] 2071 	mov	r0,#_ctr_step
      000514 79s00            [12] 2072 	mov	r1,#(_ctr_step >> 8)
      000516 7As00            [12] 2073 	mov	r2,#(_ctr_step >> 16)
      000518 12r00r00         [24] 2074 	lcall	__sdcc_banked_call
      00051B E5 81            [12] 2075 	mov	a,sp
      00051D 24 FA            [12] 2076 	add	a,#0xfa
      00051F F5 81            [12] 2077 	mov	sp,a
      000521 D0 03            [24] 2078 	pop	ar3
                                   2079 ;	/opt/contiki/core/lib/ccm-star.c:126: memcpy(result, x, mic_len);
      000523 E5 81            [12] 2080 	mov	a,sp
      000525 24 D6            [12] 2081 	add	a,#0xd6
      000527 F8               [12] 2082 	mov	r0,a
      000528 E5 81            [12] 2083 	mov	a,sp
      00052A 24 EB            [12] 2084 	add	a,#0xeb
      00052C F9               [12] 2085 	mov	r1,a
      00052D E6               [12] 2086 	mov	a,@r0
      00052E F7               [12] 2087 	mov	@r1,a
      00052F 09               [12] 2088 	inc	r1
      000530 77 00            [12] 2089 	mov	@r1,#0x00
      000532 7D 00            [12] 2090 	mov	r5,#0x00
      000534 7C 40            [12] 2091 	mov	r4,#0x40
      000536 E5 81            [12] 2092 	mov	a,sp
      000538 24 D7            [12] 2093 	add	a,#0xd7
      00053A F8               [12] 2094 	mov	r0,a
      00053B 86 02            [24] 2095 	mov	ar2,@r0
      00053D 08               [12] 2096 	inc	r0
      00053E 86 06            [24] 2097 	mov	ar6,@r0
      000540 08               [12] 2098 	inc	r0
      000541 86 07            [24] 2099 	mov	ar7,@r0
      000543 E5 81            [12] 2100 	mov	a,sp
      000545 24 EB            [12] 2101 	add	a,#0xeb
      000547 F8               [12] 2102 	mov	r0,a
      000548 E6               [12] 2103 	mov	a,@r0
      000549 C0 E0            [24] 2104 	push	acc
      00054B 08               [12] 2105 	inc	r0
      00054C E6               [12] 2106 	mov	a,@r0
      00054D C0 E0            [24] 2107 	push	acc
      00054F C0 03            [24] 2108 	push	ar3
      000551 C0 05            [24] 2109 	push	ar5
      000553 C0 04            [24] 2110 	push	ar4
      000555 8A 82            [24] 2111 	mov	dpl,r2
      000557 8E 83            [24] 2112 	mov	dph,r6
      000559 8F F0            [24] 2113 	mov	b,r7
      00055B 78r00            [12] 2114 	mov	r0,#_memcpy
      00055D 79s00            [12] 2115 	mov	r1,#(_memcpy >> 8)
      00055F 7As00            [12] 2116 	mov	r2,#(_memcpy >> 16)
      000561 12r00r00         [24] 2117 	lcall	__sdcc_banked_call
      000564 E5 81            [12] 2118 	mov	a,sp
      000566 24 FB            [12] 2119 	add	a,#0xfb
      000568 F5 81            [12] 2120 	mov	sp,a
      00056A E5 81            [12] 2121 	mov	a,sp
      00056C 24 E4            [12] 2122 	add	a,#0xE4
      00056E F5 81            [12] 2123 	mov	sp,a
      000570 02r00r00         [24] 2124 	ljmp	__sdcc_banked_ret
                                   2125 ;------------------------------------------------------------
                                   2126 ;Allocation info for local variables in function 'ctr'
                                   2127 ;------------------------------------------------------------
                                   2128 ;m                         Allocated to stack - sp -5
                                   2129 ;m_len                     Allocated to stack - sp -6
                                   2130 ;nonce                     Allocated to registers r5 r6 r7 
                                   2131 ;pos                       Allocated to registers r3 
                                   2132 ;counter                   Allocated to registers r4 
                                   2133 ;------------------------------------------------------------
                                   2134 ;	/opt/contiki/core/lib/ccm-star.c:130: ctr(const uint8_t *nonce, uint8_t *m, uint8_t m_len)
                                   2135 ;	-----------------------------------------
                                   2136 ;	 function ctr
                                   2137 ;	-----------------------------------------
      000573                       2138 _ctr:
      000573 AD 82            [24] 2139 	mov	r5,dpl
      000575 AE 83            [24] 2140 	mov	r6,dph
      000577 AF F0            [24] 2141 	mov	r7,b
                                   2142 ;	/opt/contiki/core/lib/ccm-star.c:137: while(pos < m_len) {
      000579 7C 01            [12] 2143 	mov	r4,#0x01
      00057B 7B 00            [12] 2144 	mov	r3,#0x00
      00057D                       2145 00101$:
      00057D E5 81            [12] 2146 	mov	a,sp
      00057F 24 FA            [12] 2147 	add	a,#0xfa
      000581 F8               [12] 2148 	mov	r0,a
      000582 C3               [12] 2149 	clr	c
      000583 EB               [12] 2150 	mov	a,r3
      000584 96               [12] 2151 	subb	a,@r0
      000585 50 4E            [24] 2152 	jnc	00104$
                                   2153 ;	/opt/contiki/core/lib/ccm-star.c:138: ctr_step(nonce, pos, m, m_len, counter++);
      000587 8C 02            [24] 2154 	mov	ar2,r4
      000589 0C               [12] 2155 	inc	r4
      00058A C0 07            [24] 2156 	push	ar7
      00058C C0 06            [24] 2157 	push	ar6
      00058E C0 05            [24] 2158 	push	ar5
      000590 C0 04            [24] 2159 	push	ar4
      000592 C0 03            [24] 2160 	push	ar3
      000594 C0 02            [24] 2161 	push	ar2
      000596 E5 81            [12] 2162 	mov	a,sp
      000598 24 F4            [12] 2163 	add	a,#0xf4
      00059A F8               [12] 2164 	mov	r0,a
      00059B E6               [12] 2165 	mov	a,@r0
      00059C C0 E0            [24] 2166 	push	acc
      00059E E5 81            [12] 2167 	mov	a,sp
      0005A0 24 F4            [12] 2168 	add	a,#0xf4
      0005A2 F8               [12] 2169 	mov	r0,a
      0005A3 E6               [12] 2170 	mov	a,@r0
      0005A4 C0 E0            [24] 2171 	push	acc
      0005A6 08               [12] 2172 	inc	r0
      0005A7 E6               [12] 2173 	mov	a,@r0
      0005A8 C0 E0            [24] 2174 	push	acc
      0005AA 08               [12] 2175 	inc	r0
      0005AB E6               [12] 2176 	mov	a,@r0
      0005AC C0 E0            [24] 2177 	push	acc
      0005AE C0 03            [24] 2178 	push	ar3
      0005B0 8D 82            [24] 2179 	mov	dpl,r5
      0005B2 8E 83            [24] 2180 	mov	dph,r6
      0005B4 8F F0            [24] 2181 	mov	b,r7
      0005B6 78r99            [12] 2182 	mov	r0,#_ctr_step
      0005B8 79s00            [12] 2183 	mov	r1,#(_ctr_step >> 8)
      0005BA 7As00            [12] 2184 	mov	r2,#(_ctr_step >> 16)
      0005BC 12r00r00         [24] 2185 	lcall	__sdcc_banked_call
      0005BF E5 81            [12] 2186 	mov	a,sp
      0005C1 24 FA            [12] 2187 	add	a,#0xfa
      0005C3 F5 81            [12] 2188 	mov	sp,a
      0005C5 D0 03            [24] 2189 	pop	ar3
      0005C7 D0 04            [24] 2190 	pop	ar4
      0005C9 D0 05            [24] 2191 	pop	ar5
      0005CB D0 06            [24] 2192 	pop	ar6
      0005CD D0 07            [24] 2193 	pop	ar7
                                   2194 ;	/opt/contiki/core/lib/ccm-star.c:139: pos += AES_128_BLOCK_SIZE;
      0005CF 74 10            [12] 2195 	mov	a,#0x10
      0005D1 2B               [12] 2196 	add	a,r3
      0005D2 FB               [12] 2197 	mov	r3,a
      0005D3 80 A8            [24] 2198 	sjmp	00101$
      0005D5                       2199 00104$:
      0005D5 02r00r00         [24] 2200 	ljmp	__sdcc_banked_ret
                                   2201 ;------------------------------------------------------------
                                   2202 ;Allocation info for local variables in function 'set_key'
                                   2203 ;------------------------------------------------------------
                                   2204 ;key                       Allocated to registers r5 r6 r7 
                                   2205 ;------------------------------------------------------------
                                   2206 ;	/opt/contiki/core/lib/ccm-star.c:144: set_key(const uint8_t *key)
                                   2207 ;	-----------------------------------------
                                   2208 ;	 function set_key
                                   2209 ;	-----------------------------------------
      0005D8                       2210 _set_key:
      0005D8 AD 82            [24] 2211 	mov	r5,dpl
      0005DA AE 83            [24] 2212 	mov	r6,dph
      0005DC AF F0            [24] 2213 	mov	r7,b
                                   2214 ;	/opt/contiki/core/lib/ccm-star.c:146: AES_128.set_key(key);
      0005DE 90r00r00         [24] 2215 	mov	dptr,#_aes_128_driver
      0005E1 E4               [12] 2216 	clr	a
      0005E2 93               [24] 2217 	movc	a,@a+dptr
      0005E3 FA               [12] 2218 	mov	r2,a
      0005E4 A3               [24] 2219 	inc	dptr
      0005E5 E4               [12] 2220 	clr	a
      0005E6 93               [24] 2221 	movc	a,@a+dptr
      0005E7 FB               [12] 2222 	mov	r3,a
      0005E8 A3               [24] 2223 	inc	dptr
      0005E9 E4               [12] 2224 	clr	a
      0005EA 93               [24] 2225 	movc	a,@a+dptr
      0005EB FC               [12] 2226 	mov	r4,a
      0005EC C0 04            [24] 2227 	push	ar4
      0005EE C0 03            [24] 2228 	push	ar3
      0005F0 C0 02            [24] 2229 	push	ar2
      0005F2 C0 02            [24] 2230 	push	ar2
      0005F4 C0 03            [24] 2231 	push	ar3
      0005F6 C0 04            [24] 2232 	push	ar4
      0005F8 8D 82            [24] 2233 	mov	dpl,r5
      0005FA 8E 83            [24] 2234 	mov	dph,r6
      0005FC 8F F0            [24] 2235 	mov	b,r7
      0005FE D0 02            [24] 2236 	pop	ar2
      000600 D0 01            [24] 2237 	pop	ar1
      000602 D0 00            [24] 2238 	pop	ar0
      000604 12r00r00         [24] 2239 	lcall	__sdcc_banked_call
      000607 D0 02            [24] 2240 	pop	ar2
      000609 D0 03            [24] 2241 	pop	ar3
      00060B D0 04            [24] 2242 	pop	ar4
      00060D 02r00r00         [24] 2243 	ljmp	__sdcc_banked_ret
                                   2244 ;------------------------------------------------------------
                                   2245 ;Allocation info for local variables in function 'aead'
                                   2246 ;------------------------------------------------------------
                                   2247 ;m                         Allocated to stack - sp -5
                                   2248 ;m_len                     Allocated to stack - sp -6
                                   2249 ;a                         Allocated to stack - sp -9
                                   2250 ;a_len                     Allocated to stack - sp -10
                                   2251 ;result                    Allocated to stack - sp -13
                                   2252 ;mic_len                   Allocated to stack - sp -14
                                   2253 ;forward                   Allocated to stack - sp -16
                                   2254 ;nonce                     Allocated to registers r5 r6 r7 
                                   2255 ;------------------------------------------------------------
                                   2256 ;	/opt/contiki/core/lib/ccm-star.c:150: aead(const uint8_t* nonce,
                                   2257 ;	-----------------------------------------
                                   2258 ;	 function aead
                                   2259 ;	-----------------------------------------
      000610                       2260 _aead:
      000610 AD 82            [24] 2261 	mov	r5,dpl
      000612 AE 83            [24] 2262 	mov	r6,dph
      000614 AF F0            [24] 2263 	mov	r7,b
                                   2264 ;	/opt/contiki/core/lib/ccm-star.c:156: if(!forward) {
      000616 E5 81            [12] 2265 	mov	a,sp
      000618 24 F0            [12] 2266 	add	a,#0xf0
      00061A F8               [12] 2267 	mov	r0,a
      00061B E6               [12] 2268 	mov	a,@r0
      00061C 08               [12] 2269 	inc	r0
      00061D 46               [12] 2270 	orl	a,@r0
      00061E 70 39            [24] 2271 	jnz	00102$
                                   2272 ;	/opt/contiki/core/lib/ccm-star.c:158: ctr(nonce, m, m_len);
      000620 C0 07            [24] 2273 	push	ar7
      000622 C0 06            [24] 2274 	push	ar6
      000624 C0 05            [24] 2275 	push	ar5
      000626 E5 81            [12] 2276 	mov	a,sp
      000628 24 F7            [12] 2277 	add	a,#0xf7
      00062A F8               [12] 2278 	mov	r0,a
      00062B E6               [12] 2279 	mov	a,@r0
      00062C C0 E0            [24] 2280 	push	acc
      00062E E5 81            [12] 2281 	mov	a,sp
      000630 24 F7            [12] 2282 	add	a,#0xf7
      000632 F8               [12] 2283 	mov	r0,a
      000633 E6               [12] 2284 	mov	a,@r0
      000634 C0 E0            [24] 2285 	push	acc
      000636 08               [12] 2286 	inc	r0
      000637 E6               [12] 2287 	mov	a,@r0
      000638 C0 E0            [24] 2288 	push	acc
      00063A 08               [12] 2289 	inc	r0
      00063B E6               [12] 2290 	mov	a,@r0
      00063C C0 E0            [24] 2291 	push	acc
      00063E 8D 82            [24] 2292 	mov	dpl,r5
      000640 8E 83            [24] 2293 	mov	dph,r6
      000642 8F F0            [24] 2294 	mov	b,r7
      000644 78r73            [12] 2295 	mov	r0,#_ctr
      000646 79s05            [12] 2296 	mov	r1,#(_ctr >> 8)
      000648 7As00            [12] 2297 	mov	r2,#(_ctr >> 16)
      00064A 12r00r00         [24] 2298 	lcall	__sdcc_banked_call
      00064D E5 81            [12] 2299 	mov	a,sp
      00064F 24 FC            [12] 2300 	add	a,#0xfc
      000651 F5 81            [12] 2301 	mov	sp,a
      000653 D0 05            [24] 2302 	pop	ar5
      000655 D0 06            [24] 2303 	pop	ar6
      000657 D0 07            [24] 2304 	pop	ar7
      000659                       2305 00102$:
                                   2306 ;	/opt/contiki/core/lib/ccm-star.c:161: mic(nonce,
      000659 C0 07            [24] 2307 	push	ar7
      00065B C0 06            [24] 2308 	push	ar6
      00065D C0 05            [24] 2309 	push	ar5
      00065F E5 81            [12] 2310 	mov	a,sp
      000661 24 EF            [12] 2311 	add	a,#0xef
      000663 F8               [12] 2312 	mov	r0,a
      000664 E6               [12] 2313 	mov	a,@r0
      000665 C0 E0            [24] 2314 	push	acc
      000667 E5 81            [12] 2315 	mov	a,sp
      000669 24 EF            [12] 2316 	add	a,#0xef
      00066B F8               [12] 2317 	mov	r0,a
      00066C E6               [12] 2318 	mov	a,@r0
      00066D C0 E0            [24] 2319 	push	acc
      00066F 08               [12] 2320 	inc	r0
      000670 E6               [12] 2321 	mov	a,@r0
      000671 C0 E0            [24] 2322 	push	acc
      000673 08               [12] 2323 	inc	r0
      000674 E6               [12] 2324 	mov	a,@r0
      000675 C0 E0            [24] 2325 	push	acc
      000677 E5 81            [12] 2326 	mov	a,sp
      000679 24 EF            [12] 2327 	add	a,#0xef
      00067B F8               [12] 2328 	mov	r0,a
      00067C E6               [12] 2329 	mov	a,@r0
      00067D C0 E0            [24] 2330 	push	acc
      00067F E5 81            [12] 2331 	mov	a,sp
      000681 24 EF            [12] 2332 	add	a,#0xef
      000683 F8               [12] 2333 	mov	r0,a
      000684 E6               [12] 2334 	mov	a,@r0
      000685 C0 E0            [24] 2335 	push	acc
      000687 08               [12] 2336 	inc	r0
      000688 E6               [12] 2337 	mov	a,@r0
      000689 C0 E0            [24] 2338 	push	acc
      00068B 08               [12] 2339 	inc	r0
      00068C E6               [12] 2340 	mov	a,@r0
      00068D C0 E0            [24] 2341 	push	acc
      00068F E5 81            [12] 2342 	mov	a,sp
      000691 24 EF            [12] 2343 	add	a,#0xef
      000693 F8               [12] 2344 	mov	r0,a
      000694 E6               [12] 2345 	mov	a,@r0
      000695 C0 E0            [24] 2346 	push	acc
      000697 E5 81            [12] 2347 	mov	a,sp
      000699 24 EF            [12] 2348 	add	a,#0xef
      00069B F8               [12] 2349 	mov	r0,a
      00069C E6               [12] 2350 	mov	a,@r0
      00069D C0 E0            [24] 2351 	push	acc
      00069F 08               [12] 2352 	inc	r0
      0006A0 E6               [12] 2353 	mov	a,@r0
      0006A1 C0 E0            [24] 2354 	push	acc
      0006A3 08               [12] 2355 	inc	r0
      0006A4 E6               [12] 2356 	mov	a,@r0
      0006A5 C0 E0            [24] 2357 	push	acc
      0006A7 8D 82            [24] 2358 	mov	dpl,r5
      0006A9 8E 83            [24] 2359 	mov	dph,r6
      0006AB 8F F0            [24] 2360 	mov	b,r7
      0006AD 78rBA            [12] 2361 	mov	r0,#_mic
      0006AF 79s01            [12] 2362 	mov	r1,#(_mic >> 8)
      0006B1 7As00            [12] 2363 	mov	r2,#(_mic >> 16)
      0006B3 12r00r00         [24] 2364 	lcall	__sdcc_banked_call
      0006B6 E5 81            [12] 2365 	mov	a,sp
      0006B8 24 F4            [12] 2366 	add	a,#0xf4
      0006BA F5 81            [12] 2367 	mov	sp,a
      0006BC D0 05            [24] 2368 	pop	ar5
      0006BE D0 06            [24] 2369 	pop	ar6
      0006C0 D0 07            [24] 2370 	pop	ar7
                                   2371 ;	/opt/contiki/core/lib/ccm-star.c:167: if(forward) {
      0006C2 E5 81            [12] 2372 	mov	a,sp
      0006C4 24 F0            [12] 2373 	add	a,#0xf0
      0006C6 F8               [12] 2374 	mov	r0,a
      0006C7 E6               [12] 2375 	mov	a,@r0
      0006C8 08               [12] 2376 	inc	r0
      0006C9 46               [12] 2377 	orl	a,@r0
      0006CA 60 2D            [24] 2378 	jz	00105$
                                   2379 ;	/opt/contiki/core/lib/ccm-star.c:169: ctr(nonce, m, m_len);
      0006CC E5 81            [12] 2380 	mov	a,sp
      0006CE 24 FA            [12] 2381 	add	a,#0xfa
      0006D0 F8               [12] 2382 	mov	r0,a
      0006D1 E6               [12] 2383 	mov	a,@r0
      0006D2 C0 E0            [24] 2384 	push	acc
      0006D4 E5 81            [12] 2385 	mov	a,sp
      0006D6 24 FA            [12] 2386 	add	a,#0xfa
      0006D8 F8               [12] 2387 	mov	r0,a
      0006D9 E6               [12] 2388 	mov	a,@r0
      0006DA C0 E0            [24] 2389 	push	acc
      0006DC 08               [12] 2390 	inc	r0
      0006DD E6               [12] 2391 	mov	a,@r0
      0006DE C0 E0            [24] 2392 	push	acc
      0006E0 08               [12] 2393 	inc	r0
      0006E1 E6               [12] 2394 	mov	a,@r0
      0006E2 C0 E0            [24] 2395 	push	acc
      0006E4 8D 82            [24] 2396 	mov	dpl,r5
      0006E6 8E 83            [24] 2397 	mov	dph,r6
      0006E8 8F F0            [24] 2398 	mov	b,r7
      0006EA 78r73            [12] 2399 	mov	r0,#_ctr
      0006EC 79s05            [12] 2400 	mov	r1,#(_ctr >> 8)
      0006EE 7As00            [12] 2401 	mov	r2,#(_ctr >> 16)
      0006F0 12r00r00         [24] 2402 	lcall	__sdcc_banked_call
      0006F3 E5 81            [12] 2403 	mov	a,sp
      0006F5 24 FC            [12] 2404 	add	a,#0xfc
      0006F7 F5 81            [12] 2405 	mov	sp,a
      0006F9                       2406 00105$:
      0006F9 02r00r00         [24] 2407 	ljmp	__sdcc_banked_ret
                                   2408 	.area CSEG    (CODE)
                                   2409 	.area CONST   (CODE)
      000000                       2410 _ccm_star_driver:
      000000rD8s05s00              2411 	.byte _set_key, (_set_key >> 8), (_set_key >> 16)
      000003r10s06s00              2412 	.byte _aead, (_aead >> 8), (_aead >> 16)
                                   2413 	.area XINIT   (CODE)
                                   2414 	.area CABS    (ABS,CODE)
