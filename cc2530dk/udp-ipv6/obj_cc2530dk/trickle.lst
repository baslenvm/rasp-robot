                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.5 #9380 (Linux)
                                      4 ; This file was generated Wed Nov 18 02:57:28 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module trickle
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _random_rand
                                     13 	.globl _queuebuf_free
                                     14 	.globl _queuebuf_to_packetbuf
                                     15 	.globl _queuebuf_new_from_packetbuf
                                     16 	.globl _broadcast_send
                                     17 	.globl _broadcast_close
                                     18 	.globl _broadcast_open
                                     19 	.globl _channel_set_attributes
                                     20 	.globl _packetbuf_attr
                                     21 	.globl _packetbuf_set_attr
                                     22 	.globl _ctimer_stop
                                     23 	.globl _ctimer_set
                                     24 	.globl _ACTIVE
                                     25 	.globl _TX_BYTE
                                     26 	.globl _RX_BYTE
                                     27 	.globl _ERR
                                     28 	.globl _FE
                                     29 	.globl _SLAVE
                                     30 	.globl _RE
                                     31 	.globl _MODE
                                     32 	.globl _T3OVFIF
                                     33 	.globl _T3CH0IF
                                     34 	.globl _T3CH1IF
                                     35 	.globl _T4OVFIF
                                     36 	.globl _T4CH0IF
                                     37 	.globl _T4CH1IF
                                     38 	.globl _OVFIM
                                     39 	.globl _B_0
                                     40 	.globl _B_1
                                     41 	.globl _B_2
                                     42 	.globl _B_3
                                     43 	.globl _B_4
                                     44 	.globl _B_5
                                     45 	.globl _B_6
                                     46 	.globl _B_7
                                     47 	.globl _P2IF
                                     48 	.globl _UTX0IF
                                     49 	.globl _UTX1IF
                                     50 	.globl _P1IF
                                     51 	.globl _WDTIF
                                     52 	.globl _ACC_0
                                     53 	.globl _ACC_1
                                     54 	.globl _ACC_2
                                     55 	.globl _ACC_3
                                     56 	.globl _ACC_4
                                     57 	.globl _ACC_5
                                     58 	.globl _ACC_6
                                     59 	.globl _ACC_7
                                     60 	.globl _P
                                     61 	.globl _F1
                                     62 	.globl _OV
                                     63 	.globl _RS0
                                     64 	.globl _RS1
                                     65 	.globl _F0
                                     66 	.globl _AC
                                     67 	.globl _CY
                                     68 	.globl _DMAIF
                                     69 	.globl _T1IF
                                     70 	.globl _T2IF
                                     71 	.globl _T3IF
                                     72 	.globl _T4IF
                                     73 	.globl _P0IF
                                     74 	.globl _STIF
                                     75 	.globl _DMAIE
                                     76 	.globl _T1IE
                                     77 	.globl _T2IE
                                     78 	.globl _T3IE
                                     79 	.globl _T4IE
                                     80 	.globl _P0IE
                                     81 	.globl _RFERRIE
                                     82 	.globl _ADCIE
                                     83 	.globl _URX0IE
                                     84 	.globl _URX1IE
                                     85 	.globl _ENCIE
                                     86 	.globl _STIE
                                     87 	.globl _EA
                                     88 	.globl _P2_0
                                     89 	.globl _P2_1
                                     90 	.globl _P2_2
                                     91 	.globl _P2_3
                                     92 	.globl _P2_4
                                     93 	.globl _P2_5
                                     94 	.globl _P2_6
                                     95 	.globl _P2_7
                                     96 	.globl _ENCIF_0
                                     97 	.globl _ENCIF_1
                                     98 	.globl _P1_0
                                     99 	.globl _P1_1
                                    100 	.globl _P1_2
                                    101 	.globl _P1_3
                                    102 	.globl _P1_4
                                    103 	.globl _P1_5
                                    104 	.globl _P1_6
                                    105 	.globl _P1_7
                                    106 	.globl _IT0
                                    107 	.globl _RFERRIF
                                    108 	.globl _IT1
                                    109 	.globl _URX0IF
                                    110 	.globl _ADCIF
                                    111 	.globl _URX1IF
                                    112 	.globl _P0_0
                                    113 	.globl _P0_1
                                    114 	.globl _P0_2
                                    115 	.globl _P0_3
                                    116 	.globl _P0_4
                                    117 	.globl _P0_5
                                    118 	.globl _P0_6
                                    119 	.globl _P0_7
                                    120 	.globl _WDCTL
                                    121 	.globl _U1GCR
                                    122 	.globl _U1UCR
                                    123 	.globl _U1BAUD
                                    124 	.globl _U1DBUF
                                    125 	.globl _U1CSR
                                    126 	.globl _U0GCR
                                    127 	.globl _U0UCR
                                    128 	.globl _U0BAUD
                                    129 	.globl _U0DBUF
                                    130 	.globl _U0CSR
                                    131 	.globl _TIMIF
                                    132 	.globl _T4CC1
                                    133 	.globl _T4CCTL1
                                    134 	.globl _T4CC0
                                    135 	.globl _T4CCTL0
                                    136 	.globl _T4CTL
                                    137 	.globl _T4CNT
                                    138 	.globl _T3CC1
                                    139 	.globl _T3CCTL1
                                    140 	.globl _T3CC0
                                    141 	.globl _T3CCTL0
                                    142 	.globl _T3CTL
                                    143 	.globl _T3CNT
                                    144 	.globl _T2MSEL
                                    145 	.globl _T2IRQM
                                    146 	.globl _T2MOVF2
                                    147 	.globl _T2MOVF1
                                    148 	.globl _T2MOVF0
                                    149 	.globl _T2M1
                                    150 	.globl _T2M0
                                    151 	.globl _T2IRQF
                                    152 	.globl _T2EVTCFG
                                    153 	.globl _T2CTRL
                                    154 	.globl _T1STAT
                                    155 	.globl _T1CCTL2
                                    156 	.globl _T1CCTL1
                                    157 	.globl _T1CCTL0
                                    158 	.globl _T1CTL
                                    159 	.globl _T1CNTH
                                    160 	.globl _T1CNTL
                                    161 	.globl _T1CC2H
                                    162 	.globl _T1CC2L
                                    163 	.globl _T1CC1H
                                    164 	.globl _T1CC1L
                                    165 	.globl _T1CC0H
                                    166 	.globl _T1CC0L
                                    167 	.globl _CLKCONSTA
                                    168 	.globl _CLKCONCMD
                                    169 	.globl _SLEEPSTA
                                    170 	.globl _SLEEPCMD
                                    171 	.globl _STLOAD
                                    172 	.globl _ST2
                                    173 	.globl _ST1
                                    174 	.globl _ST0
                                    175 	.globl _RFERRF
                                    176 	.globl _RFIRQF0
                                    177 	.globl _RFST
                                    178 	.globl _RFD
                                    179 	.globl _RFIRQF1
                                    180 	.globl _PSBANK
                                    181 	.globl _FMAP
                                    182 	.globl _MEMCTR
                                    183 	.globl __XPAGE
                                    184 	.globl _MPAGE
                                    185 	.globl _PMUX
                                    186 	.globl _P2DIR
                                    187 	.globl _P1DIR
                                    188 	.globl _P0DIR
                                    189 	.globl _P2INP
                                    190 	.globl _P1INP
                                    191 	.globl _P2SEL
                                    192 	.globl _P1SEL
                                    193 	.globl _P0SEL
                                    194 	.globl _APCFG
                                    195 	.globl _PERCFG
                                    196 	.globl _P0INP
                                    197 	.globl _P2IEN
                                    198 	.globl _P1IEN
                                    199 	.globl _P0IEN
                                    200 	.globl _PICTL
                                    201 	.globl _P2IFG
                                    202 	.globl _P1IFG
                                    203 	.globl _P0IFG
                                    204 	.globl _DMAREQ
                                    205 	.globl _DMAARM
                                    206 	.globl _DMA0CFGH
                                    207 	.globl _DMA0CFGL
                                    208 	.globl _DMA1CFGH
                                    209 	.globl _DMA1CFGL
                                    210 	.globl _DMAIRQ
                                    211 	.globl _ENCCS
                                    212 	.globl _ENCDO
                                    213 	.globl _ENCDI
                                    214 	.globl _RNDH
                                    215 	.globl _RNDL
                                    216 	.globl _ADCH
                                    217 	.globl _ADCL
                                    218 	.globl _ADCCON3
                                    219 	.globl _ADCCON2
                                    220 	.globl _ADCCON1
                                    221 	.globl _B
                                    222 	.globl _IRCON2
                                    223 	.globl _ACC
                                    224 	.globl _PSW
                                    225 	.globl _IRCON
                                    226 	.globl _IP1
                                    227 	.globl _IEN1
                                    228 	.globl _IP0
                                    229 	.globl _IEN0
                                    230 	.globl _P2
                                    231 	.globl _S1CON
                                    232 	.globl _IEN2
                                    233 	.globl _S0CON
                                    234 	.globl _DPS
                                    235 	.globl _P1
                                    236 	.globl _TCON
                                    237 	.globl _PCON
                                    238 	.globl _DPH1
                                    239 	.globl _DPL1
                                    240 	.globl _DPH0
                                    241 	.globl _DPL0
                                    242 	.globl _SP
                                    243 	.globl _P0
                                    244 	.globl _X_IEEE_ADDR
                                    245 	.globl _X_INFOPAGE
                                    246 	.globl _X_P2DIR
                                    247 	.globl _X_P1DIR
                                    248 	.globl _X_P0DIR
                                    249 	.globl _X_U1GCR
                                    250 	.globl _X_U1UCR
                                    251 	.globl _X_U1BAUD
                                    252 	.globl _X_U1DBUF
                                    253 	.globl _X_U1CSR
                                    254 	.globl _X_P2INP
                                    255 	.globl _X_P1INP
                                    256 	.globl _X_P2SEL
                                    257 	.globl _X_P1SEL
                                    258 	.globl _X_P0SEL
                                    259 	.globl _X_APCFG
                                    260 	.globl _X_PERCFG
                                    261 	.globl _X_T4CC1
                                    262 	.globl _X_T4CCTL1
                                    263 	.globl _X_T4CC0
                                    264 	.globl _X_T4CCTL0
                                    265 	.globl _X_T4CTL
                                    266 	.globl _X_T4CNT
                                    267 	.globl _X_RFIRQF0
                                    268 	.globl _X_T1CCTL2
                                    269 	.globl _X_T1CCTL1
                                    270 	.globl _X_T1CCTL0
                                    271 	.globl _X_T1CTL
                                    272 	.globl _X_T1CNTH
                                    273 	.globl _X_T1CNTL
                                    274 	.globl _X_RFST
                                    275 	.globl _X_T1CC2H
                                    276 	.globl _X_T1CC2L
                                    277 	.globl _X_T1CC1H
                                    278 	.globl _X_T1CC1L
                                    279 	.globl _X_T1CC0H
                                    280 	.globl _X_T1CC0L
                                    281 	.globl _X_RFD
                                    282 	.globl _X_TIMIF
                                    283 	.globl _X_DMAREQ
                                    284 	.globl _X_DMAARM
                                    285 	.globl _X_DMA0CFGH
                                    286 	.globl _X_DMA0CFGL
                                    287 	.globl _X_DMA1CFGH
                                    288 	.globl _X_DMA1CFGL
                                    289 	.globl _X_DMAIRQ
                                    290 	.globl _X_T3CC1
                                    291 	.globl _X_T3CCTL1
                                    292 	.globl _X_T3CC0
                                    293 	.globl _X_T3CCTL0
                                    294 	.globl _X_T3CTL
                                    295 	.globl _X_T3CNT
                                    296 	.globl _X_WDCTL
                                    297 	.globl _X_MEMCTR
                                    298 	.globl _X_CLKCONCMD
                                    299 	.globl _X_U0GCR
                                    300 	.globl _X_U0UCR
                                    301 	.globl _X_T2MSEL
                                    302 	.globl _X_U0BAUD
                                    303 	.globl _X_U0DBUF
                                    304 	.globl _X_RFERRF
                                    305 	.globl _X_SLEEPCMD
                                    306 	.globl _X_RNDH
                                    307 	.globl _X_RNDL
                                    308 	.globl _X_ADCH
                                    309 	.globl _X_ADCL
                                    310 	.globl _X_ADCCON3
                                    311 	.globl _X_ADCCON2
                                    312 	.globl _X_ADCCON1
                                    313 	.globl _X_ENCCS
                                    314 	.globl _X_ENCDO
                                    315 	.globl _X_ENCDI
                                    316 	.globl _X_T1STAT
                                    317 	.globl _X_PMUX
                                    318 	.globl _X_STLOAD
                                    319 	.globl _X_P2IEN
                                    320 	.globl _X_P0IEN
                                    321 	.globl _X_T2IRQM
                                    322 	.globl _X_T2MOVF2
                                    323 	.globl _X_T2MOVF1
                                    324 	.globl _X_T2MOVF0
                                    325 	.globl _X_T2M1
                                    326 	.globl _X_T2M0
                                    327 	.globl _X_T2IRQF
                                    328 	.globl _X_P2
                                    329 	.globl _X_PSBANK
                                    330 	.globl _X_FMAP
                                    331 	.globl _X_CLKCONSTA
                                    332 	.globl _X_SLEEPSTA
                                    333 	.globl _X_T2EVTCFG
                                    334 	.globl _X_ST2
                                    335 	.globl _X_ST1
                                    336 	.globl _X_ST0
                                    337 	.globl _X_T2CTRL
                                    338 	.globl _X__XPAGE
                                    339 	.globl _X_MPAGE
                                    340 	.globl _X_RFIRQF1
                                    341 	.globl _X_P1
                                    342 	.globl _X_P0INP
                                    343 	.globl _X_P1IEN
                                    344 	.globl _X_PICTL
                                    345 	.globl _X_P2IFG
                                    346 	.globl _X_P1IFG
                                    347 	.globl _X_P0IFG
                                    348 	.globl _X_U0CSR
                                    349 	.globl _X_P0
                                    350 	.globl _USBF5
                                    351 	.globl _USBF4
                                    352 	.globl _USBF3
                                    353 	.globl _USBF2
                                    354 	.globl _USBF1
                                    355 	.globl _USBF0
                                    356 	.globl _USBCNTH
                                    357 	.globl _USBCNTL
                                    358 	.globl _USBCNT0
                                    359 	.globl _USBCSOH
                                    360 	.globl _USBCSOL
                                    361 	.globl _USBMAXO
                                    362 	.globl _USBCSIH
                                    363 	.globl _USBCSIL
                                    364 	.globl _USBCS0
                                    365 	.globl _USBMAXI
                                    366 	.globl _USBCTRL
                                    367 	.globl _USBINDEX
                                    368 	.globl _USBFRMH
                                    369 	.globl _USBFRML
                                    370 	.globl _USBCIE
                                    371 	.globl _USBOIE
                                    372 	.globl _USBIIE
                                    373 	.globl _USBCIF
                                    374 	.globl _USBOIF
                                    375 	.globl _USBIIF
                                    376 	.globl _USBPOW
                                    377 	.globl _USBADDR
                                    378 	.globl _CSPT
                                    379 	.globl _CSPZ
                                    380 	.globl _CSPY
                                    381 	.globl _CSPX
                                    382 	.globl _CSPSTAT
                                    383 	.globl _CSPCTRL
                                    384 	.globl _CSPPROG23
                                    385 	.globl _CSPPROG22
                                    386 	.globl _CSPPROG21
                                    387 	.globl _CSPPROG20
                                    388 	.globl _CSPPROG19
                                    389 	.globl _CSPPROG18
                                    390 	.globl _CSPPROG17
                                    391 	.globl _CSPPROG16
                                    392 	.globl _CSPPROG15
                                    393 	.globl _CSPPROG14
                                    394 	.globl _CSPPROG13
                                    395 	.globl _CSPPROG12
                                    396 	.globl _CSPPROG11
                                    397 	.globl _CSPPROG10
                                    398 	.globl _CSPPROG9
                                    399 	.globl _CSPPROG8
                                    400 	.globl _CSPPROG7
                                    401 	.globl _CSPPROG6
                                    402 	.globl _CSPPROG5
                                    403 	.globl _CSPPROG4
                                    404 	.globl _CSPPROG3
                                    405 	.globl _CSPPROG2
                                    406 	.globl _CSPPROG1
                                    407 	.globl _CSPPROG0
                                    408 	.globl _RFC_OBS_CTRL2
                                    409 	.globl _RFC_OBS_CTRL1
                                    410 	.globl _RFC_OBS_CTRL0
                                    411 	.globl _TXFILTCFG
                                    412 	.globl _PTEST1
                                    413 	.globl _PTEST0
                                    414 	.globl _ATEST
                                    415 	.globl _DACTEST2
                                    416 	.globl _DACTEST1
                                    417 	.globl _DACTEST0
                                    418 	.globl _MDMTEST1
                                    419 	.globl _MDMTEST0
                                    420 	.globl _ADCTEST2
                                    421 	.globl _ADCTEST1
                                    422 	.globl _ADCTEST0
                                    423 	.globl _AGCCTRL3
                                    424 	.globl _AGCCTRL2
                                    425 	.globl _AGCCTRL1
                                    426 	.globl _AGCCTRL0
                                    427 	.globl _FSCAL3
                                    428 	.globl _FSCAL2
                                    429 	.globl _FSCAL1
                                    430 	.globl _FSCAL0
                                    431 	.globl _FSCTRL
                                    432 	.globl _RXCTRL
                                    433 	.globl _FREQEST
                                    434 	.globl _MDMCTRL1
                                    435 	.globl _MDMCTRL0
                                    436 	.globl _RFRND
                                    437 	.globl _RFERRM
                                    438 	.globl _RFIRQM1
                                    439 	.globl _RFIRQM0
                                    440 	.globl _TXLAST_PTR
                                    441 	.globl _TXFIRST_PTR
                                    442 	.globl _RXP1_PTR
                                    443 	.globl _RXLAST_PTR
                                    444 	.globl _RXFIRST_PTR
                                    445 	.globl _TXFIFOCNT
                                    446 	.globl _RXFIFOCNT
                                    447 	.globl _RXFIRST
                                    448 	.globl _RSSISTAT
                                    449 	.globl _RSSI
                                    450 	.globl _CCACTRL1
                                    451 	.globl _CCACTRL0
                                    452 	.globl _FSMCTRL
                                    453 	.globl _FIFOPCTRL
                                    454 	.globl _FSMSTAT1
                                    455 	.globl _FSMSTAT0
                                    456 	.globl _TXCTRL
                                    457 	.globl _TXPOWER
                                    458 	.globl _FREQCTRL
                                    459 	.globl _FREQTUNE
                                    460 	.globl _RXMASKCLR
                                    461 	.globl _RXMASKSET
                                    462 	.globl _RXENABLE
                                    463 	.globl _FRMCTRL1
                                    464 	.globl _FRMCTRL0
                                    465 	.globl _SRCEXTEN2
                                    466 	.globl _SRCEXTEN1
                                    467 	.globl _SRCEXTEN0
                                    468 	.globl _SRCSHORTEN2
                                    469 	.globl _SRCSHORTEN1
                                    470 	.globl _SRCSHORTEN0
                                    471 	.globl _SRCMATCH
                                    472 	.globl _FRMFILT1
                                    473 	.globl _FRMFILT0
                                    474 	.globl _SHORT_ADDR1
                                    475 	.globl _SHORT_ADDR0
                                    476 	.globl _PAN_ID1
                                    477 	.globl _PAN_ID0
                                    478 	.globl _EXT_ADDR7
                                    479 	.globl _EXT_ADDR6
                                    480 	.globl _EXT_ADDR5
                                    481 	.globl _EXT_ADDR4
                                    482 	.globl _EXT_ADDR3
                                    483 	.globl _EXT_ADDR2
                                    484 	.globl _EXT_ADDR1
                                    485 	.globl _EXT_ADDR0
                                    486 	.globl _SRCSHORTPENDEN2
                                    487 	.globl _SRCSHORTPENDEN1
                                    488 	.globl _SRCSHORTPENDEN0
                                    489 	.globl _SRCEXTPENDEN2
                                    490 	.globl _SRCEXTPENDEN1
                                    491 	.globl _SRCEXTPENDEN0
                                    492 	.globl _SRCRESINDEX
                                    493 	.globl _SRCRESMASK2
                                    494 	.globl _SRCRESMASK1
                                    495 	.globl _SRCRESMASK0
                                    496 	.globl _SRC_ADDR_TABLE
                                    497 	.globl _TXFIFO
                                    498 	.globl _RXFIFO
                                    499 	.globl _RFCORE_RAM
                                    500 	.globl _CMPCTL
                                    501 	.globl _OPAMPS
                                    502 	.globl _OPAMPC
                                    503 	.globl _STCV2
                                    504 	.globl _STCV1
                                    505 	.globl _STCV0
                                    506 	.globl _STCS
                                    507 	.globl _STCC
                                    508 	.globl _T1CC4H
                                    509 	.globl _T1CC4L
                                    510 	.globl _T1CC3H
                                    511 	.globl _T1CC3L
                                    512 	.globl _XX_T1CC2H
                                    513 	.globl _XX_T1CC2L
                                    514 	.globl _XX_T1CC1H
                                    515 	.globl _XX_T1CC1L
                                    516 	.globl _XX_T1CC0H
                                    517 	.globl _XX_T1CC0L
                                    518 	.globl _T1CCTL4
                                    519 	.globl _T1CCTL3
                                    520 	.globl _XX_T1CCTL2
                                    521 	.globl _XX_T1CCTL1
                                    522 	.globl _XX_T1CCTL0
                                    523 	.globl _CLD
                                    524 	.globl _IRCTL
                                    525 	.globl _CHIPINFO1
                                    526 	.globl _CHIPINFO0
                                    527 	.globl _FWDATA
                                    528 	.globl _FADDRH
                                    529 	.globl _FADDRL
                                    530 	.globl _FCTL
                                    531 	.globl _IVCTRL
                                    532 	.globl _BATTMON
                                    533 	.globl _SRCRC
                                    534 	.globl _DBGDATA
                                    535 	.globl _TESTREG0
                                    536 	.globl _CHIPID
                                    537 	.globl _CHVER
                                    538 	.globl _OBSSEL5
                                    539 	.globl _OBSSEL4
                                    540 	.globl _OBSSEL3
                                    541 	.globl _OBSSEL2
                                    542 	.globl _OBSSEL1
                                    543 	.globl _OBSSEL0
                                    544 	.globl _I2CIO
                                    545 	.globl _I2CWC
                                    546 	.globl _I2CADDR
                                    547 	.globl _I2CDATA
                                    548 	.globl _I2CSTAT
                                    549 	.globl _I2CCFG
                                    550 	.globl _OPAMPMC
                                    551 	.globl _MONMUX
                                    552 	.globl _trickle_open
                                    553 	.globl _trickle_close
                                    554 	.globl _trickle_send
                                    555 ;--------------------------------------------------------
                                    556 ; special function registers
                                    557 ;--------------------------------------------------------
                                    558 	.area RSEG    (ABS,DATA)
      000000                        559 	.org 0x0000
                           000080   560 _P0	=	0x0080
                           000081   561 _SP	=	0x0081
                           000082   562 _DPL0	=	0x0082
                           000083   563 _DPH0	=	0x0083
                           000084   564 _DPL1	=	0x0084
                           000085   565 _DPH1	=	0x0085
                           000087   566 _PCON	=	0x0087
                           000088   567 _TCON	=	0x0088
                           000090   568 _P1	=	0x0090
                           000092   569 _DPS	=	0x0092
                           000098   570 _S0CON	=	0x0098
                           00009A   571 _IEN2	=	0x009a
                           00009B   572 _S1CON	=	0x009b
                           0000A0   573 _P2	=	0x00a0
                           0000A8   574 _IEN0	=	0x00a8
                           0000A9   575 _IP0	=	0x00a9
                           0000B8   576 _IEN1	=	0x00b8
                           0000B9   577 _IP1	=	0x00b9
                           0000C0   578 _IRCON	=	0x00c0
                           0000D0   579 _PSW	=	0x00d0
                           0000E0   580 _ACC	=	0x00e0
                           0000E8   581 _IRCON2	=	0x00e8
                           0000F0   582 _B	=	0x00f0
                           0000B4   583 _ADCCON1	=	0x00b4
                           0000B5   584 _ADCCON2	=	0x00b5
                           0000B6   585 _ADCCON3	=	0x00b6
                           0000BA   586 _ADCL	=	0x00ba
                           0000BB   587 _ADCH	=	0x00bb
                           0000BC   588 _RNDL	=	0x00bc
                           0000BD   589 _RNDH	=	0x00bd
                           0000B1   590 _ENCDI	=	0x00b1
                           0000B2   591 _ENCDO	=	0x00b2
                           0000B3   592 _ENCCS	=	0x00b3
                           0000D1   593 _DMAIRQ	=	0x00d1
                           0000D2   594 _DMA1CFGL	=	0x00d2
                           0000D3   595 _DMA1CFGH	=	0x00d3
                           0000D4   596 _DMA0CFGL	=	0x00d4
                           0000D5   597 _DMA0CFGH	=	0x00d5
                           0000D6   598 _DMAARM	=	0x00d6
                           0000D7   599 _DMAREQ	=	0x00d7
                           000089   600 _P0IFG	=	0x0089
                           00008A   601 _P1IFG	=	0x008a
                           00008B   602 _P2IFG	=	0x008b
                           00008C   603 _PICTL	=	0x008c
                           0000AB   604 _P0IEN	=	0x00ab
                           00008D   605 _P1IEN	=	0x008d
                           0000AC   606 _P2IEN	=	0x00ac
                           00008F   607 _P0INP	=	0x008f
                           0000F1   608 _PERCFG	=	0x00f1
                           0000F2   609 _APCFG	=	0x00f2
                           0000F3   610 _P0SEL	=	0x00f3
                           0000F4   611 _P1SEL	=	0x00f4
                           0000F5   612 _P2SEL	=	0x00f5
                           0000F6   613 _P1INP	=	0x00f6
                           0000F7   614 _P2INP	=	0x00f7
                           0000FD   615 _P0DIR	=	0x00fd
                           0000FE   616 _P1DIR	=	0x00fe
                           0000FF   617 _P2DIR	=	0x00ff
                           0000AE   618 _PMUX	=	0x00ae
                           000093   619 _MPAGE	=	0x0093
                           000093   620 __XPAGE	=	0x0093
                           0000C7   621 _MEMCTR	=	0x00c7
                           00009F   622 _FMAP	=	0x009f
                           00009F   623 _PSBANK	=	0x009f
                           000091   624 _RFIRQF1	=	0x0091
                           0000D9   625 _RFD	=	0x00d9
                           0000E1   626 _RFST	=	0x00e1
                           0000E9   627 _RFIRQF0	=	0x00e9
                           0000BF   628 _RFERRF	=	0x00bf
                           000095   629 _ST0	=	0x0095
                           000096   630 _ST1	=	0x0096
                           000097   631 _ST2	=	0x0097
                           0000AD   632 _STLOAD	=	0x00ad
                           0000BE   633 _SLEEPCMD	=	0x00be
                           00009D   634 _SLEEPSTA	=	0x009d
                           0000C6   635 _CLKCONCMD	=	0x00c6
                           00009E   636 _CLKCONSTA	=	0x009e
                           0000DA   637 _T1CC0L	=	0x00da
                           0000DB   638 _T1CC0H	=	0x00db
                           0000DC   639 _T1CC1L	=	0x00dc
                           0000DD   640 _T1CC1H	=	0x00dd
                           0000DE   641 _T1CC2L	=	0x00de
                           0000DF   642 _T1CC2H	=	0x00df
                           0000E2   643 _T1CNTL	=	0x00e2
                           0000E3   644 _T1CNTH	=	0x00e3
                           0000E4   645 _T1CTL	=	0x00e4
                           0000E5   646 _T1CCTL0	=	0x00e5
                           0000E6   647 _T1CCTL1	=	0x00e6
                           0000E7   648 _T1CCTL2	=	0x00e7
                           0000AF   649 _T1STAT	=	0x00af
                           000094   650 _T2CTRL	=	0x0094
                           00009C   651 _T2EVTCFG	=	0x009c
                           0000A1   652 _T2IRQF	=	0x00a1
                           0000A2   653 _T2M0	=	0x00a2
                           0000A3   654 _T2M1	=	0x00a3
                           0000A4   655 _T2MOVF0	=	0x00a4
                           0000A5   656 _T2MOVF1	=	0x00a5
                           0000A6   657 _T2MOVF2	=	0x00a6
                           0000A7   658 _T2IRQM	=	0x00a7
                           0000C3   659 _T2MSEL	=	0x00c3
                           0000CA   660 _T3CNT	=	0x00ca
                           0000CB   661 _T3CTL	=	0x00cb
                           0000CC   662 _T3CCTL0	=	0x00cc
                           0000CD   663 _T3CC0	=	0x00cd
                           0000CE   664 _T3CCTL1	=	0x00ce
                           0000CF   665 _T3CC1	=	0x00cf
                           0000EA   666 _T4CNT	=	0x00ea
                           0000EB   667 _T4CTL	=	0x00eb
                           0000EC   668 _T4CCTL0	=	0x00ec
                           0000ED   669 _T4CC0	=	0x00ed
                           0000EE   670 _T4CCTL1	=	0x00ee
                           0000EF   671 _T4CC1	=	0x00ef
                           0000D8   672 _TIMIF	=	0x00d8
                           000086   673 _U0CSR	=	0x0086
                           0000C1   674 _U0DBUF	=	0x00c1
                           0000C2   675 _U0BAUD	=	0x00c2
                           0000C4   676 _U0UCR	=	0x00c4
                           0000C5   677 _U0GCR	=	0x00c5
                           0000F8   678 _U1CSR	=	0x00f8
                           0000F9   679 _U1DBUF	=	0x00f9
                           0000FA   680 _U1BAUD	=	0x00fa
                           0000FB   681 _U1UCR	=	0x00fb
                           0000FC   682 _U1GCR	=	0x00fc
                           0000C9   683 _WDCTL	=	0x00c9
                                    684 ;--------------------------------------------------------
                                    685 ; special function bits
                                    686 ;--------------------------------------------------------
                                    687 	.area RSEG    (ABS,DATA)
      000000                        688 	.org 0x0000
                           000087   689 _P0_7	=	0x0087
                           000086   690 _P0_6	=	0x0086
                           000085   691 _P0_5	=	0x0085
                           000084   692 _P0_4	=	0x0084
                           000083   693 _P0_3	=	0x0083
                           000082   694 _P0_2	=	0x0082
                           000081   695 _P0_1	=	0x0081
                           000080   696 _P0_0	=	0x0080
                           00008F   697 _URX1IF	=	0x008f
                           00008D   698 _ADCIF	=	0x008d
                           00008B   699 _URX0IF	=	0x008b
                           00008A   700 _IT1	=	0x008a
                           000089   701 _RFERRIF	=	0x0089
                           000088   702 _IT0	=	0x0088
                           000097   703 _P1_7	=	0x0097
                           000096   704 _P1_6	=	0x0096
                           000095   705 _P1_5	=	0x0095
                           000094   706 _P1_4	=	0x0094
                           000093   707 _P1_3	=	0x0093
                           000092   708 _P1_2	=	0x0092
                           000091   709 _P1_1	=	0x0091
                           000090   710 _P1_0	=	0x0090
                           000099   711 _ENCIF_1	=	0x0099
                           000098   712 _ENCIF_0	=	0x0098
                           0000A7   713 _P2_7	=	0x00a7
                           0000A6   714 _P2_6	=	0x00a6
                           0000A5   715 _P2_5	=	0x00a5
                           0000A4   716 _P2_4	=	0x00a4
                           0000A3   717 _P2_3	=	0x00a3
                           0000A2   718 _P2_2	=	0x00a2
                           0000A1   719 _P2_1	=	0x00a1
                           0000A0   720 _P2_0	=	0x00a0
                           0000AF   721 _EA	=	0x00af
                           0000AD   722 _STIE	=	0x00ad
                           0000AC   723 _ENCIE	=	0x00ac
                           0000AB   724 _URX1IE	=	0x00ab
                           0000AA   725 _URX0IE	=	0x00aa
                           0000A9   726 _ADCIE	=	0x00a9
                           0000A8   727 _RFERRIE	=	0x00a8
                           0000BD   728 _P0IE	=	0x00bd
                           0000BC   729 _T4IE	=	0x00bc
                           0000BB   730 _T3IE	=	0x00bb
                           0000BA   731 _T2IE	=	0x00ba
                           0000B9   732 _T1IE	=	0x00b9
                           0000B8   733 _DMAIE	=	0x00b8
                           0000C7   734 _STIF	=	0x00c7
                           0000C5   735 _P0IF	=	0x00c5
                           0000C4   736 _T4IF	=	0x00c4
                           0000C3   737 _T3IF	=	0x00c3
                           0000C2   738 _T2IF	=	0x00c2
                           0000C1   739 _T1IF	=	0x00c1
                           0000C0   740 _DMAIF	=	0x00c0
                           0000D7   741 _CY	=	0x00d7
                           0000D6   742 _AC	=	0x00d6
                           0000D5   743 _F0	=	0x00d5
                           0000D4   744 _RS1	=	0x00d4
                           0000D3   745 _RS0	=	0x00d3
                           0000D2   746 _OV	=	0x00d2
                           0000D1   747 _F1	=	0x00d1
                           0000D0   748 _P	=	0x00d0
                           0000E7   749 _ACC_7	=	0x00e7
                           0000E6   750 _ACC_6	=	0x00e6
                           0000E5   751 _ACC_5	=	0x00e5
                           0000E4   752 _ACC_4	=	0x00e4
                           0000E3   753 _ACC_3	=	0x00e3
                           0000E2   754 _ACC_2	=	0x00e2
                           0000E1   755 _ACC_1	=	0x00e1
                           0000E0   756 _ACC_0	=	0x00e0
                           0000EC   757 _WDTIF	=	0x00ec
                           0000EB   758 _P1IF	=	0x00eb
                           0000EA   759 _UTX1IF	=	0x00ea
                           0000E9   760 _UTX0IF	=	0x00e9
                           0000E8   761 _P2IF	=	0x00e8
                           0000F7   762 _B_7	=	0x00f7
                           0000F6   763 _B_6	=	0x00f6
                           0000F5   764 _B_5	=	0x00f5
                           0000F4   765 _B_4	=	0x00f4
                           0000F3   766 _B_3	=	0x00f3
                           0000F2   767 _B_2	=	0x00f2
                           0000F1   768 _B_1	=	0x00f1
                           0000F0   769 _B_0	=	0x00f0
                           0000DE   770 _OVFIM	=	0x00de
                           0000DD   771 _T4CH1IF	=	0x00dd
                           0000DC   772 _T4CH0IF	=	0x00dc
                           0000DB   773 _T4OVFIF	=	0x00db
                           0000DA   774 _T3CH1IF	=	0x00da
                           0000D9   775 _T3CH0IF	=	0x00d9
                           0000D8   776 _T3OVFIF	=	0x00d8
                           0000FF   777 _MODE	=	0x00ff
                           0000FE   778 _RE	=	0x00fe
                           0000FD   779 _SLAVE	=	0x00fd
                           0000FC   780 _FE	=	0x00fc
                           0000FB   781 _ERR	=	0x00fb
                           0000FA   782 _RX_BYTE	=	0x00fa
                           0000F9   783 _TX_BYTE	=	0x00f9
                           0000F8   784 _ACTIVE	=	0x00f8
                                    785 ;--------------------------------------------------------
                                    786 ; overlayable register banks
                                    787 ;--------------------------------------------------------
                                    788 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        789 	.ds 8
                                    790 ;--------------------------------------------------------
                                    791 ; internal ram data
                                    792 ;--------------------------------------------------------
                                    793 	.area DSEG    (DATA)
                                    794 ;--------------------------------------------------------
                                    795 ; overlayable items in internal ram 
                                    796 ;--------------------------------------------------------
                                    797 ;--------------------------------------------------------
                                    798 ; indirectly addressable internal ram data
                                    799 ;--------------------------------------------------------
                                    800 	.area ISEG    (DATA)
                                    801 ;--------------------------------------------------------
                                    802 ; absolute internal ram data
                                    803 ;--------------------------------------------------------
                                    804 	.area IABS    (ABS,DATA)
                                    805 	.area IABS    (ABS,DATA)
                                    806 ;--------------------------------------------------------
                                    807 ; bit data
                                    808 ;--------------------------------------------------------
                                    809 	.area BSEG    (BIT)
                                    810 ;--------------------------------------------------------
                                    811 ; paged external ram data
                                    812 ;--------------------------------------------------------
                                    813 	.area PSEG    (PAG,XDATA)
                                    814 ;--------------------------------------------------------
                                    815 ; external ram data
                                    816 ;--------------------------------------------------------
                                    817 	.area XSEG    (XDATA)
                           0061A6   818 _MONMUX	=	0x61a6
                           0061A6   819 _OPAMPMC	=	0x61a6
                           006230   820 _I2CCFG	=	0x6230
                           006231   821 _I2CSTAT	=	0x6231
                           006232   822 _I2CDATA	=	0x6232
                           006233   823 _I2CADDR	=	0x6233
                           006234   824 _I2CWC	=	0x6234
                           006235   825 _I2CIO	=	0x6235
                           006243   826 _OBSSEL0	=	0x6243
                           006244   827 _OBSSEL1	=	0x6244
                           006245   828 _OBSSEL2	=	0x6245
                           006246   829 _OBSSEL3	=	0x6246
                           006247   830 _OBSSEL4	=	0x6247
                           006248   831 _OBSSEL5	=	0x6248
                           006249   832 _CHVER	=	0x6249
                           00624A   833 _CHIPID	=	0x624a
                           00624B   834 _TESTREG0	=	0x624b
                           006260   835 _DBGDATA	=	0x6260
                           006262   836 _SRCRC	=	0x6262
                           006264   837 _BATTMON	=	0x6264
                           006265   838 _IVCTRL	=	0x6265
                           006270   839 _FCTL	=	0x6270
                           006271   840 _FADDRL	=	0x6271
                           006272   841 _FADDRH	=	0x6272
                           006273   842 _FWDATA	=	0x6273
                           006276   843 _CHIPINFO0	=	0x6276
                           006277   844 _CHIPINFO1	=	0x6277
                           006281   845 _IRCTL	=	0x6281
                           006290   846 _CLD	=	0x6290
                           0062A0   847 _XX_T1CCTL0	=	0x62a0
                           0062A1   848 _XX_T1CCTL1	=	0x62a1
                           0062A2   849 _XX_T1CCTL2	=	0x62a2
                           0062A3   850 _T1CCTL3	=	0x62a3
                           0062A4   851 _T1CCTL4	=	0x62a4
                           0062A6   852 _XX_T1CC0L	=	0x62a6
                           0062A7   853 _XX_T1CC0H	=	0x62a7
                           0062A8   854 _XX_T1CC1L	=	0x62a8
                           0062A9   855 _XX_T1CC1H	=	0x62a9
                           0062AA   856 _XX_T1CC2L	=	0x62aa
                           0062AB   857 _XX_T1CC2H	=	0x62ab
                           0062AC   858 _T1CC3L	=	0x62ac
                           0062AD   859 _T1CC3H	=	0x62ad
                           0062AE   860 _T1CC4L	=	0x62ae
                           0062AF   861 _T1CC4H	=	0x62af
                           0062B0   862 _STCC	=	0x62b0
                           0062B1   863 _STCS	=	0x62b1
                           0062B2   864 _STCV0	=	0x62b2
                           0062B3   865 _STCV1	=	0x62b3
                           0062B4   866 _STCV2	=	0x62b4
                           0062C0   867 _OPAMPC	=	0x62c0
                           0062C1   868 _OPAMPS	=	0x62c1
                           0062D0   869 _CMPCTL	=	0x62d0
                           006000   870 _RFCORE_RAM	=	0x6000
                           006000   871 _RXFIFO	=	0x6000
                           006080   872 _TXFIFO	=	0x6080
                           006100   873 _SRC_ADDR_TABLE	=	0x6100
                           006160   874 _SRCRESMASK0	=	0x6160
                           006161   875 _SRCRESMASK1	=	0x6161
                           006162   876 _SRCRESMASK2	=	0x6162
                           006163   877 _SRCRESINDEX	=	0x6163
                           006164   878 _SRCEXTPENDEN0	=	0x6164
                           006165   879 _SRCEXTPENDEN1	=	0x6165
                           006166   880 _SRCEXTPENDEN2	=	0x6166
                           006167   881 _SRCSHORTPENDEN0	=	0x6167
                           006168   882 _SRCSHORTPENDEN1	=	0x6168
                           006169   883 _SRCSHORTPENDEN2	=	0x6169
                           00616A   884 _EXT_ADDR0	=	0x616a
                           00616B   885 _EXT_ADDR1	=	0x616b
                           00616C   886 _EXT_ADDR2	=	0x616c
                           00616D   887 _EXT_ADDR3	=	0x616d
                           00616E   888 _EXT_ADDR4	=	0x616e
                           00616F   889 _EXT_ADDR5	=	0x616f
                           006170   890 _EXT_ADDR6	=	0x6170
                           006171   891 _EXT_ADDR7	=	0x6171
                           006172   892 _PAN_ID0	=	0x6172
                           006173   893 _PAN_ID1	=	0x6173
                           006174   894 _SHORT_ADDR0	=	0x6174
                           006175   895 _SHORT_ADDR1	=	0x6175
                           006180   896 _FRMFILT0	=	0x6180
                           006181   897 _FRMFILT1	=	0x6181
                           006182   898 _SRCMATCH	=	0x6182
                           006183   899 _SRCSHORTEN0	=	0x6183
                           006184   900 _SRCSHORTEN1	=	0x6184
                           006185   901 _SRCSHORTEN2	=	0x6185
                           006186   902 _SRCEXTEN0	=	0x6186
                           006187   903 _SRCEXTEN1	=	0x6187
                           006188   904 _SRCEXTEN2	=	0x6188
                           006189   905 _FRMCTRL0	=	0x6189
                           00618A   906 _FRMCTRL1	=	0x618a
                           00618B   907 _RXENABLE	=	0x618b
                           00618C   908 _RXMASKSET	=	0x618c
                           00618D   909 _RXMASKCLR	=	0x618d
                           00618E   910 _FREQTUNE	=	0x618e
                           00618F   911 _FREQCTRL	=	0x618f
                           006190   912 _TXPOWER	=	0x6190
                           006191   913 _TXCTRL	=	0x6191
                           006192   914 _FSMSTAT0	=	0x6192
                           006193   915 _FSMSTAT1	=	0x6193
                           006194   916 _FIFOPCTRL	=	0x6194
                           006195   917 _FSMCTRL	=	0x6195
                           006196   918 _CCACTRL0	=	0x6196
                           006197   919 _CCACTRL1	=	0x6197
                           006198   920 _RSSI	=	0x6198
                           006199   921 _RSSISTAT	=	0x6199
                           00619A   922 _RXFIRST	=	0x619a
                           00619B   923 _RXFIFOCNT	=	0x619b
                           00619C   924 _TXFIFOCNT	=	0x619c
                           00619D   925 _RXFIRST_PTR	=	0x619d
                           00619E   926 _RXLAST_PTR	=	0x619e
                           00619F   927 _RXP1_PTR	=	0x619f
                           0061A1   928 _TXFIRST_PTR	=	0x61a1
                           0061A2   929 _TXLAST_PTR	=	0x61a2
                           0061A3   930 _RFIRQM0	=	0x61a3
                           0061A4   931 _RFIRQM1	=	0x61a4
                           0061A5   932 _RFERRM	=	0x61a5
                           0061A7   933 _RFRND	=	0x61a7
                           0061A8   934 _MDMCTRL0	=	0x61a8
                           0061A9   935 _MDMCTRL1	=	0x61a9
                           0061AA   936 _FREQEST	=	0x61aa
                           0061AB   937 _RXCTRL	=	0x61ab
                           0061AC   938 _FSCTRL	=	0x61ac
                           0061AD   939 _FSCAL0	=	0x61ad
                           0061AE   940 _FSCAL1	=	0x61ae
                           0061AF   941 _FSCAL2	=	0x61af
                           0061B0   942 _FSCAL3	=	0x61b0
                           0061B1   943 _AGCCTRL0	=	0x61b1
                           0061B2   944 _AGCCTRL1	=	0x61b2
                           0061B3   945 _AGCCTRL2	=	0x61b3
                           0061B4   946 _AGCCTRL3	=	0x61b4
                           0061B5   947 _ADCTEST0	=	0x61b5
                           0061B6   948 _ADCTEST1	=	0x61b6
                           0061B7   949 _ADCTEST2	=	0x61b7
                           0061B8   950 _MDMTEST0	=	0x61b8
                           0061B9   951 _MDMTEST1	=	0x61b9
                           0061BA   952 _DACTEST0	=	0x61ba
                           0061BB   953 _DACTEST1	=	0x61bb
                           0061BC   954 _DACTEST2	=	0x61bc
                           0061BD   955 _ATEST	=	0x61bd
                           0061BE   956 _PTEST0	=	0x61be
                           0061BF   957 _PTEST1	=	0x61bf
                           0061FA   958 _TXFILTCFG	=	0x61fa
                           0061EB   959 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   960 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   961 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   962 _CSPPROG0	=	0x61c0
                           0061C1   963 _CSPPROG1	=	0x61c1
                           0061C2   964 _CSPPROG2	=	0x61c2
                           0061C3   965 _CSPPROG3	=	0x61c3
                           0061C4   966 _CSPPROG4	=	0x61c4
                           0061C5   967 _CSPPROG5	=	0x61c5
                           0061C6   968 _CSPPROG6	=	0x61c6
                           0061C7   969 _CSPPROG7	=	0x61c7
                           0061C8   970 _CSPPROG8	=	0x61c8
                           0061C9   971 _CSPPROG9	=	0x61c9
                           0061CA   972 _CSPPROG10	=	0x61ca
                           0061CB   973 _CSPPROG11	=	0x61cb
                           0061CC   974 _CSPPROG12	=	0x61cc
                           0061CD   975 _CSPPROG13	=	0x61cd
                           0061CE   976 _CSPPROG14	=	0x61ce
                           0061CF   977 _CSPPROG15	=	0x61cf
                           0061D0   978 _CSPPROG16	=	0x61d0
                           0061D1   979 _CSPPROG17	=	0x61d1
                           0061D2   980 _CSPPROG18	=	0x61d2
                           0061D3   981 _CSPPROG19	=	0x61d3
                           0061D4   982 _CSPPROG20	=	0x61d4
                           0061D5   983 _CSPPROG21	=	0x61d5
                           0061D6   984 _CSPPROG22	=	0x61d6
                           0061D7   985 _CSPPROG23	=	0x61d7
                           0061E0   986 _CSPCTRL	=	0x61e0
                           0061E1   987 _CSPSTAT	=	0x61e1
                           0061E2   988 _CSPX	=	0x61e2
                           0061E3   989 _CSPY	=	0x61e3
                           0061E4   990 _CSPZ	=	0x61e4
                           0061E5   991 _CSPT	=	0x61e5
                           006200   992 _USBADDR	=	0x6200
                           006201   993 _USBPOW	=	0x6201
                           006202   994 _USBIIF	=	0x6202
                           006204   995 _USBOIF	=	0x6204
                           006206   996 _USBCIF	=	0x6206
                           006207   997 _USBIIE	=	0x6207
                           006209   998 _USBOIE	=	0x6209
                           00620B   999 _USBCIE	=	0x620b
                           00620C  1000 _USBFRML	=	0x620c
                           00620D  1001 _USBFRMH	=	0x620d
                           00620E  1002 _USBINDEX	=	0x620e
                           00620F  1003 _USBCTRL	=	0x620f
                           006210  1004 _USBMAXI	=	0x6210
                           006211  1005 _USBCS0	=	0x6211
                           006211  1006 _USBCSIL	=	0x6211
                           006212  1007 _USBCSIH	=	0x6212
                           006213  1008 _USBMAXO	=	0x6213
                           006214  1009 _USBCSOL	=	0x6214
                           006215  1010 _USBCSOH	=	0x6215
                           006216  1011 _USBCNT0	=	0x6216
                           006216  1012 _USBCNTL	=	0x6216
                           006217  1013 _USBCNTH	=	0x6217
                           006220  1014 _USBF0	=	0x6220
                           006222  1015 _USBF1	=	0x6222
                           006224  1016 _USBF2	=	0x6224
                           006226  1017 _USBF3	=	0x6226
                           006228  1018 _USBF4	=	0x6228
                           00622A  1019 _USBF5	=	0x622a
                           007080  1020 _X_P0	=	0x7080
                           007086  1021 _X_U0CSR	=	0x7086
                           007089  1022 _X_P0IFG	=	0x7089
                           00708A  1023 _X_P1IFG	=	0x708a
                           00708B  1024 _X_P2IFG	=	0x708b
                           00708C  1025 _X_PICTL	=	0x708c
                           00708D  1026 _X_P1IEN	=	0x708d
                           00708F  1027 _X_P0INP	=	0x708f
                           007090  1028 _X_P1	=	0x7090
                           007091  1029 _X_RFIRQF1	=	0x7091
                           007093  1030 _X_MPAGE	=	0x7093
                           007093  1031 _X__XPAGE	=	0x7093
                           007094  1032 _X_T2CTRL	=	0x7094
                           007095  1033 _X_ST0	=	0x7095
                           007096  1034 _X_ST1	=	0x7096
                           007097  1035 _X_ST2	=	0x7097
                           00709C  1036 _X_T2EVTCFG	=	0x709c
                           00709D  1037 _X_SLEEPSTA	=	0x709d
                           00709E  1038 _X_CLKCONSTA	=	0x709e
                           00709F  1039 _X_FMAP	=	0x709f
                           00709F  1040 _X_PSBANK	=	0x709f
                           0070A0  1041 _X_P2	=	0x70a0
                           0070A1  1042 _X_T2IRQF	=	0x70a1
                           0070A2  1043 _X_T2M0	=	0x70a2
                           0070A3  1044 _X_T2M1	=	0x70a3
                           0070A4  1045 _X_T2MOVF0	=	0x70a4
                           0070A5  1046 _X_T2MOVF1	=	0x70a5
                           0070A6  1047 _X_T2MOVF2	=	0x70a6
                           0070A7  1048 _X_T2IRQM	=	0x70a7
                           0070AB  1049 _X_P0IEN	=	0x70ab
                           0070AC  1050 _X_P2IEN	=	0x70ac
                           0070AD  1051 _X_STLOAD	=	0x70ad
                           0070AE  1052 _X_PMUX	=	0x70ae
                           0070AF  1053 _X_T1STAT	=	0x70af
                           0070B1  1054 _X_ENCDI	=	0x70b1
                           0070B2  1055 _X_ENCDO	=	0x70b2
                           0070B3  1056 _X_ENCCS	=	0x70b3
                           0070B4  1057 _X_ADCCON1	=	0x70b4
                           0070B5  1058 _X_ADCCON2	=	0x70b5
                           0070B6  1059 _X_ADCCON3	=	0x70b6
                           0070BA  1060 _X_ADCL	=	0x70ba
                           0070BB  1061 _X_ADCH	=	0x70bb
                           0070BC  1062 _X_RNDL	=	0x70bc
                           0070BD  1063 _X_RNDH	=	0x70bd
                           0070BE  1064 _X_SLEEPCMD	=	0x70be
                           0070BF  1065 _X_RFERRF	=	0x70bf
                           0070C1  1066 _X_U0DBUF	=	0x70c1
                           0070C2  1067 _X_U0BAUD	=	0x70c2
                           0070C3  1068 _X_T2MSEL	=	0x70c3
                           0070C4  1069 _X_U0UCR	=	0x70c4
                           0070C5  1070 _X_U0GCR	=	0x70c5
                           0070C6  1071 _X_CLKCONCMD	=	0x70c6
                           0070C7  1072 _X_MEMCTR	=	0x70c7
                           0070C9  1073 _X_WDCTL	=	0x70c9
                           0070CA  1074 _X_T3CNT	=	0x70ca
                           0070CB  1075 _X_T3CTL	=	0x70cb
                           0070CC  1076 _X_T3CCTL0	=	0x70cc
                           0070CD  1077 _X_T3CC0	=	0x70cd
                           0070CE  1078 _X_T3CCTL1	=	0x70ce
                           0070CF  1079 _X_T3CC1	=	0x70cf
                           0070D1  1080 _X_DMAIRQ	=	0x70d1
                           0070D2  1081 _X_DMA1CFGL	=	0x70d2
                           0070D3  1082 _X_DMA1CFGH	=	0x70d3
                           0070D4  1083 _X_DMA0CFGL	=	0x70d4
                           0070D5  1084 _X_DMA0CFGH	=	0x70d5
                           0070D6  1085 _X_DMAARM	=	0x70d6
                           0070D7  1086 _X_DMAREQ	=	0x70d7
                           0070D8  1087 _X_TIMIF	=	0x70d8
                           0070D9  1088 _X_RFD	=	0x70d9
                           0070DA  1089 _X_T1CC0L	=	0x70da
                           0070DB  1090 _X_T1CC0H	=	0x70db
                           0070DC  1091 _X_T1CC1L	=	0x70dc
                           0070DD  1092 _X_T1CC1H	=	0x70dd
                           0070DE  1093 _X_T1CC2L	=	0x70de
                           0070DF  1094 _X_T1CC2H	=	0x70df
                           0070E1  1095 _X_RFST	=	0x70e1
                           0070E2  1096 _X_T1CNTL	=	0x70e2
                           0070E3  1097 _X_T1CNTH	=	0x70e3
                           0070E4  1098 _X_T1CTL	=	0x70e4
                           0070E5  1099 _X_T1CCTL0	=	0x70e5
                           0070E6  1100 _X_T1CCTL1	=	0x70e6
                           0070E7  1101 _X_T1CCTL2	=	0x70e7
                           0070E9  1102 _X_RFIRQF0	=	0x70e9
                           0070EA  1103 _X_T4CNT	=	0x70ea
                           0070EB  1104 _X_T4CTL	=	0x70eb
                           0070EC  1105 _X_T4CCTL0	=	0x70ec
                           0070ED  1106 _X_T4CC0	=	0x70ed
                           0070EE  1107 _X_T4CCTL1	=	0x70ee
                           0070EF  1108 _X_T4CC1	=	0x70ef
                           0070F1  1109 _X_PERCFG	=	0x70f1
                           0070F2  1110 _X_APCFG	=	0x70f2
                           0070F3  1111 _X_P0SEL	=	0x70f3
                           0070F4  1112 _X_P1SEL	=	0x70f4
                           0070F5  1113 _X_P2SEL	=	0x70f5
                           0070F6  1114 _X_P1INP	=	0x70f6
                           0070F7  1115 _X_P2INP	=	0x70f7
                           0070F8  1116 _X_U1CSR	=	0x70f8
                           0070F9  1117 _X_U1DBUF	=	0x70f9
                           0070FA  1118 _X_U1BAUD	=	0x70fa
                           0070FB  1119 _X_U1UCR	=	0x70fb
                           0070FC  1120 _X_U1GCR	=	0x70fc
                           0070FD  1121 _X_P0DIR	=	0x70fd
                           0070FE  1122 _X_P1DIR	=	0x70fe
                           0070FF  1123 _X_P2DIR	=	0x70ff
                           007800  1124 _X_INFOPAGE	=	0x7800
                           00780C  1125 _X_IEEE_ADDR	=	0x780c
                                   1126 ;--------------------------------------------------------
                                   1127 ; absolute external ram data
                                   1128 ;--------------------------------------------------------
                                   1129 	.area XABS    (ABS,XDATA)
                                   1130 ;--------------------------------------------------------
                                   1131 ; external initialized ram data
                                   1132 ;--------------------------------------------------------
                                   1133 	.area XISEG   (XDATA)
                                   1134 	.area HOME    (CODE)
                                   1135 	.area GSINIT0 (CODE)
                                   1136 	.area GSINIT1 (CODE)
                                   1137 	.area GSINIT2 (CODE)
                                   1138 	.area GSINIT3 (CODE)
                                   1139 	.area GSINIT4 (CODE)
                                   1140 	.area GSINIT5 (CODE)
                                   1141 	.area GSINIT  (CODE)
                                   1142 	.area GSFINAL (CODE)
                                   1143 	.area CSEG    (CODE)
                                   1144 ;--------------------------------------------------------
                                   1145 ; global & static initialisations
                                   1146 ;--------------------------------------------------------
                                   1147 	.area HOME    (CODE)
                                   1148 	.area GSINIT  (CODE)
                                   1149 	.area GSFINAL (CODE)
                                   1150 	.area GSINIT  (CODE)
                                   1151 ;--------------------------------------------------------
                                   1152 ; Home
                                   1153 ;--------------------------------------------------------
                                   1154 	.area HOME    (CODE)
                                   1155 	.area HOME    (CODE)
                                   1156 ;--------------------------------------------------------
                                   1157 ; code
                                   1158 ;--------------------------------------------------------
                                   1159 	.area BANK1   (CODE)
                                   1160 ;------------------------------------------------------------
                                   1161 ;Allocation info for local variables in function 'send'
                                   1162 ;------------------------------------------------------------
                                   1163 ;ptr                       Allocated to registers r5 r6 r7 
                                   1164 ;c                         Allocated to registers r5 r6 r7 
                                   1165 ;------------------------------------------------------------
                                   1166 ;	/opt/contiki/core/net/rime/trickle.c:76: send(void *ptr)
                                   1167 ;	-----------------------------------------
                                   1168 ;	 function send
                                   1169 ;	-----------------------------------------
      000000                       1170 _send:
                           000007  1171 	ar7 = 0x07
                           000006  1172 	ar6 = 0x06
                           000005  1173 	ar5 = 0x05
                           000004  1174 	ar4 = 0x04
                           000003  1175 	ar3 = 0x03
                           000002  1176 	ar2 = 0x02
                           000001  1177 	ar1 = 0x01
                           000000  1178 	ar0 = 0x00
      000000 AD 82            [24] 1179 	mov	r5,dpl
      000002 AE 83            [24] 1180 	mov	r6,dph
      000004 AF F0            [24] 1181 	mov	r7,b
                                   1182 ;	/opt/contiki/core/net/rime/trickle.c:78: struct trickle_conn *c = ptr;
                                   1183 ;	/opt/contiki/core/net/rime/trickle.c:80: if(c->q != NULL) {
      000006 74 56            [12] 1184 	mov	a,#0x56
      000008 2D               [12] 1185 	add	a,r5
      000009 FA               [12] 1186 	mov	r2,a
      00000A E4               [12] 1187 	clr	a
      00000B 3E               [12] 1188 	addc	a,r6
      00000C FB               [12] 1189 	mov	r3,a
      00000D 8F 04            [24] 1190 	mov	ar4,r7
      00000F 8A 82            [24] 1191 	mov	dpl,r2
      000011 8B 83            [24] 1192 	mov	dph,r3
      000013 8C F0            [24] 1193 	mov	b,r4
      000015 12r00r00         [24] 1194 	lcall	__gptrget
      000018 FA               [12] 1195 	mov	r2,a
      000019 A3               [24] 1196 	inc	dptr
      00001A 12r00r00         [24] 1197 	lcall	__gptrget
      00001D FB               [12] 1198 	mov	r3,a
      00001E A3               [24] 1199 	inc	dptr
      00001F 12r00r00         [24] 1200 	lcall	__gptrget
      000022 FC               [12] 1201 	mov	r4,a
      000023 EA               [12] 1202 	mov	a,r2
      000024 4B               [12] 1203 	orl	a,r3
      000025 60 2A            [24] 1204 	jz	00103$
                                   1205 ;	/opt/contiki/core/net/rime/trickle.c:81: queuebuf_to_packetbuf(c->q);
      000027 8A 82            [24] 1206 	mov	dpl,r2
      000029 8B 83            [24] 1207 	mov	dph,r3
      00002B 8C F0            [24] 1208 	mov	b,r4
      00002D C0 07            [24] 1209 	push	ar7
      00002F C0 06            [24] 1210 	push	ar6
      000031 C0 05            [24] 1211 	push	ar5
      000033 78r00            [12] 1212 	mov	r0,#_queuebuf_to_packetbuf
      000035 79s00            [12] 1213 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      000037 7As00            [12] 1214 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      000039 12r00r00         [24] 1215 	lcall	__sdcc_banked_call
      00003C D0 05            [24] 1216 	pop	ar5
      00003E D0 06            [24] 1217 	pop	ar6
      000040 D0 07            [24] 1218 	pop	ar7
                                   1219 ;	/opt/contiki/core/net/rime/trickle.c:82: broadcast_send(&c->c);
      000042 8D 82            [24] 1220 	mov	dpl,r5
      000044 8E 83            [24] 1221 	mov	dph,r6
      000046 8F F0            [24] 1222 	mov	b,r7
      000048 78r00            [12] 1223 	mov	r0,#_broadcast_send
      00004A 79s00            [12] 1224 	mov	r1,#(_broadcast_send >> 8)
      00004C 7As00            [12] 1225 	mov	r2,#(_broadcast_send >> 16)
      00004E 12r00r00         [24] 1226 	lcall	__sdcc_banked_call
      000051                       1227 00103$:
      000051 02r00r00         [24] 1228 	ljmp	__sdcc_banked_ret
                                   1229 ;------------------------------------------------------------
                                   1230 ;Allocation info for local variables in function 'timer_callback'
                                   1231 ;------------------------------------------------------------
                                   1232 ;ptr                       Allocated to registers r5 r6 r7 
                                   1233 ;c                         Allocated to registers r5 r6 r7 
                                   1234 ;------------------------------------------------------------
                                   1235 ;	/opt/contiki/core/net/rime/trickle.c:90: timer_callback(void *ptr)
                                   1236 ;	-----------------------------------------
                                   1237 ;	 function timer_callback
                                   1238 ;	-----------------------------------------
      000054                       1239 _timer_callback:
                                   1240 ;	/opt/contiki/core/net/rime/trickle.c:92: struct trickle_conn *c = ptr;
                                   1241 ;	/opt/contiki/core/net/rime/trickle.c:93: run_trickle(c);
      000054 78rD2            [12] 1242 	mov	r0,#_run_trickle
      000056 79s00            [12] 1243 	mov	r1,#(_run_trickle >> 8)
      000058 7As00            [12] 1244 	mov	r2,#(_run_trickle >> 16)
      00005A 12r00r00         [24] 1245 	lcall	__sdcc_banked_call
      00005D 02r00r00         [24] 1246 	ljmp	__sdcc_banked_ret
                                   1247 ;------------------------------------------------------------
                                   1248 ;Allocation info for local variables in function 'reset_interval'
                                   1249 ;------------------------------------------------------------
                                   1250 ;c                         Allocated to registers r5 r6 r7 
                                   1251 ;------------------------------------------------------------
                                   1252 ;	/opt/contiki/core/net/rime/trickle.c:97: reset_interval(struct trickle_conn *c)
                                   1253 ;	-----------------------------------------
                                   1254 ;	 function reset_interval
                                   1255 ;	-----------------------------------------
      000060                       1256 _reset_interval:
      000060 AD 82            [24] 1257 	mov	r5,dpl
      000062 AE 83            [24] 1258 	mov	r6,dph
      000064 AF F0            [24] 1259 	mov	r7,b
                                   1260 ;	/opt/contiki/core/net/rime/trickle.c:99: PT_INIT(&c->pt);
      000066 74 54            [12] 1261 	mov	a,#0x54
      000068 2D               [12] 1262 	add	a,r5
      000069 FA               [12] 1263 	mov	r2,a
      00006A E4               [12] 1264 	clr	a
      00006B 3E               [12] 1265 	addc	a,r6
      00006C FB               [12] 1266 	mov	r3,a
      00006D 8F 04            [24] 1267 	mov	ar4,r7
      00006F 8A 82            [24] 1268 	mov	dpl,r2
      000071 8B 83            [24] 1269 	mov	dph,r3
      000073 8C F0            [24] 1270 	mov	b,r4
      000075 E4               [12] 1271 	clr	a
      000076 12r00r00         [24] 1272 	lcall	__gptrput
      000079 A3               [24] 1273 	inc	dptr
      00007A 12r00r00         [24] 1274 	lcall	__gptrput
                                   1275 ;	/opt/contiki/core/net/rime/trickle.c:100: run_trickle(c);
      00007D 8D 82            [24] 1276 	mov	dpl,r5
      00007F 8E 83            [24] 1277 	mov	dph,r6
      000081 8F F0            [24] 1278 	mov	b,r7
      000083 78rD2            [12] 1279 	mov	r0,#_run_trickle
      000085 79s00            [12] 1280 	mov	r1,#(_run_trickle >> 8)
      000087 7As00            [12] 1281 	mov	r2,#(_run_trickle >> 16)
      000089 12r00r00         [24] 1282 	lcall	__sdcc_banked_call
      00008C 02r00r00         [24] 1283 	ljmp	__sdcc_banked_ret
                                   1284 ;------------------------------------------------------------
                                   1285 ;Allocation info for local variables in function 'set_timer'
                                   1286 ;------------------------------------------------------------
                                   1287 ;t                         Allocated to stack - sp -5
                                   1288 ;i                         Allocated to stack - sp -7
                                   1289 ;c                         Allocated to registers r5 r6 r7 
                                   1290 ;------------------------------------------------------------
                                   1291 ;	/opt/contiki/core/net/rime/trickle.c:104: set_timer(struct trickle_conn *c, struct ctimer *t, clock_time_t i)
                                   1292 ;	-----------------------------------------
                                   1293 ;	 function set_timer
                                   1294 ;	-----------------------------------------
      00008F                       1295 _set_timer:
      00008F AD 82            [24] 1296 	mov	r5,dpl
      000091 AE 83            [24] 1297 	mov	r6,dph
      000093 AF F0            [24] 1298 	mov	r7,b
                                   1299 ;	/opt/contiki/core/net/rime/trickle.c:106: ctimer_set(t, i, timer_callback, c);
      000095 C0 05            [24] 1300 	push	ar5
      000097 C0 06            [24] 1301 	push	ar6
      000099 C0 07            [24] 1302 	push	ar7
      00009B 74r54            [12] 1303 	mov	a,#_timer_callback
      00009D C0 E0            [24] 1304 	push	acc
      00009F 74s00            [12] 1305 	mov	a,#(_timer_callback >> 8)
      0000A1 C0 E0            [24] 1306 	push	acc
      0000A3 74s00            [12] 1307 	mov	a,#(_timer_callback >> 16)
      0000A5 C0 E0            [24] 1308 	push	acc
      0000A7 E5 81            [12] 1309 	mov	a,sp
      0000A9 24 F3            [12] 1310 	add	a,#0xf3
      0000AB F8               [12] 1311 	mov	r0,a
      0000AC E6               [12] 1312 	mov	a,@r0
      0000AD C0 E0            [24] 1313 	push	acc
      0000AF 08               [12] 1314 	inc	r0
      0000B0 E6               [12] 1315 	mov	a,@r0
      0000B1 C0 E0            [24] 1316 	push	acc
      0000B3 E5 81            [12] 1317 	mov	a,sp
      0000B5 24 F3            [12] 1318 	add	a,#0xf3
      0000B7 F8               [12] 1319 	mov	r0,a
      0000B8 86 82            [24] 1320 	mov	dpl,@r0
      0000BA 08               [12] 1321 	inc	r0
      0000BB 86 83            [24] 1322 	mov	dph,@r0
      0000BD 08               [12] 1323 	inc	r0
      0000BE 86 F0            [24] 1324 	mov	b,@r0
      0000C0 78r00            [12] 1325 	mov	r0,#_ctimer_set
      0000C2 79s00            [12] 1326 	mov	r1,#(_ctimer_set >> 8)
      0000C4 7As00            [12] 1327 	mov	r2,#(_ctimer_set >> 16)
      0000C6 12r00r00         [24] 1328 	lcall	__sdcc_banked_call
      0000C9 E5 81            [12] 1329 	mov	a,sp
      0000CB 24 F8            [12] 1330 	add	a,#0xf8
      0000CD F5 81            [12] 1331 	mov	sp,a
      0000CF 02r00r00         [24] 1332 	ljmp	__sdcc_banked_ret
                                   1333 ;------------------------------------------------------------
                                   1334 ;Allocation info for local variables in function 'run_trickle'
                                   1335 ;------------------------------------------------------------
                                   1336 ;c                         Allocated to stack - sp -3
                                   1337 ;interval                  Allocated to registers r4 r3 
                                   1338 ;PT_YIELD_FLAG             Allocated to stack - sp +0
                                   1339 ;sloc0                     Allocated to stack - sp +3
                                   1340 ;sloc1                     Allocated to stack - sp +5
                                   1341 ;------------------------------------------------------------
                                   1342 ;	/opt/contiki/core/net/rime/trickle.c:110: run_trickle(struct trickle_conn *c)
                                   1343 ;	-----------------------------------------
                                   1344 ;	 function run_trickle
                                   1345 ;	-----------------------------------------
      0000D2                       1346 _run_trickle:
      0000D2 C0 82            [24] 1347 	push	dpl
      0000D4 C0 83            [24] 1348 	push	dph
      0000D6 C0 F0            [24] 1349 	push	b
      0000D8 05 81            [12] 1350 	inc	sp
                                   1351 ;	/opt/contiki/core/net/rime/trickle.c:113: PT_BEGIN(&c->pt);
      0000DA A8 81            [24] 1352 	mov	r0,sp
      0000DC 76 01            [12] 1353 	mov	@r0,#0x01
      0000DE E5 81            [12] 1354 	mov	a,sp
      0000E0 24 FD            [12] 1355 	add	a,#0xfd
      0000E2 F8               [12] 1356 	mov	r0,a
      0000E3 74 54            [12] 1357 	mov	a,#0x54
      0000E5 26               [12] 1358 	add	a,@r0
      0000E6 FA               [12] 1359 	mov	r2,a
      0000E7 E4               [12] 1360 	clr	a
      0000E8 08               [12] 1361 	inc	r0
      0000E9 36               [12] 1362 	addc	a,@r0
      0000EA FB               [12] 1363 	mov	r3,a
      0000EB 08               [12] 1364 	inc	r0
      0000EC 86 04            [24] 1365 	mov	ar4,@r0
      0000EE 8A 82            [24] 1366 	mov	dpl,r2
      0000F0 8B 83            [24] 1367 	mov	dph,r3
      0000F2 8C F0            [24] 1368 	mov	b,r4
      0000F4 12r00r00         [24] 1369 	lcall	__gptrget
      0000F7 FF               [12] 1370 	mov	r7,a
      0000F8 A3               [24] 1371 	inc	dptr
      0000F9 12r00r00         [24] 1372 	lcall	__gptrget
      0000FC FE               [12] 1373 	mov	r6,a
      0000FD BF 00 05         [24] 1374 	cjne	r7,#0x00,00148$
      000100 BE 00 02         [24] 1375 	cjne	r6,#0x00,00148$
      000103 80 15            [24] 1376 	sjmp	00119$
      000105                       1377 00148$:
      000105 BF 79 06         [24] 1378 	cjne	r7,#0x79,00149$
      000108 BE 00 03         [24] 1379 	cjne	r6,#0x00,00149$
      00010B 02r02r57         [24] 1380 	ljmp	00102$
      00010E                       1381 00149$:
      00010E BF 7D 06         [24] 1382 	cjne	r7,#0x7D,00150$
      000111 BE 00 03         [24] 1383 	cjne	r6,#0x00,00150$
      000114 02r02rC1         [24] 1384 	ljmp	00110$
      000117                       1385 00150$:
      000117 02r02rFB         [24] 1386 	ljmp	00121$
                                   1387 ;	/opt/contiki/core/net/rime/trickle.c:115: while(1) {
      00011A                       1388 00119$:
                                   1389 ;	/opt/contiki/core/net/rime/trickle.c:116: interval = c->interval << c->interval_scaling;
      00011A E5 81            [12] 1390 	mov	a,sp
      00011C 24 FD            [12] 1391 	add	a,#0xfd
      00011E F8               [12] 1392 	mov	r0,a
      00011F 74 59            [12] 1393 	mov	a,#0x59
      000121 26               [12] 1394 	add	a,@r0
      000122 FD               [12] 1395 	mov	r5,a
      000123 E4               [12] 1396 	clr	a
      000124 08               [12] 1397 	inc	r0
      000125 36               [12] 1398 	addc	a,@r0
      000126 FE               [12] 1399 	mov	r6,a
      000127 08               [12] 1400 	inc	r0
      000128 86 07            [24] 1401 	mov	ar7,@r0
      00012A 8D 82            [24] 1402 	mov	dpl,r5
      00012C 8E 83            [24] 1403 	mov	dph,r6
      00012E 8F F0            [24] 1404 	mov	b,r7
      000130 12r00r00         [24] 1405 	lcall	__gptrget
      000133 FC               [12] 1406 	mov	r4,a
      000134 A3               [24] 1407 	inc	dptr
      000135 12r00r00         [24] 1408 	lcall	__gptrget
      000138 FB               [12] 1409 	mov	r3,a
      000139 E5 81            [12] 1410 	mov	a,sp
      00013B 24 FD            [12] 1411 	add	a,#0xfd
      00013D F8               [12] 1412 	mov	r0,a
      00013E 74 5C            [12] 1413 	mov	a,#0x5C
      000140 26               [12] 1414 	add	a,@r0
      000141 FD               [12] 1415 	mov	r5,a
      000142 E4               [12] 1416 	clr	a
      000143 08               [12] 1417 	inc	r0
      000144 36               [12] 1418 	addc	a,@r0
      000145 FE               [12] 1419 	mov	r6,a
      000146 08               [12] 1420 	inc	r0
      000147 86 07            [24] 1421 	mov	ar7,@r0
      000149 8D 82            [24] 1422 	mov	dpl,r5
      00014B 8E 83            [24] 1423 	mov	dph,r6
      00014D 8F F0            [24] 1424 	mov	b,r7
      00014F 12r00r00         [24] 1425 	lcall	__gptrget
      000152 FD               [12] 1426 	mov	r5,a
      000153 8D F0            [24] 1427 	mov	b,r5
      000155 05 F0            [12] 1428 	inc	b
      000157 AD 04            [24] 1429 	mov	r5,ar4
      000159 AF 03            [24] 1430 	mov	r7,ar3
      00015B 80 06            [24] 1431 	sjmp	00152$
      00015D                       1432 00151$:
      00015D ED               [12] 1433 	mov	a,r5
      00015E 2D               [12] 1434 	add	a,r5
      00015F FD               [12] 1435 	mov	r5,a
      000160 EF               [12] 1436 	mov	a,r7
      000161 33               [12] 1437 	rlc	a
      000162 FF               [12] 1438 	mov	r7,a
      000163                       1439 00152$:
      000163 D5 F0 F7         [24] 1440 	djnz	b,00151$
      000166 8D 04            [24] 1441 	mov	ar4,r5
      000168 8F 03            [24] 1442 	mov	ar3,r7
                                   1443 ;	/opt/contiki/core/net/rime/trickle.c:117: set_timer(c, &c->interval_timer, interval);
      00016A E5 81            [12] 1444 	mov	a,sp
      00016C 24 FD            [12] 1445 	add	a,#0xfd
      00016E F8               [12] 1446 	mov	r0,a
      00016F 74 28            [12] 1447 	mov	a,#0x28
      000171 26               [12] 1448 	add	a,@r0
      000172 FD               [12] 1449 	mov	r5,a
      000173 E4               [12] 1450 	clr	a
      000174 08               [12] 1451 	inc	r0
      000175 36               [12] 1452 	addc	a,@r0
      000176 FE               [12] 1453 	mov	r6,a
      000177 08               [12] 1454 	inc	r0
      000178 86 07            [24] 1455 	mov	ar7,@r0
      00017A C0 04            [24] 1456 	push	ar4
      00017C C0 03            [24] 1457 	push	ar3
      00017E C0 04            [24] 1458 	push	ar4
      000180 C0 03            [24] 1459 	push	ar3
      000182 C0 05            [24] 1460 	push	ar5
      000184 C0 06            [24] 1461 	push	ar6
      000186 C0 07            [24] 1462 	push	ar7
      000188 E5 81            [12] 1463 	mov	a,sp
      00018A 24 F6            [12] 1464 	add	a,#0xf6
      00018C F8               [12] 1465 	mov	r0,a
      00018D 86 82            [24] 1466 	mov	dpl,@r0
      00018F 08               [12] 1467 	inc	r0
      000190 86 83            [24] 1468 	mov	dph,@r0
      000192 08               [12] 1469 	inc	r0
      000193 86 F0            [24] 1470 	mov	b,@r0
      000195 78r8F            [12] 1471 	mov	r0,#_set_timer
      000197 79s00            [12] 1472 	mov	r1,#(_set_timer >> 8)
      000199 7As00            [12] 1473 	mov	r2,#(_set_timer >> 16)
      00019B 12r00r00         [24] 1474 	lcall	__sdcc_banked_call
      00019E E5 81            [12] 1475 	mov	a,sp
      0001A0 24 FB            [12] 1476 	add	a,#0xfb
      0001A2 F5 81            [12] 1477 	mov	sp,a
      0001A4 D0 03            [24] 1478 	pop	ar3
      0001A6 D0 04            [24] 1479 	pop	ar4
                                   1480 ;	/opt/contiki/core/net/rime/trickle.c:118: set_timer(c, &c->t, interval / 2 + (random_rand() % (interval / 2)));
      0001A8 EB               [12] 1481 	mov	a,r3
      0001A9 C3               [12] 1482 	clr	c
      0001AA 13               [12] 1483 	rrc	a
      0001AB CC               [12] 1484 	xch	a,r4
      0001AC 13               [12] 1485 	rrc	a
      0001AD CC               [12] 1486 	xch	a,r4
      0001AE FB               [12] 1487 	mov	r3,a
      0001AF C0 04            [24] 1488 	push	ar4
      0001B1 C0 03            [24] 1489 	push	ar3
      0001B3 78r00            [12] 1490 	mov	r0,#_random_rand
      0001B5 79s00            [12] 1491 	mov	r1,#(_random_rand >> 8)
      0001B7 7As00            [12] 1492 	mov	r2,#(_random_rand >> 16)
      0001B9 12r00r00         [24] 1493 	lcall	__sdcc_banked_call
      0001BC AD 82            [24] 1494 	mov	r5,dpl
      0001BE AF 83            [24] 1495 	mov	r7,dph
      0001C0 D0 03            [24] 1496 	pop	ar3
      0001C2 D0 04            [24] 1497 	pop	ar4
      0001C4 C0 04            [24] 1498 	push	ar4
      0001C6 C0 03            [24] 1499 	push	ar3
      0001C8 C0 04            [24] 1500 	push	ar4
      0001CA C0 03            [24] 1501 	push	ar3
      0001CC 8D 82            [24] 1502 	mov	dpl,r5
      0001CE 8F 83            [24] 1503 	mov	dph,r7
      0001D0 12r00r00         [24] 1504 	lcall	__moduint
      0001D3 AE 82            [24] 1505 	mov	r6,dpl
      0001D5 AF 83            [24] 1506 	mov	r7,dph
      0001D7 15 81            [12] 1507 	dec	sp
      0001D9 15 81            [12] 1508 	dec	sp
      0001DB D0 03            [24] 1509 	pop	ar3
      0001DD D0 04            [24] 1510 	pop	ar4
      0001DF EE               [12] 1511 	mov	a,r6
      0001E0 2C               [12] 1512 	add	a,r4
      0001E1 FC               [12] 1513 	mov	r4,a
      0001E2 EF               [12] 1514 	mov	a,r7
      0001E3 3B               [12] 1515 	addc	a,r3
      0001E4 FB               [12] 1516 	mov	r3,a
      0001E5 E5 81            [12] 1517 	mov	a,sp
      0001E7 24 FD            [12] 1518 	add	a,#0xfd
      0001E9 F8               [12] 1519 	mov	r0,a
      0001EA 74 12            [12] 1520 	mov	a,#0x12
      0001EC 26               [12] 1521 	add	a,@r0
      0001ED FD               [12] 1522 	mov	r5,a
      0001EE E4               [12] 1523 	clr	a
      0001EF 08               [12] 1524 	inc	r0
      0001F0 36               [12] 1525 	addc	a,@r0
      0001F1 FE               [12] 1526 	mov	r6,a
      0001F2 08               [12] 1527 	inc	r0
      0001F3 86 07            [24] 1528 	mov	ar7,@r0
      0001F5 C0 04            [24] 1529 	push	ar4
      0001F7 C0 03            [24] 1530 	push	ar3
      0001F9 C0 05            [24] 1531 	push	ar5
      0001FB C0 06            [24] 1532 	push	ar6
      0001FD C0 07            [24] 1533 	push	ar7
      0001FF E5 81            [12] 1534 	mov	a,sp
      000201 24 F8            [12] 1535 	add	a,#0xf8
      000203 F8               [12] 1536 	mov	r0,a
      000204 86 82            [24] 1537 	mov	dpl,@r0
      000206 08               [12] 1538 	inc	r0
      000207 86 83            [24] 1539 	mov	dph,@r0
      000209 08               [12] 1540 	inc	r0
      00020A 86 F0            [24] 1541 	mov	b,@r0
      00020C 78r8F            [12] 1542 	mov	r0,#_set_timer
      00020E 79s00            [12] 1543 	mov	r1,#(_set_timer >> 8)
      000210 7As00            [12] 1544 	mov	r2,#(_set_timer >> 16)
      000212 12r00r00         [24] 1545 	lcall	__sdcc_banked_call
      000215 E5 81            [12] 1546 	mov	a,sp
      000217 24 FB            [12] 1547 	add	a,#0xfb
                                   1548 ;	/opt/contiki/core/net/rime/trickle.c:120: c->duplicates = 0;
      000219 F5 81            [12] 1549 	mov	sp,a
      00021B 24 FD            [12] 1550 	add	a,#0xfd
      00021D F8               [12] 1551 	mov	r0,a
      00021E 74 5D            [12] 1552 	mov	a,#0x5D
      000220 26               [12] 1553 	add	a,@r0
      000221 FD               [12] 1554 	mov	r5,a
      000222 E4               [12] 1555 	clr	a
      000223 08               [12] 1556 	inc	r0
      000224 36               [12] 1557 	addc	a,@r0
      000225 FE               [12] 1558 	mov	r6,a
      000226 08               [12] 1559 	inc	r0
      000227 86 07            [24] 1560 	mov	ar7,@r0
      000229 8D 82            [24] 1561 	mov	dpl,r5
      00022B 8E 83            [24] 1562 	mov	dph,r6
      00022D 8F F0            [24] 1563 	mov	b,r7
      00022F E4               [12] 1564 	clr	a
      000230 12r00r00         [24] 1565 	lcall	__gptrput
                                   1566 ;	/opt/contiki/core/net/rime/trickle.c:121: PT_YIELD(&c->pt); /* Wait until listen timeout */
      000233 A8 81            [24] 1567 	mov	r0,sp
      000235 76 00            [12] 1568 	mov	@r0,#0x00
      000237 E5 81            [12] 1569 	mov	a,sp
      000239 24 FD            [12] 1570 	add	a,#0xfd
      00023B F8               [12] 1571 	mov	r0,a
      00023C 74 54            [12] 1572 	mov	a,#0x54
      00023E 26               [12] 1573 	add	a,@r0
      00023F FD               [12] 1574 	mov	r5,a
      000240 E4               [12] 1575 	clr	a
      000241 08               [12] 1576 	inc	r0
      000242 36               [12] 1577 	addc	a,@r0
      000243 FE               [12] 1578 	mov	r6,a
      000244 08               [12] 1579 	inc	r0
      000245 86 07            [24] 1580 	mov	ar7,@r0
      000247 8D 82            [24] 1581 	mov	dpl,r5
      000249 8E 83            [24] 1582 	mov	dph,r6
      00024B 8F F0            [24] 1583 	mov	b,r7
      00024D 74 79            [12] 1584 	mov	a,#0x79
      00024F 12r00r00         [24] 1585 	lcall	__gptrput
      000252 A3               [24] 1586 	inc	dptr
      000253 E4               [12] 1587 	clr	a
      000254 12r00r00         [24] 1588 	lcall	__gptrput
      000257                       1589 00102$:
      000257 A8 81            [24] 1590 	mov	r0,sp
      000259 E6               [12] 1591 	mov	a,@r0
      00025A 70 06            [24] 1592 	jnz	00106$
      00025C 90 00 01         [24] 1593 	mov	dptr,#0x0001
      00025F 02r03r0C         [24] 1594 	ljmp	00122$
      000262                       1595 00106$:
                                   1596 ;	/opt/contiki/core/net/rime/trickle.c:122: if(c->duplicates < DUPLICATE_THRESHOLD) {
      000262 E5 81            [12] 1597 	mov	a,sp
      000264 24 FD            [12] 1598 	add	a,#0xfd
      000266 F8               [12] 1599 	mov	r0,a
      000267 74 5D            [12] 1600 	mov	a,#0x5D
      000269 26               [12] 1601 	add	a,@r0
      00026A FD               [12] 1602 	mov	r5,a
      00026B E4               [12] 1603 	clr	a
      00026C 08               [12] 1604 	inc	r0
      00026D 36               [12] 1605 	addc	a,@r0
      00026E FE               [12] 1606 	mov	r6,a
      00026F 08               [12] 1607 	inc	r0
      000270 86 07            [24] 1608 	mov	ar7,@r0
      000272 8D 82            [24] 1609 	mov	dpl,r5
      000274 8E 83            [24] 1610 	mov	dph,r6
      000276 8F F0            [24] 1611 	mov	b,r7
      000278 12r00r00         [24] 1612 	lcall	__gptrget
      00027B FD               [12] 1613 	mov	r5,a
      00027C BD 01 00         [24] 1614 	cjne	r5,#0x01,00154$
      00027F                       1615 00154$:
      00027F 50 1C            [24] 1616 	jnc	00113$
                                   1617 ;	/opt/contiki/core/net/rime/trickle.c:123: send(c);
      000281 E5 81            [12] 1618 	mov	a,sp
      000283 24 FD            [12] 1619 	add	a,#0xfd
      000285 F8               [12] 1620 	mov	r0,a
      000286 86 05            [24] 1621 	mov	ar5,@r0
      000288 08               [12] 1622 	inc	r0
      000289 86 06            [24] 1623 	mov	ar6,@r0
      00028B 08               [12] 1624 	inc	r0
      00028C 86 07            [24] 1625 	mov	ar7,@r0
      00028E 8D 82            [24] 1626 	mov	dpl,r5
      000290 8E 83            [24] 1627 	mov	dph,r6
      000292 8F F0            [24] 1628 	mov	b,r7
      000294 78r00            [12] 1629 	mov	r0,#_send
      000296 79s00            [12] 1630 	mov	r1,#(_send >> 8)
      000298 7As00            [12] 1631 	mov	r2,#(_send >> 16)
      00029A 12r00r00         [24] 1632 	lcall	__sdcc_banked_call
                                   1633 ;	/opt/contiki/core/net/rime/trickle.c:125: PT_YIELD(&c->pt); /* Wait until interval timer expired. */
      00029D                       1634 00113$:
      00029D A8 81            [24] 1635 	mov	r0,sp
      00029F 76 00            [12] 1636 	mov	@r0,#0x00
      0002A1 E5 81            [12] 1637 	mov	a,sp
      0002A3 24 FD            [12] 1638 	add	a,#0xfd
      0002A5 F8               [12] 1639 	mov	r0,a
      0002A6 74 54            [12] 1640 	mov	a,#0x54
      0002A8 26               [12] 1641 	add	a,@r0
      0002A9 FD               [12] 1642 	mov	r5,a
      0002AA E4               [12] 1643 	clr	a
      0002AB 08               [12] 1644 	inc	r0
      0002AC 36               [12] 1645 	addc	a,@r0
      0002AD FE               [12] 1646 	mov	r6,a
      0002AE 08               [12] 1647 	inc	r0
      0002AF 86 07            [24] 1648 	mov	ar7,@r0
      0002B1 8D 82            [24] 1649 	mov	dpl,r5
      0002B3 8E 83            [24] 1650 	mov	dph,r6
      0002B5 8F F0            [24] 1651 	mov	b,r7
      0002B7 74 7D            [12] 1652 	mov	a,#0x7D
      0002B9 12r00r00         [24] 1653 	lcall	__gptrput
      0002BC A3               [24] 1654 	inc	dptr
      0002BD E4               [12] 1655 	clr	a
      0002BE 12r00r00         [24] 1656 	lcall	__gptrput
      0002C1                       1657 00110$:
      0002C1 A8 81            [24] 1658 	mov	r0,sp
      0002C3 E6               [12] 1659 	mov	a,@r0
      0002C4 70 05            [24] 1660 	jnz	00114$
      0002C6 90 00 01         [24] 1661 	mov	dptr,#0x0001
      0002C9 80 41            [24] 1662 	sjmp	00122$
      0002CB                       1663 00114$:
                                   1664 ;	/opt/contiki/core/net/rime/trickle.c:126: if(c->interval_scaling < INTERVAL_MAX) {
      0002CB E5 81            [12] 1665 	mov	a,sp
      0002CD 24 FD            [12] 1666 	add	a,#0xfd
      0002CF F8               [12] 1667 	mov	r0,a
      0002D0 74 5C            [12] 1668 	mov	a,#0x5C
      0002D2 26               [12] 1669 	add	a,@r0
      0002D3 FE               [12] 1670 	mov	r6,a
      0002D4 E4               [12] 1671 	clr	a
      0002D5 08               [12] 1672 	inc	r0
      0002D6 36               [12] 1673 	addc	a,@r0
      0002D7 FD               [12] 1674 	mov	r5,a
      0002D8 08               [12] 1675 	inc	r0
      0002D9 86 04            [24] 1676 	mov	ar4,@r0
      0002DB 8E 82            [24] 1677 	mov	dpl,r6
      0002DD 8D 83            [24] 1678 	mov	dph,r5
      0002DF 8C F0            [24] 1679 	mov	b,r4
      0002E1 12r00r00         [24] 1680 	lcall	__gptrget
      0002E4 FF               [12] 1681 	mov	r7,a
      0002E5 BF 04 00         [24] 1682 	cjne	r7,#0x04,00157$
      0002E8                       1683 00157$:
      0002E8 40 03            [24] 1684 	jc	00158$
      0002EA 02r01r1A         [24] 1685 	ljmp	00119$
      0002ED                       1686 00158$:
                                   1687 ;	/opt/contiki/core/net/rime/trickle.c:127: c->interval_scaling++;
      0002ED 0F               [12] 1688 	inc	r7
      0002EE 8E 82            [24] 1689 	mov	dpl,r6
      0002F0 8D 83            [24] 1690 	mov	dph,r5
      0002F2 8C F0            [24] 1691 	mov	b,r4
      0002F4 EF               [12] 1692 	mov	a,r7
      0002F5 12r00r00         [24] 1693 	lcall	__gptrput
      0002F8 02r01r1A         [24] 1694 	ljmp	00119$
                                   1695 ;	/opt/contiki/core/net/rime/trickle.c:131: PT_END(&c->pt);
      0002FB                       1696 00121$:
      0002FB 8A 82            [24] 1697 	mov	dpl,r2
      0002FD 8B 83            [24] 1698 	mov	dph,r3
      0002FF 8C F0            [24] 1699 	mov	b,r4
      000301 E4               [12] 1700 	clr	a
      000302 12r00r00         [24] 1701 	lcall	__gptrput
      000305 A3               [24] 1702 	inc	dptr
      000306 12r00r00         [24] 1703 	lcall	__gptrput
      000309 90 00 03         [24] 1704 	mov	dptr,#0x0003
      00030C                       1705 00122$:
      00030C E5 81            [12] 1706 	mov	a,sp
      00030E 24 FC            [12] 1707 	add	a,#0xFC
      000310 F5 81            [12] 1708 	mov	sp,a
      000312 02r00r00         [24] 1709 	ljmp	__sdcc_banked_ret
                                   1710 ;------------------------------------------------------------
                                   1711 ;Allocation info for local variables in function 'recv'
                                   1712 ;------------------------------------------------------------
                                   1713 ;from                      Allocated to stack - sp -13
                                   1714 ;bc                        Allocated to registers r5 r6 r7 
                                   1715 ;c                         Allocated to stack - sp -4
                                   1716 ;seqno                     Allocated to stack - sp -1
                                   1717 ;sloc0                     Allocated to stack - sp +1
                                   1718 ;sloc1                     Allocated to stack - sp -7
                                   1719 ;------------------------------------------------------------
                                   1720 ;	/opt/contiki/core/net/rime/trickle.c:135: recv(struct broadcast_conn *bc, const linkaddr_t *from)
                                   1721 ;	-----------------------------------------
                                   1722 ;	 function recv
                                   1723 ;	-----------------------------------------
      000315                       1724 _recv:
      000315 E5 81            [12] 1725 	mov	a,sp
      000317 24 08            [12] 1726 	add	a,#0x08
      000319 F5 81            [12] 1727 	mov	sp,a
      00031B AD 82            [24] 1728 	mov	r5,dpl
      00031D AE 83            [24] 1729 	mov	r6,dph
      00031F AF F0            [24] 1730 	mov	r7,b
                                   1731 ;	/opt/contiki/core/net/rime/trickle.c:137: struct trickle_conn *c = (struct trickle_conn *)bc;
      000321 E5 81            [12] 1732 	mov	a,sp
      000323 24 FC            [12] 1733 	add	a,#0xfc
      000325 F8               [12] 1734 	mov	r0,a
      000326 A6 05            [24] 1735 	mov	@r0,ar5
      000328 08               [12] 1736 	inc	r0
      000329 A6 06            [24] 1737 	mov	@r0,ar6
      00032B 08               [12] 1738 	inc	r0
      00032C A6 07            [24] 1739 	mov	@r0,ar7
                                   1740 ;	/opt/contiki/core/net/rime/trickle.c:138: uint16_t seqno = packetbuf_attr(PACKETBUF_ATTR_EPACKET_ID);
      00032E 75 82 17         [24] 1741 	mov	dpl,#0x17
      000331 78r00            [12] 1742 	mov	r0,#_packetbuf_attr
      000333 79s00            [12] 1743 	mov	r1,#(_packetbuf_attr >> 8)
      000335 7As00            [12] 1744 	mov	r2,#(_packetbuf_attr >> 16)
      000337 12r00r00         [24] 1745 	lcall	__sdcc_banked_call
      00033A AB 82            [24] 1746 	mov	r3,dpl
      00033C AC 83            [24] 1747 	mov	r4,dph
      00033E A8 81            [24] 1748 	mov	r0,sp
      000340 18               [12] 1749 	dec	r0
      000341 A6 03            [24] 1750 	mov	@r0,ar3
      000343 08               [12] 1751 	inc	r0
      000344 A6 04            [24] 1752 	mov	@r0,ar4
                                   1753 ;	/opt/contiki/core/net/rime/trickle.c:148: if(seqno == c->seqno) {
      000346 E5 81            [12] 1754 	mov	a,sp
      000348 24 FC            [12] 1755 	add	a,#0xfc
      00034A F8               [12] 1756 	mov	r0,a
      00034B 74 5B            [12] 1757 	mov	a,#0x5B
      00034D 26               [12] 1758 	add	a,@r0
      00034E FA               [12] 1759 	mov	r2,a
      00034F E4               [12] 1760 	clr	a
      000350 08               [12] 1761 	inc	r0
      000351 36               [12] 1762 	addc	a,@r0
      000352 FB               [12] 1763 	mov	r3,a
      000353 08               [12] 1764 	inc	r0
      000354 86 04            [24] 1765 	mov	ar4,@r0
      000356 8A 82            [24] 1766 	mov	dpl,r2
      000358 8B 83            [24] 1767 	mov	dph,r3
      00035A 8C F0            [24] 1768 	mov	b,r4
      00035C 12r00r00         [24] 1769 	lcall	__gptrget
      00035F FD               [12] 1770 	mov	r5,a
      000360 FE               [12] 1771 	mov	r6,a
      000361 7F 00            [12] 1772 	mov	r7,#0x00
      000363 A8 81            [24] 1773 	mov	r0,sp
      000365 18               [12] 1774 	dec	r0
      000366 E6               [12] 1775 	mov	a,@r0
      000367 B5 06 07         [24] 1776 	cjne	a,ar6,00120$
      00036A 08               [12] 1777 	inc	r0
      00036B E6               [12] 1778 	mov	a,@r0
      00036C B5 07 02         [24] 1779 	cjne	a,ar7,00120$
      00036F 80 02            [24] 1780 	sjmp	00121$
      000371                       1781 00120$:
      000371 80 28            [24] 1782 	sjmp	00107$
      000373                       1783 00121$:
                                   1784 ;	/opt/contiki/core/net/rime/trickle.c:150: ++c->duplicates;
      000373 E5 81            [12] 1785 	mov	a,sp
      000375 24 FC            [12] 1786 	add	a,#0xfc
      000377 F8               [12] 1787 	mov	r0,a
      000378 74 5D            [12] 1788 	mov	a,#0x5D
      00037A 26               [12] 1789 	add	a,@r0
      00037B FE               [12] 1790 	mov	r6,a
      00037C E4               [12] 1791 	clr	a
      00037D 08               [12] 1792 	inc	r0
      00037E 36               [12] 1793 	addc	a,@r0
      00037F FD               [12] 1794 	mov	r5,a
      000380 08               [12] 1795 	inc	r0
      000381 86 04            [24] 1796 	mov	ar4,@r0
      000383 8E 82            [24] 1797 	mov	dpl,r6
      000385 8D 83            [24] 1798 	mov	dph,r5
      000387 8C F0            [24] 1799 	mov	b,r4
      000389 12r00r00         [24] 1800 	lcall	__gptrget
      00038C FF               [12] 1801 	mov	r7,a
      00038D 0F               [12] 1802 	inc	r7
      00038E 8E 82            [24] 1803 	mov	dpl,r6
      000390 8D 83            [24] 1804 	mov	dph,r5
      000392 8C F0            [24] 1805 	mov	b,r4
      000394 EF               [12] 1806 	mov	a,r7
      000395 12r00r00         [24] 1807 	lcall	__gptrput
      000398 02r05rA4         [24] 1808 	ljmp	00109$
      00039B                       1809 00107$:
                                   1810 ;	/opt/contiki/core/net/rime/trickle.c:151: } else if(SEQNO_LT(seqno, c->seqno)) {
      00039B A8 81            [24] 1811 	mov	r0,sp
      00039D 18               [12] 1812 	dec	r0
      00039E E6               [12] 1813 	mov	a,@r0
      00039F FF               [12] 1814 	mov	r7,a
      0003A0 C3               [12] 1815 	clr	c
      0003A1 9D               [12] 1816 	subb	a,r5
      0003A2 FE               [12] 1817 	mov	r6,a
      0003A3 30 E7 39         [24] 1818 	jnb	acc.7,00104$
                                   1819 ;	/opt/contiki/core/net/rime/trickle.c:152: c->interval_scaling = 0;
      0003A6 E5 81            [12] 1820 	mov	a,sp
      0003A8 24 FC            [12] 1821 	add	a,#0xfc
      0003AA F8               [12] 1822 	mov	r0,a
      0003AB 74 5C            [12] 1823 	mov	a,#0x5C
      0003AD 26               [12] 1824 	add	a,@r0
      0003AE FF               [12] 1825 	mov	r7,a
      0003AF E4               [12] 1826 	clr	a
      0003B0 08               [12] 1827 	inc	r0
      0003B1 36               [12] 1828 	addc	a,@r0
      0003B2 FE               [12] 1829 	mov	r6,a
      0003B3 08               [12] 1830 	inc	r0
      0003B4 86 05            [24] 1831 	mov	ar5,@r0
      0003B6 8F 82            [24] 1832 	mov	dpl,r7
      0003B8 8E 83            [24] 1833 	mov	dph,r6
      0003BA 8D F0            [24] 1834 	mov	b,r5
      0003BC E4               [12] 1835 	clr	a
      0003BD 12r00r00         [24] 1836 	lcall	__gptrput
                                   1837 ;	/opt/contiki/core/net/rime/trickle.c:153: send(c);
      0003C0 E5 81            [12] 1838 	mov	a,sp
      0003C2 24 FC            [12] 1839 	add	a,#0xfc
      0003C4 F8               [12] 1840 	mov	r0,a
      0003C5 86 05            [24] 1841 	mov	ar5,@r0
      0003C7 08               [12] 1842 	inc	r0
      0003C8 86 06            [24] 1843 	mov	ar6,@r0
      0003CA 08               [12] 1844 	inc	r0
      0003CB 86 07            [24] 1845 	mov	ar7,@r0
      0003CD 8D 82            [24] 1846 	mov	dpl,r5
      0003CF 8E 83            [24] 1847 	mov	dph,r6
      0003D1 8F F0            [24] 1848 	mov	b,r7
      0003D3 78r00            [12] 1849 	mov	r0,#_send
      0003D5 79s00            [12] 1850 	mov	r1,#(_send >> 8)
      0003D7 7As00            [12] 1851 	mov	r2,#(_send >> 16)
      0003D9 12r00r00         [24] 1852 	lcall	__sdcc_banked_call
      0003DC 02r05rA4         [24] 1853 	ljmp	00109$
      0003DF                       1854 00104$:
                                   1855 ;	/opt/contiki/core/net/rime/trickle.c:158: c->seqno = seqno;
      0003DF 8A 82            [24] 1856 	mov	dpl,r2
      0003E1 8B 83            [24] 1857 	mov	dph,r3
      0003E3 8C F0            [24] 1858 	mov	b,r4
      0003E5 EF               [12] 1859 	mov	a,r7
      0003E6 12r00r00         [24] 1860 	lcall	__gptrput
                                   1861 ;	/opt/contiki/core/net/rime/trickle.c:160: if(c->q != NULL) {
      0003E9 E5 81            [12] 1862 	mov	a,sp
      0003EB 24 FC            [12] 1863 	add	a,#0xfc
      0003ED F8               [12] 1864 	mov	r0,a
      0003EE 74 56            [12] 1865 	mov	a,#0x56
      0003F0 26               [12] 1866 	add	a,@r0
      0003F1 FD               [12] 1867 	mov	r5,a
      0003F2 E4               [12] 1868 	clr	a
      0003F3 08               [12] 1869 	inc	r0
      0003F4 36               [12] 1870 	addc	a,@r0
      0003F5 FE               [12] 1871 	mov	r6,a
      0003F6 08               [12] 1872 	inc	r0
      0003F7 86 07            [24] 1873 	mov	ar7,@r0
      0003F9 8D 82            [24] 1874 	mov	dpl,r5
      0003FB 8E 83            [24] 1875 	mov	dph,r6
      0003FD 8F F0            [24] 1876 	mov	b,r7
      0003FF 12r00r00         [24] 1877 	lcall	__gptrget
      000402 FA               [12] 1878 	mov	r2,a
      000403 A3               [24] 1879 	inc	dptr
      000404 12r00r00         [24] 1880 	lcall	__gptrget
      000407 FB               [12] 1881 	mov	r3,a
      000408 A3               [24] 1882 	inc	dptr
      000409 12r00r00         [24] 1883 	lcall	__gptrget
      00040C FC               [12] 1884 	mov	r4,a
      00040D EA               [12] 1885 	mov	a,r2
      00040E 4B               [12] 1886 	orl	a,r3
      00040F 60 1B            [24] 1887 	jz	00102$
                                   1888 ;	/opt/contiki/core/net/rime/trickle.c:161: queuebuf_free(c->q);
      000411 8A 82            [24] 1889 	mov	dpl,r2
      000413 8B 83            [24] 1890 	mov	dph,r3
      000415 8C F0            [24] 1891 	mov	b,r4
      000417 C0 07            [24] 1892 	push	ar7
      000419 C0 06            [24] 1893 	push	ar6
      00041B C0 05            [24] 1894 	push	ar5
      00041D 78r00            [12] 1895 	mov	r0,#_queuebuf_free
      00041F 79s00            [12] 1896 	mov	r1,#(_queuebuf_free >> 8)
      000421 7As00            [12] 1897 	mov	r2,#(_queuebuf_free >> 16)
      000423 12r00r00         [24] 1898 	lcall	__sdcc_banked_call
      000426 D0 05            [24] 1899 	pop	ar5
      000428 D0 06            [24] 1900 	pop	ar6
      00042A D0 07            [24] 1901 	pop	ar7
      00042C                       1902 00102$:
                                   1903 ;	/opt/contiki/core/net/rime/trickle.c:163: c->q = queuebuf_new_from_packetbuf();
      00042C C0 07            [24] 1904 	push	ar7
      00042E C0 06            [24] 1905 	push	ar6
      000430 C0 05            [24] 1906 	push	ar5
      000432 78r00            [12] 1907 	mov	r0,#_queuebuf_new_from_packetbuf
      000434 79s00            [12] 1908 	mov	r1,#(_queuebuf_new_from_packetbuf >> 8)
      000436 7As00            [12] 1909 	mov	r2,#(_queuebuf_new_from_packetbuf >> 16)
      000438 12r00r00         [24] 1910 	lcall	__sdcc_banked_call
      00043B AA 82            [24] 1911 	mov	r2,dpl
      00043D AB 83            [24] 1912 	mov	r3,dph
      00043F AC F0            [24] 1913 	mov	r4,b
      000441 D0 05            [24] 1914 	pop	ar5
      000443 D0 06            [24] 1915 	pop	ar6
      000445 D0 07            [24] 1916 	pop	ar7
      000447 8D 82            [24] 1917 	mov	dpl,r5
      000449 8E 83            [24] 1918 	mov	dph,r6
      00044B 8F F0            [24] 1919 	mov	b,r7
      00044D EA               [12] 1920 	mov	a,r2
      00044E 12r00r00         [24] 1921 	lcall	__gptrput
      000451 A3               [24] 1922 	inc	dptr
      000452 EB               [12] 1923 	mov	a,r3
      000453 12r00r00         [24] 1924 	lcall	__gptrput
      000456 A3               [24] 1925 	inc	dptr
      000457 EC               [12] 1926 	mov	a,r4
      000458 12r00r00         [24] 1927 	lcall	__gptrput
                                   1928 ;	/opt/contiki/core/net/rime/trickle.c:164: c->interval_scaling = 0;
      00045B E5 81            [12] 1929 	mov	a,sp
      00045D 24 FC            [12] 1930 	add	a,#0xfc
      00045F F8               [12] 1931 	mov	r0,a
      000460 74 5C            [12] 1932 	mov	a,#0x5C
      000462 26               [12] 1933 	add	a,@r0
      000463 FD               [12] 1934 	mov	r5,a
      000464 E4               [12] 1935 	clr	a
      000465 08               [12] 1936 	inc	r0
      000466 36               [12] 1937 	addc	a,@r0
      000467 FE               [12] 1938 	mov	r6,a
      000468 08               [12] 1939 	inc	r0
      000469 86 07            [24] 1940 	mov	ar7,@r0
      00046B 8D 82            [24] 1941 	mov	dpl,r5
      00046D 8E 83            [24] 1942 	mov	dph,r6
      00046F 8F F0            [24] 1943 	mov	b,r7
      000471 E4               [12] 1944 	clr	a
      000472 12r00r00         [24] 1945 	lcall	__gptrput
                                   1946 ;	/opt/contiki/core/net/rime/trickle.c:165: reset_interval(c);
      000475 E5 81            [12] 1947 	mov	a,sp
      000477 24 FC            [12] 1948 	add	a,#0xfc
      000479 F8               [12] 1949 	mov	r0,a
      00047A 86 82            [24] 1950 	mov	dpl,@r0
      00047C 08               [12] 1951 	inc	r0
      00047D 86 83            [24] 1952 	mov	dph,@r0
      00047F 08               [12] 1953 	inc	r0
      000480 86 F0            [24] 1954 	mov	b,@r0
      000482 78r60            [12] 1955 	mov	r0,#_reset_interval
      000484 79s00            [12] 1956 	mov	r1,#(_reset_interval >> 8)
      000486 7As00            [12] 1957 	mov	r2,#(_reset_interval >> 16)
      000488 12r00r00         [24] 1958 	lcall	__sdcc_banked_call
                                   1959 ;	/opt/contiki/core/net/rime/trickle.c:167: send, c);
      00048B E5 81            [12] 1960 	mov	a,sp
      00048D 24 FC            [12] 1961 	add	a,#0xfc
      00048F F8               [12] 1962 	mov	r0,a
      000490 86 05            [24] 1963 	mov	ar5,@r0
      000492 08               [12] 1964 	inc	r0
      000493 86 06            [24] 1965 	mov	ar6,@r0
      000495 08               [12] 1966 	inc	r0
      000496 86 07            [24] 1967 	mov	ar7,@r0
                                   1968 ;	/opt/contiki/core/net/rime/trickle.c:166: ctimer_set(&c->first_transmission_timer, random_rand() % c->interval,
      000498 C0 07            [24] 1969 	push	ar7
      00049A C0 06            [24] 1970 	push	ar6
      00049C C0 05            [24] 1971 	push	ar5
      00049E 78r00            [12] 1972 	mov	r0,#_random_rand
      0004A0 79s00            [12] 1973 	mov	r1,#(_random_rand >> 8)
      0004A2 7As00            [12] 1974 	mov	r2,#(_random_rand >> 16)
      0004A4 12r00r00         [24] 1975 	lcall	__sdcc_banked_call
      0004A7 C8               [12] 1976 	xch	a,r0
      0004A8 E5 81            [12] 1977 	mov	a,sp
      0004AA 24 F6            [12] 1978 	add	a,#0xf6
      0004AC C8               [12] 1979 	xch	a,r0
      0004AD A6 82            [24] 1980 	mov	@r0,dpl
      0004AF 08               [12] 1981 	inc	r0
      0004B0 A6 83            [24] 1982 	mov	@r0,dph
      0004B2 D0 05            [24] 1983 	pop	ar5
      0004B4 D0 06            [24] 1984 	pop	ar6
      0004B6 D0 07            [24] 1985 	pop	ar7
      0004B8 E5 81            [12] 1986 	mov	a,sp
      0004BA 24 FC            [12] 1987 	add	a,#0xfc
      0004BC F8               [12] 1988 	mov	r0,a
      0004BD 74 59            [12] 1989 	mov	a,#0x59
      0004BF 26               [12] 1990 	add	a,@r0
      0004C0 FA               [12] 1991 	mov	r2,a
      0004C1 E4               [12] 1992 	clr	a
      0004C2 08               [12] 1993 	inc	r0
      0004C3 36               [12] 1994 	addc	a,@r0
      0004C4 FB               [12] 1995 	mov	r3,a
      0004C5 08               [12] 1996 	inc	r0
      0004C6 86 04            [24] 1997 	mov	ar4,@r0
      0004C8 8A 82            [24] 1998 	mov	dpl,r2
      0004CA 8B 83            [24] 1999 	mov	dph,r3
      0004CC 8C F0            [24] 2000 	mov	b,r4
      0004CE 12r00r00         [24] 2001 	lcall	__gptrget
      0004D1 FA               [12] 2002 	mov	r2,a
      0004D2 A3               [24] 2003 	inc	dptr
      0004D3 12r00r00         [24] 2004 	lcall	__gptrget
      0004D6 FB               [12] 2005 	mov	r3,a
      0004D7 C0 07            [24] 2006 	push	ar7
      0004D9 C0 06            [24] 2007 	push	ar6
      0004DB C0 05            [24] 2008 	push	ar5
      0004DD C0 02            [24] 2009 	push	ar2
      0004DF C0 03            [24] 2010 	push	ar3
      0004E1 E5 81            [12] 2011 	mov	a,sp
      0004E3 24 F4            [12] 2012 	add	a,#0xf4
      0004E5 F8               [12] 2013 	mov	r0,a
      0004E6 86 82            [24] 2014 	mov	dpl,@r0
      0004E8 08               [12] 2015 	inc	r0
      0004E9 86 83            [24] 2016 	mov	dph,@r0
      0004EB 12r00r00         [24] 2017 	lcall	__moduint
      0004EE C8               [12] 2018 	xch	a,r0
      0004EF E5 81            [12] 2019 	mov	a,sp
      0004F1 24 F4            [12] 2020 	add	a,#0xf4
      0004F3 C8               [12] 2021 	xch	a,r0
      0004F4 A6 82            [24] 2022 	mov	@r0,dpl
      0004F6 08               [12] 2023 	inc	r0
      0004F7 A6 83            [24] 2024 	mov	@r0,dph
      0004F9 15 81            [12] 2025 	dec	sp
      0004FB 15 81            [12] 2026 	dec	sp
      0004FD D0 05            [24] 2027 	pop	ar5
      0004FF D0 06            [24] 2028 	pop	ar6
      000501 D0 07            [24] 2029 	pop	ar7
      000503 E5 81            [12] 2030 	mov	a,sp
      000505 24 FC            [12] 2031 	add	a,#0xfc
      000507 F8               [12] 2032 	mov	r0,a
      000508 74 3E            [12] 2033 	mov	a,#0x3E
      00050A 26               [12] 2034 	add	a,@r0
      00050B FA               [12] 2035 	mov	r2,a
      00050C E4               [12] 2036 	clr	a
      00050D 08               [12] 2037 	inc	r0
      00050E 36               [12] 2038 	addc	a,@r0
      00050F FB               [12] 2039 	mov	r3,a
      000510 08               [12] 2040 	inc	r0
      000511 86 04            [24] 2041 	mov	ar4,@r0
      000513 C0 05            [24] 2042 	push	ar5
      000515 C0 06            [24] 2043 	push	ar6
      000517 C0 07            [24] 2044 	push	ar7
      000519 74r00            [12] 2045 	mov	a,#_send
      00051B C0 E0            [24] 2046 	push	acc
      00051D 74s00            [12] 2047 	mov	a,#(_send >> 8)
      00051F C0 E0            [24] 2048 	push	acc
      000521 74s00            [12] 2049 	mov	a,#(_send >> 16)
      000523 C0 E0            [24] 2050 	push	acc
      000525 E5 81            [12] 2051 	mov	a,sp
      000527 24 F3            [12] 2052 	add	a,#0xf3
      000529 F8               [12] 2053 	mov	r0,a
      00052A E6               [12] 2054 	mov	a,@r0
      00052B C0 E0            [24] 2055 	push	acc
      00052D 08               [12] 2056 	inc	r0
      00052E E6               [12] 2057 	mov	a,@r0
      00052F C0 E0            [24] 2058 	push	acc
      000531 8A 82            [24] 2059 	mov	dpl,r2
      000533 8B 83            [24] 2060 	mov	dph,r3
      000535 8C F0            [24] 2061 	mov	b,r4
      000537 78r00            [12] 2062 	mov	r0,#_ctimer_set
      000539 79s00            [12] 2063 	mov	r1,#(_ctimer_set >> 8)
      00053B 7As00            [12] 2064 	mov	r2,#(_ctimer_set >> 16)
      00053D 12r00r00         [24] 2065 	lcall	__sdcc_banked_call
      000540 E5 81            [12] 2066 	mov	a,sp
      000542 24 F8            [12] 2067 	add	a,#0xf8
                                   2068 ;	/opt/contiki/core/net/rime/trickle.c:168: c->cb->recv(c);
      000544 F5 81            [12] 2069 	mov	sp,a
      000546 24 FC            [12] 2070 	add	a,#0xfc
      000548 F8               [12] 2071 	mov	r0,a
      000549 74 0F            [12] 2072 	mov	a,#0x0F
      00054B 26               [12] 2073 	add	a,@r0
      00054C FD               [12] 2074 	mov	r5,a
      00054D E4               [12] 2075 	clr	a
      00054E 08               [12] 2076 	inc	r0
      00054F 36               [12] 2077 	addc	a,@r0
      000550 FE               [12] 2078 	mov	r6,a
      000551 08               [12] 2079 	inc	r0
      000552 86 07            [24] 2080 	mov	ar7,@r0
      000554 8D 82            [24] 2081 	mov	dpl,r5
      000556 8E 83            [24] 2082 	mov	dph,r6
      000558 8F F0            [24] 2083 	mov	b,r7
      00055A 12r00r00         [24] 2084 	lcall	__gptrget
      00055D FD               [12] 2085 	mov	r5,a
      00055E A3               [24] 2086 	inc	dptr
      00055F 12r00r00         [24] 2087 	lcall	__gptrget
      000562 FE               [12] 2088 	mov	r6,a
      000563 A3               [24] 2089 	inc	dptr
      000564 12r00r00         [24] 2090 	lcall	__gptrget
      000567 FF               [12] 2091 	mov	r7,a
      000568 8D 82            [24] 2092 	mov	dpl,r5
      00056A 8E 83            [24] 2093 	mov	dph,r6
      00056C 8F F0            [24] 2094 	mov	b,r7
      00056E 12r00r00         [24] 2095 	lcall	__gptrget
      000571 FD               [12] 2096 	mov	r5,a
      000572 A3               [24] 2097 	inc	dptr
      000573 12r00r00         [24] 2098 	lcall	__gptrget
      000576 FE               [12] 2099 	mov	r6,a
      000577 A3               [24] 2100 	inc	dptr
      000578 12r00r00         [24] 2101 	lcall	__gptrget
      00057B FF               [12] 2102 	mov	r7,a
      00057C C0 07            [24] 2103 	push	ar7
      00057E C0 06            [24] 2104 	push	ar6
      000580 C0 05            [24] 2105 	push	ar5
      000582 C0 05            [24] 2106 	push	ar5
      000584 C0 06            [24] 2107 	push	ar6
      000586 C0 07            [24] 2108 	push	ar7
      000588 E5 81            [12] 2109 	mov	a,sp
      00058A 24 F6            [12] 2110 	add	a,#0xf6
      00058C F8               [12] 2111 	mov	r0,a
      00058D 86 82            [24] 2112 	mov	dpl,@r0
      00058F 08               [12] 2113 	inc	r0
      000590 86 83            [24] 2114 	mov	dph,@r0
      000592 08               [12] 2115 	inc	r0
      000593 86 F0            [24] 2116 	mov	b,@r0
      000595 D0 02            [24] 2117 	pop	ar2
      000597 D0 01            [24] 2118 	pop	ar1
      000599 D0 00            [24] 2119 	pop	ar0
      00059B 12r00r00         [24] 2120 	lcall	__sdcc_banked_call
      00059E D0 05            [24] 2121 	pop	ar5
      0005A0 D0 06            [24] 2122 	pop	ar6
      0005A2 D0 07            [24] 2123 	pop	ar7
      0005A4                       2124 00109$:
      0005A4 E5 81            [12] 2125 	mov	a,sp
      0005A6 24 F8            [12] 2126 	add	a,#0xF8
      0005A8 F5 81            [12] 2127 	mov	sp,a
      0005AA 02r00r00         [24] 2128 	ljmp	__sdcc_banked_ret
                                   2129 ;------------------------------------------------------------
                                   2130 ;Allocation info for local variables in function 'trickle_open'
                                   2131 ;------------------------------------------------------------
                                   2132 ;interval                  Allocated to stack - sp -4
                                   2133 ;channel                   Allocated to stack - sp -6
                                   2134 ;cb                        Allocated to stack - sp -9
                                   2135 ;c                         Allocated to registers r5 r6 r7 
                                   2136 ;------------------------------------------------------------
                                   2137 ;	/opt/contiki/core/net/rime/trickle.c:175: trickle_open(struct trickle_conn *c, clock_time_t interval,
                                   2138 ;	-----------------------------------------
                                   2139 ;	 function trickle_open
                                   2140 ;	-----------------------------------------
      0005AD                       2141 _trickle_open:
      0005AD AD 82            [24] 2142 	mov	r5,dpl
      0005AF AE 83            [24] 2143 	mov	r6,dph
      0005B1 AF F0            [24] 2144 	mov	r7,b
                                   2145 ;	/opt/contiki/core/net/rime/trickle.c:178: broadcast_open(&c->c, channel, &bc);
      0005B3 C0 07            [24] 2146 	push	ar7
      0005B5 C0 06            [24] 2147 	push	ar6
      0005B7 C0 05            [24] 2148 	push	ar5
      0005B9 74r06            [12] 2149 	mov	a,#_bc
      0005BB C0 E0            [24] 2150 	push	acc
      0005BD 74s00            [12] 2151 	mov	a,#(_bc >> 8)
      0005BF C0 E0            [24] 2152 	push	acc
      0005C1 74 80            [12] 2153 	mov	a,#0x80
      0005C3 C0 E0            [24] 2154 	push	acc
      0005C5 E5 81            [12] 2155 	mov	a,sp
      0005C7 24 F4            [12] 2156 	add	a,#0xf4
      0005C9 F8               [12] 2157 	mov	r0,a
      0005CA E6               [12] 2158 	mov	a,@r0
      0005CB C0 E0            [24] 2159 	push	acc
      0005CD 08               [12] 2160 	inc	r0
      0005CE E6               [12] 2161 	mov	a,@r0
      0005CF C0 E0            [24] 2162 	push	acc
      0005D1 8D 82            [24] 2163 	mov	dpl,r5
      0005D3 8E 83            [24] 2164 	mov	dph,r6
      0005D5 8F F0            [24] 2165 	mov	b,r7
      0005D7 78r00            [12] 2166 	mov	r0,#_broadcast_open
      0005D9 79s00            [12] 2167 	mov	r1,#(_broadcast_open >> 8)
      0005DB 7As00            [12] 2168 	mov	r2,#(_broadcast_open >> 16)
      0005DD 12r00r00         [24] 2169 	lcall	__sdcc_banked_call
      0005E0 E5 81            [12] 2170 	mov	a,sp
      0005E2 24 FB            [12] 2171 	add	a,#0xfb
      0005E4 F5 81            [12] 2172 	mov	sp,a
      0005E6 D0 05            [24] 2173 	pop	ar5
      0005E8 D0 06            [24] 2174 	pop	ar6
      0005EA D0 07            [24] 2175 	pop	ar7
                                   2176 ;	/opt/contiki/core/net/rime/trickle.c:179: c->cb = cb;
      0005EC 74 0F            [12] 2177 	mov	a,#0x0F
      0005EE 2D               [12] 2178 	add	a,r5
      0005EF FA               [12] 2179 	mov	r2,a
      0005F0 E4               [12] 2180 	clr	a
      0005F1 3E               [12] 2181 	addc	a,r6
      0005F2 FB               [12] 2182 	mov	r3,a
      0005F3 8F 04            [24] 2183 	mov	ar4,r7
      0005F5 8A 82            [24] 2184 	mov	dpl,r2
      0005F7 8B 83            [24] 2185 	mov	dph,r3
      0005F9 8C F0            [24] 2186 	mov	b,r4
      0005FB E5 81            [12] 2187 	mov	a,sp
      0005FD 24 F7            [12] 2188 	add	a,#0xf7
      0005FF F8               [12] 2189 	mov	r0,a
      000600 E6               [12] 2190 	mov	a,@r0
      000601 12r00r00         [24] 2191 	lcall	__gptrput
      000604 A3               [24] 2192 	inc	dptr
      000605 08               [12] 2193 	inc	r0
      000606 E6               [12] 2194 	mov	a,@r0
      000607 12r00r00         [24] 2195 	lcall	__gptrput
      00060A A3               [24] 2196 	inc	dptr
      00060B 08               [12] 2197 	inc	r0
      00060C E6               [12] 2198 	mov	a,@r0
      00060D 12r00r00         [24] 2199 	lcall	__gptrput
                                   2200 ;	/opt/contiki/core/net/rime/trickle.c:180: c->q = NULL;
      000610 74 56            [12] 2201 	mov	a,#0x56
      000612 2D               [12] 2202 	add	a,r5
      000613 FA               [12] 2203 	mov	r2,a
      000614 E4               [12] 2204 	clr	a
      000615 3E               [12] 2205 	addc	a,r6
      000616 FB               [12] 2206 	mov	r3,a
      000617 8F 04            [24] 2207 	mov	ar4,r7
      000619 8A 82            [24] 2208 	mov	dpl,r2
      00061B 8B 83            [24] 2209 	mov	dph,r3
      00061D 8C F0            [24] 2210 	mov	b,r4
      00061F E4               [12] 2211 	clr	a
      000620 12r00r00         [24] 2212 	lcall	__gptrput
      000623 A3               [24] 2213 	inc	dptr
      000624 12r00r00         [24] 2214 	lcall	__gptrput
      000627 A3               [24] 2215 	inc	dptr
      000628 12r00r00         [24] 2216 	lcall	__gptrput
                                   2217 ;	/opt/contiki/core/net/rime/trickle.c:181: c->interval = interval;
      00062B 74 59            [12] 2218 	mov	a,#0x59
      00062D 2D               [12] 2219 	add	a,r5
      00062E FA               [12] 2220 	mov	r2,a
      00062F E4               [12] 2221 	clr	a
      000630 3E               [12] 2222 	addc	a,r6
      000631 FB               [12] 2223 	mov	r3,a
      000632 8F 04            [24] 2224 	mov	ar4,r7
      000634 8A 82            [24] 2225 	mov	dpl,r2
      000636 8B 83            [24] 2226 	mov	dph,r3
      000638 8C F0            [24] 2227 	mov	b,r4
      00063A E5 81            [12] 2228 	mov	a,sp
      00063C 24 FC            [12] 2229 	add	a,#0xfc
      00063E F8               [12] 2230 	mov	r0,a
      00063F E6               [12] 2231 	mov	a,@r0
      000640 12r00r00         [24] 2232 	lcall	__gptrput
      000643 A3               [24] 2233 	inc	dptr
      000644 08               [12] 2234 	inc	r0
      000645 E6               [12] 2235 	mov	a,@r0
      000646 12r00r00         [24] 2236 	lcall	__gptrput
                                   2237 ;	/opt/contiki/core/net/rime/trickle.c:182: c->interval_scaling = 0;
      000649 74 5C            [12] 2238 	mov	a,#0x5C
      00064B 2D               [12] 2239 	add	a,r5
      00064C FD               [12] 2240 	mov	r5,a
      00064D E4               [12] 2241 	clr	a
      00064E 3E               [12] 2242 	addc	a,r6
      00064F FE               [12] 2243 	mov	r6,a
      000650 8D 82            [24] 2244 	mov	dpl,r5
      000652 8E 83            [24] 2245 	mov	dph,r6
      000654 8F F0            [24] 2246 	mov	b,r7
      000656 E4               [12] 2247 	clr	a
      000657 12r00r00         [24] 2248 	lcall	__gptrput
                                   2249 ;	/opt/contiki/core/net/rime/trickle.c:183: channel_set_attributes(channel, attributes);
      00065A 74r00            [12] 2250 	mov	a,#_attributes
      00065C C0 E0            [24] 2251 	push	acc
      00065E 74s00            [12] 2252 	mov	a,#(_attributes >> 8)
      000660 C0 E0            [24] 2253 	push	acc
      000662 74 80            [12] 2254 	mov	a,#0x80
      000664 C0 E0            [24] 2255 	push	acc
      000666 E5 81            [12] 2256 	mov	a,sp
      000668 24 F7            [12] 2257 	add	a,#0xf7
      00066A F8               [12] 2258 	mov	r0,a
      00066B 86 82            [24] 2259 	mov	dpl,@r0
      00066D 08               [12] 2260 	inc	r0
      00066E 86 83            [24] 2261 	mov	dph,@r0
      000670 78r00            [12] 2262 	mov	r0,#_channel_set_attributes
      000672 79s00            [12] 2263 	mov	r1,#(_channel_set_attributes >> 8)
      000674 7As00            [12] 2264 	mov	r2,#(_channel_set_attributes >> 16)
      000676 12r00r00         [24] 2265 	lcall	__sdcc_banked_call
      000679 15 81            [12] 2266 	dec	sp
      00067B 15 81            [12] 2267 	dec	sp
      00067D 15 81            [12] 2268 	dec	sp
      00067F 02r00r00         [24] 2269 	ljmp	__sdcc_banked_ret
                                   2270 ;------------------------------------------------------------
                                   2271 ;Allocation info for local variables in function 'trickle_close'
                                   2272 ;------------------------------------------------------------
                                   2273 ;c                         Allocated to registers r5 r6 r7 
                                   2274 ;------------------------------------------------------------
                                   2275 ;	/opt/contiki/core/net/rime/trickle.c:187: trickle_close(struct trickle_conn *c)
                                   2276 ;	-----------------------------------------
                                   2277 ;	 function trickle_close
                                   2278 ;	-----------------------------------------
      000682                       2279 _trickle_close:
                                   2280 ;	/opt/contiki/core/net/rime/trickle.c:189: broadcast_close(&c->c);
      000682 AD 82            [24] 2281 	mov	r5,dpl
      000684 AE 83            [24] 2282 	mov	r6,dph
      000686 AF F0            [24] 2283 	mov	r7,b
      000688 C0 07            [24] 2284 	push	ar7
      00068A C0 06            [24] 2285 	push	ar6
      00068C C0 05            [24] 2286 	push	ar5
      00068E 78r00            [12] 2287 	mov	r0,#_broadcast_close
      000690 79s00            [12] 2288 	mov	r1,#(_broadcast_close >> 8)
      000692 7As00            [12] 2289 	mov	r2,#(_broadcast_close >> 16)
      000694 12r00r00         [24] 2290 	lcall	__sdcc_banked_call
      000697 D0 05            [24] 2291 	pop	ar5
      000699 D0 06            [24] 2292 	pop	ar6
      00069B D0 07            [24] 2293 	pop	ar7
                                   2294 ;	/opt/contiki/core/net/rime/trickle.c:190: ctimer_stop(&c->t);
      00069D 74 12            [12] 2295 	mov	a,#0x12
      00069F 2D               [12] 2296 	add	a,r5
      0006A0 FA               [12] 2297 	mov	r2,a
      0006A1 E4               [12] 2298 	clr	a
      0006A2 3E               [12] 2299 	addc	a,r6
      0006A3 FB               [12] 2300 	mov	r3,a
      0006A4 8F 04            [24] 2301 	mov	ar4,r7
      0006A6 8A 82            [24] 2302 	mov	dpl,r2
      0006A8 8B 83            [24] 2303 	mov	dph,r3
      0006AA 8C F0            [24] 2304 	mov	b,r4
      0006AC C0 07            [24] 2305 	push	ar7
      0006AE C0 06            [24] 2306 	push	ar6
      0006B0 C0 05            [24] 2307 	push	ar5
      0006B2 78r00            [12] 2308 	mov	r0,#_ctimer_stop
      0006B4 79s00            [12] 2309 	mov	r1,#(_ctimer_stop >> 8)
      0006B6 7As00            [12] 2310 	mov	r2,#(_ctimer_stop >> 16)
      0006B8 12r00r00         [24] 2311 	lcall	__sdcc_banked_call
      0006BB D0 05            [24] 2312 	pop	ar5
      0006BD D0 06            [24] 2313 	pop	ar6
      0006BF D0 07            [24] 2314 	pop	ar7
                                   2315 ;	/opt/contiki/core/net/rime/trickle.c:191: ctimer_stop(&c->interval_timer);
      0006C1 74 28            [12] 2316 	mov	a,#0x28
      0006C3 2D               [12] 2317 	add	a,r5
      0006C4 FD               [12] 2318 	mov	r5,a
      0006C5 E4               [12] 2319 	clr	a
      0006C6 3E               [12] 2320 	addc	a,r6
      0006C7 FE               [12] 2321 	mov	r6,a
      0006C8 8D 82            [24] 2322 	mov	dpl,r5
      0006CA 8E 83            [24] 2323 	mov	dph,r6
      0006CC 8F F0            [24] 2324 	mov	b,r7
      0006CE 78r00            [12] 2325 	mov	r0,#_ctimer_stop
      0006D0 79s00            [12] 2326 	mov	r1,#(_ctimer_stop >> 8)
      0006D2 7As00            [12] 2327 	mov	r2,#(_ctimer_stop >> 16)
      0006D4 12r00r00         [24] 2328 	lcall	__sdcc_banked_call
      0006D7 02r00r00         [24] 2329 	ljmp	__sdcc_banked_ret
                                   2330 ;------------------------------------------------------------
                                   2331 ;Allocation info for local variables in function 'trickle_send'
                                   2332 ;------------------------------------------------------------
                                   2333 ;c                         Allocated to stack - sp -5
                                   2334 ;sloc0                     Allocated to stack - sp -2
                                   2335 ;------------------------------------------------------------
                                   2336 ;	/opt/contiki/core/net/rime/trickle.c:195: trickle_send(struct trickle_conn *c)
                                   2337 ;	-----------------------------------------
                                   2338 ;	 function trickle_send
                                   2339 ;	-----------------------------------------
      0006DA                       2340 _trickle_send:
      0006DA C0 82            [24] 2341 	push	dpl
      0006DC C0 83            [24] 2342 	push	dph
      0006DE C0 F0            [24] 2343 	push	b
      0006E0 05 81            [12] 2344 	inc	sp
      0006E2 05 81            [12] 2345 	inc	sp
      0006E4 05 81            [12] 2346 	inc	sp
                                   2347 ;	/opt/contiki/core/net/rime/trickle.c:197: if(c->q != NULL) {
      0006E6 E5 81            [12] 2348 	mov	a,sp
      0006E8 24 FB            [12] 2349 	add	a,#0xfb
      0006EA F8               [12] 2350 	mov	r0,a
      0006EB 74 56            [12] 2351 	mov	a,#0x56
      0006ED 26               [12] 2352 	add	a,@r0
      0006EE FA               [12] 2353 	mov	r2,a
      0006EF E4               [12] 2354 	clr	a
      0006F0 08               [12] 2355 	inc	r0
      0006F1 36               [12] 2356 	addc	a,@r0
      0006F2 FB               [12] 2357 	mov	r3,a
      0006F3 08               [12] 2358 	inc	r0
      0006F4 86 04            [24] 2359 	mov	ar4,@r0
      0006F6 8A 82            [24] 2360 	mov	dpl,r2
      0006F8 8B 83            [24] 2361 	mov	dph,r3
      0006FA 8C F0            [24] 2362 	mov	b,r4
      0006FC 12r00r00         [24] 2363 	lcall	__gptrget
      0006FF FF               [12] 2364 	mov	r7,a
      000700 A3               [24] 2365 	inc	dptr
      000701 12r00r00         [24] 2366 	lcall	__gptrget
      000704 FE               [12] 2367 	mov	r6,a
      000705 A3               [24] 2368 	inc	dptr
      000706 12r00r00         [24] 2369 	lcall	__gptrget
      000709 FD               [12] 2370 	mov	r5,a
      00070A EF               [12] 2371 	mov	a,r7
      00070B 4E               [12] 2372 	orl	a,r6
      00070C 60 1B            [24] 2373 	jz	00102$
                                   2374 ;	/opt/contiki/core/net/rime/trickle.c:198: queuebuf_free(c->q);
      00070E 8F 82            [24] 2375 	mov	dpl,r7
      000710 8E 83            [24] 2376 	mov	dph,r6
      000712 8D F0            [24] 2377 	mov	b,r5
      000714 C0 04            [24] 2378 	push	ar4
      000716 C0 03            [24] 2379 	push	ar3
      000718 C0 02            [24] 2380 	push	ar2
      00071A 78r00            [12] 2381 	mov	r0,#_queuebuf_free
      00071C 79s00            [12] 2382 	mov	r1,#(_queuebuf_free >> 8)
      00071E 7As00            [12] 2383 	mov	r2,#(_queuebuf_free >> 16)
      000720 12r00r00         [24] 2384 	lcall	__sdcc_banked_call
      000723 D0 02            [24] 2385 	pop	ar2
      000725 D0 03            [24] 2386 	pop	ar3
      000727 D0 04            [24] 2387 	pop	ar4
      000729                       2388 00102$:
                                   2389 ;	/opt/contiki/core/net/rime/trickle.c:200: c->seqno++;
      000729 E5 81            [12] 2390 	mov	a,sp
      00072B 24 FB            [12] 2391 	add	a,#0xfb
      00072D F8               [12] 2392 	mov	r0,a
      00072E A9 81            [24] 2393 	mov	r1,sp
      000730 19               [12] 2394 	dec	r1
      000731 19               [12] 2395 	dec	r1
      000732 74 5B            [12] 2396 	mov	a,#0x5B
      000734 26               [12] 2397 	add	a,@r0
      000735 F7               [12] 2398 	mov	@r1,a
      000736 E4               [12] 2399 	clr	a
      000737 08               [12] 2400 	inc	r0
      000738 36               [12] 2401 	addc	a,@r0
      000739 09               [12] 2402 	inc	r1
      00073A F7               [12] 2403 	mov	@r1,a
      00073B 08               [12] 2404 	inc	r0
      00073C 09               [12] 2405 	inc	r1
      00073D E6               [12] 2406 	mov	a,@r0
      00073E F7               [12] 2407 	mov	@r1,a
      00073F A8 81            [24] 2408 	mov	r0,sp
      000741 18               [12] 2409 	dec	r0
      000742 18               [12] 2410 	dec	r0
      000743 86 82            [24] 2411 	mov	dpl,@r0
      000745 08               [12] 2412 	inc	r0
      000746 86 83            [24] 2413 	mov	dph,@r0
      000748 08               [12] 2414 	inc	r0
      000749 86 F0            [24] 2415 	mov	b,@r0
      00074B 12r00r00         [24] 2416 	lcall	__gptrget
      00074E FF               [12] 2417 	mov	r7,a
      00074F 0F               [12] 2418 	inc	r7
      000750 A8 81            [24] 2419 	mov	r0,sp
      000752 18               [12] 2420 	dec	r0
      000753 18               [12] 2421 	dec	r0
      000754 86 82            [24] 2422 	mov	dpl,@r0
      000756 08               [12] 2423 	inc	r0
      000757 86 83            [24] 2424 	mov	dph,@r0
      000759 08               [12] 2425 	inc	r0
      00075A 86 F0            [24] 2426 	mov	b,@r0
      00075C EF               [12] 2427 	mov	a,r7
      00075D 12r00r00         [24] 2428 	lcall	__gptrput
                                   2429 ;	/opt/contiki/core/net/rime/trickle.c:201: packetbuf_set_attr(PACKETBUF_ATTR_EPACKET_ID, c->seqno);
      000760 7E 00            [12] 2430 	mov	r6,#0x00
      000762 C0 04            [24] 2431 	push	ar4
      000764 C0 03            [24] 2432 	push	ar3
      000766 C0 02            [24] 2433 	push	ar2
      000768 C0 07            [24] 2434 	push	ar7
      00076A C0 06            [24] 2435 	push	ar6
      00076C 75 82 17         [24] 2436 	mov	dpl,#0x17
      00076F 78r00            [12] 2437 	mov	r0,#_packetbuf_set_attr
      000771 79s00            [12] 2438 	mov	r1,#(_packetbuf_set_attr >> 8)
      000773 7As00            [12] 2439 	mov	r2,#(_packetbuf_set_attr >> 16)
      000775 12r00r00         [24] 2440 	lcall	__sdcc_banked_call
      000778 15 81            [12] 2441 	dec	sp
      00077A 15 81            [12] 2442 	dec	sp
                                   2443 ;	/opt/contiki/core/net/rime/trickle.c:202: c->q = queuebuf_new_from_packetbuf();
      00077C 78r00            [12] 2444 	mov	r0,#_queuebuf_new_from_packetbuf
      00077E 79s00            [12] 2445 	mov	r1,#(_queuebuf_new_from_packetbuf >> 8)
      000780 7As00            [12] 2446 	mov	r2,#(_queuebuf_new_from_packetbuf >> 16)
      000782 12r00r00         [24] 2447 	lcall	__sdcc_banked_call
      000785 AD 82            [24] 2448 	mov	r5,dpl
      000787 AE 83            [24] 2449 	mov	r6,dph
      000789 AF F0            [24] 2450 	mov	r7,b
      00078B D0 02            [24] 2451 	pop	ar2
      00078D D0 03            [24] 2452 	pop	ar3
      00078F D0 04            [24] 2453 	pop	ar4
      000791 8A 82            [24] 2454 	mov	dpl,r2
      000793 8B 83            [24] 2455 	mov	dph,r3
      000795 8C F0            [24] 2456 	mov	b,r4
      000797 ED               [12] 2457 	mov	a,r5
      000798 12r00r00         [24] 2458 	lcall	__gptrput
      00079B A3               [24] 2459 	inc	dptr
      00079C EE               [12] 2460 	mov	a,r6
      00079D 12r00r00         [24] 2461 	lcall	__gptrput
      0007A0 A3               [24] 2462 	inc	dptr
      0007A1 EF               [12] 2463 	mov	a,r7
      0007A2 12r00r00         [24] 2464 	lcall	__gptrput
                                   2465 ;	/opt/contiki/core/net/rime/trickle.c:206: reset_interval(c);
      0007A5 E5 81            [12] 2466 	mov	a,sp
      0007A7 24 FB            [12] 2467 	add	a,#0xfb
      0007A9 F8               [12] 2468 	mov	r0,a
      0007AA 86 82            [24] 2469 	mov	dpl,@r0
      0007AC 08               [12] 2470 	inc	r0
      0007AD 86 83            [24] 2471 	mov	dph,@r0
      0007AF 08               [12] 2472 	inc	r0
      0007B0 86 F0            [24] 2473 	mov	b,@r0
      0007B2 78r60            [12] 2474 	mov	r0,#_reset_interval
      0007B4 79s00            [12] 2475 	mov	r1,#(_reset_interval >> 8)
      0007B6 7As00            [12] 2476 	mov	r2,#(_reset_interval >> 16)
      0007B8 12r00r00         [24] 2477 	lcall	__sdcc_banked_call
                                   2478 ;	/opt/contiki/core/net/rime/trickle.c:207: send(c);
      0007BB E5 81            [12] 2479 	mov	a,sp
      0007BD 24 FB            [12] 2480 	add	a,#0xfb
      0007BF F8               [12] 2481 	mov	r0,a
      0007C0 86 05            [24] 2482 	mov	ar5,@r0
      0007C2 08               [12] 2483 	inc	r0
      0007C3 86 06            [24] 2484 	mov	ar6,@r0
      0007C5 08               [12] 2485 	inc	r0
      0007C6 86 07            [24] 2486 	mov	ar7,@r0
      0007C8 8D 82            [24] 2487 	mov	dpl,r5
      0007CA 8E 83            [24] 2488 	mov	dph,r6
      0007CC 8F F0            [24] 2489 	mov	b,r7
      0007CE 78r00            [12] 2490 	mov	r0,#_send
      0007D0 79s00            [12] 2491 	mov	r1,#(_send >> 8)
      0007D2 7As00            [12] 2492 	mov	r2,#(_send >> 16)
      0007D4 12r00r00         [24] 2493 	lcall	__sdcc_banked_call
      0007D7 E5 81            [12] 2494 	mov	a,sp
      0007D9 24 FA            [12] 2495 	add	a,#0xFA
      0007DB F5 81            [12] 2496 	mov	sp,a
      0007DD 02r00r00         [24] 2497 	ljmp	__sdcc_banked_ret
                                   2498 	.area CSEG    (CODE)
                                   2499 	.area CONST   (CODE)
      000000                       2500 _attributes:
      000000 17                    2501 	.db #0x17	; 23
      000001 08                    2502 	.db #0x08	; 8
      000002 1A                    2503 	.db #0x1A	; 26
      000003 40                    2504 	.db #0x40	; 64
      000004 00                    2505 	.db #0x00	; 0
      000005 00                    2506 	.db #0x00	; 0
      000006                       2507 _bc:
      000006r15s03s00              2508 	.byte _recv, (_recv >> 8), (_recv >> 16)
      000009 00 00 00              2509 	.byte #0x00,#0x00,#0x00
                                   2510 	.area XINIT   (CODE)
                                   2511 	.area CABS    (ABS,CODE)
