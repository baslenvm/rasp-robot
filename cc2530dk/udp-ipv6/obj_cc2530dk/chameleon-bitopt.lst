                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.5 #9380 (Linux)
                                      4 ; This file was generated Wed Nov 18 02:57:27 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module chameleon_bitopt
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _chameleon_bitopt
                                     13 	.globl _set_bits
                                     14 	.globl _set_bits_in_byte
                                     15 	.globl _get_bits
                                     16 	.globl _get_bits_in_byte
                                     17 	.globl _channel_lookup
                                     18 	.globl _packetbuf_addr
                                     19 	.globl _packetbuf_set_addr
                                     20 	.globl _packetbuf_attr
                                     21 	.globl _packetbuf_set_attr
                                     22 	.globl _packetbuf_hdrreduce
                                     23 	.globl _packetbuf_hdralloc
                                     24 	.globl _packetbuf_hdrptr
                                     25 	.globl _packetbuf_dataptr
                                     26 	.globl _memset
                                     27 	.globl _ACTIVE
                                     28 	.globl _TX_BYTE
                                     29 	.globl _RX_BYTE
                                     30 	.globl _ERR
                                     31 	.globl _FE
                                     32 	.globl _SLAVE
                                     33 	.globl _RE
                                     34 	.globl _MODE
                                     35 	.globl _T3OVFIF
                                     36 	.globl _T3CH0IF
                                     37 	.globl _T3CH1IF
                                     38 	.globl _T4OVFIF
                                     39 	.globl _T4CH0IF
                                     40 	.globl _T4CH1IF
                                     41 	.globl _OVFIM
                                     42 	.globl _B_0
                                     43 	.globl _B_1
                                     44 	.globl _B_2
                                     45 	.globl _B_3
                                     46 	.globl _B_4
                                     47 	.globl _B_5
                                     48 	.globl _B_6
                                     49 	.globl _B_7
                                     50 	.globl _P2IF
                                     51 	.globl _UTX0IF
                                     52 	.globl _UTX1IF
                                     53 	.globl _P1IF
                                     54 	.globl _WDTIF
                                     55 	.globl _ACC_0
                                     56 	.globl _ACC_1
                                     57 	.globl _ACC_2
                                     58 	.globl _ACC_3
                                     59 	.globl _ACC_4
                                     60 	.globl _ACC_5
                                     61 	.globl _ACC_6
                                     62 	.globl _ACC_7
                                     63 	.globl _P
                                     64 	.globl _F1
                                     65 	.globl _OV
                                     66 	.globl _RS0
                                     67 	.globl _RS1
                                     68 	.globl _F0
                                     69 	.globl _AC
                                     70 	.globl _CY
                                     71 	.globl _DMAIF
                                     72 	.globl _T1IF
                                     73 	.globl _T2IF
                                     74 	.globl _T3IF
                                     75 	.globl _T4IF
                                     76 	.globl _P0IF
                                     77 	.globl _STIF
                                     78 	.globl _DMAIE
                                     79 	.globl _T1IE
                                     80 	.globl _T2IE
                                     81 	.globl _T3IE
                                     82 	.globl _T4IE
                                     83 	.globl _P0IE
                                     84 	.globl _RFERRIE
                                     85 	.globl _ADCIE
                                     86 	.globl _URX0IE
                                     87 	.globl _URX1IE
                                     88 	.globl _ENCIE
                                     89 	.globl _STIE
                                     90 	.globl _EA
                                     91 	.globl _P2_0
                                     92 	.globl _P2_1
                                     93 	.globl _P2_2
                                     94 	.globl _P2_3
                                     95 	.globl _P2_4
                                     96 	.globl _P2_5
                                     97 	.globl _P2_6
                                     98 	.globl _P2_7
                                     99 	.globl _ENCIF_0
                                    100 	.globl _ENCIF_1
                                    101 	.globl _P1_0
                                    102 	.globl _P1_1
                                    103 	.globl _P1_2
                                    104 	.globl _P1_3
                                    105 	.globl _P1_4
                                    106 	.globl _P1_5
                                    107 	.globl _P1_6
                                    108 	.globl _P1_7
                                    109 	.globl _IT0
                                    110 	.globl _RFERRIF
                                    111 	.globl _IT1
                                    112 	.globl _URX0IF
                                    113 	.globl _ADCIF
                                    114 	.globl _URX1IF
                                    115 	.globl _P0_0
                                    116 	.globl _P0_1
                                    117 	.globl _P0_2
                                    118 	.globl _P0_3
                                    119 	.globl _P0_4
                                    120 	.globl _P0_5
                                    121 	.globl _P0_6
                                    122 	.globl _P0_7
                                    123 	.globl _WDCTL
                                    124 	.globl _U1GCR
                                    125 	.globl _U1UCR
                                    126 	.globl _U1BAUD
                                    127 	.globl _U1DBUF
                                    128 	.globl _U1CSR
                                    129 	.globl _U0GCR
                                    130 	.globl _U0UCR
                                    131 	.globl _U0BAUD
                                    132 	.globl _U0DBUF
                                    133 	.globl _U0CSR
                                    134 	.globl _TIMIF
                                    135 	.globl _T4CC1
                                    136 	.globl _T4CCTL1
                                    137 	.globl _T4CC0
                                    138 	.globl _T4CCTL0
                                    139 	.globl _T4CTL
                                    140 	.globl _T4CNT
                                    141 	.globl _T3CC1
                                    142 	.globl _T3CCTL1
                                    143 	.globl _T3CC0
                                    144 	.globl _T3CCTL0
                                    145 	.globl _T3CTL
                                    146 	.globl _T3CNT
                                    147 	.globl _T2MSEL
                                    148 	.globl _T2IRQM
                                    149 	.globl _T2MOVF2
                                    150 	.globl _T2MOVF1
                                    151 	.globl _T2MOVF0
                                    152 	.globl _T2M1
                                    153 	.globl _T2M0
                                    154 	.globl _T2IRQF
                                    155 	.globl _T2EVTCFG
                                    156 	.globl _T2CTRL
                                    157 	.globl _T1STAT
                                    158 	.globl _T1CCTL2
                                    159 	.globl _T1CCTL1
                                    160 	.globl _T1CCTL0
                                    161 	.globl _T1CTL
                                    162 	.globl _T1CNTH
                                    163 	.globl _T1CNTL
                                    164 	.globl _T1CC2H
                                    165 	.globl _T1CC2L
                                    166 	.globl _T1CC1H
                                    167 	.globl _T1CC1L
                                    168 	.globl _T1CC0H
                                    169 	.globl _T1CC0L
                                    170 	.globl _CLKCONSTA
                                    171 	.globl _CLKCONCMD
                                    172 	.globl _SLEEPSTA
                                    173 	.globl _SLEEPCMD
                                    174 	.globl _STLOAD
                                    175 	.globl _ST2
                                    176 	.globl _ST1
                                    177 	.globl _ST0
                                    178 	.globl _RFERRF
                                    179 	.globl _RFIRQF0
                                    180 	.globl _RFST
                                    181 	.globl _RFD
                                    182 	.globl _RFIRQF1
                                    183 	.globl _PSBANK
                                    184 	.globl _FMAP
                                    185 	.globl _MEMCTR
                                    186 	.globl __XPAGE
                                    187 	.globl _MPAGE
                                    188 	.globl _PMUX
                                    189 	.globl _P2DIR
                                    190 	.globl _P1DIR
                                    191 	.globl _P0DIR
                                    192 	.globl _P2INP
                                    193 	.globl _P1INP
                                    194 	.globl _P2SEL
                                    195 	.globl _P1SEL
                                    196 	.globl _P0SEL
                                    197 	.globl _APCFG
                                    198 	.globl _PERCFG
                                    199 	.globl _P0INP
                                    200 	.globl _P2IEN
                                    201 	.globl _P1IEN
                                    202 	.globl _P0IEN
                                    203 	.globl _PICTL
                                    204 	.globl _P2IFG
                                    205 	.globl _P1IFG
                                    206 	.globl _P0IFG
                                    207 	.globl _DMAREQ
                                    208 	.globl _DMAARM
                                    209 	.globl _DMA0CFGH
                                    210 	.globl _DMA0CFGL
                                    211 	.globl _DMA1CFGH
                                    212 	.globl _DMA1CFGL
                                    213 	.globl _DMAIRQ
                                    214 	.globl _ENCCS
                                    215 	.globl _ENCDO
                                    216 	.globl _ENCDI
                                    217 	.globl _RNDH
                                    218 	.globl _RNDL
                                    219 	.globl _ADCH
                                    220 	.globl _ADCL
                                    221 	.globl _ADCCON3
                                    222 	.globl _ADCCON2
                                    223 	.globl _ADCCON1
                                    224 	.globl _B
                                    225 	.globl _IRCON2
                                    226 	.globl _ACC
                                    227 	.globl _PSW
                                    228 	.globl _IRCON
                                    229 	.globl _IP1
                                    230 	.globl _IEN1
                                    231 	.globl _IP0
                                    232 	.globl _IEN0
                                    233 	.globl _P2
                                    234 	.globl _S1CON
                                    235 	.globl _IEN2
                                    236 	.globl _S0CON
                                    237 	.globl _DPS
                                    238 	.globl _P1
                                    239 	.globl _TCON
                                    240 	.globl _PCON
                                    241 	.globl _DPH1
                                    242 	.globl _DPL1
                                    243 	.globl _DPH0
                                    244 	.globl _DPL0
                                    245 	.globl _SP
                                    246 	.globl _P0
                                    247 	.globl _X_IEEE_ADDR
                                    248 	.globl _X_INFOPAGE
                                    249 	.globl _X_P2DIR
                                    250 	.globl _X_P1DIR
                                    251 	.globl _X_P0DIR
                                    252 	.globl _X_U1GCR
                                    253 	.globl _X_U1UCR
                                    254 	.globl _X_U1BAUD
                                    255 	.globl _X_U1DBUF
                                    256 	.globl _X_U1CSR
                                    257 	.globl _X_P2INP
                                    258 	.globl _X_P1INP
                                    259 	.globl _X_P2SEL
                                    260 	.globl _X_P1SEL
                                    261 	.globl _X_P0SEL
                                    262 	.globl _X_APCFG
                                    263 	.globl _X_PERCFG
                                    264 	.globl _X_T4CC1
                                    265 	.globl _X_T4CCTL1
                                    266 	.globl _X_T4CC0
                                    267 	.globl _X_T4CCTL0
                                    268 	.globl _X_T4CTL
                                    269 	.globl _X_T4CNT
                                    270 	.globl _X_RFIRQF0
                                    271 	.globl _X_T1CCTL2
                                    272 	.globl _X_T1CCTL1
                                    273 	.globl _X_T1CCTL0
                                    274 	.globl _X_T1CTL
                                    275 	.globl _X_T1CNTH
                                    276 	.globl _X_T1CNTL
                                    277 	.globl _X_RFST
                                    278 	.globl _X_T1CC2H
                                    279 	.globl _X_T1CC2L
                                    280 	.globl _X_T1CC1H
                                    281 	.globl _X_T1CC1L
                                    282 	.globl _X_T1CC0H
                                    283 	.globl _X_T1CC0L
                                    284 	.globl _X_RFD
                                    285 	.globl _X_TIMIF
                                    286 	.globl _X_DMAREQ
                                    287 	.globl _X_DMAARM
                                    288 	.globl _X_DMA0CFGH
                                    289 	.globl _X_DMA0CFGL
                                    290 	.globl _X_DMA1CFGH
                                    291 	.globl _X_DMA1CFGL
                                    292 	.globl _X_DMAIRQ
                                    293 	.globl _X_T3CC1
                                    294 	.globl _X_T3CCTL1
                                    295 	.globl _X_T3CC0
                                    296 	.globl _X_T3CCTL0
                                    297 	.globl _X_T3CTL
                                    298 	.globl _X_T3CNT
                                    299 	.globl _X_WDCTL
                                    300 	.globl _X_MEMCTR
                                    301 	.globl _X_CLKCONCMD
                                    302 	.globl _X_U0GCR
                                    303 	.globl _X_U0UCR
                                    304 	.globl _X_T2MSEL
                                    305 	.globl _X_U0BAUD
                                    306 	.globl _X_U0DBUF
                                    307 	.globl _X_RFERRF
                                    308 	.globl _X_SLEEPCMD
                                    309 	.globl _X_RNDH
                                    310 	.globl _X_RNDL
                                    311 	.globl _X_ADCH
                                    312 	.globl _X_ADCL
                                    313 	.globl _X_ADCCON3
                                    314 	.globl _X_ADCCON2
                                    315 	.globl _X_ADCCON1
                                    316 	.globl _X_ENCCS
                                    317 	.globl _X_ENCDO
                                    318 	.globl _X_ENCDI
                                    319 	.globl _X_T1STAT
                                    320 	.globl _X_PMUX
                                    321 	.globl _X_STLOAD
                                    322 	.globl _X_P2IEN
                                    323 	.globl _X_P0IEN
                                    324 	.globl _X_T2IRQM
                                    325 	.globl _X_T2MOVF2
                                    326 	.globl _X_T2MOVF1
                                    327 	.globl _X_T2MOVF0
                                    328 	.globl _X_T2M1
                                    329 	.globl _X_T2M0
                                    330 	.globl _X_T2IRQF
                                    331 	.globl _X_P2
                                    332 	.globl _X_PSBANK
                                    333 	.globl _X_FMAP
                                    334 	.globl _X_CLKCONSTA
                                    335 	.globl _X_SLEEPSTA
                                    336 	.globl _X_T2EVTCFG
                                    337 	.globl _X_ST2
                                    338 	.globl _X_ST1
                                    339 	.globl _X_ST0
                                    340 	.globl _X_T2CTRL
                                    341 	.globl _X__XPAGE
                                    342 	.globl _X_MPAGE
                                    343 	.globl _X_RFIRQF1
                                    344 	.globl _X_P1
                                    345 	.globl _X_P0INP
                                    346 	.globl _X_P1IEN
                                    347 	.globl _X_PICTL
                                    348 	.globl _X_P2IFG
                                    349 	.globl _X_P1IFG
                                    350 	.globl _X_P0IFG
                                    351 	.globl _X_U0CSR
                                    352 	.globl _X_P0
                                    353 	.globl _USBF5
                                    354 	.globl _USBF4
                                    355 	.globl _USBF3
                                    356 	.globl _USBF2
                                    357 	.globl _USBF1
                                    358 	.globl _USBF0
                                    359 	.globl _USBCNTH
                                    360 	.globl _USBCNTL
                                    361 	.globl _USBCNT0
                                    362 	.globl _USBCSOH
                                    363 	.globl _USBCSOL
                                    364 	.globl _USBMAXO
                                    365 	.globl _USBCSIH
                                    366 	.globl _USBCSIL
                                    367 	.globl _USBCS0
                                    368 	.globl _USBMAXI
                                    369 	.globl _USBCTRL
                                    370 	.globl _USBINDEX
                                    371 	.globl _USBFRMH
                                    372 	.globl _USBFRML
                                    373 	.globl _USBCIE
                                    374 	.globl _USBOIE
                                    375 	.globl _USBIIE
                                    376 	.globl _USBCIF
                                    377 	.globl _USBOIF
                                    378 	.globl _USBIIF
                                    379 	.globl _USBPOW
                                    380 	.globl _USBADDR
                                    381 	.globl _CSPT
                                    382 	.globl _CSPZ
                                    383 	.globl _CSPY
                                    384 	.globl _CSPX
                                    385 	.globl _CSPSTAT
                                    386 	.globl _CSPCTRL
                                    387 	.globl _CSPPROG23
                                    388 	.globl _CSPPROG22
                                    389 	.globl _CSPPROG21
                                    390 	.globl _CSPPROG20
                                    391 	.globl _CSPPROG19
                                    392 	.globl _CSPPROG18
                                    393 	.globl _CSPPROG17
                                    394 	.globl _CSPPROG16
                                    395 	.globl _CSPPROG15
                                    396 	.globl _CSPPROG14
                                    397 	.globl _CSPPROG13
                                    398 	.globl _CSPPROG12
                                    399 	.globl _CSPPROG11
                                    400 	.globl _CSPPROG10
                                    401 	.globl _CSPPROG9
                                    402 	.globl _CSPPROG8
                                    403 	.globl _CSPPROG7
                                    404 	.globl _CSPPROG6
                                    405 	.globl _CSPPROG5
                                    406 	.globl _CSPPROG4
                                    407 	.globl _CSPPROG3
                                    408 	.globl _CSPPROG2
                                    409 	.globl _CSPPROG1
                                    410 	.globl _CSPPROG0
                                    411 	.globl _RFC_OBS_CTRL2
                                    412 	.globl _RFC_OBS_CTRL1
                                    413 	.globl _RFC_OBS_CTRL0
                                    414 	.globl _TXFILTCFG
                                    415 	.globl _PTEST1
                                    416 	.globl _PTEST0
                                    417 	.globl _ATEST
                                    418 	.globl _DACTEST2
                                    419 	.globl _DACTEST1
                                    420 	.globl _DACTEST0
                                    421 	.globl _MDMTEST1
                                    422 	.globl _MDMTEST0
                                    423 	.globl _ADCTEST2
                                    424 	.globl _ADCTEST1
                                    425 	.globl _ADCTEST0
                                    426 	.globl _AGCCTRL3
                                    427 	.globl _AGCCTRL2
                                    428 	.globl _AGCCTRL1
                                    429 	.globl _AGCCTRL0
                                    430 	.globl _FSCAL3
                                    431 	.globl _FSCAL2
                                    432 	.globl _FSCAL1
                                    433 	.globl _FSCAL0
                                    434 	.globl _FSCTRL
                                    435 	.globl _RXCTRL
                                    436 	.globl _FREQEST
                                    437 	.globl _MDMCTRL1
                                    438 	.globl _MDMCTRL0
                                    439 	.globl _RFRND
                                    440 	.globl _RFERRM
                                    441 	.globl _RFIRQM1
                                    442 	.globl _RFIRQM0
                                    443 	.globl _TXLAST_PTR
                                    444 	.globl _TXFIRST_PTR
                                    445 	.globl _RXP1_PTR
                                    446 	.globl _RXLAST_PTR
                                    447 	.globl _RXFIRST_PTR
                                    448 	.globl _TXFIFOCNT
                                    449 	.globl _RXFIFOCNT
                                    450 	.globl _RXFIRST
                                    451 	.globl _RSSISTAT
                                    452 	.globl _RSSI
                                    453 	.globl _CCACTRL1
                                    454 	.globl _CCACTRL0
                                    455 	.globl _FSMCTRL
                                    456 	.globl _FIFOPCTRL
                                    457 	.globl _FSMSTAT1
                                    458 	.globl _FSMSTAT0
                                    459 	.globl _TXCTRL
                                    460 	.globl _TXPOWER
                                    461 	.globl _FREQCTRL
                                    462 	.globl _FREQTUNE
                                    463 	.globl _RXMASKCLR
                                    464 	.globl _RXMASKSET
                                    465 	.globl _RXENABLE
                                    466 	.globl _FRMCTRL1
                                    467 	.globl _FRMCTRL0
                                    468 	.globl _SRCEXTEN2
                                    469 	.globl _SRCEXTEN1
                                    470 	.globl _SRCEXTEN0
                                    471 	.globl _SRCSHORTEN2
                                    472 	.globl _SRCSHORTEN1
                                    473 	.globl _SRCSHORTEN0
                                    474 	.globl _SRCMATCH
                                    475 	.globl _FRMFILT1
                                    476 	.globl _FRMFILT0
                                    477 	.globl _SHORT_ADDR1
                                    478 	.globl _SHORT_ADDR0
                                    479 	.globl _PAN_ID1
                                    480 	.globl _PAN_ID0
                                    481 	.globl _EXT_ADDR7
                                    482 	.globl _EXT_ADDR6
                                    483 	.globl _EXT_ADDR5
                                    484 	.globl _EXT_ADDR4
                                    485 	.globl _EXT_ADDR3
                                    486 	.globl _EXT_ADDR2
                                    487 	.globl _EXT_ADDR1
                                    488 	.globl _EXT_ADDR0
                                    489 	.globl _SRCSHORTPENDEN2
                                    490 	.globl _SRCSHORTPENDEN1
                                    491 	.globl _SRCSHORTPENDEN0
                                    492 	.globl _SRCEXTPENDEN2
                                    493 	.globl _SRCEXTPENDEN1
                                    494 	.globl _SRCEXTPENDEN0
                                    495 	.globl _SRCRESINDEX
                                    496 	.globl _SRCRESMASK2
                                    497 	.globl _SRCRESMASK1
                                    498 	.globl _SRCRESMASK0
                                    499 	.globl _SRC_ADDR_TABLE
                                    500 	.globl _TXFIFO
                                    501 	.globl _RXFIFO
                                    502 	.globl _RFCORE_RAM
                                    503 	.globl _CMPCTL
                                    504 	.globl _OPAMPS
                                    505 	.globl _OPAMPC
                                    506 	.globl _STCV2
                                    507 	.globl _STCV1
                                    508 	.globl _STCV0
                                    509 	.globl _STCS
                                    510 	.globl _STCC
                                    511 	.globl _T1CC4H
                                    512 	.globl _T1CC4L
                                    513 	.globl _T1CC3H
                                    514 	.globl _T1CC3L
                                    515 	.globl _XX_T1CC2H
                                    516 	.globl _XX_T1CC2L
                                    517 	.globl _XX_T1CC1H
                                    518 	.globl _XX_T1CC1L
                                    519 	.globl _XX_T1CC0H
                                    520 	.globl _XX_T1CC0L
                                    521 	.globl _T1CCTL4
                                    522 	.globl _T1CCTL3
                                    523 	.globl _XX_T1CCTL2
                                    524 	.globl _XX_T1CCTL1
                                    525 	.globl _XX_T1CCTL0
                                    526 	.globl _CLD
                                    527 	.globl _IRCTL
                                    528 	.globl _CHIPINFO1
                                    529 	.globl _CHIPINFO0
                                    530 	.globl _FWDATA
                                    531 	.globl _FADDRH
                                    532 	.globl _FADDRL
                                    533 	.globl _FCTL
                                    534 	.globl _IVCTRL
                                    535 	.globl _BATTMON
                                    536 	.globl _SRCRC
                                    537 	.globl _DBGDATA
                                    538 	.globl _TESTREG0
                                    539 	.globl _CHIPID
                                    540 	.globl _CHVER
                                    541 	.globl _OBSSEL5
                                    542 	.globl _OBSSEL4
                                    543 	.globl _OBSSEL3
                                    544 	.globl _OBSSEL2
                                    545 	.globl _OBSSEL1
                                    546 	.globl _OBSSEL0
                                    547 	.globl _I2CIO
                                    548 	.globl _I2CWC
                                    549 	.globl _I2CADDR
                                    550 	.globl _I2CDATA
                                    551 	.globl _I2CSTAT
                                    552 	.globl _I2CCFG
                                    553 	.globl _OPAMPMC
                                    554 	.globl _MONMUX
                                    555 ;--------------------------------------------------------
                                    556 ; special function registers
                                    557 ;--------------------------------------------------------
                                    558 	.area RSEG    (ABS,DATA)
      000000                        559 	.org 0x0000
                           000080   560 _P0	=	0x0080
                           000081   561 _SP	=	0x0081
                           000082   562 _DPL0	=	0x0082
                           000083   563 _DPH0	=	0x0083
                           000084   564 _DPL1	=	0x0084
                           000085   565 _DPH1	=	0x0085
                           000087   566 _PCON	=	0x0087
                           000088   567 _TCON	=	0x0088
                           000090   568 _P1	=	0x0090
                           000092   569 _DPS	=	0x0092
                           000098   570 _S0CON	=	0x0098
                           00009A   571 _IEN2	=	0x009a
                           00009B   572 _S1CON	=	0x009b
                           0000A0   573 _P2	=	0x00a0
                           0000A8   574 _IEN0	=	0x00a8
                           0000A9   575 _IP0	=	0x00a9
                           0000B8   576 _IEN1	=	0x00b8
                           0000B9   577 _IP1	=	0x00b9
                           0000C0   578 _IRCON	=	0x00c0
                           0000D0   579 _PSW	=	0x00d0
                           0000E0   580 _ACC	=	0x00e0
                           0000E8   581 _IRCON2	=	0x00e8
                           0000F0   582 _B	=	0x00f0
                           0000B4   583 _ADCCON1	=	0x00b4
                           0000B5   584 _ADCCON2	=	0x00b5
                           0000B6   585 _ADCCON3	=	0x00b6
                           0000BA   586 _ADCL	=	0x00ba
                           0000BB   587 _ADCH	=	0x00bb
                           0000BC   588 _RNDL	=	0x00bc
                           0000BD   589 _RNDH	=	0x00bd
                           0000B1   590 _ENCDI	=	0x00b1
                           0000B2   591 _ENCDO	=	0x00b2
                           0000B3   592 _ENCCS	=	0x00b3
                           0000D1   593 _DMAIRQ	=	0x00d1
                           0000D2   594 _DMA1CFGL	=	0x00d2
                           0000D3   595 _DMA1CFGH	=	0x00d3
                           0000D4   596 _DMA0CFGL	=	0x00d4
                           0000D5   597 _DMA0CFGH	=	0x00d5
                           0000D6   598 _DMAARM	=	0x00d6
                           0000D7   599 _DMAREQ	=	0x00d7
                           000089   600 _P0IFG	=	0x0089
                           00008A   601 _P1IFG	=	0x008a
                           00008B   602 _P2IFG	=	0x008b
                           00008C   603 _PICTL	=	0x008c
                           0000AB   604 _P0IEN	=	0x00ab
                           00008D   605 _P1IEN	=	0x008d
                           0000AC   606 _P2IEN	=	0x00ac
                           00008F   607 _P0INP	=	0x008f
                           0000F1   608 _PERCFG	=	0x00f1
                           0000F2   609 _APCFG	=	0x00f2
                           0000F3   610 _P0SEL	=	0x00f3
                           0000F4   611 _P1SEL	=	0x00f4
                           0000F5   612 _P2SEL	=	0x00f5
                           0000F6   613 _P1INP	=	0x00f6
                           0000F7   614 _P2INP	=	0x00f7
                           0000FD   615 _P0DIR	=	0x00fd
                           0000FE   616 _P1DIR	=	0x00fe
                           0000FF   617 _P2DIR	=	0x00ff
                           0000AE   618 _PMUX	=	0x00ae
                           000093   619 _MPAGE	=	0x0093
                           000093   620 __XPAGE	=	0x0093
                           0000C7   621 _MEMCTR	=	0x00c7
                           00009F   622 _FMAP	=	0x009f
                           00009F   623 _PSBANK	=	0x009f
                           000091   624 _RFIRQF1	=	0x0091
                           0000D9   625 _RFD	=	0x00d9
                           0000E1   626 _RFST	=	0x00e1
                           0000E9   627 _RFIRQF0	=	0x00e9
                           0000BF   628 _RFERRF	=	0x00bf
                           000095   629 _ST0	=	0x0095
                           000096   630 _ST1	=	0x0096
                           000097   631 _ST2	=	0x0097
                           0000AD   632 _STLOAD	=	0x00ad
                           0000BE   633 _SLEEPCMD	=	0x00be
                           00009D   634 _SLEEPSTA	=	0x009d
                           0000C6   635 _CLKCONCMD	=	0x00c6
                           00009E   636 _CLKCONSTA	=	0x009e
                           0000DA   637 _T1CC0L	=	0x00da
                           0000DB   638 _T1CC0H	=	0x00db
                           0000DC   639 _T1CC1L	=	0x00dc
                           0000DD   640 _T1CC1H	=	0x00dd
                           0000DE   641 _T1CC2L	=	0x00de
                           0000DF   642 _T1CC2H	=	0x00df
                           0000E2   643 _T1CNTL	=	0x00e2
                           0000E3   644 _T1CNTH	=	0x00e3
                           0000E4   645 _T1CTL	=	0x00e4
                           0000E5   646 _T1CCTL0	=	0x00e5
                           0000E6   647 _T1CCTL1	=	0x00e6
                           0000E7   648 _T1CCTL2	=	0x00e7
                           0000AF   649 _T1STAT	=	0x00af
                           000094   650 _T2CTRL	=	0x0094
                           00009C   651 _T2EVTCFG	=	0x009c
                           0000A1   652 _T2IRQF	=	0x00a1
                           0000A2   653 _T2M0	=	0x00a2
                           0000A3   654 _T2M1	=	0x00a3
                           0000A4   655 _T2MOVF0	=	0x00a4
                           0000A5   656 _T2MOVF1	=	0x00a5
                           0000A6   657 _T2MOVF2	=	0x00a6
                           0000A7   658 _T2IRQM	=	0x00a7
                           0000C3   659 _T2MSEL	=	0x00c3
                           0000CA   660 _T3CNT	=	0x00ca
                           0000CB   661 _T3CTL	=	0x00cb
                           0000CC   662 _T3CCTL0	=	0x00cc
                           0000CD   663 _T3CC0	=	0x00cd
                           0000CE   664 _T3CCTL1	=	0x00ce
                           0000CF   665 _T3CC1	=	0x00cf
                           0000EA   666 _T4CNT	=	0x00ea
                           0000EB   667 _T4CTL	=	0x00eb
                           0000EC   668 _T4CCTL0	=	0x00ec
                           0000ED   669 _T4CC0	=	0x00ed
                           0000EE   670 _T4CCTL1	=	0x00ee
                           0000EF   671 _T4CC1	=	0x00ef
                           0000D8   672 _TIMIF	=	0x00d8
                           000086   673 _U0CSR	=	0x0086
                           0000C1   674 _U0DBUF	=	0x00c1
                           0000C2   675 _U0BAUD	=	0x00c2
                           0000C4   676 _U0UCR	=	0x00c4
                           0000C5   677 _U0GCR	=	0x00c5
                           0000F8   678 _U1CSR	=	0x00f8
                           0000F9   679 _U1DBUF	=	0x00f9
                           0000FA   680 _U1BAUD	=	0x00fa
                           0000FB   681 _U1UCR	=	0x00fb
                           0000FC   682 _U1GCR	=	0x00fc
                           0000C9   683 _WDCTL	=	0x00c9
                                    684 ;--------------------------------------------------------
                                    685 ; special function bits
                                    686 ;--------------------------------------------------------
                                    687 	.area RSEG    (ABS,DATA)
      000000                        688 	.org 0x0000
                           000087   689 _P0_7	=	0x0087
                           000086   690 _P0_6	=	0x0086
                           000085   691 _P0_5	=	0x0085
                           000084   692 _P0_4	=	0x0084
                           000083   693 _P0_3	=	0x0083
                           000082   694 _P0_2	=	0x0082
                           000081   695 _P0_1	=	0x0081
                           000080   696 _P0_0	=	0x0080
                           00008F   697 _URX1IF	=	0x008f
                           00008D   698 _ADCIF	=	0x008d
                           00008B   699 _URX0IF	=	0x008b
                           00008A   700 _IT1	=	0x008a
                           000089   701 _RFERRIF	=	0x0089
                           000088   702 _IT0	=	0x0088
                           000097   703 _P1_7	=	0x0097
                           000096   704 _P1_6	=	0x0096
                           000095   705 _P1_5	=	0x0095
                           000094   706 _P1_4	=	0x0094
                           000093   707 _P1_3	=	0x0093
                           000092   708 _P1_2	=	0x0092
                           000091   709 _P1_1	=	0x0091
                           000090   710 _P1_0	=	0x0090
                           000099   711 _ENCIF_1	=	0x0099
                           000098   712 _ENCIF_0	=	0x0098
                           0000A7   713 _P2_7	=	0x00a7
                           0000A6   714 _P2_6	=	0x00a6
                           0000A5   715 _P2_5	=	0x00a5
                           0000A4   716 _P2_4	=	0x00a4
                           0000A3   717 _P2_3	=	0x00a3
                           0000A2   718 _P2_2	=	0x00a2
                           0000A1   719 _P2_1	=	0x00a1
                           0000A0   720 _P2_0	=	0x00a0
                           0000AF   721 _EA	=	0x00af
                           0000AD   722 _STIE	=	0x00ad
                           0000AC   723 _ENCIE	=	0x00ac
                           0000AB   724 _URX1IE	=	0x00ab
                           0000AA   725 _URX0IE	=	0x00aa
                           0000A9   726 _ADCIE	=	0x00a9
                           0000A8   727 _RFERRIE	=	0x00a8
                           0000BD   728 _P0IE	=	0x00bd
                           0000BC   729 _T4IE	=	0x00bc
                           0000BB   730 _T3IE	=	0x00bb
                           0000BA   731 _T2IE	=	0x00ba
                           0000B9   732 _T1IE	=	0x00b9
                           0000B8   733 _DMAIE	=	0x00b8
                           0000C7   734 _STIF	=	0x00c7
                           0000C5   735 _P0IF	=	0x00c5
                           0000C4   736 _T4IF	=	0x00c4
                           0000C3   737 _T3IF	=	0x00c3
                           0000C2   738 _T2IF	=	0x00c2
                           0000C1   739 _T1IF	=	0x00c1
                           0000C0   740 _DMAIF	=	0x00c0
                           0000D7   741 _CY	=	0x00d7
                           0000D6   742 _AC	=	0x00d6
                           0000D5   743 _F0	=	0x00d5
                           0000D4   744 _RS1	=	0x00d4
                           0000D3   745 _RS0	=	0x00d3
                           0000D2   746 _OV	=	0x00d2
                           0000D1   747 _F1	=	0x00d1
                           0000D0   748 _P	=	0x00d0
                           0000E7   749 _ACC_7	=	0x00e7
                           0000E6   750 _ACC_6	=	0x00e6
                           0000E5   751 _ACC_5	=	0x00e5
                           0000E4   752 _ACC_4	=	0x00e4
                           0000E3   753 _ACC_3	=	0x00e3
                           0000E2   754 _ACC_2	=	0x00e2
                           0000E1   755 _ACC_1	=	0x00e1
                           0000E0   756 _ACC_0	=	0x00e0
                           0000EC   757 _WDTIF	=	0x00ec
                           0000EB   758 _P1IF	=	0x00eb
                           0000EA   759 _UTX1IF	=	0x00ea
                           0000E9   760 _UTX0IF	=	0x00e9
                           0000E8   761 _P2IF	=	0x00e8
                           0000F7   762 _B_7	=	0x00f7
                           0000F6   763 _B_6	=	0x00f6
                           0000F5   764 _B_5	=	0x00f5
                           0000F4   765 _B_4	=	0x00f4
                           0000F3   766 _B_3	=	0x00f3
                           0000F2   767 _B_2	=	0x00f2
                           0000F1   768 _B_1	=	0x00f1
                           0000F0   769 _B_0	=	0x00f0
                           0000DE   770 _OVFIM	=	0x00de
                           0000DD   771 _T4CH1IF	=	0x00dd
                           0000DC   772 _T4CH0IF	=	0x00dc
                           0000DB   773 _T4OVFIF	=	0x00db
                           0000DA   774 _T3CH1IF	=	0x00da
                           0000D9   775 _T3CH0IF	=	0x00d9
                           0000D8   776 _T3OVFIF	=	0x00d8
                           0000FF   777 _MODE	=	0x00ff
                           0000FE   778 _RE	=	0x00fe
                           0000FD   779 _SLAVE	=	0x00fd
                           0000FC   780 _FE	=	0x00fc
                           0000FB   781 _ERR	=	0x00fb
                           0000FA   782 _RX_BYTE	=	0x00fa
                           0000F9   783 _TX_BYTE	=	0x00f9
                           0000F8   784 _ACTIVE	=	0x00f8
                                    785 ;--------------------------------------------------------
                                    786 ; overlayable register banks
                                    787 ;--------------------------------------------------------
                                    788 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        789 	.ds 8
                                    790 ;--------------------------------------------------------
                                    791 ; internal ram data
                                    792 ;--------------------------------------------------------
                                    793 	.area DSEG    (DATA)
                                    794 ;--------------------------------------------------------
                                    795 ; overlayable items in internal ram 
                                    796 ;--------------------------------------------------------
                                    797 ;--------------------------------------------------------
                                    798 ; indirectly addressable internal ram data
                                    799 ;--------------------------------------------------------
                                    800 	.area ISEG    (DATA)
                                    801 ;--------------------------------------------------------
                                    802 ; absolute internal ram data
                                    803 ;--------------------------------------------------------
                                    804 	.area IABS    (ABS,DATA)
                                    805 	.area IABS    (ABS,DATA)
                                    806 ;--------------------------------------------------------
                                    807 ; bit data
                                    808 ;--------------------------------------------------------
                                    809 	.area BSEG    (BIT)
                                    810 ;--------------------------------------------------------
                                    811 ; paged external ram data
                                    812 ;--------------------------------------------------------
                                    813 	.area PSEG    (PAG,XDATA)
                                    814 ;--------------------------------------------------------
                                    815 ; external ram data
                                    816 ;--------------------------------------------------------
                                    817 	.area XSEG    (XDATA)
                           0061A6   818 _MONMUX	=	0x61a6
                           0061A6   819 _OPAMPMC	=	0x61a6
                           006230   820 _I2CCFG	=	0x6230
                           006231   821 _I2CSTAT	=	0x6231
                           006232   822 _I2CDATA	=	0x6232
                           006233   823 _I2CADDR	=	0x6233
                           006234   824 _I2CWC	=	0x6234
                           006235   825 _I2CIO	=	0x6235
                           006243   826 _OBSSEL0	=	0x6243
                           006244   827 _OBSSEL1	=	0x6244
                           006245   828 _OBSSEL2	=	0x6245
                           006246   829 _OBSSEL3	=	0x6246
                           006247   830 _OBSSEL4	=	0x6247
                           006248   831 _OBSSEL5	=	0x6248
                           006249   832 _CHVER	=	0x6249
                           00624A   833 _CHIPID	=	0x624a
                           00624B   834 _TESTREG0	=	0x624b
                           006260   835 _DBGDATA	=	0x6260
                           006262   836 _SRCRC	=	0x6262
                           006264   837 _BATTMON	=	0x6264
                           006265   838 _IVCTRL	=	0x6265
                           006270   839 _FCTL	=	0x6270
                           006271   840 _FADDRL	=	0x6271
                           006272   841 _FADDRH	=	0x6272
                           006273   842 _FWDATA	=	0x6273
                           006276   843 _CHIPINFO0	=	0x6276
                           006277   844 _CHIPINFO1	=	0x6277
                           006281   845 _IRCTL	=	0x6281
                           006290   846 _CLD	=	0x6290
                           0062A0   847 _XX_T1CCTL0	=	0x62a0
                           0062A1   848 _XX_T1CCTL1	=	0x62a1
                           0062A2   849 _XX_T1CCTL2	=	0x62a2
                           0062A3   850 _T1CCTL3	=	0x62a3
                           0062A4   851 _T1CCTL4	=	0x62a4
                           0062A6   852 _XX_T1CC0L	=	0x62a6
                           0062A7   853 _XX_T1CC0H	=	0x62a7
                           0062A8   854 _XX_T1CC1L	=	0x62a8
                           0062A9   855 _XX_T1CC1H	=	0x62a9
                           0062AA   856 _XX_T1CC2L	=	0x62aa
                           0062AB   857 _XX_T1CC2H	=	0x62ab
                           0062AC   858 _T1CC3L	=	0x62ac
                           0062AD   859 _T1CC3H	=	0x62ad
                           0062AE   860 _T1CC4L	=	0x62ae
                           0062AF   861 _T1CC4H	=	0x62af
                           0062B0   862 _STCC	=	0x62b0
                           0062B1   863 _STCS	=	0x62b1
                           0062B2   864 _STCV0	=	0x62b2
                           0062B3   865 _STCV1	=	0x62b3
                           0062B4   866 _STCV2	=	0x62b4
                           0062C0   867 _OPAMPC	=	0x62c0
                           0062C1   868 _OPAMPS	=	0x62c1
                           0062D0   869 _CMPCTL	=	0x62d0
                           006000   870 _RFCORE_RAM	=	0x6000
                           006000   871 _RXFIFO	=	0x6000
                           006080   872 _TXFIFO	=	0x6080
                           006100   873 _SRC_ADDR_TABLE	=	0x6100
                           006160   874 _SRCRESMASK0	=	0x6160
                           006161   875 _SRCRESMASK1	=	0x6161
                           006162   876 _SRCRESMASK2	=	0x6162
                           006163   877 _SRCRESINDEX	=	0x6163
                           006164   878 _SRCEXTPENDEN0	=	0x6164
                           006165   879 _SRCEXTPENDEN1	=	0x6165
                           006166   880 _SRCEXTPENDEN2	=	0x6166
                           006167   881 _SRCSHORTPENDEN0	=	0x6167
                           006168   882 _SRCSHORTPENDEN1	=	0x6168
                           006169   883 _SRCSHORTPENDEN2	=	0x6169
                           00616A   884 _EXT_ADDR0	=	0x616a
                           00616B   885 _EXT_ADDR1	=	0x616b
                           00616C   886 _EXT_ADDR2	=	0x616c
                           00616D   887 _EXT_ADDR3	=	0x616d
                           00616E   888 _EXT_ADDR4	=	0x616e
                           00616F   889 _EXT_ADDR5	=	0x616f
                           006170   890 _EXT_ADDR6	=	0x6170
                           006171   891 _EXT_ADDR7	=	0x6171
                           006172   892 _PAN_ID0	=	0x6172
                           006173   893 _PAN_ID1	=	0x6173
                           006174   894 _SHORT_ADDR0	=	0x6174
                           006175   895 _SHORT_ADDR1	=	0x6175
                           006180   896 _FRMFILT0	=	0x6180
                           006181   897 _FRMFILT1	=	0x6181
                           006182   898 _SRCMATCH	=	0x6182
                           006183   899 _SRCSHORTEN0	=	0x6183
                           006184   900 _SRCSHORTEN1	=	0x6184
                           006185   901 _SRCSHORTEN2	=	0x6185
                           006186   902 _SRCEXTEN0	=	0x6186
                           006187   903 _SRCEXTEN1	=	0x6187
                           006188   904 _SRCEXTEN2	=	0x6188
                           006189   905 _FRMCTRL0	=	0x6189
                           00618A   906 _FRMCTRL1	=	0x618a
                           00618B   907 _RXENABLE	=	0x618b
                           00618C   908 _RXMASKSET	=	0x618c
                           00618D   909 _RXMASKCLR	=	0x618d
                           00618E   910 _FREQTUNE	=	0x618e
                           00618F   911 _FREQCTRL	=	0x618f
                           006190   912 _TXPOWER	=	0x6190
                           006191   913 _TXCTRL	=	0x6191
                           006192   914 _FSMSTAT0	=	0x6192
                           006193   915 _FSMSTAT1	=	0x6193
                           006194   916 _FIFOPCTRL	=	0x6194
                           006195   917 _FSMCTRL	=	0x6195
                           006196   918 _CCACTRL0	=	0x6196
                           006197   919 _CCACTRL1	=	0x6197
                           006198   920 _RSSI	=	0x6198
                           006199   921 _RSSISTAT	=	0x6199
                           00619A   922 _RXFIRST	=	0x619a
                           00619B   923 _RXFIFOCNT	=	0x619b
                           00619C   924 _TXFIFOCNT	=	0x619c
                           00619D   925 _RXFIRST_PTR	=	0x619d
                           00619E   926 _RXLAST_PTR	=	0x619e
                           00619F   927 _RXP1_PTR	=	0x619f
                           0061A1   928 _TXFIRST_PTR	=	0x61a1
                           0061A2   929 _TXLAST_PTR	=	0x61a2
                           0061A3   930 _RFIRQM0	=	0x61a3
                           0061A4   931 _RFIRQM1	=	0x61a4
                           0061A5   932 _RFERRM	=	0x61a5
                           0061A7   933 _RFRND	=	0x61a7
                           0061A8   934 _MDMCTRL0	=	0x61a8
                           0061A9   935 _MDMCTRL1	=	0x61a9
                           0061AA   936 _FREQEST	=	0x61aa
                           0061AB   937 _RXCTRL	=	0x61ab
                           0061AC   938 _FSCTRL	=	0x61ac
                           0061AD   939 _FSCAL0	=	0x61ad
                           0061AE   940 _FSCAL1	=	0x61ae
                           0061AF   941 _FSCAL2	=	0x61af
                           0061B0   942 _FSCAL3	=	0x61b0
                           0061B1   943 _AGCCTRL0	=	0x61b1
                           0061B2   944 _AGCCTRL1	=	0x61b2
                           0061B3   945 _AGCCTRL2	=	0x61b3
                           0061B4   946 _AGCCTRL3	=	0x61b4
                           0061B5   947 _ADCTEST0	=	0x61b5
                           0061B6   948 _ADCTEST1	=	0x61b6
                           0061B7   949 _ADCTEST2	=	0x61b7
                           0061B8   950 _MDMTEST0	=	0x61b8
                           0061B9   951 _MDMTEST1	=	0x61b9
                           0061BA   952 _DACTEST0	=	0x61ba
                           0061BB   953 _DACTEST1	=	0x61bb
                           0061BC   954 _DACTEST2	=	0x61bc
                           0061BD   955 _ATEST	=	0x61bd
                           0061BE   956 _PTEST0	=	0x61be
                           0061BF   957 _PTEST1	=	0x61bf
                           0061FA   958 _TXFILTCFG	=	0x61fa
                           0061EB   959 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   960 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   961 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   962 _CSPPROG0	=	0x61c0
                           0061C1   963 _CSPPROG1	=	0x61c1
                           0061C2   964 _CSPPROG2	=	0x61c2
                           0061C3   965 _CSPPROG3	=	0x61c3
                           0061C4   966 _CSPPROG4	=	0x61c4
                           0061C5   967 _CSPPROG5	=	0x61c5
                           0061C6   968 _CSPPROG6	=	0x61c6
                           0061C7   969 _CSPPROG7	=	0x61c7
                           0061C8   970 _CSPPROG8	=	0x61c8
                           0061C9   971 _CSPPROG9	=	0x61c9
                           0061CA   972 _CSPPROG10	=	0x61ca
                           0061CB   973 _CSPPROG11	=	0x61cb
                           0061CC   974 _CSPPROG12	=	0x61cc
                           0061CD   975 _CSPPROG13	=	0x61cd
                           0061CE   976 _CSPPROG14	=	0x61ce
                           0061CF   977 _CSPPROG15	=	0x61cf
                           0061D0   978 _CSPPROG16	=	0x61d0
                           0061D1   979 _CSPPROG17	=	0x61d1
                           0061D2   980 _CSPPROG18	=	0x61d2
                           0061D3   981 _CSPPROG19	=	0x61d3
                           0061D4   982 _CSPPROG20	=	0x61d4
                           0061D5   983 _CSPPROG21	=	0x61d5
                           0061D6   984 _CSPPROG22	=	0x61d6
                           0061D7   985 _CSPPROG23	=	0x61d7
                           0061E0   986 _CSPCTRL	=	0x61e0
                           0061E1   987 _CSPSTAT	=	0x61e1
                           0061E2   988 _CSPX	=	0x61e2
                           0061E3   989 _CSPY	=	0x61e3
                           0061E4   990 _CSPZ	=	0x61e4
                           0061E5   991 _CSPT	=	0x61e5
                           006200   992 _USBADDR	=	0x6200
                           006201   993 _USBPOW	=	0x6201
                           006202   994 _USBIIF	=	0x6202
                           006204   995 _USBOIF	=	0x6204
                           006206   996 _USBCIF	=	0x6206
                           006207   997 _USBIIE	=	0x6207
                           006209   998 _USBOIE	=	0x6209
                           00620B   999 _USBCIE	=	0x620b
                           00620C  1000 _USBFRML	=	0x620c
                           00620D  1001 _USBFRMH	=	0x620d
                           00620E  1002 _USBINDEX	=	0x620e
                           00620F  1003 _USBCTRL	=	0x620f
                           006210  1004 _USBMAXI	=	0x6210
                           006211  1005 _USBCS0	=	0x6211
                           006211  1006 _USBCSIL	=	0x6211
                           006212  1007 _USBCSIH	=	0x6212
                           006213  1008 _USBMAXO	=	0x6213
                           006214  1009 _USBCSOL	=	0x6214
                           006215  1010 _USBCSOH	=	0x6215
                           006216  1011 _USBCNT0	=	0x6216
                           006216  1012 _USBCNTL	=	0x6216
                           006217  1013 _USBCNTH	=	0x6217
                           006220  1014 _USBF0	=	0x6220
                           006222  1015 _USBF1	=	0x6222
                           006224  1016 _USBF2	=	0x6224
                           006226  1017 _USBF3	=	0x6226
                           006228  1018 _USBF4	=	0x6228
                           00622A  1019 _USBF5	=	0x622a
                           007080  1020 _X_P0	=	0x7080
                           007086  1021 _X_U0CSR	=	0x7086
                           007089  1022 _X_P0IFG	=	0x7089
                           00708A  1023 _X_P1IFG	=	0x708a
                           00708B  1024 _X_P2IFG	=	0x708b
                           00708C  1025 _X_PICTL	=	0x708c
                           00708D  1026 _X_P1IEN	=	0x708d
                           00708F  1027 _X_P0INP	=	0x708f
                           007090  1028 _X_P1	=	0x7090
                           007091  1029 _X_RFIRQF1	=	0x7091
                           007093  1030 _X_MPAGE	=	0x7093
                           007093  1031 _X__XPAGE	=	0x7093
                           007094  1032 _X_T2CTRL	=	0x7094
                           007095  1033 _X_ST0	=	0x7095
                           007096  1034 _X_ST1	=	0x7096
                           007097  1035 _X_ST2	=	0x7097
                           00709C  1036 _X_T2EVTCFG	=	0x709c
                           00709D  1037 _X_SLEEPSTA	=	0x709d
                           00709E  1038 _X_CLKCONSTA	=	0x709e
                           00709F  1039 _X_FMAP	=	0x709f
                           00709F  1040 _X_PSBANK	=	0x709f
                           0070A0  1041 _X_P2	=	0x70a0
                           0070A1  1042 _X_T2IRQF	=	0x70a1
                           0070A2  1043 _X_T2M0	=	0x70a2
                           0070A3  1044 _X_T2M1	=	0x70a3
                           0070A4  1045 _X_T2MOVF0	=	0x70a4
                           0070A5  1046 _X_T2MOVF1	=	0x70a5
                           0070A6  1047 _X_T2MOVF2	=	0x70a6
                           0070A7  1048 _X_T2IRQM	=	0x70a7
                           0070AB  1049 _X_P0IEN	=	0x70ab
                           0070AC  1050 _X_P2IEN	=	0x70ac
                           0070AD  1051 _X_STLOAD	=	0x70ad
                           0070AE  1052 _X_PMUX	=	0x70ae
                           0070AF  1053 _X_T1STAT	=	0x70af
                           0070B1  1054 _X_ENCDI	=	0x70b1
                           0070B2  1055 _X_ENCDO	=	0x70b2
                           0070B3  1056 _X_ENCCS	=	0x70b3
                           0070B4  1057 _X_ADCCON1	=	0x70b4
                           0070B5  1058 _X_ADCCON2	=	0x70b5
                           0070B6  1059 _X_ADCCON3	=	0x70b6
                           0070BA  1060 _X_ADCL	=	0x70ba
                           0070BB  1061 _X_ADCH	=	0x70bb
                           0070BC  1062 _X_RNDL	=	0x70bc
                           0070BD  1063 _X_RNDH	=	0x70bd
                           0070BE  1064 _X_SLEEPCMD	=	0x70be
                           0070BF  1065 _X_RFERRF	=	0x70bf
                           0070C1  1066 _X_U0DBUF	=	0x70c1
                           0070C2  1067 _X_U0BAUD	=	0x70c2
                           0070C3  1068 _X_T2MSEL	=	0x70c3
                           0070C4  1069 _X_U0UCR	=	0x70c4
                           0070C5  1070 _X_U0GCR	=	0x70c5
                           0070C6  1071 _X_CLKCONCMD	=	0x70c6
                           0070C7  1072 _X_MEMCTR	=	0x70c7
                           0070C9  1073 _X_WDCTL	=	0x70c9
                           0070CA  1074 _X_T3CNT	=	0x70ca
                           0070CB  1075 _X_T3CTL	=	0x70cb
                           0070CC  1076 _X_T3CCTL0	=	0x70cc
                           0070CD  1077 _X_T3CC0	=	0x70cd
                           0070CE  1078 _X_T3CCTL1	=	0x70ce
                           0070CF  1079 _X_T3CC1	=	0x70cf
                           0070D1  1080 _X_DMAIRQ	=	0x70d1
                           0070D2  1081 _X_DMA1CFGL	=	0x70d2
                           0070D3  1082 _X_DMA1CFGH	=	0x70d3
                           0070D4  1083 _X_DMA0CFGL	=	0x70d4
                           0070D5  1084 _X_DMA0CFGH	=	0x70d5
                           0070D6  1085 _X_DMAARM	=	0x70d6
                           0070D7  1086 _X_DMAREQ	=	0x70d7
                           0070D8  1087 _X_TIMIF	=	0x70d8
                           0070D9  1088 _X_RFD	=	0x70d9
                           0070DA  1089 _X_T1CC0L	=	0x70da
                           0070DB  1090 _X_T1CC0H	=	0x70db
                           0070DC  1091 _X_T1CC1L	=	0x70dc
                           0070DD  1092 _X_T1CC1H	=	0x70dd
                           0070DE  1093 _X_T1CC2L	=	0x70de
                           0070DF  1094 _X_T1CC2H	=	0x70df
                           0070E1  1095 _X_RFST	=	0x70e1
                           0070E2  1096 _X_T1CNTL	=	0x70e2
                           0070E3  1097 _X_T1CNTH	=	0x70e3
                           0070E4  1098 _X_T1CTL	=	0x70e4
                           0070E5  1099 _X_T1CCTL0	=	0x70e5
                           0070E6  1100 _X_T1CCTL1	=	0x70e6
                           0070E7  1101 _X_T1CCTL2	=	0x70e7
                           0070E9  1102 _X_RFIRQF0	=	0x70e9
                           0070EA  1103 _X_T4CNT	=	0x70ea
                           0070EB  1104 _X_T4CTL	=	0x70eb
                           0070EC  1105 _X_T4CCTL0	=	0x70ec
                           0070ED  1106 _X_T4CC0	=	0x70ed
                           0070EE  1107 _X_T4CCTL1	=	0x70ee
                           0070EF  1108 _X_T4CC1	=	0x70ef
                           0070F1  1109 _X_PERCFG	=	0x70f1
                           0070F2  1110 _X_APCFG	=	0x70f2
                           0070F3  1111 _X_P0SEL	=	0x70f3
                           0070F4  1112 _X_P1SEL	=	0x70f4
                           0070F5  1113 _X_P2SEL	=	0x70f5
                           0070F6  1114 _X_P1INP	=	0x70f6
                           0070F7  1115 _X_P2INP	=	0x70f7
                           0070F8  1116 _X_U1CSR	=	0x70f8
                           0070F9  1117 _X_U1DBUF	=	0x70f9
                           0070FA  1118 _X_U1BAUD	=	0x70fa
                           0070FB  1119 _X_U1UCR	=	0x70fb
                           0070FC  1120 _X_U1GCR	=	0x70fc
                           0070FD  1121 _X_P0DIR	=	0x70fd
                           0070FE  1122 _X_P1DIR	=	0x70fe
                           0070FF  1123 _X_P2DIR	=	0x70ff
                           007800  1124 _X_INFOPAGE	=	0x7800
                           00780C  1125 _X_IEEE_ADDR	=	0x780c
                                   1126 ;--------------------------------------------------------
                                   1127 ; absolute external ram data
                                   1128 ;--------------------------------------------------------
                                   1129 	.area XABS    (ABS,XDATA)
                                   1130 ;--------------------------------------------------------
                                   1131 ; external initialized ram data
                                   1132 ;--------------------------------------------------------
                                   1133 	.area XISEG   (XDATA)
                                   1134 	.area HOME    (CODE)
                                   1135 	.area GSINIT0 (CODE)
                                   1136 	.area GSINIT1 (CODE)
                                   1137 	.area GSINIT2 (CODE)
                                   1138 	.area GSINIT3 (CODE)
                                   1139 	.area GSINIT4 (CODE)
                                   1140 	.area GSINIT5 (CODE)
                                   1141 	.area GSINIT  (CODE)
                                   1142 	.area GSFINAL (CODE)
                                   1143 	.area CSEG    (CODE)
                                   1144 ;--------------------------------------------------------
                                   1145 ; global & static initialisations
                                   1146 ;--------------------------------------------------------
                                   1147 	.area HOME    (CODE)
                                   1148 	.area GSINIT  (CODE)
                                   1149 	.area GSFINAL (CODE)
                                   1150 	.area GSINIT  (CODE)
                                   1151 ;--------------------------------------------------------
                                   1152 ; Home
                                   1153 ;--------------------------------------------------------
                                   1154 	.area HOME    (CODE)
                                   1155 	.area HOME    (CODE)
                                   1156 ;--------------------------------------------------------
                                   1157 ; code
                                   1158 ;--------------------------------------------------------
                                   1159 	.area BANK1   (CODE)
                                   1160 ;------------------------------------------------------------
                                   1161 ;Allocation info for local variables in function 'get_bits_in_byte'
                                   1162 ;------------------------------------------------------------
                                   1163 ;bitpos                    Allocated to stack - sp -4
                                   1164 ;vallen                    Allocated to stack - sp -6
                                   1165 ;from                      Allocated to registers r5 r6 r7 
                                   1166 ;shifted_val               Allocated to registers r4 r3 
                                   1167 ;------------------------------------------------------------
                                   1168 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:73: get_bits_in_byte(uint8_t *from, int bitpos, int vallen)
                                   1169 ;	-----------------------------------------
                                   1170 ;	 function get_bits_in_byte
                                   1171 ;	-----------------------------------------
      000000                       1172 _get_bits_in_byte:
                           000007  1173 	ar7 = 0x07
                           000006  1174 	ar6 = 0x06
                           000005  1175 	ar5 = 0x05
                           000004  1176 	ar4 = 0x04
                           000003  1177 	ar3 = 0x03
                           000002  1178 	ar2 = 0x02
                           000001  1179 	ar1 = 0x01
                           000000  1180 	ar0 = 0x00
                                   1181 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:77: shifted_val = (from[0] << 8) | from[1];
      000000 AD 82            [24] 1182 	mov	r5,dpl
      000002 AE 83            [24] 1183 	mov	r6,dph
      000004 AF F0            [24] 1184 	mov	r7,b
      000006 12r00r00         [24] 1185 	lcall	__gptrget
      000009 FB               [12] 1186 	mov	r3,a
      00000A 7C 00            [12] 1187 	mov	r4,#0x00
      00000C 0D               [12] 1188 	inc	r5
      00000D BD 00 01         [24] 1189 	cjne	r5,#0x00,00103$
      000010 0E               [12] 1190 	inc	r6
      000011                       1191 00103$:
      000011 8D 82            [24] 1192 	mov	dpl,r5
      000013 8E 83            [24] 1193 	mov	dph,r6
      000015 8F F0            [24] 1194 	mov	b,r7
      000017 12r00r00         [24] 1195 	lcall	__gptrget
      00001A FD               [12] 1196 	mov	r5,a
      00001B 7F 00            [12] 1197 	mov	r7,#0x00
      00001D 42 04            [12] 1198 	orl	ar4,a
      00001F EF               [12] 1199 	mov	a,r7
      000020 42 03            [12] 1200 	orl	ar3,a
                                   1201 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:85: return (((shifted_val << bitpos) >> 8) & bitmask[vallen]) >> (8 - vallen);
      000022 E5 81            [12] 1202 	mov	a,sp
      000024 24 FC            [12] 1203 	add	a,#0xfc
      000026 F8               [12] 1204 	mov	r0,a
      000027 86 F0            [24] 1205 	mov	b,@r0
      000029 05 F0            [12] 1206 	inc	b
      00002B 80 06            [24] 1207 	sjmp	00105$
      00002D                       1208 00104$:
      00002D EC               [12] 1209 	mov	a,r4
      00002E 2C               [12] 1210 	add	a,r4
      00002F FC               [12] 1211 	mov	r4,a
      000030 EB               [12] 1212 	mov	a,r3
      000031 33               [12] 1213 	rlc	a
      000032 FB               [12] 1214 	mov	r3,a
      000033                       1215 00105$:
      000033 D5 F0 F7         [24] 1216 	djnz	b,00104$
      000036 8B 04            [24] 1217 	mov	ar4,r3
      000038 7B 00            [12] 1218 	mov	r3,#0x00
      00003A E5 81            [12] 1219 	mov	a,sp
      00003C 24 FA            [12] 1220 	add	a,#0xfa
      00003E F8               [12] 1221 	mov	r0,a
      00003F E6               [12] 1222 	mov	a,@r0
      000040 24r00            [12] 1223 	add	a,#_bitmask
      000042 F5 82            [12] 1224 	mov	dpl,a
      000044 08               [12] 1225 	inc	r0
      000045 E6               [12] 1226 	mov	a,@r0
      000046 34s00            [12] 1227 	addc	a,#(_bitmask >> 8)
      000048 F5 83            [12] 1228 	mov	dph,a
      00004A E4               [12] 1229 	clr	a
      00004B 93               [24] 1230 	movc	a,@a+dptr
      00004C 7E 00            [12] 1231 	mov	r6,#0x00
      00004E 52 04            [12] 1232 	anl	ar4,a
      000050 EE               [12] 1233 	mov	a,r6
      000051 52 03            [12] 1234 	anl	ar3,a
      000053 E5 81            [12] 1235 	mov	a,sp
      000055 24 FA            [12] 1236 	add	a,#0xfa
      000057 F8               [12] 1237 	mov	r0,a
      000058 74 08            [12] 1238 	mov	a,#0x08
      00005A C3               [12] 1239 	clr	c
      00005B 96               [12] 1240 	subb	a,@r0
      00005C FE               [12] 1241 	mov	r6,a
      00005D E4               [12] 1242 	clr	a
      00005E 08               [12] 1243 	inc	r0
      00005F 96               [12] 1244 	subb	a,@r0
      000060 FF               [12] 1245 	mov	r7,a
      000061 8E F0            [24] 1246 	mov	b,r6
      000063 05 F0            [12] 1247 	inc	b
      000065 80 07            [24] 1248 	sjmp	00107$
      000067                       1249 00106$:
      000067 C3               [12] 1250 	clr	c
      000068 EB               [12] 1251 	mov	a,r3
      000069 13               [12] 1252 	rrc	a
      00006A FB               [12] 1253 	mov	r3,a
      00006B EC               [12] 1254 	mov	a,r4
      00006C 13               [12] 1255 	rrc	a
      00006D FC               [12] 1256 	mov	r4,a
      00006E                       1257 00107$:
      00006E D5 F0 F6         [24] 1258 	djnz	b,00106$
      000071 8C 82            [24] 1259 	mov	dpl,r4
      000073 02r00r00         [24] 1260 	ljmp	__sdcc_banked_ret
                                   1261 ;------------------------------------------------------------
                                   1262 ;Allocation info for local variables in function 'get_bits'
                                   1263 ;------------------------------------------------------------
                                   1264 ;from                      Allocated to stack - sp -12
                                   1265 ;bitpos                    Allocated to stack - sp -14
                                   1266 ;vallen                    Allocated to stack - sp -16
                                   1267 ;to                        Allocated to stack - sp -6
                                   1268 ;i                         Allocated to stack - sp -3
                                   1269 ;bits                      Allocated to stack - sp -1
                                   1270 ;------------------------------------------------------------
                                   1271 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:89: get_bits(uint8_t *to, uint8_t *from, int bitpos, int vallen)
                                   1272 ;	-----------------------------------------
                                   1273 ;	 function get_bits
                                   1274 ;	-----------------------------------------
      000076                       1275 _get_bits:
      000076 C0 82            [24] 1276 	push	dpl
      000078 C0 83            [24] 1277 	push	dph
      00007A C0 F0            [24] 1278 	push	b
      00007C E5 81            [12] 1279 	mov	a,sp
      00007E 24 04            [12] 1280 	add	a,#0x04
                                   1281 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:94: if(vallen < 8) {
      000080 F5 81            [12] 1282 	mov	sp,a
      000082 24 F0            [12] 1283 	add	a,#0xf0
      000084 F8               [12] 1284 	mov	r0,a
      000085 C3               [12] 1285 	clr	c
      000086 E6               [12] 1286 	mov	a,@r0
      000087 94 08            [12] 1287 	subb	a,#0x08
      000089 08               [12] 1288 	inc	r0
      00008A E6               [12] 1289 	mov	a,@r0
      00008B 64 80            [12] 1290 	xrl	a,#0x80
      00008D 94 80            [12] 1291 	subb	a,#0x80
      00008F 50 48            [24] 1292 	jnc	00111$
                                   1293 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:95: *to = get_bits_in_byte(from, bitpos, vallen);
      000091 E5 81            [12] 1294 	mov	a,sp
      000093 24 F0            [12] 1295 	add	a,#0xf0
      000095 F8               [12] 1296 	mov	r0,a
      000096 E6               [12] 1297 	mov	a,@r0
      000097 C0 E0            [24] 1298 	push	acc
      000099 08               [12] 1299 	inc	r0
      00009A E6               [12] 1300 	mov	a,@r0
      00009B C0 E0            [24] 1301 	push	acc
      00009D E5 81            [12] 1302 	mov	a,sp
      00009F 24 F0            [12] 1303 	add	a,#0xf0
      0000A1 F8               [12] 1304 	mov	r0,a
      0000A2 E6               [12] 1305 	mov	a,@r0
      0000A3 C0 E0            [24] 1306 	push	acc
      0000A5 08               [12] 1307 	inc	r0
      0000A6 E6               [12] 1308 	mov	a,@r0
      0000A7 C0 E0            [24] 1309 	push	acc
      0000A9 E5 81            [12] 1310 	mov	a,sp
      0000AB 24 F0            [12] 1311 	add	a,#0xf0
      0000AD F8               [12] 1312 	mov	r0,a
      0000AE 86 82            [24] 1313 	mov	dpl,@r0
      0000B0 08               [12] 1314 	inc	r0
      0000B1 86 83            [24] 1315 	mov	dph,@r0
      0000B3 08               [12] 1316 	inc	r0
      0000B4 86 F0            [24] 1317 	mov	b,@r0
      0000B6 78r00            [12] 1318 	mov	r0,#_get_bits_in_byte
      0000B8 79s00            [12] 1319 	mov	r1,#(_get_bits_in_byte >> 8)
      0000BA 7As00            [12] 1320 	mov	r2,#(_get_bits_in_byte >> 16)
      0000BC 12r00r00         [24] 1321 	lcall	__sdcc_banked_call
      0000BF AC 82            [24] 1322 	mov	r4,dpl
      0000C1 E5 81            [12] 1323 	mov	a,sp
      0000C3 24 FC            [12] 1324 	add	a,#0xfc
      0000C5 F5 81            [12] 1325 	mov	sp,a
      0000C7 24 FA            [12] 1326 	add	a,#0xfa
      0000C9 F8               [12] 1327 	mov	r0,a
      0000CA 86 82            [24] 1328 	mov	dpl,@r0
      0000CC 08               [12] 1329 	inc	r0
      0000CD 86 83            [24] 1330 	mov	dph,@r0
      0000CF 08               [12] 1331 	inc	r0
      0000D0 86 F0            [24] 1332 	mov	b,@r0
      0000D2 EC               [12] 1333 	mov	a,r4
      0000D3 12r00r00         [24] 1334 	lcall	__gptrput
      0000D6 02r03r3A         [24] 1335 	ljmp	00119$
      0000D9                       1336 00111$:
                                   1337 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:97: if(bitpos == 0) {
      0000D9 E5 81            [12] 1338 	mov	a,sp
      0000DB 24 F2            [12] 1339 	add	a,#0xf2
      0000DD F8               [12] 1340 	mov	r0,a
      0000DE E6               [12] 1341 	mov	a,@r0
      0000DF 08               [12] 1342 	inc	r0
      0000E0 46               [12] 1343 	orl	a,@r0
      0000E1 60 03            [24] 1344 	jz	00148$
      0000E3 02r01rF7         [24] 1345 	ljmp	00127$
      0000E6                       1346 00148$:
                                   1347 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:98: for(i = 0; i < vallen / 8; ++i) {
      0000E6 74 08            [12] 1348 	mov	a,#0x08
      0000E8 C0 E0            [24] 1349 	push	acc
      0000EA E4               [12] 1350 	clr	a
      0000EB C0 E0            [24] 1351 	push	acc
      0000ED E5 81            [12] 1352 	mov	a,sp
      0000EF 24 EE            [12] 1353 	add	a,#0xee
      0000F1 F8               [12] 1354 	mov	r0,a
      0000F2 86 82            [24] 1355 	mov	dpl,@r0
      0000F4 08               [12] 1356 	inc	r0
      0000F5 86 83            [24] 1357 	mov	dph,@r0
      0000F7 12r00r00         [24] 1358 	lcall	__divsint
      0000FA AB 82            [24] 1359 	mov	r3,dpl
      0000FC AC 83            [24] 1360 	mov	r4,dph
      0000FE 15 81            [12] 1361 	dec	sp
      000100 15 81            [12] 1362 	dec	sp
      000102 E5 81            [12] 1363 	mov	a,sp
      000104 24 FD            [12] 1364 	add	a,#0xfd
      000106 F8               [12] 1365 	mov	r0,a
      000107 E4               [12] 1366 	clr	a
      000108 F6               [12] 1367 	mov	@r0,a
      000109 08               [12] 1368 	inc	r0
      00010A F6               [12] 1369 	mov	@r0,a
      00010B                       1370 00114$:
      00010B E5 81            [12] 1371 	mov	a,sp
      00010D 24 FD            [12] 1372 	add	a,#0xfd
      00010F F8               [12] 1373 	mov	r0,a
      000110 C3               [12] 1374 	clr	c
      000111 E6               [12] 1375 	mov	a,@r0
      000112 9B               [12] 1376 	subb	a,r3
      000113 08               [12] 1377 	inc	r0
      000114 E6               [12] 1378 	mov	a,@r0
      000115 64 80            [12] 1379 	xrl	a,#0x80
      000117 8C F0            [24] 1380 	mov	b,r4
      000119 63 F0 80         [24] 1381 	xrl	b,#0x80
      00011C 95 F0            [12] 1382 	subb	a,b
      00011E 50 52            [24] 1383 	jnc	00101$
                                   1384 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:101: to[i] = from[i];
      000120 C0 03            [24] 1385 	push	ar3
      000122 C0 04            [24] 1386 	push	ar4
      000124 E5 81            [12] 1387 	mov	a,sp
      000126 24 F8            [12] 1388 	add	a,#0xf8
      000128 F8               [12] 1389 	mov	r0,a
      000129 E5 81            [12] 1390 	mov	a,sp
      00012B 24 FB            [12] 1391 	add	a,#0xfb
      00012D F9               [12] 1392 	mov	r1,a
      00012E E7               [12] 1393 	mov	a,@r1
      00012F 26               [12] 1394 	add	a,@r0
      000130 FC               [12] 1395 	mov	r4,a
      000131 09               [12] 1396 	inc	r1
      000132 E7               [12] 1397 	mov	a,@r1
      000133 08               [12] 1398 	inc	r0
      000134 36               [12] 1399 	addc	a,@r0
      000135 FD               [12] 1400 	mov	r5,a
      000136 08               [12] 1401 	inc	r0
      000137 86 06            [24] 1402 	mov	ar6,@r0
      000139 E5 81            [12] 1403 	mov	a,sp
      00013B 24 F2            [12] 1404 	add	a,#0xf2
      00013D F8               [12] 1405 	mov	r0,a
      00013E E5 81            [12] 1406 	mov	a,sp
      000140 24 FB            [12] 1407 	add	a,#0xfb
      000142 F9               [12] 1408 	mov	r1,a
      000143 E7               [12] 1409 	mov	a,@r1
      000144 26               [12] 1410 	add	a,@r0
      000145 FA               [12] 1411 	mov	r2,a
      000146 09               [12] 1412 	inc	r1
      000147 E7               [12] 1413 	mov	a,@r1
      000148 08               [12] 1414 	inc	r0
      000149 36               [12] 1415 	addc	a,@r0
      00014A FB               [12] 1416 	mov	r3,a
      00014B 08               [12] 1417 	inc	r0
      00014C 86 07            [24] 1418 	mov	ar7,@r0
      00014E 8A 82            [24] 1419 	mov	dpl,r2
      000150 8B 83            [24] 1420 	mov	dph,r3
      000152 8F F0            [24] 1421 	mov	b,r7
      000154 12r00r00         [24] 1422 	lcall	__gptrget
      000157 FA               [12] 1423 	mov	r2,a
      000158 8C 82            [24] 1424 	mov	dpl,r4
      00015A 8D 83            [24] 1425 	mov	dph,r5
      00015C 8E F0            [24] 1426 	mov	b,r6
      00015E 12r00r00         [24] 1427 	lcall	__gptrput
                                   1428 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:98: for(i = 0; i < vallen / 8; ++i) {
      000161 E5 81            [12] 1429 	mov	a,sp
      000163 24 FB            [12] 1430 	add	a,#0xfb
      000165 F8               [12] 1431 	mov	r0,a
      000166 06               [12] 1432 	inc	@r0
      000167 B6 00 02         [24] 1433 	cjne	@r0,#0x00,00150$
      00016A 08               [12] 1434 	inc	r0
      00016B 06               [12] 1435 	inc	@r0
      00016C                       1436 00150$:
      00016C D0 04            [24] 1437 	pop	ar4
      00016E D0 03            [24] 1438 	pop	ar3
      000170 80 99            [24] 1439 	sjmp	00114$
      000172                       1440 00101$:
                                   1441 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:103: bits = vallen & 7;
      000172 E5 81            [12] 1442 	mov	a,sp
      000174 24 F0            [12] 1443 	add	a,#0xf0
      000176 F8               [12] 1444 	mov	r0,a
      000177 A9 81            [24] 1445 	mov	r1,sp
      000179 19               [12] 1446 	dec	r1
      00017A 74 07            [12] 1447 	mov	a,#0x07
      00017C 56               [12] 1448 	anl	a,@r0
      00017D F7               [12] 1449 	mov	@r1,a
      00017E 09               [12] 1450 	inc	r1
      00017F 77 00            [12] 1451 	mov	@r1,#0x00
                                   1452 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:104: if(bits) {
      000181 A8 81            [24] 1453 	mov	r0,sp
      000183 18               [12] 1454 	dec	r0
      000184 E6               [12] 1455 	mov	a,@r0
      000185 08               [12] 1456 	inc	r0
      000186 46               [12] 1457 	orl	a,@r0
      000187 70 03            [24] 1458 	jnz	00151$
      000189 02r03r3A         [24] 1459 	ljmp	00119$
      00018C                       1460 00151$:
                                   1461 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:105: to[i] = get_bits_in_byte(&from[i], 0, bits);
      00018C E5 81            [12] 1462 	mov	a,sp
      00018E 24 FA            [12] 1463 	add	a,#0xfa
      000190 F8               [12] 1464 	mov	r0,a
      000191 E5 81            [12] 1465 	mov	a,sp
      000193 24 FD            [12] 1466 	add	a,#0xfd
      000195 F9               [12] 1467 	mov	r1,a
      000196 E7               [12] 1468 	mov	a,@r1
      000197 26               [12] 1469 	add	a,@r0
      000198 FB               [12] 1470 	mov	r3,a
      000199 09               [12] 1471 	inc	r1
      00019A E7               [12] 1472 	mov	a,@r1
      00019B 08               [12] 1473 	inc	r0
      00019C 36               [12] 1474 	addc	a,@r0
      00019D FC               [12] 1475 	mov	r4,a
      00019E 08               [12] 1476 	inc	r0
      00019F 86 05            [24] 1477 	mov	ar5,@r0
      0001A1 E5 81            [12] 1478 	mov	a,sp
      0001A3 24 F4            [12] 1479 	add	a,#0xf4
      0001A5 F8               [12] 1480 	mov	r0,a
      0001A6 E5 81            [12] 1481 	mov	a,sp
      0001A8 24 FD            [12] 1482 	add	a,#0xfd
      0001AA F9               [12] 1483 	mov	r1,a
      0001AB E7               [12] 1484 	mov	a,@r1
      0001AC 26               [12] 1485 	add	a,@r0
      0001AD FA               [12] 1486 	mov	r2,a
      0001AE 09               [12] 1487 	inc	r1
      0001AF E7               [12] 1488 	mov	a,@r1
      0001B0 08               [12] 1489 	inc	r0
      0001B1 36               [12] 1490 	addc	a,@r0
      0001B2 FE               [12] 1491 	mov	r6,a
      0001B3 08               [12] 1492 	inc	r0
      0001B4 86 07            [24] 1493 	mov	ar7,@r0
      0001B6 C0 05            [24] 1494 	push	ar5
      0001B8 C0 04            [24] 1495 	push	ar4
      0001BA C0 03            [24] 1496 	push	ar3
      0001BC E5 81            [12] 1497 	mov	a,sp
      0001BE 24 FC            [12] 1498 	add	a,#0xfc
      0001C0 F8               [12] 1499 	mov	r0,a
      0001C1 E6               [12] 1500 	mov	a,@r0
      0001C2 C0 E0            [24] 1501 	push	acc
      0001C4 08               [12] 1502 	inc	r0
      0001C5 E6               [12] 1503 	mov	a,@r0
      0001C6 C0 E0            [24] 1504 	push	acc
      0001C8 E4               [12] 1505 	clr	a
      0001C9 C0 E0            [24] 1506 	push	acc
      0001CB C0 E0            [24] 1507 	push	acc
      0001CD 8A 82            [24] 1508 	mov	dpl,r2
      0001CF 8E 83            [24] 1509 	mov	dph,r6
      0001D1 8F F0            [24] 1510 	mov	b,r7
      0001D3 78r00            [12] 1511 	mov	r0,#_get_bits_in_byte
      0001D5 79s00            [12] 1512 	mov	r1,#(_get_bits_in_byte >> 8)
      0001D7 7As00            [12] 1513 	mov	r2,#(_get_bits_in_byte >> 16)
      0001D9 12r00r00         [24] 1514 	lcall	__sdcc_banked_call
      0001DC AF 82            [24] 1515 	mov	r7,dpl
      0001DE E5 81            [12] 1516 	mov	a,sp
      0001E0 24 FC            [12] 1517 	add	a,#0xfc
      0001E2 F5 81            [12] 1518 	mov	sp,a
      0001E4 D0 03            [24] 1519 	pop	ar3
      0001E6 D0 04            [24] 1520 	pop	ar4
      0001E8 D0 05            [24] 1521 	pop	ar5
      0001EA 8B 82            [24] 1522 	mov	dpl,r3
      0001EC 8C 83            [24] 1523 	mov	dph,r4
      0001EE 8D F0            [24] 1524 	mov	b,r5
      0001F0 EF               [12] 1525 	mov	a,r7
      0001F1 12r00r00         [24] 1526 	lcall	__gptrput
      0001F4 02r03r3A         [24] 1527 	ljmp	00119$
                                   1528 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:108: for(i = 0; i < vallen / 8; ++i) {
      0001F7                       1529 00127$:
      0001F7 74 08            [12] 1530 	mov	a,#0x08
      0001F9 C0 E0            [24] 1531 	push	acc
      0001FB E4               [12] 1532 	clr	a
      0001FC C0 E0            [24] 1533 	push	acc
      0001FE E5 81            [12] 1534 	mov	a,sp
      000200 24 EE            [12] 1535 	add	a,#0xee
      000202 F8               [12] 1536 	mov	r0,a
      000203 86 82            [24] 1537 	mov	dpl,@r0
      000205 08               [12] 1538 	inc	r0
      000206 86 83            [24] 1539 	mov	dph,@r0
      000208 12r00r00         [24] 1540 	lcall	__divsint
      00020B AE 82            [24] 1541 	mov	r6,dpl
      00020D AF 83            [24] 1542 	mov	r7,dph
      00020F 15 81            [12] 1543 	dec	sp
      000211 15 81            [12] 1544 	dec	sp
      000213 E5 81            [12] 1545 	mov	a,sp
      000215 24 FD            [12] 1546 	add	a,#0xfd
      000217 F8               [12] 1547 	mov	r0,a
      000218 E4               [12] 1548 	clr	a
      000219 F6               [12] 1549 	mov	@r0,a
      00021A 08               [12] 1550 	inc	r0
      00021B F6               [12] 1551 	mov	@r0,a
      00021C                       1552 00117$:
      00021C E5 81            [12] 1553 	mov	a,sp
      00021E 24 FD            [12] 1554 	add	a,#0xfd
      000220 F8               [12] 1555 	mov	r0,a
      000221 C3               [12] 1556 	clr	c
      000222 E6               [12] 1557 	mov	a,@r0
      000223 9E               [12] 1558 	subb	a,r6
      000224 08               [12] 1559 	inc	r0
      000225 E6               [12] 1560 	mov	a,@r0
      000226 64 80            [12] 1561 	xrl	a,#0x80
      000228 8F F0            [24] 1562 	mov	b,r7
      00022A 63 F0 80         [24] 1563 	xrl	b,#0x80
      00022D 95 F0            [12] 1564 	subb	a,b
      00022F 40 03            [24] 1565 	jc	00152$
      000231 02r02rB4         [24] 1566 	ljmp	00104$
      000234                       1567 00152$:
                                   1568 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:111: to[i] = get_bits_in_byte(&from[i], bitpos, 8);
      000234 C0 06            [24] 1569 	push	ar6
      000236 C0 07            [24] 1570 	push	ar7
      000238 E5 81            [12] 1571 	mov	a,sp
      00023A 24 F8            [12] 1572 	add	a,#0xf8
      00023C F8               [12] 1573 	mov	r0,a
      00023D E5 81            [12] 1574 	mov	a,sp
      00023F 24 FB            [12] 1575 	add	a,#0xfb
      000241 F9               [12] 1576 	mov	r1,a
      000242 E7               [12] 1577 	mov	a,@r1
      000243 26               [12] 1578 	add	a,@r0
      000244 FA               [12] 1579 	mov	r2,a
      000245 09               [12] 1580 	inc	r1
      000246 E7               [12] 1581 	mov	a,@r1
      000247 08               [12] 1582 	inc	r0
      000248 36               [12] 1583 	addc	a,@r0
      000249 FB               [12] 1584 	mov	r3,a
      00024A 08               [12] 1585 	inc	r0
      00024B 86 07            [24] 1586 	mov	ar7,@r0
      00024D E5 81            [12] 1587 	mov	a,sp
      00024F 24 F2            [12] 1588 	add	a,#0xf2
      000251 F8               [12] 1589 	mov	r0,a
      000252 E5 81            [12] 1590 	mov	a,sp
      000254 24 FB            [12] 1591 	add	a,#0xfb
      000256 F9               [12] 1592 	mov	r1,a
      000257 E7               [12] 1593 	mov	a,@r1
      000258 26               [12] 1594 	add	a,@r0
      000259 FC               [12] 1595 	mov	r4,a
      00025A 09               [12] 1596 	inc	r1
      00025B E7               [12] 1597 	mov	a,@r1
      00025C 08               [12] 1598 	inc	r0
      00025D 36               [12] 1599 	addc	a,@r0
      00025E FD               [12] 1600 	mov	r5,a
      00025F 08               [12] 1601 	inc	r0
      000260 86 06            [24] 1602 	mov	ar6,@r0
      000262 C0 07            [24] 1603 	push	ar7
      000264 C0 03            [24] 1604 	push	ar3
      000266 C0 02            [24] 1605 	push	ar2
      000268 74 08            [12] 1606 	mov	a,#0x08
      00026A C0 E0            [24] 1607 	push	acc
      00026C E4               [12] 1608 	clr	a
      00026D C0 E0            [24] 1609 	push	acc
      00026F E5 81            [12] 1610 	mov	a,sp
      000271 24 EB            [12] 1611 	add	a,#0xeb
      000273 F8               [12] 1612 	mov	r0,a
      000274 E6               [12] 1613 	mov	a,@r0
      000275 C0 E0            [24] 1614 	push	acc
      000277 08               [12] 1615 	inc	r0
      000278 E6               [12] 1616 	mov	a,@r0
      000279 C0 E0            [24] 1617 	push	acc
      00027B 8C 82            [24] 1618 	mov	dpl,r4
      00027D 8D 83            [24] 1619 	mov	dph,r5
      00027F 8E F0            [24] 1620 	mov	b,r6
      000281 78r00            [12] 1621 	mov	r0,#_get_bits_in_byte
      000283 79s00            [12] 1622 	mov	r1,#(_get_bits_in_byte >> 8)
      000285 7As00            [12] 1623 	mov	r2,#(_get_bits_in_byte >> 16)
      000287 12r00r00         [24] 1624 	lcall	__sdcc_banked_call
      00028A AE 82            [24] 1625 	mov	r6,dpl
      00028C E5 81            [12] 1626 	mov	a,sp
      00028E 24 FC            [12] 1627 	add	a,#0xfc
      000290 F5 81            [12] 1628 	mov	sp,a
      000292 D0 02            [24] 1629 	pop	ar2
      000294 D0 03            [24] 1630 	pop	ar3
      000296 D0 07            [24] 1631 	pop	ar7
      000298 8A 82            [24] 1632 	mov	dpl,r2
      00029A 8B 83            [24] 1633 	mov	dph,r3
      00029C 8F F0            [24] 1634 	mov	b,r7
      00029E EE               [12] 1635 	mov	a,r6
      00029F 12r00r00         [24] 1636 	lcall	__gptrput
                                   1637 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:108: for(i = 0; i < vallen / 8; ++i) {
      0002A2 E5 81            [12] 1638 	mov	a,sp
      0002A4 24 FB            [12] 1639 	add	a,#0xfb
      0002A6 F8               [12] 1640 	mov	r0,a
      0002A7 06               [12] 1641 	inc	@r0
      0002A8 B6 00 02         [24] 1642 	cjne	@r0,#0x00,00153$
      0002AB 08               [12] 1643 	inc	r0
      0002AC 06               [12] 1644 	inc	@r0
      0002AD                       1645 00153$:
      0002AD D0 07            [24] 1646 	pop	ar7
      0002AF D0 06            [24] 1647 	pop	ar6
      0002B1 02r02r1C         [24] 1648 	ljmp	00117$
      0002B4                       1649 00104$:
                                   1650 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:113: bits = vallen & 7;
      0002B4 E5 81            [12] 1651 	mov	a,sp
      0002B6 24 F0            [12] 1652 	add	a,#0xf0
      0002B8 F8               [12] 1653 	mov	r0,a
      0002B9 A9 81            [24] 1654 	mov	r1,sp
      0002BB 19               [12] 1655 	dec	r1
      0002BC 74 07            [12] 1656 	mov	a,#0x07
      0002BE 56               [12] 1657 	anl	a,@r0
      0002BF F7               [12] 1658 	mov	@r1,a
      0002C0 09               [12] 1659 	inc	r1
      0002C1 77 00            [12] 1660 	mov	@r1,#0x00
                                   1661 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:114: if(bits) {
      0002C3 A8 81            [24] 1662 	mov	r0,sp
      0002C5 18               [12] 1663 	dec	r0
      0002C6 E6               [12] 1664 	mov	a,@r0
      0002C7 08               [12] 1665 	inc	r0
      0002C8 46               [12] 1666 	orl	a,@r0
      0002C9 60 6F            [24] 1667 	jz	00119$
                                   1668 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:115: to[i] = get_bits_in_byte(&from[i], bitpos, bits);
      0002CB E5 81            [12] 1669 	mov	a,sp
      0002CD 24 FA            [12] 1670 	add	a,#0xfa
      0002CF F8               [12] 1671 	mov	r0,a
      0002D0 E5 81            [12] 1672 	mov	a,sp
      0002D2 24 FD            [12] 1673 	add	a,#0xfd
      0002D4 F9               [12] 1674 	mov	r1,a
      0002D5 E7               [12] 1675 	mov	a,@r1
      0002D6 26               [12] 1676 	add	a,@r0
      0002D7 FD               [12] 1677 	mov	r5,a
      0002D8 09               [12] 1678 	inc	r1
      0002D9 E7               [12] 1679 	mov	a,@r1
      0002DA 08               [12] 1680 	inc	r0
      0002DB 36               [12] 1681 	addc	a,@r0
      0002DC FE               [12] 1682 	mov	r6,a
      0002DD 08               [12] 1683 	inc	r0
      0002DE 86 07            [24] 1684 	mov	ar7,@r0
      0002E0 E5 81            [12] 1685 	mov	a,sp
      0002E2 24 F4            [12] 1686 	add	a,#0xf4
      0002E4 F8               [12] 1687 	mov	r0,a
      0002E5 E5 81            [12] 1688 	mov	a,sp
      0002E7 24 FD            [12] 1689 	add	a,#0xfd
      0002E9 F9               [12] 1690 	mov	r1,a
      0002EA E7               [12] 1691 	mov	a,@r1
      0002EB 26               [12] 1692 	add	a,@r0
      0002EC FA               [12] 1693 	mov	r2,a
      0002ED 09               [12] 1694 	inc	r1
      0002EE E7               [12] 1695 	mov	a,@r1
      0002EF 08               [12] 1696 	inc	r0
      0002F0 36               [12] 1697 	addc	a,@r0
      0002F1 FB               [12] 1698 	mov	r3,a
      0002F2 08               [12] 1699 	inc	r0
      0002F3 86 04            [24] 1700 	mov	ar4,@r0
      0002F5 C0 07            [24] 1701 	push	ar7
      0002F7 C0 06            [24] 1702 	push	ar6
      0002F9 C0 05            [24] 1703 	push	ar5
      0002FB E5 81            [12] 1704 	mov	a,sp
      0002FD 24 FC            [12] 1705 	add	a,#0xfc
      0002FF F8               [12] 1706 	mov	r0,a
      000300 E6               [12] 1707 	mov	a,@r0
      000301 C0 E0            [24] 1708 	push	acc
      000303 08               [12] 1709 	inc	r0
      000304 E6               [12] 1710 	mov	a,@r0
      000305 C0 E0            [24] 1711 	push	acc
      000307 E5 81            [12] 1712 	mov	a,sp
      000309 24 ED            [12] 1713 	add	a,#0xed
      00030B F8               [12] 1714 	mov	r0,a
      00030C E6               [12] 1715 	mov	a,@r0
      00030D C0 E0            [24] 1716 	push	acc
      00030F 08               [12] 1717 	inc	r0
      000310 E6               [12] 1718 	mov	a,@r0
      000311 C0 E0            [24] 1719 	push	acc
      000313 8A 82            [24] 1720 	mov	dpl,r2
      000315 8B 83            [24] 1721 	mov	dph,r3
      000317 8C F0            [24] 1722 	mov	b,r4
      000319 78r00            [12] 1723 	mov	r0,#_get_bits_in_byte
      00031B 79s00            [12] 1724 	mov	r1,#(_get_bits_in_byte >> 8)
      00031D 7As00            [12] 1725 	mov	r2,#(_get_bits_in_byte >> 16)
      00031F 12r00r00         [24] 1726 	lcall	__sdcc_banked_call
      000322 AC 82            [24] 1727 	mov	r4,dpl
      000324 E5 81            [12] 1728 	mov	a,sp
      000326 24 FC            [12] 1729 	add	a,#0xfc
      000328 F5 81            [12] 1730 	mov	sp,a
      00032A D0 05            [24] 1731 	pop	ar5
      00032C D0 06            [24] 1732 	pop	ar6
      00032E D0 07            [24] 1733 	pop	ar7
      000330 8D 82            [24] 1734 	mov	dpl,r5
      000332 8E 83            [24] 1735 	mov	dph,r6
      000334 8F F0            [24] 1736 	mov	b,r7
      000336 EC               [12] 1737 	mov	a,r4
      000337 12r00r00         [24] 1738 	lcall	__gptrput
      00033A                       1739 00119$:
      00033A E5 81            [12] 1740 	mov	a,sp
      00033C 24 F9            [12] 1741 	add	a,#0xF9
      00033E F5 81            [12] 1742 	mov	sp,a
      000340 02r00r00         [24] 1743 	ljmp	__sdcc_banked_ret
                                   1744 ;------------------------------------------------------------
                                   1745 ;Allocation info for local variables in function 'header_size'
                                   1746 ;------------------------------------------------------------
                                   1747 ;a                         Allocated to registers 
                                   1748 ;size                      Allocated to stack - sp -1
                                   1749 ;len                       Allocated to registers r2 r4 
                                   1750 ;------------------------------------------------------------
                                   1751 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:122: header_size(const struct packetbuf_attrlist *a)
                                   1752 ;	-----------------------------------------
                                   1753 ;	 function header_size
                                   1754 ;	-----------------------------------------
      000343                       1755 _header_size:
      000343 05 81            [12] 1756 	inc	sp
      000345 05 81            [12] 1757 	inc	sp
      000347 AD 82            [24] 1758 	mov	r5,dpl
      000349 AE 83            [24] 1759 	mov	r6,dph
      00034B AF F0            [24] 1760 	mov	r7,b
                                   1761 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:129: size = 0;
      00034D A8 81            [24] 1762 	mov	r0,sp
      00034F 18               [12] 1763 	dec	r0
      000350 E4               [12] 1764 	clr	a
      000351 F6               [12] 1765 	mov	@r0,a
      000352 08               [12] 1766 	inc	r0
      000353 F6               [12] 1767 	mov	@r0,a
      000354                       1768 00103$:
                                   1769 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:130: for(; a->type != PACKETBUF_ATTR_NONE; ++a) {
      000354 8D 82            [24] 1770 	mov	dpl,r5
      000356 8E 83            [24] 1771 	mov	dph,r6
      000358 8F F0            [24] 1772 	mov	b,r7
      00035A 12r00r00         [24] 1773 	lcall	__gptrget
      00035D FA               [12] 1774 	mov	r2,a
      00035E 7C 00            [12] 1775 	mov	r4,#0x00
      000360 BA 00 05         [24] 1776 	cjne	r2,#0x00,00114$
      000363 BC 00 02         [24] 1777 	cjne	r4,#0x00,00114$
      000366 80 28            [24] 1778 	sjmp	00101$
      000368                       1779 00114$:
                                   1780 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:140: len = a->len;
      000368 74 01            [12] 1781 	mov	a,#0x01
      00036A 2D               [12] 1782 	add	a,r5
      00036B FA               [12] 1783 	mov	r2,a
      00036C E4               [12] 1784 	clr	a
      00036D 3E               [12] 1785 	addc	a,r6
      00036E FB               [12] 1786 	mov	r3,a
      00036F 8F 04            [24] 1787 	mov	ar4,r7
      000371 8A 82            [24] 1788 	mov	dpl,r2
      000373 8B 83            [24] 1789 	mov	dph,r3
      000375 8C F0            [24] 1790 	mov	b,r4
      000377 12r00r00         [24] 1791 	lcall	__gptrget
      00037A FA               [12] 1792 	mov	r2,a
      00037B 7C 00            [12] 1793 	mov	r4,#0x00
                                   1794 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:144: size += len;
      00037D A8 81            [24] 1795 	mov	r0,sp
      00037F 18               [12] 1796 	dec	r0
      000380 EA               [12] 1797 	mov	a,r2
      000381 26               [12] 1798 	add	a,@r0
      000382 F6               [12] 1799 	mov	@r0,a
      000383 EC               [12] 1800 	mov	a,r4
      000384 08               [12] 1801 	inc	r0
      000385 36               [12] 1802 	addc	a,@r0
      000386 F6               [12] 1803 	mov	@r0,a
                                   1804 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:130: for(; a->type != PACKETBUF_ATTR_NONE; ++a) {
      000387 74 02            [12] 1805 	mov	a,#0x02
      000389 2D               [12] 1806 	add	a,r5
      00038A FD               [12] 1807 	mov	r5,a
      00038B E4               [12] 1808 	clr	a
      00038C 3E               [12] 1809 	addc	a,r6
      00038D FE               [12] 1810 	mov	r6,a
      00038E 80 C4            [24] 1811 	sjmp	00103$
      000390                       1812 00101$:
                                   1813 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:146: return size;
      000390 A8 81            [24] 1814 	mov	r0,sp
      000392 18               [12] 1815 	dec	r0
      000393 86 82            [24] 1816 	mov	dpl,@r0
      000395 08               [12] 1817 	inc	r0
      000396 86 83            [24] 1818 	mov	dph,@r0
      000398 15 81            [12] 1819 	dec	sp
      00039A 15 81            [12] 1820 	dec	sp
      00039C 02r00r00         [24] 1821 	ljmp	__sdcc_banked_ret
                                   1822 ;------------------------------------------------------------
                                   1823 ;Allocation info for local variables in function 'set_bits_in_byte'
                                   1824 ;------------------------------------------------------------
                                   1825 ;bitpos                    Allocated to stack - sp -9
                                   1826 ;val                       Allocated to stack - sp -10
                                   1827 ;vallen                    Allocated to stack - sp -12
                                   1828 ;target                    Allocated to stack - sp -4
                                   1829 ;shifted_val               Allocated to registers r3 r4 
                                   1830 ;sloc0                     Allocated to stack - sp -1
                                   1831 ;------------------------------------------------------------
                                   1832 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:150: set_bits_in_byte(uint8_t *target, int bitpos, uint8_t val, int vallen)
                                   1833 ;	-----------------------------------------
                                   1834 ;	 function set_bits_in_byte
                                   1835 ;	-----------------------------------------
      00039F                       1836 _set_bits_in_byte:
      00039F C0 82            [24] 1837 	push	dpl
      0003A1 C0 83            [24] 1838 	push	dph
      0003A3 C0 F0            [24] 1839 	push	b
      0003A5 05 81            [12] 1840 	inc	sp
      0003A7 05 81            [12] 1841 	inc	sp
                                   1842 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:153: shifted_val = val << (8 - bitpos + 8 - vallen);
      0003A9 E5 81            [12] 1843 	mov	a,sp
      0003AB 24 F6            [12] 1844 	add	a,#0xf6
      0003AD F8               [12] 1845 	mov	r0,a
      0003AE 86 03            [24] 1846 	mov	ar3,@r0
      0003B0 7C 00            [12] 1847 	mov	r4,#0x00
      0003B2 E5 81            [12] 1848 	mov	a,sp
      0003B4 24 F7            [12] 1849 	add	a,#0xf7
      0003B6 F8               [12] 1850 	mov	r0,a
      0003B7 74 10            [12] 1851 	mov	a,#0x10
      0003B9 C3               [12] 1852 	clr	c
      0003BA 96               [12] 1853 	subb	a,@r0
      0003BB FA               [12] 1854 	mov	r2,a
      0003BC E4               [12] 1855 	clr	a
      0003BD 08               [12] 1856 	inc	r0
      0003BE 96               [12] 1857 	subb	a,@r0
      0003BF FF               [12] 1858 	mov	r7,a
      0003C0 E5 81            [12] 1859 	mov	a,sp
      0003C2 24 F4            [12] 1860 	add	a,#0xf4
      0003C4 F8               [12] 1861 	mov	r0,a
      0003C5 EA               [12] 1862 	mov	a,r2
      0003C6 C3               [12] 1863 	clr	c
      0003C7 96               [12] 1864 	subb	a,@r0
      0003C8 FA               [12] 1865 	mov	r2,a
      0003C9 EF               [12] 1866 	mov	a,r7
      0003CA 08               [12] 1867 	inc	r0
      0003CB 96               [12] 1868 	subb	a,@r0
      0003CC FF               [12] 1869 	mov	r7,a
      0003CD 8A F0            [24] 1870 	mov	b,r2
      0003CF 05 F0            [12] 1871 	inc	b
      0003D1 80 06            [24] 1872 	sjmp	00104$
      0003D3                       1873 00103$:
      0003D3 EB               [12] 1874 	mov	a,r3
      0003D4 2B               [12] 1875 	add	a,r3
      0003D5 FB               [12] 1876 	mov	r3,a
      0003D6 EC               [12] 1877 	mov	a,r4
      0003D7 33               [12] 1878 	rlc	a
      0003D8 FC               [12] 1879 	mov	r4,a
      0003D9                       1880 00104$:
      0003D9 D5 F0 F7         [24] 1881 	djnz	b,00103$
                                   1882 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:156: target[0] |= shifted_val >> 8;
      0003DC E5 81            [12] 1883 	mov	a,sp
      0003DE 24 FC            [12] 1884 	add	a,#0xfc
      0003E0 F8               [12] 1885 	mov	r0,a
      0003E1 86 82            [24] 1886 	mov	dpl,@r0
      0003E3 08               [12] 1887 	inc	r0
      0003E4 86 83            [24] 1888 	mov	dph,@r0
      0003E6 08               [12] 1889 	inc	r0
      0003E7 86 F0            [24] 1890 	mov	b,@r0
      0003E9 12r00r00         [24] 1891 	lcall	__gptrget
      0003EC FF               [12] 1892 	mov	r7,a
      0003ED 8C 06            [24] 1893 	mov	ar6,r4
      0003EF EE               [12] 1894 	mov	a,r6
      0003F0 42 07            [12] 1895 	orl	ar7,a
      0003F2 E5 81            [12] 1896 	mov	a,sp
      0003F4 24 FC            [12] 1897 	add	a,#0xfc
      0003F6 F8               [12] 1898 	mov	r0,a
      0003F7 86 82            [24] 1899 	mov	dpl,@r0
      0003F9 08               [12] 1900 	inc	r0
      0003FA 86 83            [24] 1901 	mov	dph,@r0
      0003FC 08               [12] 1902 	inc	r0
      0003FD 86 F0            [24] 1903 	mov	b,@r0
      0003FF EF               [12] 1904 	mov	a,r7
      000400 12r00r00         [24] 1905 	lcall	__gptrput
                                   1906 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:157: target[1] |= shifted_val & 0xff;
      000403 E5 81            [12] 1907 	mov	a,sp
      000405 24 FC            [12] 1908 	add	a,#0xfc
      000407 F8               [12] 1909 	mov	r0,a
      000408 74 01            [12] 1910 	mov	a,#0x01
      00040A 26               [12] 1911 	add	a,@r0
      00040B FD               [12] 1912 	mov	r5,a
      00040C E4               [12] 1913 	clr	a
      00040D 08               [12] 1914 	inc	r0
      00040E 36               [12] 1915 	addc	a,@r0
      00040F FE               [12] 1916 	mov	r6,a
      000410 08               [12] 1917 	inc	r0
      000411 86 07            [24] 1918 	mov	ar7,@r0
      000413 8D 82            [24] 1919 	mov	dpl,r5
      000415 8E 83            [24] 1920 	mov	dph,r6
      000417 8F F0            [24] 1921 	mov	b,r7
      000419 12r00r00         [24] 1922 	lcall	__gptrget
      00041C FA               [12] 1923 	mov	r2,a
      00041D A8 81            [24] 1924 	mov	r0,sp
      00041F 18               [12] 1925 	dec	r0
      000420 A6 03            [24] 1926 	mov	@r0,ar3
      000422 08               [12] 1927 	inc	r0
      000423 76 00            [12] 1928 	mov	@r0,#0x00
      000425 7C 00            [12] 1929 	mov	r4,#0x00
      000427 A8 81            [24] 1930 	mov	r0,sp
      000429 18               [12] 1931 	dec	r0
      00042A E6               [12] 1932 	mov	a,@r0
      00042B 42 02            [12] 1933 	orl	ar2,a
      00042D 08               [12] 1934 	inc	r0
      00042E E6               [12] 1935 	mov	a,@r0
      00042F 42 04            [12] 1936 	orl	ar4,a
      000431 8D 82            [24] 1937 	mov	dpl,r5
      000433 8E 83            [24] 1938 	mov	dph,r6
      000435 8F F0            [24] 1939 	mov	b,r7
      000437 EA               [12] 1940 	mov	a,r2
      000438 12r00r00         [24] 1941 	lcall	__gptrput
      00043B E5 81            [12] 1942 	mov	a,sp
      00043D 24 FB            [12] 1943 	add	a,#0xFB
      00043F F5 81            [12] 1944 	mov	sp,a
      000441 02r00r00         [24] 1945 	ljmp	__sdcc_banked_ret
                                   1946 ;------------------------------------------------------------
                                   1947 ;Allocation info for local variables in function 'set_bits'
                                   1948 ;------------------------------------------------------------
                                   1949 ;bitpos                    Allocated to stack - sp -9
                                   1950 ;val                       Allocated to stack - sp -12
                                   1951 ;vallen                    Allocated to stack - sp -14
                                   1952 ;ptr                       Allocated to stack - sp -4
                                   1953 ;i                         Allocated to stack - sp -1
                                   1954 ;bits                      Allocated to registers r6 r7 
                                   1955 ;------------------------------------------------------------
                                   1956 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:161: set_bits(uint8_t *ptr, int bitpos, uint8_t *val, int vallen)
                                   1957 ;	-----------------------------------------
                                   1958 ;	 function set_bits
                                   1959 ;	-----------------------------------------
      000444                       1960 _set_bits:
      000444 C0 82            [24] 1961 	push	dpl
      000446 C0 83            [24] 1962 	push	dph
      000448 C0 F0            [24] 1963 	push	b
      00044A 05 81            [12] 1964 	inc	sp
      00044C 05 81            [12] 1965 	inc	sp
                                   1966 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:168: if(vallen < 8) {
      00044E E5 81            [12] 1967 	mov	a,sp
      000450 24 F2            [12] 1968 	add	a,#0xf2
      000452 F8               [12] 1969 	mov	r0,a
      000453 C3               [12] 1970 	clr	c
      000454 E6               [12] 1971 	mov	a,@r0
      000455 94 08            [12] 1972 	subb	a,#0x08
      000457 08               [12] 1973 	inc	r0
      000458 E6               [12] 1974 	mov	a,@r0
      000459 64 80            [12] 1975 	xrl	a,#0x80
      00045B 94 80            [12] 1976 	subb	a,#0x80
      00045D 50 50            [24] 1977 	jnc	00111$
                                   1978 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:169: set_bits_in_byte(ptr, bitpos, *val /*>> (8 - vallen)*/, vallen);
      00045F E5 81            [12] 1979 	mov	a,sp
      000461 24 F4            [12] 1980 	add	a,#0xf4
      000463 F8               [12] 1981 	mov	r0,a
      000464 86 02            [24] 1982 	mov	ar2,@r0
      000466 08               [12] 1983 	inc	r0
      000467 86 03            [24] 1984 	mov	ar3,@r0
      000469 08               [12] 1985 	inc	r0
      00046A 86 04            [24] 1986 	mov	ar4,@r0
      00046C 8A 82            [24] 1987 	mov	dpl,r2
      00046E 8B 83            [24] 1988 	mov	dph,r3
      000470 8C F0            [24] 1989 	mov	b,r4
      000472 12r00r00         [24] 1990 	lcall	__gptrget
      000475 FA               [12] 1991 	mov	r2,a
      000476 E5 81            [12] 1992 	mov	a,sp
      000478 24 F2            [12] 1993 	add	a,#0xf2
      00047A F8               [12] 1994 	mov	r0,a
      00047B E6               [12] 1995 	mov	a,@r0
      00047C C0 E0            [24] 1996 	push	acc
      00047E 08               [12] 1997 	inc	r0
      00047F E6               [12] 1998 	mov	a,@r0
      000480 C0 E0            [24] 1999 	push	acc
      000482 C0 02            [24] 2000 	push	ar2
      000484 E5 81            [12] 2001 	mov	a,sp
      000486 24 F4            [12] 2002 	add	a,#0xf4
      000488 F8               [12] 2003 	mov	r0,a
      000489 E6               [12] 2004 	mov	a,@r0
      00048A C0 E0            [24] 2005 	push	acc
      00048C 08               [12] 2006 	inc	r0
      00048D E6               [12] 2007 	mov	a,@r0
      00048E C0 E0            [24] 2008 	push	acc
      000490 E5 81            [12] 2009 	mov	a,sp
      000492 24 F7            [12] 2010 	add	a,#0xf7
      000494 F8               [12] 2011 	mov	r0,a
      000495 86 82            [24] 2012 	mov	dpl,@r0
      000497 08               [12] 2013 	inc	r0
      000498 86 83            [24] 2014 	mov	dph,@r0
      00049A 08               [12] 2015 	inc	r0
      00049B 86 F0            [24] 2016 	mov	b,@r0
      00049D 78r9F            [12] 2017 	mov	r0,#_set_bits_in_byte
      00049F 79s03            [12] 2018 	mov	r1,#(_set_bits_in_byte >> 8)
      0004A1 7As00            [12] 2019 	mov	r2,#(_set_bits_in_byte >> 16)
      0004A3 12r00r00         [24] 2020 	lcall	__sdcc_banked_call
      0004A6 E5 81            [12] 2021 	mov	a,sp
      0004A8 24 FB            [12] 2022 	add	a,#0xfb
      0004AA F5 81            [12] 2023 	mov	sp,a
      0004AC 02r06rEE         [24] 2024 	ljmp	00119$
      0004AF                       2025 00111$:
                                   2026 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:171: if(bitpos == 0) {
      0004AF E5 81            [12] 2027 	mov	a,sp
      0004B1 24 F7            [12] 2028 	add	a,#0xf7
      0004B3 F8               [12] 2029 	mov	r0,a
      0004B4 E6               [12] 2030 	mov	a,@r0
      0004B5 08               [12] 2031 	inc	r0
      0004B6 46               [12] 2032 	orl	a,@r0
      0004B7 60 03            [24] 2033 	jz	00148$
      0004B9 02r05rBD         [24] 2034 	ljmp	00127$
      0004BC                       2035 00148$:
                                   2036 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:172: for(i = 0; i < vallen / 8; ++i) {
      0004BC 74 08            [12] 2037 	mov	a,#0x08
      0004BE C0 E0            [24] 2038 	push	acc
      0004C0 E4               [12] 2039 	clr	a
      0004C1 C0 E0            [24] 2040 	push	acc
      0004C3 E5 81            [12] 2041 	mov	a,sp
      0004C5 24 F0            [12] 2042 	add	a,#0xf0
      0004C7 F8               [12] 2043 	mov	r0,a
      0004C8 86 82            [24] 2044 	mov	dpl,@r0
      0004CA 08               [12] 2045 	inc	r0
      0004CB 86 83            [24] 2046 	mov	dph,@r0
      0004CD 12r00r00         [24] 2047 	lcall	__divsint
      0004D0 AB 82            [24] 2048 	mov	r3,dpl
      0004D2 AC 83            [24] 2049 	mov	r4,dph
      0004D4 15 81            [12] 2050 	dec	sp
      0004D6 15 81            [12] 2051 	dec	sp
      0004D8 A8 81            [24] 2052 	mov	r0,sp
      0004DA 18               [12] 2053 	dec	r0
      0004DB E4               [12] 2054 	clr	a
      0004DC F6               [12] 2055 	mov	@r0,a
      0004DD 08               [12] 2056 	inc	r0
      0004DE F6               [12] 2057 	mov	@r0,a
      0004DF                       2058 00114$:
      0004DF A8 81            [24] 2059 	mov	r0,sp
      0004E1 18               [12] 2060 	dec	r0
      0004E2 C3               [12] 2061 	clr	c
      0004E3 E6               [12] 2062 	mov	a,@r0
      0004E4 9B               [12] 2063 	subb	a,r3
      0004E5 08               [12] 2064 	inc	r0
      0004E6 E6               [12] 2065 	mov	a,@r0
      0004E7 64 80            [12] 2066 	xrl	a,#0x80
      0004E9 8C F0            [24] 2067 	mov	b,r4
      0004EB 63 F0 80         [24] 2068 	xrl	b,#0x80
      0004EE 95 F0            [12] 2069 	subb	a,b
      0004F0 50 52            [24] 2070 	jnc	00101$
                                   2071 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:175: ptr[i] = val[i];
      0004F2 C0 03            [24] 2072 	push	ar3
      0004F4 C0 04            [24] 2073 	push	ar4
      0004F6 E5 81            [12] 2074 	mov	a,sp
      0004F8 24 FA            [12] 2075 	add	a,#0xfa
      0004FA F8               [12] 2076 	mov	r0,a
      0004FB E5 81            [12] 2077 	mov	a,sp
      0004FD 24 FD            [12] 2078 	add	a,#0xfd
      0004FF F9               [12] 2079 	mov	r1,a
      000500 E7               [12] 2080 	mov	a,@r1
      000501 26               [12] 2081 	add	a,@r0
      000502 FC               [12] 2082 	mov	r4,a
      000503 09               [12] 2083 	inc	r1
      000504 E7               [12] 2084 	mov	a,@r1
      000505 08               [12] 2085 	inc	r0
      000506 36               [12] 2086 	addc	a,@r0
      000507 FD               [12] 2087 	mov	r5,a
      000508 08               [12] 2088 	inc	r0
      000509 86 06            [24] 2089 	mov	ar6,@r0
      00050B E5 81            [12] 2090 	mov	a,sp
      00050D 24 F2            [12] 2091 	add	a,#0xf2
      00050F F8               [12] 2092 	mov	r0,a
      000510 E5 81            [12] 2093 	mov	a,sp
      000512 24 FD            [12] 2094 	add	a,#0xfd
      000514 F9               [12] 2095 	mov	r1,a
      000515 E7               [12] 2096 	mov	a,@r1
      000516 26               [12] 2097 	add	a,@r0
      000517 FA               [12] 2098 	mov	r2,a
      000518 09               [12] 2099 	inc	r1
      000519 E7               [12] 2100 	mov	a,@r1
      00051A 08               [12] 2101 	inc	r0
      00051B 36               [12] 2102 	addc	a,@r0
      00051C FB               [12] 2103 	mov	r3,a
      00051D 08               [12] 2104 	inc	r0
      00051E 86 07            [24] 2105 	mov	ar7,@r0
      000520 8A 82            [24] 2106 	mov	dpl,r2
      000522 8B 83            [24] 2107 	mov	dph,r3
      000524 8F F0            [24] 2108 	mov	b,r7
      000526 12r00r00         [24] 2109 	lcall	__gptrget
      000529 FA               [12] 2110 	mov	r2,a
      00052A 8C 82            [24] 2111 	mov	dpl,r4
      00052C 8D 83            [24] 2112 	mov	dph,r5
      00052E 8E F0            [24] 2113 	mov	b,r6
      000530 12r00r00         [24] 2114 	lcall	__gptrput
                                   2115 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:172: for(i = 0; i < vallen / 8; ++i) {
      000533 E5 81            [12] 2116 	mov	a,sp
      000535 24 FD            [12] 2117 	add	a,#0xfd
      000537 F8               [12] 2118 	mov	r0,a
      000538 06               [12] 2119 	inc	@r0
      000539 B6 00 02         [24] 2120 	cjne	@r0,#0x00,00150$
      00053C 08               [12] 2121 	inc	r0
      00053D 06               [12] 2122 	inc	@r0
      00053E                       2123 00150$:
      00053E D0 04            [24] 2124 	pop	ar4
      000540 D0 03            [24] 2125 	pop	ar3
      000542 80 9B            [24] 2126 	sjmp	00114$
      000544                       2127 00101$:
                                   2128 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:177: bits = vallen & 7;
      000544 E5 81            [12] 2129 	mov	a,sp
      000546 24 F2            [12] 2130 	add	a,#0xf2
      000548 F8               [12] 2131 	mov	r0,a
      000549 74 07            [12] 2132 	mov	a,#0x07
      00054B 56               [12] 2133 	anl	a,@r0
                                   2134 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:178: if(bits) {
      00054C FE               [12] 2135 	mov	r6,a
      00054D 7F 00            [12] 2136 	mov	r7,#0x00
      00054F 4F               [12] 2137 	orl	a,r7
      000550 70 03            [24] 2138 	jnz	00151$
      000552 02r06rEE         [24] 2139 	ljmp	00119$
      000555                       2140 00151$:
                                   2141 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:179: set_bits_in_byte(&ptr[i], 0, val[i] >> (8 - bits), bits);
      000555 E5 81            [12] 2142 	mov	a,sp
      000557 24 F4            [12] 2143 	add	a,#0xf4
      000559 F8               [12] 2144 	mov	r0,a
      00055A A9 81            [24] 2145 	mov	r1,sp
      00055C 19               [12] 2146 	dec	r1
      00055D E7               [12] 2147 	mov	a,@r1
      00055E 26               [12] 2148 	add	a,@r0
      00055F FB               [12] 2149 	mov	r3,a
      000560 09               [12] 2150 	inc	r1
      000561 E7               [12] 2151 	mov	a,@r1
      000562 08               [12] 2152 	inc	r0
      000563 36               [12] 2153 	addc	a,@r0
      000564 FC               [12] 2154 	mov	r4,a
      000565 08               [12] 2155 	inc	r0
      000566 86 05            [24] 2156 	mov	ar5,@r0
      000568 8B 82            [24] 2157 	mov	dpl,r3
      00056A 8C 83            [24] 2158 	mov	dph,r4
      00056C 8D F0            [24] 2159 	mov	b,r5
      00056E 12r00r00         [24] 2160 	lcall	__gptrget
      000571 FB               [12] 2161 	mov	r3,a
      000572 74 08            [12] 2162 	mov	a,#0x08
      000574 C3               [12] 2163 	clr	c
      000575 9E               [12] 2164 	subb	a,r6
      000576 FC               [12] 2165 	mov	r4,a
      000577 E4               [12] 2166 	clr	a
      000578 9F               [12] 2167 	subb	a,r7
      000579 FD               [12] 2168 	mov	r5,a
      00057A 8C F0            [24] 2169 	mov	b,r4
      00057C 05 F0            [12] 2170 	inc	b
      00057E EB               [12] 2171 	mov	a,r3
      00057F 80 02            [24] 2172 	sjmp	00153$
      000581                       2173 00152$:
      000581 C3               [12] 2174 	clr	c
      000582 13               [12] 2175 	rrc	a
      000583                       2176 00153$:
      000583 D5 F0 FB         [24] 2177 	djnz	b,00152$
      000586 FB               [12] 2178 	mov	r3,a
      000587 E5 81            [12] 2179 	mov	a,sp
      000589 24 FC            [12] 2180 	add	a,#0xfc
      00058B F8               [12] 2181 	mov	r0,a
      00058C A9 81            [24] 2182 	mov	r1,sp
      00058E 19               [12] 2183 	dec	r1
      00058F E7               [12] 2184 	mov	a,@r1
      000590 26               [12] 2185 	add	a,@r0
      000591 FA               [12] 2186 	mov	r2,a
      000592 09               [12] 2187 	inc	r1
      000593 E7               [12] 2188 	mov	a,@r1
      000594 08               [12] 2189 	inc	r0
      000595 36               [12] 2190 	addc	a,@r0
      000596 FC               [12] 2191 	mov	r4,a
      000597 08               [12] 2192 	inc	r0
      000598 86 05            [24] 2193 	mov	ar5,@r0
      00059A C0 06            [24] 2194 	push	ar6
      00059C C0 07            [24] 2195 	push	ar7
      00059E C0 03            [24] 2196 	push	ar3
      0005A0 E4               [12] 2197 	clr	a
      0005A1 C0 E0            [24] 2198 	push	acc
      0005A3 C0 E0            [24] 2199 	push	acc
      0005A5 8A 82            [24] 2200 	mov	dpl,r2
      0005A7 8C 83            [24] 2201 	mov	dph,r4
      0005A9 8D F0            [24] 2202 	mov	b,r5
      0005AB 78r9F            [12] 2203 	mov	r0,#_set_bits_in_byte
      0005AD 79s03            [12] 2204 	mov	r1,#(_set_bits_in_byte >> 8)
      0005AF 7As00            [12] 2205 	mov	r2,#(_set_bits_in_byte >> 16)
      0005B1 12r00r00         [24] 2206 	lcall	__sdcc_banked_call
      0005B4 E5 81            [12] 2207 	mov	a,sp
      0005B6 24 FB            [12] 2208 	add	a,#0xfb
      0005B8 F5 81            [12] 2209 	mov	sp,a
      0005BA 02r06rEE         [24] 2210 	ljmp	00119$
                                   2211 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:182: for(i = 0; i < vallen / 8; ++i) {
      0005BD                       2212 00127$:
      0005BD 74 08            [12] 2213 	mov	a,#0x08
      0005BF C0 E0            [24] 2214 	push	acc
      0005C1 E4               [12] 2215 	clr	a
      0005C2 C0 E0            [24] 2216 	push	acc
      0005C4 E5 81            [12] 2217 	mov	a,sp
      0005C6 24 F0            [12] 2218 	add	a,#0xf0
      0005C8 F8               [12] 2219 	mov	r0,a
      0005C9 86 82            [24] 2220 	mov	dpl,@r0
      0005CB 08               [12] 2221 	inc	r0
      0005CC 86 83            [24] 2222 	mov	dph,@r0
      0005CE 12r00r00         [24] 2223 	lcall	__divsint
      0005D1 AC 82            [24] 2224 	mov	r4,dpl
      0005D3 AD 83            [24] 2225 	mov	r5,dph
      0005D5 15 81            [12] 2226 	dec	sp
      0005D7 15 81            [12] 2227 	dec	sp
      0005D9 A8 81            [24] 2228 	mov	r0,sp
      0005DB 18               [12] 2229 	dec	r0
      0005DC E4               [12] 2230 	clr	a
      0005DD F6               [12] 2231 	mov	@r0,a
      0005DE 08               [12] 2232 	inc	r0
      0005DF F6               [12] 2233 	mov	@r0,a
      0005E0                       2234 00117$:
      0005E0 A8 81            [24] 2235 	mov	r0,sp
      0005E2 18               [12] 2236 	dec	r0
      0005E3 C3               [12] 2237 	clr	c
      0005E4 E6               [12] 2238 	mov	a,@r0
      0005E5 9C               [12] 2239 	subb	a,r4
      0005E6 08               [12] 2240 	inc	r0
      0005E7 E6               [12] 2241 	mov	a,@r0
      0005E8 64 80            [12] 2242 	xrl	a,#0x80
      0005EA 8D F0            [24] 2243 	mov	b,r5
      0005EC 63 F0 80         [24] 2244 	xrl	b,#0x80
      0005EF 95 F0            [12] 2245 	subb	a,b
      0005F1 50 7C            [24] 2246 	jnc	00104$
                                   2247 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:185: set_bits_in_byte(&ptr[i], bitpos, val[i], 8);
      0005F3 C0 04            [24] 2248 	push	ar4
      0005F5 C0 05            [24] 2249 	push	ar5
      0005F7 E5 81            [12] 2250 	mov	a,sp
      0005F9 24 F2            [12] 2251 	add	a,#0xf2
      0005FB F8               [12] 2252 	mov	r0,a
      0005FC E5 81            [12] 2253 	mov	a,sp
      0005FE 24 FD            [12] 2254 	add	a,#0xfd
      000600 F9               [12] 2255 	mov	r1,a
      000601 E7               [12] 2256 	mov	a,@r1
      000602 26               [12] 2257 	add	a,@r0
      000603 FB               [12] 2258 	mov	r3,a
      000604 09               [12] 2259 	inc	r1
      000605 E7               [12] 2260 	mov	a,@r1
      000606 08               [12] 2261 	inc	r0
      000607 36               [12] 2262 	addc	a,@r0
      000608 FC               [12] 2263 	mov	r4,a
      000609 08               [12] 2264 	inc	r0
      00060A 86 05            [24] 2265 	mov	ar5,@r0
      00060C 8B 82            [24] 2266 	mov	dpl,r3
      00060E 8C 83            [24] 2267 	mov	dph,r4
      000610 8D F0            [24] 2268 	mov	b,r5
      000612 12r00r00         [24] 2269 	lcall	__gptrget
      000615 FB               [12] 2270 	mov	r3,a
      000616 E5 81            [12] 2271 	mov	a,sp
      000618 24 FA            [12] 2272 	add	a,#0xfa
      00061A F8               [12] 2273 	mov	r0,a
      00061B E5 81            [12] 2274 	mov	a,sp
      00061D 24 FD            [12] 2275 	add	a,#0xfd
      00061F F9               [12] 2276 	mov	r1,a
      000620 E7               [12] 2277 	mov	a,@r1
      000621 26               [12] 2278 	add	a,@r0
      000622 FA               [12] 2279 	mov	r2,a
      000623 09               [12] 2280 	inc	r1
      000624 E7               [12] 2281 	mov	a,@r1
      000625 08               [12] 2282 	inc	r0
      000626 36               [12] 2283 	addc	a,@r0
      000627 FC               [12] 2284 	mov	r4,a
      000628 08               [12] 2285 	inc	r0
      000629 86 05            [24] 2286 	mov	ar5,@r0
      00062B C0 05            [24] 2287 	push	ar5
      00062D C0 04            [24] 2288 	push	ar4
      00062F 74 08            [12] 2289 	mov	a,#0x08
      000631 C0 E0            [24] 2290 	push	acc
      000633 E4               [12] 2291 	clr	a
      000634 C0 E0            [24] 2292 	push	acc
      000636 C0 03            [24] 2293 	push	ar3
      000638 E5 81            [12] 2294 	mov	a,sp
      00063A 24 F0            [12] 2295 	add	a,#0xf0
      00063C F8               [12] 2296 	mov	r0,a
      00063D E6               [12] 2297 	mov	a,@r0
      00063E C0 E0            [24] 2298 	push	acc
      000640 08               [12] 2299 	inc	r0
      000641 E6               [12] 2300 	mov	a,@r0
      000642 C0 E0            [24] 2301 	push	acc
      000644 8A 82            [24] 2302 	mov	dpl,r2
      000646 8C 83            [24] 2303 	mov	dph,r4
      000648 8D F0            [24] 2304 	mov	b,r5
      00064A 78r9F            [12] 2305 	mov	r0,#_set_bits_in_byte
      00064C 79s03            [12] 2306 	mov	r1,#(_set_bits_in_byte >> 8)
      00064E 7As00            [12] 2307 	mov	r2,#(_set_bits_in_byte >> 16)
      000650 12r00r00         [24] 2308 	lcall	__sdcc_banked_call
      000653 E5 81            [12] 2309 	mov	a,sp
      000655 24 FB            [12] 2310 	add	a,#0xfb
      000657 F5 81            [12] 2311 	mov	sp,a
      000659 D0 04            [24] 2312 	pop	ar4
      00065B D0 05            [24] 2313 	pop	ar5
                                   2314 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:182: for(i = 0; i < vallen / 8; ++i) {
      00065D E5 81            [12] 2315 	mov	a,sp
      00065F 24 FD            [12] 2316 	add	a,#0xfd
      000661 F8               [12] 2317 	mov	r0,a
      000662 06               [12] 2318 	inc	@r0
      000663 B6 00 02         [24] 2319 	cjne	@r0,#0x00,00155$
      000666 08               [12] 2320 	inc	r0
      000667 06               [12] 2321 	inc	@r0
      000668                       2322 00155$:
      000668 D0 05            [24] 2323 	pop	ar5
      00066A D0 04            [24] 2324 	pop	ar4
      00066C 02r05rE0         [24] 2325 	ljmp	00117$
      00066F                       2326 00104$:
                                   2327 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:187: bits = vallen & 7;
      00066F E5 81            [12] 2328 	mov	a,sp
      000671 24 F2            [12] 2329 	add	a,#0xf2
      000673 F8               [12] 2330 	mov	r0,a
      000674 74 07            [12] 2331 	mov	a,#0x07
      000676 56               [12] 2332 	anl	a,@r0
                                   2333 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:188: if(bits) {
      000677 FE               [12] 2334 	mov	r6,a
      000678 7F 00            [12] 2335 	mov	r7,#0x00
      00067A 4F               [12] 2336 	orl	a,r7
      00067B 60 71            [24] 2337 	jz	00119$
                                   2338 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:189: set_bits_in_byte(&ptr[i], 0, val[i] >> (8 - bits + bitpos), bits);
      00067D E5 81            [12] 2339 	mov	a,sp
      00067F 24 F4            [12] 2340 	add	a,#0xf4
      000681 F8               [12] 2341 	mov	r0,a
      000682 A9 81            [24] 2342 	mov	r1,sp
      000684 19               [12] 2343 	dec	r1
      000685 E7               [12] 2344 	mov	a,@r1
      000686 26               [12] 2345 	add	a,@r0
      000687 FB               [12] 2346 	mov	r3,a
      000688 09               [12] 2347 	inc	r1
      000689 E7               [12] 2348 	mov	a,@r1
      00068A 08               [12] 2349 	inc	r0
      00068B 36               [12] 2350 	addc	a,@r0
      00068C FC               [12] 2351 	mov	r4,a
      00068D 08               [12] 2352 	inc	r0
      00068E 86 05            [24] 2353 	mov	ar5,@r0
      000690 8B 82            [24] 2354 	mov	dpl,r3
      000692 8C 83            [24] 2355 	mov	dph,r4
      000694 8D F0            [24] 2356 	mov	b,r5
      000696 12r00r00         [24] 2357 	lcall	__gptrget
      000699 FB               [12] 2358 	mov	r3,a
      00069A 74 08            [12] 2359 	mov	a,#0x08
      00069C C3               [12] 2360 	clr	c
      00069D 9E               [12] 2361 	subb	a,r6
      00069E FC               [12] 2362 	mov	r4,a
      00069F E4               [12] 2363 	clr	a
      0006A0 9F               [12] 2364 	subb	a,r7
      0006A1 FD               [12] 2365 	mov	r5,a
      0006A2 E5 81            [12] 2366 	mov	a,sp
      0006A4 24 F7            [12] 2367 	add	a,#0xf7
      0006A6 F8               [12] 2368 	mov	r0,a
      0006A7 E6               [12] 2369 	mov	a,@r0
      0006A8 2C               [12] 2370 	add	a,r4
      0006A9 FC               [12] 2371 	mov	r4,a
      0006AA 08               [12] 2372 	inc	r0
      0006AB E6               [12] 2373 	mov	a,@r0
      0006AC 3D               [12] 2374 	addc	a,r5
      0006AD FD               [12] 2375 	mov	r5,a
      0006AE 8C F0            [24] 2376 	mov	b,r4
      0006B0 05 F0            [12] 2377 	inc	b
      0006B2 EB               [12] 2378 	mov	a,r3
      0006B3 80 02            [24] 2379 	sjmp	00158$
      0006B5                       2380 00157$:
      0006B5 C3               [12] 2381 	clr	c
      0006B6 13               [12] 2382 	rrc	a
      0006B7                       2383 00158$:
      0006B7 D5 F0 FB         [24] 2384 	djnz	b,00157$
      0006BA FB               [12] 2385 	mov	r3,a
      0006BB E5 81            [12] 2386 	mov	a,sp
      0006BD 24 FC            [12] 2387 	add	a,#0xfc
      0006BF F8               [12] 2388 	mov	r0,a
      0006C0 A9 81            [24] 2389 	mov	r1,sp
      0006C2 19               [12] 2390 	dec	r1
      0006C3 E7               [12] 2391 	mov	a,@r1
      0006C4 26               [12] 2392 	add	a,@r0
      0006C5 FA               [12] 2393 	mov	r2,a
      0006C6 09               [12] 2394 	inc	r1
      0006C7 E7               [12] 2395 	mov	a,@r1
      0006C8 08               [12] 2396 	inc	r0
      0006C9 36               [12] 2397 	addc	a,@r0
      0006CA FC               [12] 2398 	mov	r4,a
      0006CB 08               [12] 2399 	inc	r0
      0006CC 86 05            [24] 2400 	mov	ar5,@r0
      0006CE C0 06            [24] 2401 	push	ar6
      0006D0 C0 07            [24] 2402 	push	ar7
      0006D2 C0 03            [24] 2403 	push	ar3
      0006D4 E4               [12] 2404 	clr	a
      0006D5 C0 E0            [24] 2405 	push	acc
      0006D7 C0 E0            [24] 2406 	push	acc
      0006D9 8A 82            [24] 2407 	mov	dpl,r2
      0006DB 8C 83            [24] 2408 	mov	dph,r4
      0006DD 8D F0            [24] 2409 	mov	b,r5
      0006DF 78r9F            [12] 2410 	mov	r0,#_set_bits_in_byte
      0006E1 79s03            [12] 2411 	mov	r1,#(_set_bits_in_byte >> 8)
      0006E3 7As00            [12] 2412 	mov	r2,#(_set_bits_in_byte >> 16)
      0006E5 12r00r00         [24] 2413 	lcall	__sdcc_banked_call
      0006E8 E5 81            [12] 2414 	mov	a,sp
      0006EA 24 FB            [12] 2415 	add	a,#0xfb
      0006EC F5 81            [12] 2416 	mov	sp,a
      0006EE                       2417 00119$:
      0006EE E5 81            [12] 2418 	mov	a,sp
      0006F0 24 FB            [12] 2419 	add	a,#0xFB
      0006F2 F5 81            [12] 2420 	mov	sp,a
      0006F4 02r00r00         [24] 2421 	ljmp	__sdcc_banked_ret
                                   2422 ;------------------------------------------------------------
                                   2423 ;Allocation info for local variables in function 'pack_header'
                                   2424 ;------------------------------------------------------------
                                   2425 ;c                         Allocated to stack - sp -26
                                   2426 ;a                         Allocated to registers 
                                   2427 ;hdrbytesize               Allocated to stack - sp -15
                                   2428 ;byteptr                   Allocated to stack - sp -13
                                   2429 ;bitptr                    Allocated to stack - sp -11
                                   2430 ;len                       Allocated to stack - sp -9
                                   2431 ;hdrptr                    Allocated to stack - sp -7
                                   2432 ;hdr                       Allocated to stack - sp -4
                                   2433 ;val                       Allocated to stack - sp -1
                                   2434 ;sloc0                     Allocated to stack - sp -23
                                   2435 ;sloc1                     Allocated to stack - sp -20
                                   2436 ;sloc2                     Allocated to stack - sp -18
                                   2437 ;------------------------------------------------------------
                                   2438 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:234: pack_header(struct channel *c)
                                   2439 ;	-----------------------------------------
                                   2440 ;	 function pack_header
                                   2441 ;	-----------------------------------------
      0006F7                       2442 _pack_header:
      0006F7 C0 82            [24] 2443 	push	dpl
      0006F9 C0 83            [24] 2444 	push	dph
      0006FB C0 F0            [24] 2445 	push	b
      0006FD E5 81            [12] 2446 	mov	a,sp
      0006FF 24 18            [12] 2447 	add	a,#0x18
                                   2448 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:245: hdrbytesize = c->hdrsize / 8 + ((c->hdrsize & 7) == 0? 0: 1);
      000701 F5 81            [12] 2449 	mov	sp,a
      000703 24 E6            [12] 2450 	add	a,#0xe6
      000705 F8               [12] 2451 	mov	r0,a
      000706 74 08            [12] 2452 	mov	a,#0x08
      000708 26               [12] 2453 	add	a,@r0
      000709 FA               [12] 2454 	mov	r2,a
      00070A E4               [12] 2455 	clr	a
      00070B 08               [12] 2456 	inc	r0
      00070C 36               [12] 2457 	addc	a,@r0
      00070D FB               [12] 2458 	mov	r3,a
      00070E 08               [12] 2459 	inc	r0
      00070F 86 04            [24] 2460 	mov	ar4,@r0
      000711 8A 82            [24] 2461 	mov	dpl,r2
      000713 8B 83            [24] 2462 	mov	dph,r3
      000715 8C F0            [24] 2463 	mov	b,r4
      000717 12r00r00         [24] 2464 	lcall	__gptrget
      00071A FA               [12] 2465 	mov	r2,a
      00071B C4               [12] 2466 	swap	a
      00071C 23               [12] 2467 	rl	a
      00071D 54 1F            [12] 2468 	anl	a,#0x1F
      00071F FB               [12] 2469 	mov	r3,a
      000720 7C 00            [12] 2470 	mov	r4,#0x00
      000722 53 02 07         [24] 2471 	anl	ar2,#0x07
      000725 EA               [12] 2472 	mov	a,r2
      000726 70 03            [24] 2473 	jnz	00112$
      000728 FA               [12] 2474 	mov	r2,a
      000729 80 02            [24] 2475 	sjmp	00113$
      00072B                       2476 00112$:
      00072B 7A 01            [12] 2477 	mov	r2,#0x01
      00072D                       2478 00113$:
      00072D 7F 00            [12] 2479 	mov	r7,#0x00
      00072F EA               [12] 2480 	mov	a,r2
      000730 2B               [12] 2481 	add	a,r3
      000731 FB               [12] 2482 	mov	r3,a
      000732 EF               [12] 2483 	mov	a,r7
      000733 3C               [12] 2484 	addc	a,r4
      000734 FC               [12] 2485 	mov	r4,a
      000735 E5 81            [12] 2486 	mov	a,sp
      000737 24 F1            [12] 2487 	add	a,#0xf1
      000739 F8               [12] 2488 	mov	r0,a
      00073A A6 03            [24] 2489 	mov	@r0,ar3
      00073C 08               [12] 2490 	inc	r0
      00073D A6 04            [24] 2491 	mov	@r0,ar4
                                   2492 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:246: if(packetbuf_hdralloc(hdrbytesize + sizeof(struct bitopt_hdr)) == 0) {
      00073F E5 81            [12] 2493 	mov	a,sp
      000741 24 F1            [12] 2494 	add	a,#0xf1
      000743 F8               [12] 2495 	mov	r0,a
      000744 74 02            [12] 2496 	mov	a,#0x02
      000746 26               [12] 2497 	add	a,@r0
      000747 FE               [12] 2498 	mov	r6,a
      000748 E4               [12] 2499 	clr	a
      000749 08               [12] 2500 	inc	r0
      00074A 36               [12] 2501 	addc	a,@r0
      00074B FF               [12] 2502 	mov	r7,a
      00074C 8E 82            [24] 2503 	mov	dpl,r6
      00074E 8F 83            [24] 2504 	mov	dph,r7
      000750 78r00            [12] 2505 	mov	r0,#_packetbuf_hdralloc
      000752 79s00            [12] 2506 	mov	r1,#(_packetbuf_hdralloc >> 8)
      000754 7As00            [12] 2507 	mov	r2,#(_packetbuf_hdralloc >> 16)
      000756 12r00r00         [24] 2508 	lcall	__sdcc_banked_call
      000759 E5 82            [12] 2509 	mov	a,dpl
      00075B 85 83 F0         [24] 2510 	mov	b,dph
      00075E 45 F0            [12] 2511 	orl	a,b
      000760 70 06            [24] 2512 	jnz	00102$
                                   2513 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:248: return 0;
      000762 90 00 00         [24] 2514 	mov	dptr,#0x0000
      000765 02r09rD7         [24] 2515 	ljmp	00110$
      000768                       2516 00102$:
                                   2517 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:250: hdr = (struct bitopt_hdr *)packetbuf_hdrptr();
      000768 78r00            [12] 2518 	mov	r0,#_packetbuf_hdrptr
      00076A 79s00            [12] 2519 	mov	r1,#(_packetbuf_hdrptr >> 8)
      00076C 7As00            [12] 2520 	mov	r2,#(_packetbuf_hdrptr >> 16)
      00076E 12r00r00         [24] 2521 	lcall	__sdcc_banked_call
      000771 AA 82            [24] 2522 	mov	r2,dpl
      000773 AB 83            [24] 2523 	mov	r3,dph
      000775 AC F0            [24] 2524 	mov	r4,b
      000777 E5 81            [12] 2525 	mov	a,sp
      000779 24 FC            [12] 2526 	add	a,#0xfc
      00077B F8               [12] 2527 	mov	r0,a
      00077C A6 02            [24] 2528 	mov	@r0,ar2
      00077E 08               [12] 2529 	inc	r0
      00077F A6 03            [24] 2530 	mov	@r0,ar3
      000781 08               [12] 2531 	inc	r0
      000782 A6 04            [24] 2532 	mov	@r0,ar4
                                   2533 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:251: hdr->channel[0] = c->channelno & 0xff;
      000784 E5 81            [12] 2534 	mov	a,sp
      000786 24 E6            [12] 2535 	add	a,#0xe6
      000788 F8               [12] 2536 	mov	r0,a
      000789 74 03            [12] 2537 	mov	a,#0x03
      00078B 26               [12] 2538 	add	a,@r0
      00078C FD               [12] 2539 	mov	r5,a
      00078D E4               [12] 2540 	clr	a
      00078E 08               [12] 2541 	inc	r0
      00078F 36               [12] 2542 	addc	a,@r0
      000790 FE               [12] 2543 	mov	r6,a
      000791 08               [12] 2544 	inc	r0
      000792 86 07            [24] 2545 	mov	ar7,@r0
      000794 8D 82            [24] 2546 	mov	dpl,r5
      000796 8E 83            [24] 2547 	mov	dph,r6
      000798 8F F0            [24] 2548 	mov	b,r7
      00079A 12r00r00         [24] 2549 	lcall	__gptrget
      00079D FB               [12] 2550 	mov	r3,a
      00079E A3               [24] 2551 	inc	dptr
      00079F 12r00r00         [24] 2552 	lcall	__gptrget
      0007A2 E5 81            [12] 2553 	mov	a,sp
      0007A4 24 FC            [12] 2554 	add	a,#0xfc
      0007A6 F8               [12] 2555 	mov	r0,a
      0007A7 86 82            [24] 2556 	mov	dpl,@r0
      0007A9 08               [12] 2557 	inc	r0
      0007AA 86 83            [24] 2558 	mov	dph,@r0
      0007AC 08               [12] 2559 	inc	r0
      0007AD 86 F0            [24] 2560 	mov	b,@r0
      0007AF EB               [12] 2561 	mov	a,r3
      0007B0 12r00r00         [24] 2562 	lcall	__gptrput
                                   2563 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:252: hdr->channel[1] = (c->channelno >> 8) & 0xff;
      0007B3 E5 81            [12] 2564 	mov	a,sp
      0007B5 24 FC            [12] 2565 	add	a,#0xfc
      0007B7 F8               [12] 2566 	mov	r0,a
      0007B8 74 01            [12] 2567 	mov	a,#0x01
      0007BA 26               [12] 2568 	add	a,@r0
      0007BB FA               [12] 2569 	mov	r2,a
      0007BC E4               [12] 2570 	clr	a
      0007BD 08               [12] 2571 	inc	r0
      0007BE 36               [12] 2572 	addc	a,@r0
      0007BF FB               [12] 2573 	mov	r3,a
      0007C0 08               [12] 2574 	inc	r0
      0007C1 86 04            [24] 2575 	mov	ar4,@r0
      0007C3 8D 82            [24] 2576 	mov	dpl,r5
      0007C5 8E 83            [24] 2577 	mov	dph,r6
      0007C7 8F F0            [24] 2578 	mov	b,r7
      0007C9 12r00r00         [24] 2579 	lcall	__gptrget
      0007CC A3               [24] 2580 	inc	dptr
      0007CD 12r00r00         [24] 2581 	lcall	__gptrget
      0007D0 8A 82            [24] 2582 	mov	dpl,r2
      0007D2 8B 83            [24] 2583 	mov	dph,r3
      0007D4 8C F0            [24] 2584 	mov	b,r4
      0007D6 12r00r00         [24] 2585 	lcall	__gptrput
                                   2586 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:254: hdrptr = ((uint8_t *)packetbuf_hdrptr()) + sizeof(struct bitopt_hdr);
      0007D9 78r00            [12] 2587 	mov	r0,#_packetbuf_hdrptr
      0007DB 79s00            [12] 2588 	mov	r1,#(_packetbuf_hdrptr >> 8)
      0007DD 7As00            [12] 2589 	mov	r2,#(_packetbuf_hdrptr >> 16)
      0007DF 12r00r00         [24] 2590 	lcall	__sdcc_banked_call
      0007E2 AD 82            [24] 2591 	mov	r5,dpl
      0007E4 AE 83            [24] 2592 	mov	r6,dph
      0007E6 AF F0            [24] 2593 	mov	r7,b
      0007E8 E5 81            [12] 2594 	mov	a,sp
      0007EA 24 F9            [12] 2595 	add	a,#0xf9
      0007EC F8               [12] 2596 	mov	r0,a
      0007ED 74 02            [12] 2597 	mov	a,#0x02
      0007EF 2D               [12] 2598 	add	a,r5
      0007F0 F6               [12] 2599 	mov	@r0,a
      0007F1 E4               [12] 2600 	clr	a
      0007F2 3E               [12] 2601 	addc	a,r6
      0007F3 08               [12] 2602 	inc	r0
      0007F4 F6               [12] 2603 	mov	@r0,a
      0007F5 08               [12] 2604 	inc	r0
      0007F6 A6 07            [24] 2605 	mov	@r0,ar7
                                   2606 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:255: memset(hdrptr, 0, hdrbytesize);
      0007F8 E5 81            [12] 2607 	mov	a,sp
      0007FA 24 F9            [12] 2608 	add	a,#0xf9
      0007FC F8               [12] 2609 	mov	r0,a
      0007FD 86 02            [24] 2610 	mov	ar2,@r0
      0007FF 08               [12] 2611 	inc	r0
      000800 86 03            [24] 2612 	mov	ar3,@r0
      000802 08               [12] 2613 	inc	r0
      000803 86 04            [24] 2614 	mov	ar4,@r0
      000805 E5 81            [12] 2615 	mov	a,sp
      000807 24 F1            [12] 2616 	add	a,#0xf1
      000809 F8               [12] 2617 	mov	r0,a
      00080A E6               [12] 2618 	mov	a,@r0
      00080B C0 E0            [24] 2619 	push	acc
      00080D 08               [12] 2620 	inc	r0
      00080E E6               [12] 2621 	mov	a,@r0
      00080F C0 E0            [24] 2622 	push	acc
      000811 E4               [12] 2623 	clr	a
      000812 C0 E0            [24] 2624 	push	acc
      000814 8A 82            [24] 2625 	mov	dpl,r2
      000816 8B 83            [24] 2626 	mov	dph,r3
      000818 8C F0            [24] 2627 	mov	b,r4
      00081A 78r00            [12] 2628 	mov	r0,#_memset
      00081C 79s00            [12] 2629 	mov	r1,#(_memset >> 8)
      00081E 7As00            [12] 2630 	mov	r2,#(_memset >> 16)
      000820 12r00r00         [24] 2631 	lcall	__sdcc_banked_call
      000823 15 81            [12] 2632 	dec	sp
      000825 15 81            [12] 2633 	dec	sp
      000827 15 81            [12] 2634 	dec	sp
                                   2635 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:257: byteptr = bitptr = 0;
      000829 E5 81            [12] 2636 	mov	a,sp
      00082B 24 F5            [12] 2637 	add	a,#0xf5
      00082D F8               [12] 2638 	mov	r0,a
      00082E E4               [12] 2639 	clr	a
      00082F F6               [12] 2640 	mov	@r0,a
      000830 08               [12] 2641 	inc	r0
      000831 F6               [12] 2642 	mov	@r0,a
                                   2643 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:259: for(a = c->attrlist; a->type != PACKETBUF_ATTR_NONE; ++a) {
      000832 E5 81            [12] 2644 	mov	a,sp
      000834 24 E6            [12] 2645 	add	a,#0xe6
      000836 F8               [12] 2646 	mov	r0,a
      000837 74 05            [12] 2647 	mov	a,#0x05
      000839 26               [12] 2648 	add	a,@r0
      00083A FA               [12] 2649 	mov	r2,a
      00083B E4               [12] 2650 	clr	a
      00083C 08               [12] 2651 	inc	r0
      00083D 36               [12] 2652 	addc	a,@r0
      00083E FE               [12] 2653 	mov	r6,a
      00083F 08               [12] 2654 	inc	r0
      000840 86 07            [24] 2655 	mov	ar7,@r0
      000842 8A 82            [24] 2656 	mov	dpl,r2
      000844 8E 83            [24] 2657 	mov	dph,r6
      000846 8F F0            [24] 2658 	mov	b,r7
      000848 E5 81            [12] 2659 	mov	a,sp
      00084A 24 E9            [12] 2660 	add	a,#0xe9
      00084C F8               [12] 2661 	mov	r0,a
      00084D 12r00r00         [24] 2662 	lcall	__gptrget
      000850 F6               [12] 2663 	mov	@r0,a
      000851 A3               [24] 2664 	inc	dptr
      000852 12r00r00         [24] 2665 	lcall	__gptrget
      000855 08               [12] 2666 	inc	r0
      000856 F6               [12] 2667 	mov	@r0,a
      000857 A3               [24] 2668 	inc	dptr
      000858 12r00r00         [24] 2669 	lcall	__gptrget
      00085B 08               [12] 2670 	inc	r0
      00085C F6               [12] 2671 	mov	@r0,a
      00085D                       2672 00108$:
      00085D E5 81            [12] 2673 	mov	a,sp
      00085F 24 E9            [12] 2674 	add	a,#0xe9
      000861 F8               [12] 2675 	mov	r0,a
      000862 86 82            [24] 2676 	mov	dpl,@r0
      000864 08               [12] 2677 	inc	r0
      000865 86 83            [24] 2678 	mov	dph,@r0
      000867 08               [12] 2679 	inc	r0
      000868 86 F0            [24] 2680 	mov	b,@r0
      00086A 12r00r00         [24] 2681 	lcall	__gptrget
      00086D FA               [12] 2682 	mov	r2,a
      00086E FB               [12] 2683 	mov	r3,a
      00086F 7C 00            [12] 2684 	mov	r4,#0x00
      000871 BB 00 06         [24] 2685 	cjne	r3,#0x00,00132$
      000874 BC 00 03         [24] 2686 	cjne	r4,#0x00,00132$
      000877 02r09rD4         [24] 2687 	ljmp	00106$
      00087A                       2688 00132$:
                                   2689 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:272: len = a->len;
      00087A E5 81            [12] 2690 	mov	a,sp
      00087C 24 E9            [12] 2691 	add	a,#0xe9
      00087E F8               [12] 2692 	mov	r0,a
      00087F 74 01            [12] 2693 	mov	a,#0x01
      000881 26               [12] 2694 	add	a,@r0
      000882 FB               [12] 2695 	mov	r3,a
      000883 E4               [12] 2696 	clr	a
      000884 08               [12] 2697 	inc	r0
      000885 36               [12] 2698 	addc	a,@r0
      000886 FC               [12] 2699 	mov	r4,a
      000887 08               [12] 2700 	inc	r0
      000888 86 07            [24] 2701 	mov	ar7,@r0
      00088A 8B 82            [24] 2702 	mov	dpl,r3
      00088C 8C 83            [24] 2703 	mov	dph,r4
      00088E 8F F0            [24] 2704 	mov	b,r7
      000890 12r00r00         [24] 2705 	lcall	__gptrget
      000893 FB               [12] 2706 	mov	r3,a
      000894 E5 81            [12] 2707 	mov	a,sp
      000896 24 F7            [12] 2708 	add	a,#0xf7
      000898 F8               [12] 2709 	mov	r0,a
      000899 A6 03            [24] 2710 	mov	@r0,ar3
      00089B 08               [12] 2711 	inc	r0
      00089C 76 00            [12] 2712 	mov	@r0,#0x00
                                   2713 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:273: byteptr = bitptr / 8;
      00089E C0 02            [24] 2714 	push	ar2
      0008A0 74 08            [12] 2715 	mov	a,#0x08
      0008A2 C0 E0            [24] 2716 	push	acc
      0008A4 E4               [12] 2717 	clr	a
      0008A5 C0 E0            [24] 2718 	push	acc
      0008A7 E5 81            [12] 2719 	mov	a,sp
      0008A9 24 F2            [12] 2720 	add	a,#0xf2
      0008AB F8               [12] 2721 	mov	r0,a
      0008AC 86 82            [24] 2722 	mov	dpl,@r0
      0008AE 08               [12] 2723 	inc	r0
      0008AF 86 83            [24] 2724 	mov	dph,@r0
      0008B1 12r00r00         [24] 2725 	lcall	__divsint
      0008B4 AD 82            [24] 2726 	mov	r5,dpl
      0008B6 AE 83            [24] 2727 	mov	r6,dph
      0008B8 15 81            [12] 2728 	dec	sp
      0008BA 15 81            [12] 2729 	dec	sp
      0008BC D0 02            [24] 2730 	pop	ar2
      0008BE E5 81            [12] 2731 	mov	a,sp
      0008C0 24 F3            [12] 2732 	add	a,#0xf3
      0008C2 F8               [12] 2733 	mov	r0,a
      0008C3 A6 05            [24] 2734 	mov	@r0,ar5
      0008C5 08               [12] 2735 	inc	r0
      0008C6 A6 06            [24] 2736 	mov	@r0,ar6
                                   2737 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:274: if(PACKETBUF_IS_ADDR(a->type)) {
      0008C8 BA 1A 00         [24] 2738 	cjne	r2,#0x1A,00133$
      0008CB                       2739 00133$:
      0008CB 40 6E            [24] 2740 	jc	00104$
                                   2741 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:276: (uint8_t *)packetbuf_addr(a->type), len);
      0008CD 8A 82            [24] 2742 	mov	dpl,r2
      0008CF 78r00            [12] 2743 	mov	r0,#_packetbuf_addr
      0008D1 79s00            [12] 2744 	mov	r1,#(_packetbuf_addr >> 8)
      0008D3 7As00            [12] 2745 	mov	r2,#(_packetbuf_addr >> 16)
      0008D5 12r00r00         [24] 2746 	lcall	__sdcc_banked_call
      0008D8 AC 82            [24] 2747 	mov	r4,dpl
      0008DA AD 83            [24] 2748 	mov	r5,dph
      0008DC AE F0            [24] 2749 	mov	r6,b
      0008DE 8E 02            [24] 2750 	mov	ar2,r6
                                   2751 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:275: set_bits(&hdrptr[byteptr], bitptr & 7,
      0008E0 E5 81            [12] 2752 	mov	a,sp
      0008E2 24 F5            [12] 2753 	add	a,#0xf5
      0008E4 F8               [12] 2754 	mov	r0,a
      0008E5 E5 81            [12] 2755 	mov	a,sp
      0008E7 24 EC            [12] 2756 	add	a,#0xec
      0008E9 F9               [12] 2757 	mov	r1,a
      0008EA 74 07            [12] 2758 	mov	a,#0x07
      0008EC 56               [12] 2759 	anl	a,@r0
      0008ED F7               [12] 2760 	mov	@r1,a
      0008EE 09               [12] 2761 	inc	r1
      0008EF 77 00            [12] 2762 	mov	@r1,#0x00
      0008F1 E5 81            [12] 2763 	mov	a,sp
      0008F3 24 F9            [12] 2764 	add	a,#0xf9
      0008F5 F8               [12] 2765 	mov	r0,a
      0008F6 E5 81            [12] 2766 	mov	a,sp
      0008F8 24 F3            [12] 2767 	add	a,#0xf3
      0008FA F9               [12] 2768 	mov	r1,a
      0008FB E7               [12] 2769 	mov	a,@r1
      0008FC 26               [12] 2770 	add	a,@r0
      0008FD FB               [12] 2771 	mov	r3,a
      0008FE 09               [12] 2772 	inc	r1
      0008FF E7               [12] 2773 	mov	a,@r1
      000900 08               [12] 2774 	inc	r0
      000901 36               [12] 2775 	addc	a,@r0
      000902 FE               [12] 2776 	mov	r6,a
      000903 08               [12] 2777 	inc	r0
      000904 86 07            [24] 2778 	mov	ar7,@r0
      000906 E5 81            [12] 2779 	mov	a,sp
      000908 24 F7            [12] 2780 	add	a,#0xf7
      00090A F8               [12] 2781 	mov	r0,a
      00090B E6               [12] 2782 	mov	a,@r0
      00090C C0 E0            [24] 2783 	push	acc
      00090E 08               [12] 2784 	inc	r0
      00090F E6               [12] 2785 	mov	a,@r0
      000910 C0 E0            [24] 2786 	push	acc
      000912 C0 04            [24] 2787 	push	ar4
      000914 C0 05            [24] 2788 	push	ar5
      000916 C0 02            [24] 2789 	push	ar2
      000918 E5 81            [12] 2790 	mov	a,sp
      00091A 24 E7            [12] 2791 	add	a,#0xe7
      00091C F8               [12] 2792 	mov	r0,a
      00091D E6               [12] 2793 	mov	a,@r0
      00091E C0 E0            [24] 2794 	push	acc
      000920 08               [12] 2795 	inc	r0
      000921 E6               [12] 2796 	mov	a,@r0
      000922 C0 E0            [24] 2797 	push	acc
      000924 8B 82            [24] 2798 	mov	dpl,r3
      000926 8E 83            [24] 2799 	mov	dph,r6
      000928 8F F0            [24] 2800 	mov	b,r7
      00092A 78r44            [12] 2801 	mov	r0,#_set_bits
      00092C 79s04            [12] 2802 	mov	r1,#(_set_bits >> 8)
      00092E 7As00            [12] 2803 	mov	r2,#(_set_bits >> 16)
      000930 12r00r00         [24] 2804 	lcall	__sdcc_banked_call
      000933 E5 81            [12] 2805 	mov	a,sp
      000935 24 F9            [12] 2806 	add	a,#0xf9
      000937 F5 81            [12] 2807 	mov	sp,a
      000939 80 77            [24] 2808 	sjmp	00105$
      00093B                       2809 00104$:
                                   2810 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:283: val = packetbuf_attr(a->type);
      00093B 8A 82            [24] 2811 	mov	dpl,r2
      00093D 78r00            [12] 2812 	mov	r0,#_packetbuf_attr
      00093F 79s00            [12] 2813 	mov	r1,#(_packetbuf_attr >> 8)
      000941 7As00            [12] 2814 	mov	r2,#(_packetbuf_attr >> 16)
      000943 12r00r00         [24] 2815 	lcall	__sdcc_banked_call
      000946 AE 82            [24] 2816 	mov	r6,dpl
      000948 AF 83            [24] 2817 	mov	r7,dph
      00094A A8 81            [24] 2818 	mov	r0,sp
      00094C 18               [12] 2819 	dec	r0
      00094D A6 06            [24] 2820 	mov	@r0,ar6
      00094F 08               [12] 2821 	inc	r0
      000950 A6 07            [24] 2822 	mov	@r0,ar7
                                   2823 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:285: (uint8_t *)&val, len);
      000952 AF 81            [24] 2824 	mov	r7,sp
      000954 1F               [12] 2825 	dec	r7
      000955 7E 00            [12] 2826 	mov	r6,#0x00
      000957 7D 40            [12] 2827 	mov	r5,#0x40
                                   2828 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:284: set_bits(&hdrptr[byteptr], bitptr & 7,
      000959 E5 81            [12] 2829 	mov	a,sp
      00095B 24 F5            [12] 2830 	add	a,#0xf5
      00095D F8               [12] 2831 	mov	r0,a
      00095E E5 81            [12] 2832 	mov	a,sp
      000960 24 EE            [12] 2833 	add	a,#0xee
      000962 F9               [12] 2834 	mov	r1,a
      000963 74 07            [12] 2835 	mov	a,#0x07
      000965 56               [12] 2836 	anl	a,@r0
      000966 F7               [12] 2837 	mov	@r1,a
      000967 09               [12] 2838 	inc	r1
      000968 77 00            [12] 2839 	mov	@r1,#0x00
      00096A E5 81            [12] 2840 	mov	a,sp
      00096C 24 F9            [12] 2841 	add	a,#0xf9
      00096E F8               [12] 2842 	mov	r0,a
      00096F E5 81            [12] 2843 	mov	a,sp
      000971 24 F3            [12] 2844 	add	a,#0xf3
      000973 F9               [12] 2845 	mov	r1,a
      000974 E7               [12] 2846 	mov	a,@r1
      000975 26               [12] 2847 	add	a,@r0
      000976 FA               [12] 2848 	mov	r2,a
      000977 09               [12] 2849 	inc	r1
      000978 E7               [12] 2850 	mov	a,@r1
      000979 08               [12] 2851 	inc	r0
      00097A 36               [12] 2852 	addc	a,@r0
      00097B FB               [12] 2853 	mov	r3,a
      00097C 08               [12] 2854 	inc	r0
      00097D 86 04            [24] 2855 	mov	ar4,@r0
      00097F E5 81            [12] 2856 	mov	a,sp
      000981 24 F7            [12] 2857 	add	a,#0xf7
      000983 F8               [12] 2858 	mov	r0,a
      000984 E6               [12] 2859 	mov	a,@r0
      000985 C0 E0            [24] 2860 	push	acc
      000987 08               [12] 2861 	inc	r0
      000988 E6               [12] 2862 	mov	a,@r0
      000989 C0 E0            [24] 2863 	push	acc
      00098B C0 07            [24] 2864 	push	ar7
      00098D C0 06            [24] 2865 	push	ar6
      00098F C0 05            [24] 2866 	push	ar5
      000991 E5 81            [12] 2867 	mov	a,sp
      000993 24 E9            [12] 2868 	add	a,#0xe9
      000995 F8               [12] 2869 	mov	r0,a
      000996 E6               [12] 2870 	mov	a,@r0
      000997 C0 E0            [24] 2871 	push	acc
      000999 08               [12] 2872 	inc	r0
      00099A E6               [12] 2873 	mov	a,@r0
      00099B C0 E0            [24] 2874 	push	acc
      00099D 8A 82            [24] 2875 	mov	dpl,r2
      00099F 8B 83            [24] 2876 	mov	dph,r3
      0009A1 8C F0            [24] 2877 	mov	b,r4
      0009A3 78r44            [12] 2878 	mov	r0,#_set_bits
      0009A5 79s04            [12] 2879 	mov	r1,#(_set_bits >> 8)
      0009A7 7As00            [12] 2880 	mov	r2,#(_set_bits >> 16)
      0009A9 12r00r00         [24] 2881 	lcall	__sdcc_banked_call
      0009AC E5 81            [12] 2882 	mov	a,sp
      0009AE 24 F9            [12] 2883 	add	a,#0xf9
      0009B0 F5 81            [12] 2884 	mov	sp,a
      0009B2                       2885 00105$:
                                   2886 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:291: bitptr += len;
      0009B2 E5 81            [12] 2887 	mov	a,sp
      0009B4 24 F5            [12] 2888 	add	a,#0xf5
      0009B6 F8               [12] 2889 	mov	r0,a
      0009B7 E5 81            [12] 2890 	mov	a,sp
      0009B9 24 F7            [12] 2891 	add	a,#0xf7
      0009BB F9               [12] 2892 	mov	r1,a
      0009BC E7               [12] 2893 	mov	a,@r1
      0009BD 26               [12] 2894 	add	a,@r0
      0009BE F6               [12] 2895 	mov	@r0,a
      0009BF 09               [12] 2896 	inc	r1
      0009C0 E7               [12] 2897 	mov	a,@r1
      0009C1 08               [12] 2898 	inc	r0
      0009C2 36               [12] 2899 	addc	a,@r0
      0009C3 F6               [12] 2900 	mov	@r0,a
                                   2901 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:259: for(a = c->attrlist; a->type != PACKETBUF_ATTR_NONE; ++a) {
      0009C4 E5 81            [12] 2902 	mov	a,sp
      0009C6 24 E9            [12] 2903 	add	a,#0xe9
      0009C8 F8               [12] 2904 	mov	r0,a
      0009C9 74 02            [12] 2905 	mov	a,#0x02
      0009CB 26               [12] 2906 	add	a,@r0
      0009CC F6               [12] 2907 	mov	@r0,a
      0009CD E4               [12] 2908 	clr	a
      0009CE 08               [12] 2909 	inc	r0
      0009CF 36               [12] 2910 	addc	a,@r0
      0009D0 F6               [12] 2911 	mov	@r0,a
      0009D1 02r08r5D         [24] 2912 	ljmp	00108$
      0009D4                       2913 00106$:
                                   2914 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:295: return 1; /* Send out packet */
      0009D4 90 00 01         [24] 2915 	mov	dptr,#0x0001
      0009D7                       2916 00110$:
      0009D7 E5 81            [12] 2917 	mov	a,sp
      0009D9 24 E5            [12] 2918 	add	a,#0xE5
      0009DB F5 81            [12] 2919 	mov	sp,a
      0009DD 02r00r00         [24] 2920 	ljmp	__sdcc_banked_ret
                                   2921 ;------------------------------------------------------------
                                   2922 ;Allocation info for local variables in function 'unpack_header'
                                   2923 ;------------------------------------------------------------
                                   2924 ;a                         Allocated to registers 
                                   2925 ;byteptr                   Allocated to stack - sp -17
                                   2926 ;bitptr                    Allocated to registers r6 r7 
                                   2927 ;len                       Allocated to stack - sp -15
                                   2928 ;hdrbytesize               Allocated to registers r6 r7 
                                   2929 ;hdrptr                    Allocated to stack - sp -13
                                   2930 ;hdr                       Allocated to registers r5 r6 r7 
                                   2931 ;c                         Allocated to stack - sp -10
                                   2932 ;addr                      Allocated to stack - sp -7
                                   2933 ;val                       Allocated to stack - sp -7
                                   2934 ;sloc0                     Allocated to stack - sp -24
                                   2935 ;sloc1                     Allocated to stack - sp -21
                                   2936 ;sloc2                     Allocated to stack - sp -20
                                   2937 ;sloc3                     Allocated to stack - sp -19
                                   2938 ;------------------------------------------------------------
                                   2939 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:299: unpack_header(void)
                                   2940 ;	-----------------------------------------
                                   2941 ;	 function unpack_header
                                   2942 ;	-----------------------------------------
      0009E0                       2943 _unpack_header:
      0009E0 E5 81            [12] 2944 	mov	a,sp
      0009E2 24 19            [12] 2945 	add	a,#0x19
      0009E4 F5 81            [12] 2946 	mov	sp,a
                                   2947 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:311: hdr = (struct bitopt_hdr *)packetbuf_dataptr();
      0009E6 78r00            [12] 2948 	mov	r0,#_packetbuf_dataptr
      0009E8 79s00            [12] 2949 	mov	r1,#(_packetbuf_dataptr >> 8)
      0009EA 7As00            [12] 2950 	mov	r2,#(_packetbuf_dataptr >> 16)
      0009EC 12r00r00         [24] 2951 	lcall	__sdcc_banked_call
      0009EF AD 82            [24] 2952 	mov	r5,dpl
      0009F1 AE 83            [24] 2953 	mov	r6,dph
      0009F3 AF F0            [24] 2954 	mov	r7,b
                                   2955 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:312: if(packetbuf_hdrreduce(sizeof(struct bitopt_hdr)) == 0) {
      0009F5 90 00 02         [24] 2956 	mov	dptr,#0x0002
      0009F8 C0 07            [24] 2957 	push	ar7
      0009FA C0 06            [24] 2958 	push	ar6
      0009FC C0 05            [24] 2959 	push	ar5
      0009FE 78r00            [12] 2960 	mov	r0,#_packetbuf_hdrreduce
      000A00 79s00            [12] 2961 	mov	r1,#(_packetbuf_hdrreduce >> 8)
      000A02 7As00            [12] 2962 	mov	r2,#(_packetbuf_hdrreduce >> 16)
      000A04 12r00r00         [24] 2963 	lcall	__sdcc_banked_call
      000A07 E5 82            [12] 2964 	mov	a,dpl
      000A09 85 83 F0         [24] 2965 	mov	b,dph
      000A0C D0 05            [24] 2966 	pop	ar5
      000A0E D0 06            [24] 2967 	pop	ar6
      000A10 D0 07            [24] 2968 	pop	ar7
      000A12 45 F0            [12] 2969 	orl	a,b
                                   2970 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:314: return NULL;
      000A14 70 08            [24] 2971 	jnz	00102$
      000A16 90 00 00         [24] 2972 	mov	dptr,#0x0000
      000A19 F5 F0            [12] 2973 	mov	b,a
      000A1B 02r0Dr20         [24] 2974 	ljmp	00114$
      000A1E                       2975 00102$:
                                   2976 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:316: c = channel_lookup((hdr->channel[1] << 8) + hdr->channel[0]);
      000A1E 74 01            [12] 2977 	mov	a,#0x01
      000A20 2D               [12] 2978 	add	a,r5
      000A21 FA               [12] 2979 	mov	r2,a
      000A22 E4               [12] 2980 	clr	a
      000A23 3E               [12] 2981 	addc	a,r6
      000A24 FB               [12] 2982 	mov	r3,a
      000A25 8F 04            [24] 2983 	mov	ar4,r7
      000A27 8A 82            [24] 2984 	mov	dpl,r2
      000A29 8B 83            [24] 2985 	mov	dph,r3
      000A2B 8C F0            [24] 2986 	mov	b,r4
      000A2D 12r00r00         [24] 2987 	lcall	__gptrget
      000A30 FC               [12] 2988 	mov	r4,a
      000A31 7A 00            [12] 2989 	mov	r2,#0x00
      000A33 8D 82            [24] 2990 	mov	dpl,r5
      000A35 8E 83            [24] 2991 	mov	dph,r6
      000A37 8F F0            [24] 2992 	mov	b,r7
      000A39 12r00r00         [24] 2993 	lcall	__gptrget
      000A3C 7F 00            [12] 2994 	mov	r7,#0x00
      000A3E 2A               [12] 2995 	add	a,r2
      000A3F FA               [12] 2996 	mov	r2,a
      000A40 EF               [12] 2997 	mov	a,r7
      000A41 3C               [12] 2998 	addc	a,r4
      000A42 FC               [12] 2999 	mov	r4,a
      000A43 8A 82            [24] 3000 	mov	dpl,r2
      000A45 8C 83            [24] 3001 	mov	dph,r4
      000A47 78r00            [12] 3002 	mov	r0,#_channel_lookup
      000A49 79s00            [12] 3003 	mov	r1,#(_channel_lookup >> 8)
      000A4B 7As00            [12] 3004 	mov	r2,#(_channel_lookup >> 16)
      000A4D 12r00r00         [24] 3005 	lcall	__sdcc_banked_call
      000A50 AD 82            [24] 3006 	mov	r5,dpl
      000A52 AE 83            [24] 3007 	mov	r6,dph
      000A54 AF F0            [24] 3008 	mov	r7,b
      000A56 E5 81            [12] 3009 	mov	a,sp
      000A58 24 F6            [12] 3010 	add	a,#0xf6
      000A5A F8               [12] 3011 	mov	r0,a
      000A5B A6 05            [24] 3012 	mov	@r0,ar5
      000A5D 08               [12] 3013 	inc	r0
      000A5E A6 06            [24] 3014 	mov	@r0,ar6
      000A60 08               [12] 3015 	inc	r0
      000A61 A6 07            [24] 3016 	mov	@r0,ar7
                                   3017 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:317: if(c == NULL) {
      000A63 E5 81            [12] 3018 	mov	a,sp
      000A65 24 F6            [12] 3019 	add	a,#0xf6
      000A67 F8               [12] 3020 	mov	r0,a
      000A68 E6               [12] 3021 	mov	a,@r0
      000A69 08               [12] 3022 	inc	r0
      000A6A 46               [12] 3023 	orl	a,@r0
                                   3024 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:320: return NULL;
      000A6B 70 08            [24] 3025 	jnz	00104$
      000A6D 90 00 00         [24] 3026 	mov	dptr,#0x0000
      000A70 F5 F0            [12] 3027 	mov	b,a
      000A72 02r0Dr20         [24] 3028 	ljmp	00114$
      000A75                       3029 00104$:
                                   3030 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:323: hdrptr = packetbuf_dataptr();
      000A75 78r00            [12] 3031 	mov	r0,#_packetbuf_dataptr
      000A77 79s00            [12] 3032 	mov	r1,#(_packetbuf_dataptr >> 8)
      000A79 7As00            [12] 3033 	mov	r2,#(_packetbuf_dataptr >> 16)
      000A7B 12r00r00         [24] 3034 	lcall	__sdcc_banked_call
      000A7E AA 82            [24] 3035 	mov	r2,dpl
      000A80 AB 83            [24] 3036 	mov	r3,dph
      000A82 AC F0            [24] 3037 	mov	r4,b
      000A84 E5 81            [12] 3038 	mov	a,sp
      000A86 24 F3            [12] 3039 	add	a,#0xf3
      000A88 F8               [12] 3040 	mov	r0,a
      000A89 A6 02            [24] 3041 	mov	@r0,ar2
      000A8B 08               [12] 3042 	inc	r0
      000A8C A6 03            [24] 3043 	mov	@r0,ar3
      000A8E 08               [12] 3044 	inc	r0
      000A8F A6 04            [24] 3045 	mov	@r0,ar4
                                   3046 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:324: hdrbytesize = c->hdrsize / 8 + ((c->hdrsize & 7) == 0? 0: 1);
      000A91 E5 81            [12] 3047 	mov	a,sp
      000A93 24 F6            [12] 3048 	add	a,#0xf6
      000A95 F8               [12] 3049 	mov	r0,a
      000A96 74 08            [12] 3050 	mov	a,#0x08
      000A98 26               [12] 3051 	add	a,@r0
      000A99 FD               [12] 3052 	mov	r5,a
      000A9A E4               [12] 3053 	clr	a
      000A9B 08               [12] 3054 	inc	r0
      000A9C 36               [12] 3055 	addc	a,@r0
      000A9D FE               [12] 3056 	mov	r6,a
      000A9E 08               [12] 3057 	inc	r0
      000A9F 86 07            [24] 3058 	mov	ar7,@r0
      000AA1 8D 82            [24] 3059 	mov	dpl,r5
      000AA3 8E 83            [24] 3060 	mov	dph,r6
      000AA5 8F F0            [24] 3061 	mov	b,r7
      000AA7 12r00r00         [24] 3062 	lcall	__gptrget
      000AAA FD               [12] 3063 	mov	r5,a
      000AAB C4               [12] 3064 	swap	a
      000AAC 23               [12] 3065 	rl	a
      000AAD 54 1F            [12] 3066 	anl	a,#0x1F
      000AAF FE               [12] 3067 	mov	r6,a
      000AB0 7F 00            [12] 3068 	mov	r7,#0x00
      000AB2 53 05 07         [24] 3069 	anl	ar5,#0x07
      000AB5 ED               [12] 3070 	mov	a,r5
      000AB6 70 03            [24] 3071 	jnz	00116$
      000AB8 FD               [12] 3072 	mov	r5,a
      000AB9 80 02            [24] 3073 	sjmp	00117$
      000ABB                       3074 00116$:
      000ABB 7D 01            [12] 3075 	mov	r5,#0x01
      000ABD                       3076 00117$:
      000ABD 8D 04            [24] 3077 	mov	ar4,r5
      000ABF 7D 00            [12] 3078 	mov	r5,#0x00
      000AC1 EC               [12] 3079 	mov	a,r4
      000AC2 2E               [12] 3080 	add	a,r6
      000AC3 FE               [12] 3081 	mov	r6,a
      000AC4 ED               [12] 3082 	mov	a,r5
      000AC5 3F               [12] 3083 	addc	a,r7
      000AC6 FF               [12] 3084 	mov	r7,a
                                   3085 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:325: if(packetbuf_hdrreduce(hdrbytesize) == 0) {
      000AC7 8E 82            [24] 3086 	mov	dpl,r6
      000AC9 8F 83            [24] 3087 	mov	dph,r7
      000ACB 78r00            [12] 3088 	mov	r0,#_packetbuf_hdrreduce
      000ACD 79s00            [12] 3089 	mov	r1,#(_packetbuf_hdrreduce >> 8)
      000ACF 7As00            [12] 3090 	mov	r2,#(_packetbuf_hdrreduce >> 16)
      000AD1 12r00r00         [24] 3091 	lcall	__sdcc_banked_call
      000AD4 E5 82            [12] 3092 	mov	a,dpl
      000AD6 85 83 F0         [24] 3093 	mov	b,dph
      000AD9 45 F0            [12] 3094 	orl	a,b
                                   3095 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:327: return NULL;
      000ADB 70 08            [24] 3096 	jnz	00106$
      000ADD 90 00 00         [24] 3097 	mov	dptr,#0x0000
      000AE0 F5 F0            [12] 3098 	mov	b,a
      000AE2 02r0Dr20         [24] 3099 	ljmp	00114$
      000AE5                       3100 00106$:
                                   3101 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:329: byteptr = bitptr = 0;
                                   3102 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:330: for(a = c->attrlist; a->type != PACKETBUF_ATTR_NONE; ++a) {
      000AE5 E4               [12] 3103 	clr	a
      000AE6 FE               [12] 3104 	mov	r6,a
      000AE7 FF               [12] 3105 	mov	r7,a
      000AE8 E5 81            [12] 3106 	mov	a,sp
      000AEA 24 F6            [12] 3107 	add	a,#0xf6
      000AEC F8               [12] 3108 	mov	r0,a
      000AED 74 05            [12] 3109 	mov	a,#0x05
      000AEF 26               [12] 3110 	add	a,@r0
      000AF0 FB               [12] 3111 	mov	r3,a
      000AF1 E4               [12] 3112 	clr	a
      000AF2 08               [12] 3113 	inc	r0
      000AF3 36               [12] 3114 	addc	a,@r0
      000AF4 FC               [12] 3115 	mov	r4,a
      000AF5 08               [12] 3116 	inc	r0
      000AF6 86 05            [24] 3117 	mov	ar5,@r0
      000AF8 8B 82            [24] 3118 	mov	dpl,r3
      000AFA 8C 83            [24] 3119 	mov	dph,r4
      000AFC 8D F0            [24] 3120 	mov	b,r5
      000AFE E5 81            [12] 3121 	mov	a,sp
      000B00 24 E8            [12] 3122 	add	a,#0xe8
      000B02 F8               [12] 3123 	mov	r0,a
      000B03 12r00r00         [24] 3124 	lcall	__gptrget
      000B06 F6               [12] 3125 	mov	@r0,a
      000B07 A3               [24] 3126 	inc	dptr
      000B08 12r00r00         [24] 3127 	lcall	__gptrget
      000B0B 08               [12] 3128 	inc	r0
      000B0C F6               [12] 3129 	mov	@r0,a
      000B0D A3               [24] 3130 	inc	dptr
      000B0E 12r00r00         [24] 3131 	lcall	__gptrget
      000B11 08               [12] 3132 	inc	r0
      000B12 F6               [12] 3133 	mov	@r0,a
      000B13 E5 81            [12] 3134 	mov	a,sp
      000B15 24 EB            [12] 3135 	add	a,#0xeb
      000B17 F8               [12] 3136 	mov	r0,a
      000B18 E5 81            [12] 3137 	mov	a,sp
      000B1A 24 F9            [12] 3138 	add	a,#0xF9
      000B1C F6               [12] 3139 	mov	@r0,a
      000B1D E5 81            [12] 3140 	mov	a,sp
      000B1F 24 EB            [12] 3141 	add	a,#0xeb
      000B21 F8               [12] 3142 	mov	r0,a
      000B22 E5 81            [12] 3143 	mov	a,sp
      000B24 24 EC            [12] 3144 	add	a,#0xec
      000B26 F9               [12] 3145 	mov	r1,a
      000B27 E6               [12] 3146 	mov	a,@r0
      000B28 F7               [12] 3147 	mov	@r1,a
                                   3148 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:363: return c;
                                   3149 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:330: for(a = c->attrlist; a->type != PACKETBUF_ATTR_NONE; ++a) {
      000B29                       3150 00112$:
      000B29 E5 81            [12] 3151 	mov	a,sp
      000B2B 24 E8            [12] 3152 	add	a,#0xe8
      000B2D F8               [12] 3153 	mov	r0,a
      000B2E 86 82            [24] 3154 	mov	dpl,@r0
      000B30 08               [12] 3155 	inc	r0
      000B31 86 83            [24] 3156 	mov	dph,@r0
      000B33 08               [12] 3157 	inc	r0
      000B34 86 F0            [24] 3158 	mov	b,@r0
      000B36 12r00r00         [24] 3159 	lcall	__gptrget
      000B39 FD               [12] 3160 	mov	r5,a
      000B3A FB               [12] 3161 	mov	r3,a
      000B3B 7C 00            [12] 3162 	mov	r4,#0x00
      000B3D BB 00 06         [24] 3163 	cjne	r3,#0x00,00144$
      000B40 BC 00 03         [24] 3164 	cjne	r4,#0x00,00144$
      000B43 02r0Dr13         [24] 3165 	ljmp	00110$
      000B46                       3166 00144$:
                                   3167 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:342: len = a->len;
      000B46 E5 81            [12] 3168 	mov	a,sp
      000B48 24 E8            [12] 3169 	add	a,#0xe8
      000B4A F8               [12] 3170 	mov	r0,a
      000B4B 74 01            [12] 3171 	mov	a,#0x01
      000B4D 26               [12] 3172 	add	a,@r0
      000B4E FA               [12] 3173 	mov	r2,a
      000B4F E4               [12] 3174 	clr	a
      000B50 08               [12] 3175 	inc	r0
      000B51 36               [12] 3176 	addc	a,@r0
      000B52 FB               [12] 3177 	mov	r3,a
      000B53 08               [12] 3178 	inc	r0
      000B54 86 04            [24] 3179 	mov	ar4,@r0
      000B56 8A 82            [24] 3180 	mov	dpl,r2
      000B58 8B 83            [24] 3181 	mov	dph,r3
      000B5A 8C F0            [24] 3182 	mov	b,r4
      000B5C 12r00r00         [24] 3183 	lcall	__gptrget
      000B5F FA               [12] 3184 	mov	r2,a
      000B60 E5 81            [12] 3185 	mov	a,sp
      000B62 24 F1            [12] 3186 	add	a,#0xf1
      000B64 F8               [12] 3187 	mov	r0,a
      000B65 A6 02            [24] 3188 	mov	@r0,ar2
      000B67 08               [12] 3189 	inc	r0
      000B68 76 00            [12] 3190 	mov	@r0,#0x00
                                   3191 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:343: byteptr = bitptr / 8;
      000B6A C0 07            [24] 3192 	push	ar7
      000B6C C0 06            [24] 3193 	push	ar6
      000B6E C0 05            [24] 3194 	push	ar5
      000B70 74 08            [12] 3195 	mov	a,#0x08
      000B72 C0 E0            [24] 3196 	push	acc
      000B74 E4               [12] 3197 	clr	a
      000B75 C0 E0            [24] 3198 	push	acc
      000B77 8E 82            [24] 3199 	mov	dpl,r6
      000B79 8F 83            [24] 3200 	mov	dph,r7
      000B7B 12r00r00         [24] 3201 	lcall	__divsint
      000B7E AB 82            [24] 3202 	mov	r3,dpl
      000B80 AC 83            [24] 3203 	mov	r4,dph
      000B82 15 81            [12] 3204 	dec	sp
      000B84 15 81            [12] 3205 	dec	sp
      000B86 D0 05            [24] 3206 	pop	ar5
      000B88 D0 06            [24] 3207 	pop	ar6
      000B8A D0 07            [24] 3208 	pop	ar7
      000B8C E5 81            [12] 3209 	mov	a,sp
      000B8E 24 EF            [12] 3210 	add	a,#0xef
      000B90 F8               [12] 3211 	mov	r0,a
      000B91 A6 03            [24] 3212 	mov	@r0,ar3
      000B93 08               [12] 3213 	inc	r0
      000B94 A6 04            [24] 3214 	mov	@r0,ar4
                                   3215 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:344: if(PACKETBUF_IS_ADDR(a->type)) {
      000B96 BD 1A 00         [24] 3216 	cjne	r5,#0x1A,00145$
      000B99                       3217 00145$:
      000B99 50 03            [24] 3218 	jnc	00146$
      000B9B 02r0Cr4D         [24] 3219 	ljmp	00108$
      000B9E                       3220 00146$:
                                   3221 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:346: get_bits((uint8_t *)&addr, &hdrptr[byteptr], bitptr & 7, len);
      000B9E E5 81            [12] 3222 	mov	a,sp
      000BA0 24 ED            [12] 3223 	add	a,#0xed
      000BA2 F8               [12] 3224 	mov	r0,a
      000BA3 74 07            [12] 3225 	mov	a,#0x07
      000BA5 5E               [12] 3226 	anl	a,r6
      000BA6 F6               [12] 3227 	mov	@r0,a
      000BA7 08               [12] 3228 	inc	r0
      000BA8 76 00            [12] 3229 	mov	@r0,#0x00
      000BAA C0 06            [24] 3230 	push	ar6
      000BAC C0 07            [24] 3231 	push	ar7
      000BAE E5 81            [12] 3232 	mov	a,sp
      000BB0 24 F1            [12] 3233 	add	a,#0xf1
      000BB2 F8               [12] 3234 	mov	r0,a
      000BB3 E5 81            [12] 3235 	mov	a,sp
      000BB5 24 ED            [12] 3236 	add	a,#0xed
      000BB7 F9               [12] 3237 	mov	r1,a
      000BB8 E7               [12] 3238 	mov	a,@r1
      000BB9 26               [12] 3239 	add	a,@r0
      000BBA FA               [12] 3240 	mov	r2,a
      000BBB 09               [12] 3241 	inc	r1
      000BBC E7               [12] 3242 	mov	a,@r1
      000BBD 08               [12] 3243 	inc	r0
      000BBE 36               [12] 3244 	addc	a,@r0
      000BBF FB               [12] 3245 	mov	r3,a
      000BC0 08               [12] 3246 	inc	r0
      000BC1 86 07            [24] 3247 	mov	ar7,@r0
      000BC3 E5 81            [12] 3248 	mov	a,sp
      000BC5 24 E9            [12] 3249 	add	a,#0xe9
      000BC7 F8               [12] 3250 	mov	r0,a
      000BC8 86 06            [24] 3251 	mov	ar6,@r0
      000BCA 8E 04            [24] 3252 	mov	ar4,r6
      000BCC 7D 00            [12] 3253 	mov	r5,#0x00
      000BCE 7E 40            [12] 3254 	mov	r6,#0x40
      000BD0 C0 07            [24] 3255 	push	ar7
      000BD2 C0 06            [24] 3256 	push	ar6
      000BD4 E5 81            [12] 3257 	mov	a,sp
      000BD6 24 ED            [12] 3258 	add	a,#0xed
      000BD8 F8               [12] 3259 	mov	r0,a
      000BD9 E6               [12] 3260 	mov	a,@r0
      000BDA C0 E0            [24] 3261 	push	acc
      000BDC 08               [12] 3262 	inc	r0
      000BDD E6               [12] 3263 	mov	a,@r0
      000BDE C0 E0            [24] 3264 	push	acc
      000BE0 E5 81            [12] 3265 	mov	a,sp
      000BE2 24 E7            [12] 3266 	add	a,#0xe7
      000BE4 F8               [12] 3267 	mov	r0,a
      000BE5 E6               [12] 3268 	mov	a,@r0
      000BE6 C0 E0            [24] 3269 	push	acc
      000BE8 08               [12] 3270 	inc	r0
      000BE9 E6               [12] 3271 	mov	a,@r0
      000BEA C0 E0            [24] 3272 	push	acc
      000BEC C0 02            [24] 3273 	push	ar2
      000BEE C0 03            [24] 3274 	push	ar3
      000BF0 C0 07            [24] 3275 	push	ar7
      000BF2 8C 82            [24] 3276 	mov	dpl,r4
      000BF4 8D 83            [24] 3277 	mov	dph,r5
      000BF6 8E F0            [24] 3278 	mov	b,r6
      000BF8 78r76            [12] 3279 	mov	r0,#_get_bits
      000BFA 79s00            [12] 3280 	mov	r1,#(_get_bits >> 8)
      000BFC 7As00            [12] 3281 	mov	r2,#(_get_bits >> 16)
      000BFE 12r00r00         [24] 3282 	lcall	__sdcc_banked_call
      000C01 E5 81            [12] 3283 	mov	a,sp
      000C03 24 F9            [12] 3284 	add	a,#0xf9
      000C05 F5 81            [12] 3285 	mov	sp,a
      000C07 D0 06            [24] 3286 	pop	ar6
      000C09 D0 07            [24] 3287 	pop	ar7
                                   3288 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:350: packetbuf_set_addr(a->type, &addr);
      000C0B E5 81            [12] 3289 	mov	a,sp
      000C0D 24 EA            [12] 3290 	add	a,#0xea
      000C0F F8               [12] 3291 	mov	r0,a
      000C10 86 05            [24] 3292 	mov	ar5,@r0
      000C12 7E 00            [12] 3293 	mov	r6,#0x00
      000C14 7F 40            [12] 3294 	mov	r7,#0x40
      000C16 E5 81            [12] 3295 	mov	a,sp
      000C18 24 E6            [12] 3296 	add	a,#0xe6
      000C1A F8               [12] 3297 	mov	r0,a
      000C1B 86 82            [24] 3298 	mov	dpl,@r0
      000C1D 08               [12] 3299 	inc	r0
      000C1E 86 83            [24] 3300 	mov	dph,@r0
      000C20 08               [12] 3301 	inc	r0
      000C21 86 F0            [24] 3302 	mov	b,@r0
      000C23 12r00r00         [24] 3303 	lcall	__gptrget
      000C26 FC               [12] 3304 	mov	r4,a
      000C27 C0 07            [24] 3305 	push	ar7
      000C29 C0 06            [24] 3306 	push	ar6
      000C2B C0 05            [24] 3307 	push	ar5
      000C2D C0 06            [24] 3308 	push	ar6
      000C2F C0 07            [24] 3309 	push	ar7
      000C31 8C 82            [24] 3310 	mov	dpl,r4
      000C33 78r00            [12] 3311 	mov	r0,#_packetbuf_set_addr
      000C35 79s00            [12] 3312 	mov	r1,#(_packetbuf_set_addr >> 8)
      000C37 7As00            [12] 3313 	mov	r2,#(_packetbuf_set_addr >> 16)
      000C39 12r00r00         [24] 3314 	lcall	__sdcc_banked_call
      000C3C 15 81            [12] 3315 	dec	sp
      000C3E 15 81            [12] 3316 	dec	sp
      000C40 15 81            [12] 3317 	dec	sp
      000C42 D0 06            [24] 3318 	pop	ar6
      000C44 D0 07            [24] 3319 	pop	ar7
      000C46 D0 07            [24] 3320 	pop	ar7
      000C48 D0 06            [24] 3321 	pop	ar6
      000C4A 02r0CrF7         [24] 3322 	ljmp	00109$
      000C4D                       3323 00108$:
                                   3324 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:352: packetbuf_attr_t val = 0;
      000C4D E5 81            [12] 3325 	mov	a,sp
      000C4F 24 F9            [12] 3326 	add	a,#0xf9
      000C51 F8               [12] 3327 	mov	r0,a
      000C52 E4               [12] 3328 	clr	a
      000C53 F6               [12] 3329 	mov	@r0,a
      000C54 08               [12] 3330 	inc	r0
      000C55 F6               [12] 3331 	mov	@r0,a
                                   3332 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:353: get_bits((uint8_t *)&val, &hdrptr[byteptr], bitptr & 7, len);
      000C56 E5 81            [12] 3333 	mov	a,sp
      000C58 24 ED            [12] 3334 	add	a,#0xed
      000C5A F8               [12] 3335 	mov	r0,a
      000C5B 74 07            [12] 3336 	mov	a,#0x07
      000C5D 5E               [12] 3337 	anl	a,r6
      000C5E F6               [12] 3338 	mov	@r0,a
      000C5F 08               [12] 3339 	inc	r0
      000C60 76 00            [12] 3340 	mov	@r0,#0x00
      000C62 C0 06            [24] 3341 	push	ar6
      000C64 C0 07            [24] 3342 	push	ar7
      000C66 E5 81            [12] 3343 	mov	a,sp
      000C68 24 F1            [12] 3344 	add	a,#0xf1
      000C6A F8               [12] 3345 	mov	r0,a
      000C6B E5 81            [12] 3346 	mov	a,sp
      000C6D 24 ED            [12] 3347 	add	a,#0xed
      000C6F F9               [12] 3348 	mov	r1,a
      000C70 E7               [12] 3349 	mov	a,@r1
      000C71 26               [12] 3350 	add	a,@r0
      000C72 FA               [12] 3351 	mov	r2,a
      000C73 09               [12] 3352 	inc	r1
      000C74 E7               [12] 3353 	mov	a,@r1
      000C75 08               [12] 3354 	inc	r0
      000C76 36               [12] 3355 	addc	a,@r0
      000C77 FB               [12] 3356 	mov	r3,a
      000C78 08               [12] 3357 	inc	r0
      000C79 86 07            [24] 3358 	mov	ar7,@r0
      000C7B E5 81            [12] 3359 	mov	a,sp
      000C7D 24 F7            [12] 3360 	add	a,#0xF7
      000C7F FC               [12] 3361 	mov	r4,a
      000C80 7D 00            [12] 3362 	mov	r5,#0x00
      000C82 7E 40            [12] 3363 	mov	r6,#0x40
      000C84 C0 07            [24] 3364 	push	ar7
      000C86 C0 06            [24] 3365 	push	ar6
      000C88 E5 81            [12] 3366 	mov	a,sp
      000C8A 24 ED            [12] 3367 	add	a,#0xed
      000C8C F8               [12] 3368 	mov	r0,a
      000C8D E6               [12] 3369 	mov	a,@r0
      000C8E C0 E0            [24] 3370 	push	acc
      000C90 08               [12] 3371 	inc	r0
      000C91 E6               [12] 3372 	mov	a,@r0
      000C92 C0 E0            [24] 3373 	push	acc
      000C94 E5 81            [12] 3374 	mov	a,sp
      000C96 24 E7            [12] 3375 	add	a,#0xe7
      000C98 F8               [12] 3376 	mov	r0,a
      000C99 E6               [12] 3377 	mov	a,@r0
      000C9A C0 E0            [24] 3378 	push	acc
      000C9C 08               [12] 3379 	inc	r0
      000C9D E6               [12] 3380 	mov	a,@r0
      000C9E C0 E0            [24] 3381 	push	acc
      000CA0 C0 02            [24] 3382 	push	ar2
      000CA2 C0 03            [24] 3383 	push	ar3
      000CA4 C0 07            [24] 3384 	push	ar7
      000CA6 8C 82            [24] 3385 	mov	dpl,r4
      000CA8 8D 83            [24] 3386 	mov	dph,r5
      000CAA 8E F0            [24] 3387 	mov	b,r6
      000CAC 78r76            [12] 3388 	mov	r0,#_get_bits
      000CAE 79s00            [12] 3389 	mov	r1,#(_get_bits >> 8)
      000CB0 7As00            [12] 3390 	mov	r2,#(_get_bits >> 16)
      000CB2 12r00r00         [24] 3391 	lcall	__sdcc_banked_call
      000CB5 E5 81            [12] 3392 	mov	a,sp
      000CB7 24 F9            [12] 3393 	add	a,#0xf9
      000CB9 F5 81            [12] 3394 	mov	sp,a
      000CBB D0 06            [24] 3395 	pop	ar6
      000CBD D0 07            [24] 3396 	pop	ar7
                                   3397 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:355: packetbuf_set_attr(a->type, val);
      000CBF E5 81            [12] 3398 	mov	a,sp
      000CC1 24 E6            [12] 3399 	add	a,#0xe6
      000CC3 F8               [12] 3400 	mov	r0,a
      000CC4 86 82            [24] 3401 	mov	dpl,@r0
      000CC6 08               [12] 3402 	inc	r0
      000CC7 86 83            [24] 3403 	mov	dph,@r0
      000CC9 08               [12] 3404 	inc	r0
      000CCA 86 F0            [24] 3405 	mov	b,@r0
      000CCC 12r00r00         [24] 3406 	lcall	__gptrget
      000CCF FF               [12] 3407 	mov	r7,a
      000CD0 C0 07            [24] 3408 	push	ar7
      000CD2 C0 06            [24] 3409 	push	ar6
      000CD4 E5 81            [12] 3410 	mov	a,sp
      000CD6 24 F5            [12] 3411 	add	a,#0xf5
      000CD8 F8               [12] 3412 	mov	r0,a
      000CD9 E6               [12] 3413 	mov	a,@r0
      000CDA C0 E0            [24] 3414 	push	acc
      000CDC 08               [12] 3415 	inc	r0
      000CDD E6               [12] 3416 	mov	a,@r0
      000CDE C0 E0            [24] 3417 	push	acc
      000CE0 8F 82            [24] 3418 	mov	dpl,r7
      000CE2 78r00            [12] 3419 	mov	r0,#_packetbuf_set_attr
      000CE4 79s00            [12] 3420 	mov	r1,#(_packetbuf_set_attr >> 8)
      000CE6 7As00            [12] 3421 	mov	r2,#(_packetbuf_set_attr >> 16)
      000CE8 12r00r00         [24] 3422 	lcall	__sdcc_banked_call
      000CEB 15 81            [12] 3423 	dec	sp
      000CED 15 81            [12] 3424 	dec	sp
      000CEF D0 06            [24] 3425 	pop	ar6
      000CF1 D0 07            [24] 3426 	pop	ar7
                                   3427 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:363: return c;
      000CF3 D0 07            [24] 3428 	pop	ar7
      000CF5 D0 06            [24] 3429 	pop	ar6
                                   3430 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:355: packetbuf_set_attr(a->type, val);
      000CF7                       3431 00109$:
                                   3432 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:361: bitptr += len;
      000CF7 E5 81            [12] 3433 	mov	a,sp
      000CF9 24 F1            [12] 3434 	add	a,#0xf1
      000CFB F8               [12] 3435 	mov	r0,a
      000CFC E6               [12] 3436 	mov	a,@r0
      000CFD 2E               [12] 3437 	add	a,r6
      000CFE FE               [12] 3438 	mov	r6,a
      000CFF 08               [12] 3439 	inc	r0
      000D00 E6               [12] 3440 	mov	a,@r0
      000D01 3F               [12] 3441 	addc	a,r7
      000D02 FF               [12] 3442 	mov	r7,a
                                   3443 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:330: for(a = c->attrlist; a->type != PACKETBUF_ATTR_NONE; ++a) {
      000D03 E5 81            [12] 3444 	mov	a,sp
      000D05 24 E8            [12] 3445 	add	a,#0xe8
      000D07 F8               [12] 3446 	mov	r0,a
      000D08 74 02            [12] 3447 	mov	a,#0x02
      000D0A 26               [12] 3448 	add	a,@r0
      000D0B F6               [12] 3449 	mov	@r0,a
      000D0C E4               [12] 3450 	clr	a
      000D0D 08               [12] 3451 	inc	r0
      000D0E 36               [12] 3452 	addc	a,@r0
      000D0F F6               [12] 3453 	mov	@r0,a
      000D10 02r0Br29         [24] 3454 	ljmp	00112$
      000D13                       3455 00110$:
                                   3456 ;	/opt/contiki/core/net/rime/chameleon-bitopt.c:363: return c;
      000D13 E5 81            [12] 3457 	mov	a,sp
      000D15 24 F6            [12] 3458 	add	a,#0xf6
      000D17 F8               [12] 3459 	mov	r0,a
      000D18 86 82            [24] 3460 	mov	dpl,@r0
      000D1A 08               [12] 3461 	inc	r0
      000D1B 86 83            [24] 3462 	mov	dph,@r0
      000D1D 08               [12] 3463 	inc	r0
      000D1E 86 F0            [24] 3464 	mov	b,@r0
      000D20                       3465 00114$:
      000D20 C8               [12] 3466 	xch	a,r0
      000D21 E5 81            [12] 3467 	mov	a,sp
      000D23 24 E7            [12] 3468 	add	a,#0xE7
      000D25 F5 81            [12] 3469 	mov	sp,a
      000D27 C8               [12] 3470 	xch	a,r0
      000D28 02r00r00         [24] 3471 	ljmp	__sdcc_banked_ret
                                   3472 	.area CSEG    (CODE)
                                   3473 	.area CONST   (CODE)
      000000                       3474 _bitmask:
      000000 00                    3475 	.db #0x00	; 0
      000001 80                    3476 	.db #0x80	; 128
      000002 C0                    3477 	.db #0xC0	; 192
      000003 E0                    3478 	.db #0xE0	; 224
      000004 F0                    3479 	.db #0xF0	; 240
      000005 F8                    3480 	.db #0xF8	; 248
      000006 FC                    3481 	.db #0xFC	; 252
      000007 FE                    3482 	.db #0xFE	; 254
      000008 FF                    3483 	.db #0xFF	; 255
      000009                       3484 _chameleon_bitopt:
      000009rE0s09s00              3485 	.byte _unpack_header, (_unpack_header >> 8), (_unpack_header >> 16)
      00000CrF7s06s00              3486 	.byte _pack_header, (_pack_header >> 8), (_pack_header >> 16)
      00000Fr43s03s00              3487 	.byte _header_size, (_header_size >> 8), (_header_size >> 16)
                                   3488 	.area XINIT   (CODE)
                                   3489 	.area CABS    (ABS,CODE)
